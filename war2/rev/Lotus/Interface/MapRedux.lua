code size: 1545
code size: 20
code size: 15
code size: 122
code size: 13
code size: 35
code size: 123
code size: 13
code size: 1
code size: 29
code size: 15
code size: 53
code size: 20
code size: 30
code size: 142
code size: 13
code size: 114
code size: 39
code size: 27
code size: 22
code size: 12
code size: 3
code size: 60
code size: 15
code size: 37
code size: 89
code size: 58
code size: 23
code size: 255
code size: 18
code size: 28
code size: 140
code size: 226
code size: 17
code size: 414
code size: 69
code size: 6
code size: 12
code size: 4
code size: 57
code size: 128
code size: 13
code size: 52
code size: 146
code size: 3
code size: 8
code size: 50
code size: 7
code size: 18
code size: 179
code size: 113
code size: 67
code size: 252
code size: 54
code size: 398
code size: 41
code size: 389
code size: 35
code size: 6
code size: 3
code size: 31
code size: 40
code size: 23
code size: 335
code size: 38
code size: 4
code size: 16
code size: 10
code size: 16
code size: 27
code size: 39
code size: 910
code size: 340
code size: 216
code size: 78
code size: 26
code size: 35
code size: 42
code size: 73
code size: 64
code size: 627
code size: 22
code size: 29
code size: 66
code size: 105
code size: 198
code size: 113
code size: 155
code size: 58
code size: 17
code size: 384
code size: 30
code size: 36
code size: 68
code size: 1
code size: 39
code size: 1
code size: 7
code size: 2
code size: 19
code size: 21
code size: 66
code size: 54
code size: 18
code size: 6
code size: 15
code size: 1
code size: 21
code size: 299
code size: 38
code size: 26
code size: 83
code size: 42
code size: 1
code size: 32
code size: 39
code size: 1
code size: 55
code size: 63
code size: 93
code size: 25
code size: 110
code size: 69
code size: 26
code size: 98
code size: 19
code size: 44
code size: 23
code size: 112
code size: 214
code size: 718
code size: 36
code size: 925
code size: 5
code size: 8
code size: 126
code size: 3
code size: 20
code size: 33
code size: 334
code size: 35
code size: 36
code size: 19
code size: 1028
code size: 55
code size: 169
code size: 70
code size: 50
code size: 15
code size: 1273
code size: 33
code size: 49
code size: 40
code size: 51
code size: 47
code size: 33
code size: 1239
code size: 35
code size: 3
code size: 62
code size: 5
code size: 51
code size: 5
code size: 40
code size: 73
code size: 223
code size: 14
code size: 19
code size: 2
code size: 1
code size: 17
code size: 101
code size: 5
code size: 50
code size: 14
code size: 157
code size: 126
code size: 68
code size: 8
code size: 1564
code size: 30
code size: 30
code size: 36
code size: 927
code size: 27
code size: 131
code size: 27
code size: 645
code size: 62
code size: 20
code size: 20
code size: 11
code size: 113
code size: 6
code size: 6
code size: 127
code size: 373
code size: 6
code size: 6
code size: 17
code size: 16
code size: 9
code size: 6
code size: 3
code size: 23
code size: 5
code size: 3
code size: 65
code size: 203
code size: 10
code size: 3
code size: 49
code size: 5
code size: 3
code size: 4
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis C:\war2\raw\Lotus\Interface\MapRedux.lua 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  248

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADNIL   R5 R7        ; R5 := R6 := R7 := nil
  3 [-]: NEWTABLE  R8 0 0       ; R8 := {}
  4 [-]: GETGLOBAL R9 K0        ; R9 := 0x7C282057
  5 [-]: LOADK     R10 K1       ; R10 := "/Lotus/Types/Lore/PrimaryCodexManifest"
  6 [-]: CALL      R9 2 2       ; R9 := R9(R10)
  7 [-]: GETGLOBAL R10 K2       ; R10 := 0x2C00D429
  8 [-]: LOADK     R11 K3       ; R11 := "/Lotus/Types/Keys/VeyHekKey"
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: GETGLOBAL R11 K2       ; R11 := 0x2C00D429
 11 [-]: LOADK     R12 K4       ; R12 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
 12 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 13 [-]: GETGLOBAL R12 K2       ; R12 := 0x2C00D429
 14 [-]: LOADK     R13 K5       ; R13 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
 15 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 16 [-]: NEWTABLE  R13 0 7      ; R13 := {}
 17 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 18 [-]: SETTABLE  R13 K6 R14   ; R13["sky"] := R14
 19 [-]: SETTABLE  R13 K7 K8    ; R13["cameraSpot"] := nil
 20 [-]: GETGLOBAL R14 K10      ; R14 := 0x221C9700
 21 [-]: CALL      R14 1 2      ; R14 := R14()
 22 [-]: SETTABLE  R13 K9 R14   ; R13["pos"] := R14
 23 [-]: GETGLOBAL R14 K10      ; R14 := 0x221C9700
 24 [-]: CALL      R14 1 2      ; R14 := R14()
 25 [-]: SETTABLE  R13 K11 R14  ; R13["originPos"] := R14
 26 [-]: GETGLOBAL R14 K10      ; R14 := 0x221C9700
 27 [-]: CALL      R14 1 2      ; R14 := R14()
 28 [-]: SETTABLE  R13 K12 R14  ; R13["origFacing"] := R14
 29 [-]: GETGLOBAL R14 K10      ; R14 := 0x221C9700
 30 [-]: CALL      R14 1 2      ; R14 := R14()
 31 [-]: SETTABLE  R13 K13 R14  ; R13["skyOrigin"] := R14
 32 [-]: SETTABLE  R13 K14 K15  ; R13["zoomLevel"] := 0
 33 [-]: LOADNIL   R14 R14      ; R14 := nil
 34 [-]: NEWTABLE  R15 0 3      ; R15 := {}
 35 [-]: SETTABLE  R15 K16 K8   ; R15["Movie"] := nil
 36 [-]: SETTABLE  R15 K17 K18  ; R15["Open"] := "0x0"
 37 [-]: SETTABLE  R15 K19 K18  ; R15["DioOpen"] := "0x0"
 38 [-]: LOADNIL   R16 R18      ; R16 := R17 := R18 := nil
 39 [-]: MOVE      R19 R0       ; R19 := R0
 40 [-]: LOADK     R20 K20      ; R20 := -1
 41 [-]: NEWTABLE  R21 0 0      ; R21 := {}
 42 [-]: NEWTABLE  R22 0 0      ; R22 := {}
 43 [-]: NEWTABLE  R23 0 0      ; R23 := {}
 44 [-]: NEWTABLE  R24 0 0      ; R24 := {}
 45 [-]: NEWTABLE  R25 0 0      ; R25 := {}
 46 [-]: NEWTABLE  R26 0 0      ; R26 := {}
 47 [-]: NEWTABLE  R27 0 0      ; R27 := {}
 48 [-]: NEWTABLE  R28 0 4      ; R28 := {}
 49 [-]: SETTABLE  R28 K21 K22  ; R28["STARTING_ZOOM"] := -8
 50 [-]: SETTABLE  R28 K23 K24  ; R28["MAX_ZOOM"] := 4.5
 51 [-]: SETTABLE  R28 K25 K26  ; R28["MIN_ZOOM"] := -15
 52 [-]: SETTABLE  R28 K27 K22  ; R28["ZOOM_OUT_THRESHOLD"] := -8
 53 [-]: MOVE      R29 R0       ; R29 := R0
 54 [-]: LOADNIL   R30 R32      ; R30 := R31 := R32 := nil
 55 [-]: GETGLOBAL R33 K28      ; R33 := 0x70D42C02
 56 [-]: LOADK     R34 K29      ; R34 := 0.5
 57 [-]: LOADK     R35 K30      ; R35 := 0.15000000596046
 58 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
 59 [-]: GETGLOBAL R34 K28      ; R34 := 0x70D42C02
 60 [-]: LOADK     R35 K29      ; R35 := 0.5
 61 [-]: LOADK     R36 K30      ; R36 := 0.15000000596046
 62 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
 63 [-]: GETGLOBAL R35 K28      ; R35 := 0x70D42C02
 64 [-]: GETTABLE  R36 R28 K21  ; R36 := R28["STARTING_ZOOM"]
 65 [-]: LOADK     R37 K30      ; R37 := 0.15000000596046
 66 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
 67 [-]: LOADNIL   R36 R37      ; R36 := R37 := nil
 68 [-]: NEWTABLE  R38 0 0      ; R38 := {}
 69 [-]: NEWTABLE  R39 0 2      ; R39 := {}
 70 [-]: SETTABLE  R39 K31 K32  ; R39["Alpha"] := 1
 71 [-]: SETTABLE  R39 K33 K8   ; R39["Node"] := nil
 72 [-]: NEWTABLE  R40 0 2      ; R40 := {}
 73 [-]: SETTABLE  R40 K31 K32  ; R40["Alpha"] := 1
 74 [-]: SETTABLE  R40 K34 K8   ; R40["Region"] := nil
 75 [-]: LOADNIL   R41 R42      ; R41 := R42 := nil
 76 [-]: NEWTABLE  R43 0 6      ; R43 := {}
 77 [-]: SETTABLE  R43 K34 K8   ; R43["Region"] := nil
 78 [-]: SETTABLE  R43 K35 K8   ; R43["RegionLabel"] := nil
 79 [-]: SETTABLE  R43 K33 K8   ; R43["Node"] := nil
 80 [-]: SETTABLE  R43 K36 K8   ; R43["UpdateTimer"] := nil
 81 [-]: SETTABLE  R43 K37 K8   ; R43["NodeTime"] := nil
 82 [-]: SETTABLE  R43 K38 K8   ; R43["mPrevHoverNode"] := nil
 83 [-]: LOADNIL   R44 R44      ; R44 := nil
 84 [-]: LOADK     R45 K39      ; R45 := 12
 85 [-]: LOADK     R46 K15      ; R46 := 0
 86 [-]: LOADK     R47 K40      ; R47 := 50
 87 [-]: LOADNIL   R48 R52      ; R48 := R49 := R50 := R51 := R52 := nil
 88 [-]: NEWTABLE  R53 0 2      ; R53 := {}
 89 [-]: SETTABLE  R53 K33 K8   ; R53["Node"] := nil
 90 [-]: SETTABLE  R53 K41 K8   ; R53["SectorName"] := nil
 91 [-]: LOADNIL   R54 R55      ; R54 := R55 := nil
 92 [-]: NEWTABLE  R56 0 4      ; R56 := {}
 93 [-]: SETTABLE  R56 K42 K8   ; R56["CountdownFx"] := nil
 94 [-]: NEWTABLE  R57 0 0      ; R57 := {}
 95 [-]: SETTABLE  R56 K43 R57  ; R56["PendingFx"] := R57
 96 [-]: NEWTABLE  R57 0 0      ; R57 := {}
 97 [-]: SETTABLE  R56 K44 R57  ; R56["QuestFx"] := R57
 98 [-]: NEWTABLE  R57 0 0      ; R57 := {}
 99 [-]: SETTABLE  R56 K45 R57  ; R56["SentientFx"] := R57
100 [-]: NEWTABLE  R57 0 2      ; R57 := {}
101 [-]: SETTABLE  R57 K41 K46  ; R57["SectorName"] := ""
102 [-]: SETTABLE  R57 K47 K46  ; R57["MissionTier"] := ""
103 [-]: NEWTABLE  R58 0 3      ; R58 := {}
104 [-]: SETTABLE  R58 K41 K46  ; R58["SectorName"] := ""
105 [-]: SETTABLE  R58 K48 K15  ; R58["Difficulty"] := 0
106 [-]: SETTABLE  R58 K49 K8   ; R58["MovieInst"] := nil
107 [-]: LOADNIL   R59 R59      ; R59 := nil
108 [-]: NEWTABLE  R60 0 4      ; R60 := {}
109 [-]: SETTABLE  R60 K50 K15  ; R60["BgWidth"] := 0
110 [-]: SETTABLE  R60 K51 K15  ; R60["BgHeight"] := 0
111 [-]: SETTABLE  R60 K52 K15  ; R60["InitLocationPicHeight"] := 0
112 [-]: SETTABLE  R60 K53 K15  ; R60["InitLocationPicYPos"] := 0
113 [-]: NEWTABLE  R61 0 0      ; R61 := {}
114 [-]: NEWTABLE  R62 0 0      ; R62 := {}
115 [-]: NEWTABLE  R63 0 0      ; R63 := {}
116 [-]: NEWTABLE  R64 0 0      ; R64 := {}
117 [-]: MOVE      R65 R0       ; R65 := R0
118 [-]: MOVE      R66 R0       ; R66 := R0
119 [-]: NEWTABLE  R67 0 1      ; R67 := {}
120 [-]: SETTABLE  R67 K54 K18  ; R67["Playing"] := "0x0"
121 [-]: LOADNIL   R68 R68      ; R68 := nil
122 [-]: MOVE      R69 R0       ; R69 := R0
123 [-]: NEWTABLE  R70 0 4      ; R70 := {}
124 [-]: SETTABLE  R70 K55 K46  ; R70["sectorName"] := ""
125 [-]: SETTABLE  R70 K56 K46  ; R70["sectorLoc"] := ""
126 [-]: SETTABLE  R70 K57 K58  ; R70["mBusyPlayerLoad"] := 0.69999998807907
127 [-]: SETTABLE  R70 K59 K60  ; R70["mAutoJoinIfNotBusy"] := "0x1"
128 [-]: MOVE      R71 R1       ; R71 := R1
129 [-]: NEWTABLE  R72 0 0      ; R72 := {}
130 [-]: NEWTABLE  R73 0 2      ; R73 := {}
131 [-]: SETTABLE  R73 K33 K8   ; R73["Node"] := nil
132 [-]: SETTABLE  R73 K61 K20  ; R73["Timer"] := -1
133 [-]: NEWTABLE  R74 0 3      ; R74 := {}
134 [-]: SETTABLE  R74 K62 K8   ; R74["Previous"] := nil
135 [-]: SETTABLE  R74 K63 K8   ; R74["Target"] := nil
136 [-]: GETGLOBAL R75 K28      ; R75 := 0x70D42C02
137 [-]: LOADK     R76 K32      ; R76 := 1
138 [-]: LOADK     R77 K65      ; R77 := 0.20000000298023
139 [-]: CALL      R75 3 2      ; R75 := R75(R76,R77)
140 [-]: SETTABLE  R74 K64 R75  ; R74["Prop"] := R75
141 [-]: NEWTABLE  R75 0 0      ; R75 := {}
142 [-]: GETGLOBAL R76 K28      ; R76 := 0x70D42C02
143 [-]: LOADK     R77 K32      ; R77 := 1
144 [-]: LOADK     R78 K66      ; R78 := 0.17499999701977
145 [-]: CALL      R76 3 2      ; R76 := R76(R77,R78)
146 [-]: GETGLOBAL R77 K28      ; R77 := 0x70D42C02
147 [-]: LOADK     R78 K15      ; R78 := 0
148 [-]: LOADK     R79 K66      ; R79 := 0.17499999701977
149 [-]: CALL      R77 3 2      ; R77 := R77(R78,R79)
150 [-]: NEWTABLE  R78 0 0      ; R78 := {}
151 [-]: NEWTABLE  R79 0 0      ; R79 := {}
152 [-]: LOADK     R80 K67      ; R80 := 10
153 [-]: LOADNIL   R81 R81      ; R81 := nil
154 [-]: LOADK     R82 K46      ; R82 := ""
155 [-]: MOVE      R83 R0       ; R83 := R0
156 [-]: LOADNIL   R84 R85      ; R84 := R85 := nil
157 [-]: NEWTABLE  R86 0 5      ; R86 := {}
158 [-]: SETTABLE  R86 K68 K18  ; R86["Active"] := "0x0"
159 [-]: GETGLOBAL R87 K70      ; R87 := 0xEC274B1A
160 [-]: LOADK     R88 K71      ; R88 := "CrewShip"
161 [-]: CALL      R87 2 2      ; R87 := R87(R88)
162 [-]: SETTABLE  R86 K69 R87  ; R86["Tag"] := R87
163 [-]: SETTABLE  R86 K72 K8   ; R86["SelectionNode"] := nil
164 [-]: SETTABLE  R86 K73 K8   ; R86["Button"] := nil
165 [-]: NEWTABLE  R87 0 0      ; R87 := {}
166 [-]: SETTABLE  R86 K74 R87  ; R86["Regions"] := R87
167 [-]: NEWTABLE  R87 0 19     ; R87 := {}
168 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
169 [-]: CALL      R88 1 2      ; R88 := R88()
170 [-]: SETTABLE  R87 K75 R88  ; R87["EMPTY"] := R88
171 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
172 [-]: LOADK     R89 K77      ; R89 := "AlphaAtten"
173 [-]: CALL      R88 2 2      ; R88 := R88(R89)
174 [-]: SETTABLE  R87 K76 R88  ; R87["ALPHA_ATTEN"] := R88
175 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
176 [-]: LOADK     R89 K79      ; R89 := "DESTROYED"
177 [-]: CALL      R88 2 2      ; R88 := R88(R89)
178 [-]: SETTABLE  R87 K78 R88  ; R87["DESTROYED_NODE_TAG"] := R88
179 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
180 [-]: LOADK     R89 K81      ; R89 := "RECONSTRUCTION"
181 [-]: CALL      R88 2 2      ; R88 := R88(R89)
182 [-]: SETTABLE  R87 K80 R88  ; R87["RECONSTRUCTION_NODE_TAG"] := R88
183 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
184 [-]: LOADK     R89 K83      ; R89 := "UnderConstruction"
185 [-]: CALL      R88 2 2      ; R88 := R88(R89)
186 [-]: SETTABLE  R87 K82 R88  ; R87["UNDER_CONSTRUCTION_NODE_TAG"] := R88
187 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
188 [-]: LOADK     R89 K85      ; R89 := "EarthToMoonShortcut"
189 [-]: CALL      R88 2 2      ; R88 := R88(R89)
190 [-]: SETTABLE  R87 K84 R88  ; R87["MOON_SHORTCUT_TAG"] := R88
191 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
192 [-]: LOADK     R89 K87      ; R89 := "UnlitAtten"
193 [-]: CALL      R88 2 2      ; R88 := R88(R89)
194 [-]: SETTABLE  R87 K86 R88  ; R87["UNLIT_ATTEN"] := R88
195 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
196 [-]: LOADK     R89 K89      ; R89 := "StarChartRoot"
197 [-]: CALL      R88 2 2      ; R88 := R88(R89)
198 [-]: SETTABLE  R87 K88 R88  ; R87["STAR_CHART_ROOT"] := R88
199 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
200 [-]: LOADK     R89 K91      ; R89 := "Player"
201 [-]: CALL      R88 2 2      ; R88 := R88(R89)
202 [-]: SETTABLE  R87 K90 R88  ; R87["PLAYER"] := R88
203 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
204 [-]: LOADK     R89 K93      ; R89 := "PlayerOperator"
205 [-]: CALL      R88 2 2      ; R88 := R88(R89)
206 [-]: SETTABLE  R87 K92 R88  ; R87["PLAYER_OPERATOR"] := R88
207 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
208 [-]: LOADK     R89 K95      ; R89 := "PlayerLight"
209 [-]: CALL      R88 2 2      ; R88 := R88(R89)
210 [-]: SETTABLE  R87 K94 R88  ; R87["PLAYER_LIGHT"] := R88
211 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
212 [-]: LOADK     R89 K97      ; R89 := "SkyCube"
213 [-]: CALL      R88 2 2      ; R88 := R88(R89)
214 [-]: SETTABLE  R87 K96 R88  ; R87["SKY_CUBE"] := R88
215 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
216 [-]: LOADK     R89 K99      ; R89 := "VoidT2"
217 [-]: CALL      R88 2 2      ; R88 := R88(R89)
218 [-]: SETTABLE  R87 K98 R88  ; R87["VOIDT2"] := R88
219 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
220 [-]: LOADK     R89 K101     ; R89 := "VoidT3"
221 [-]: CALL      R88 2 2      ; R88 := R88(R89)
222 [-]: SETTABLE  R87 K100 R88 ; R87["VOIDT3"] := R88
223 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
224 [-]: LOADK     R89 K103     ; R89 := "VoidT4"
225 [-]: CALL      R88 2 2      ; R88 := R88(R89)
226 [-]: SETTABLE  R87 K102 R88 ; R87["VOIDT4"] := R88
227 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
228 [-]: LOADK     R89 K105     ; R89 := "VoidT5"
229 [-]: CALL      R88 2 2      ; R88 := R88(R89)
230 [-]: SETTABLE  R87 K104 R88 ; R87["VOIDT5"] := R88
231 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
232 [-]: LOADK     R89 K106     ; R89 := "GAME_C1_HEAD1"
233 [-]: CALL      R88 2 2      ; R88 := R88(R89)
234 [-]: SETTABLE  R87 K106 R88 ; R87["GAME_C1_HEAD1"] := R88
235 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
236 [-]: LOADK     R89 K108     ; R89 := "MacheteMayhem"
237 [-]: CALL      R88 2 2      ; R88 := R88(R89)
238 [-]: SETTABLE  R87 K107 R88 ; R87["MACHETE_MAYHEM"] := R88
239 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
240 [-]: LOADK     R89 K110     ; R89 := "TennoConRelay"
241 [-]: CALL      R88 2 2      ; R88 := R88(R89)
242 [-]: SETTABLE  R87 K109 R88 ; R87["TENNOCON_RELAY"] := R88
243 [-]: NEWTABLE  R88 0 0      ; R88 := {}
244 [-]: SETTABLE  R87 K111 R88 ; R87["INFLUENCE_MAP"] := R88
245 [-]: GETGLOBAL R88 K70      ; R88 := 0xEC274B1A
246 [-]: LOADK     R89 K113     ; R89 := "SolNode973"
247 [-]: CALL      R88 2 2      ; R88 := R88(R89)
248 [-]: SETTABLE  R87 K112 R88 ; R87["FIGHT_NODE_TAG"] := R88
249 [-]: NEWTABLE  R88 0 14     ; R88 := {}
250 [-]: GETGLOBAL R89 K115     ; R89 := 0x994A1A7
251 [-]: LOADK     R90 K15      ; R90 := 0
252 [-]: LOADK     R91 K116     ; R91 := 8
253 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
254 [-]: SETTABLE  R88 K114 R89 ; R88["LINE_CULL_DISTANCE"] := R89
255 [-]: GETGLOBAL R89 K115     ; R89 := 0x994A1A7
256 [-]: LOADK     R90 K15      ; R90 := 0
257 [-]: LOADK     R91 K118     ; R91 := 17
258 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
259 [-]: SETTABLE  R88 K117 R89 ; R88["SHORTCUT_CULL_DISTANCE"] := R89
260 [-]: SETTABLE  R88 K119 K120; R88["PLANET_UNIT_MULTIPLIER"] := 0.14259999990463
261 [-]: SETTABLE  R88 K121 K122; R88["INACTIVE_NODE_ALPHA"] := 100
262 [-]: SETTABLE  R88 K123 K122; R88["LABEL_ALPHA"] := 100
263 [-]: SETTABLE  R88 K124 K125; R88["DECO_SCALE_MULTIPLIER"] := 2
264 [-]: GETGLOBAL R89 K115     ; R89 := 0x994A1A7
265 [-]: LOADK     R90 K127     ; R90 := -2
266 [-]: LOADK     R91 K15      ; R91 := 0
267 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
268 [-]: SETTABLE  R88 K126 R89 ; R88["LAYER_1_RANGE"] := R89
269 [-]: GETGLOBAL R89 K115     ; R89 := 0x994A1A7
270 [-]: LOADK     R90 K127     ; R90 := -2
271 [-]: LOADK     R91 K125     ; R91 := 2
272 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
273 [-]: SETTABLE  R88 K128 R89 ; R88["LAYER_2_RANGE"] := R89
274 [-]: GETGLOBAL R89 K115     ; R89 := 0x994A1A7
275 [-]: LOADK     R90 K130     ; R90 := -12
276 [-]: LOADK     R91 K15      ; R91 := 0
277 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
278 [-]: SETTABLE  R88 K129 R89 ; R88["SHORTCUT_RANGE"] := R89
279 [-]: GETGLOBAL R89 K115     ; R89 := 0x994A1A7
280 [-]: LOADK     R90 K132     ; R90 := -20
281 [-]: LOADK     R91 K15      ; R91 := 0
282 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
283 [-]: SETTABLE  R88 K131 R89 ; R88["PLANET_VIS_RANGE"] := R89
284 [-]: GETGLOBAL R89 K10      ; R89 := 0x221C9700
285 [-]: LOADK     R90 K15      ; R90 := 0
286 [-]: LOADK     R91 K29      ; R91 := 0.5
287 [-]: LOADK     R92 K15      ; R92 := 0
288 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
289 [-]: SETTABLE  R88 K133 R89 ; R88["CAMERA_OFFSET"] := R89
290 [-]: GETGLOBAL R89 K10      ; R89 := 0x221C9700
291 [-]: LOADK     R90 K15      ; R90 := 0
292 [-]: LOADK     R91 K15      ; R91 := 0
293 [-]: LOADK     R92 K32      ; R92 := 1
294 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
295 [-]: SETTABLE  R88 K134 R89 ; R88["CAMERA_FOCUS_DIR"] := R89
296 [-]: GETGLOBAL R89 K136     ; R89 := 0x1E4F6281
297 [-]: LOADK     R90 K15      ; R90 := 0
298 [-]: LOADK     R91 K137     ; R91 := 90
299 [-]: LOADK     R92 K15      ; R92 := 0
300 [-]: CALL      R89 4 2      ; R89 := R89(R90,R91,R92)
301 [-]: SETTABLE  R88 K135 R89 ; R88["RING_ROTATION"] := R89
302 [-]: SETTABLE  R88 K138 K139; R88["MAX_SHADER_INFLUENCES"] := 32
303 [-]: NEWTABLE  R89 5 0      ; R89 := {}
304 [-]: LOADK     R90 K140     ; R90 := "/Lotus/Language/Clan/Clan_Tier1"
305 [-]: LOADK     R91 K141     ; R91 := "/Lotus/Language/Clan/Clan_Tier2"
306 [-]: LOADK     R92 K142     ; R92 := "/Lotus/Language/Clan/Clan_Tier3"
307 [-]: LOADK     R93 K143     ; R93 := "/Lotus/Language/Clan/Clan_Tier4"
308 [-]: LOADK     R94 K144     ; R94 := "/Lotus/Language/Clan/Clan_Tier5"
309 [-]: SETLIST   R89 5 1      ; R89[(1-1)*FPF+i] := R(89+i), 1 <= i <= 5
310 [-]: LOADNIL   R90 R91      ; R90 := R91 := nil
311 [-]: NEWTABLE  R92 0 3      ; R92 := {}
312 [-]: SETTABLE  R92 K145 K18 ; R92["mShiftDown"] := "0x0"
313 [-]: SETTABLE  R92 K146 K18 ; R92["mControlDown"] := "0x0"
314 [-]: SETTABLE  R92 K147 K18 ; R92["mAltDown"] := "0x0"
315 [-]: MOVE      R93 R0       ; R93 := R0
316 [-]: NEWTABLE  R94 0 8      ; R94 := {}
317 [-]: SETTABLE  R94 K148 K32 ; R94["READ_ONLY"] := 1
318 [-]: SETTABLE  R94 K149 K125; R94["EDIT_NODES"] := 2
319 [-]: SETTABLE  R94 K150 K151; R94["EDIT_EDGES"] := 3
320 [-]: SETTABLE  R94 K152 K153; R94["EDIT_NODE_DECOS"] := 4
321 [-]: SETTABLE  R94 K154 K155; R94["EDIT_REGIONS"] := 5
322 [-]: SETTABLE  R94 K156 K157; R94["EDIT_REGION_FRAMING"] := 6
323 [-]: SETTABLE  R94 K158 K159; R94["EDIT_SHORTCUT_CONTROL_POINTS"] := 7
324 [-]: SETTABLE  R94 K160 K116; R94["MAX_VALUE"] := 8
325 [-]: GETTABLE  R95 R94 K148 ; R95 := R94["READ_ONLY"]
326 [-]: LOADNIL   R96 R97      ; R96 := R97 := nil
327 [-]: GETGLOBAL R98 K161     ; R98 := 0x329BDC44
328 [-]: LOADK     R99 K162     ; R99 := "EE.Interface.Utilities"
329 [-]: CALL      R98 2 2      ; R98 := R98(R99)
330 [-]: GETGLOBAL R99 K161     ; R99 := 0x329BDC44
331 [-]: LOADK     R100 K163    ; R100 := "Lotus.Interface.LotusUtilities"
332 [-]: CALL      R99 2 2      ; R99 := R99(R100)
333 [-]: GETGLOBAL R100 K161    ; R100 := 0x329BDC44
334 [-]: LOADK     R101 K164    ; R101 := "Lotus.Interface.FortressUtilities"
335 [-]: CALL      R100 2 2     ; R100 := R100(R101)
336 [-]: GETGLOBAL R101 K161    ; R101 := 0x329BDC44
337 [-]: LOADK     R102 K165    ; R102 := "Lotus.Interface.Libs.DioramaLoader"
338 [-]: CALL      R101 2 2     ; R101 := R101(R102)
339 [-]: GETGLOBAL R102 K161    ; R102 := 0x329BDC44
340 [-]: LOADK     R103 K166    ; R103 := "Lotus.Interface.LotusNetworkUtilities"
341 [-]: CALL      R102 2 2     ; R102 := R102(R103)
342 [-]: GETGLOBAL R103 K161    ; R103 := 0x329BDC44
343 [-]: LOADK     R104 K167    ; R104 := "Lotus.Interface.MissionRequirementUtilities"
344 [-]: CALL      R103 2 2     ; R103 := R103(R104)
345 [-]: GETGLOBAL R104 K161    ; R104 := 0x329BDC44
346 [-]: LOADK     R105 K168    ; R105 := "Lotus.Scripts.Nemesis.NemesisGenerator"
347 [-]: CALL      R104 2 2     ; R104 := R104(R105)
348 [-]: GETGLOBAL R105 K161    ; R105 := 0x329BDC44
349 [-]: LOADK     R106 K169    ; R106 := "Lotus.Interface.WorldStateUtilities"
350 [-]: CALL      R105 2 2     ; R105 := R105(R106)
351 [-]: LOADNIL   R106 R108    ; R106 := R107 := R108 := nil
352 [-]: GETGLOBAL R109 K28     ; R109 := 0x70D42C02
353 [-]: LOADK     R110 K15     ; R110 := 0
354 [-]: LOADK     R111 K30     ; R111 := 0.15000000596046
355 [-]: CALL      R109 3 2     ; R109 := R109(R110,R111)
356 [-]: GETGLOBAL R110 K28     ; R110 := 0x70D42C02
357 [-]: LOADK     R111 K15     ; R111 := 0
358 [-]: LOADK     R112 K30     ; R112 := 0.15000000596046
359 [-]: CALL      R110 3 2     ; R110 := R110(R111,R112)
360 [-]: LOADNIL   R111 R111    ; R111 := nil
361 [-]: NEWTABLE  R112 2 0     ; R112 := {}
362 [-]: GETGLOBAL R113 K28     ; R113 := 0x70D42C02
363 [-]: LOADK     R114 K15     ; R114 := 0
364 [-]: LOADK     R115 K32     ; R115 := 1
365 [-]: CALL      R113 3 2     ; R113 := R113(R114,R115)
366 [-]: GETGLOBAL R114 K28     ; R114 := 0x70D42C02
367 [-]: LOADK     R115 K15     ; R115 := 0
368 [-]: LOADK     R116 K32     ; R116 := 1
369 [-]: CALL      R114 3 2     ; R114 := R114(R115,R116)
370 [-]: GETGLOBAL R115 K28     ; R115 := 0x70D42C02
371 [-]: LOADK     R116 K15     ; R116 := 0
372 [-]: LOADK     R117 K32     ; R117 := 1
373 [-]: CALL      R115 3 0     ; R115,... := R115(R116,R117)
374 [-]: SETLIST   R112 0 1     ; R112[(1-1)*FPF+i] := R(112+i), 1 <= i <= 0
375 [-]: GETGLOBAL R113 K170    ; R113 := 0xB5A59043
376 [-]: CALL      R113 1 2     ; R113 := R113()
377 [-]: LOADNIL   R114 R115    ; R114 := R115 := nil
378 [-]: MOVE      R116 R0      ; R116 := R0
379 [-]: LOADNIL   R117 R121    ; R117 := R118 := R119 := R120 := R121 := nil
380 [-]: NEWTABLE  R122 0 0     ; R122 := {}
381 [-]: NEWTABLE  R123 0 9     ; R123 := {}
382 [-]: SETTABLE  R123 K171 K18; R123["IsVisible"] := "0x0"
383 [-]: SETTABLE  R123 K172 K15; R123["X"] := 0
384 [-]: SETTABLE  R123 K173 K15; R123["Y"] := 0
385 [-]: SETTABLE  R123 K174 K32; R123["SpeedMultiplier"] := 1
386 [-]: SETTABLE  R123 K175 K15; R123["MinX"] := 0
387 [-]: SETTABLE  R123 K176 K15; R123["MinY"] := 0
388 [-]: SETTABLE  R123 K177 K15; R123["MaxX"] := 0
389 [-]: SETTABLE  R123 K178 K15; R123["MaxY"] := 0
390 [-]: SETTABLE  R123 K179 K15; R123["MouseMoves"] := 0
391 [-]: LOADNIL   R124 R125    ; R124 := R125 := nil
392 [-]: NEWTABLE  R126 0 5     ; R126 := {}
393 [-]: SETTABLE  R126 K180 K181; R126["SpaceMultiplier"] := 0.36000001430511
394 [-]: SETTABLE  R126 K182 K183; R126["ZoomedMultiplier"] := 0.28000000119209
395 [-]: SETTABLE  R126 K184 K30; R126["SpaceHoveringMultiplier"] := 0.15000000596046
396 [-]: SETTABLE  R126 K185 K186; R126["ZoomedHoveringMultiplier"] := 0.10000000149012
397 [-]: SETTABLE  R126 K187 K32; R126["AspectRatio"] := 1
398 [-]: NEWTABLE  R127 0 10    ; R127 := {}
399 [-]: SETTABLE  R127 K188 K15; R127["Velocity"] := 0
400 [-]: SETTABLE  R127 K189 K190; R127["LoopTime"] := 192800
401 [-]: SETTABLE  R127 K69 K191; R127["Tag"] := "/Lotus/Language/Locations/Fortress"
402 [-]: SETTABLE  R127 K34 K8  ; R127["Region"] := nil
403 [-]: SETTABLE  R127 K192 K18; R127["ShowPath"] := "0x0"
404 [-]: NEWTABLE  R128 0 0     ; R128 := {}
405 [-]: SETTABLE  R127 K193 R128; R127["Splines"] := R128
406 [-]: NEWTABLE  R128 0 0     ; R128 := {}
407 [-]: SETTABLE  R127 K194 R128; R127["Sectors"] := R128
408 [-]: NEWTABLE  R128 0 0     ; R128 := {}
409 [-]: SETTABLE  R127 K195 R128; R127["Nodes"] := R128
410 [-]: SETTABLE  R127 K196 K8 ; R127["SubLabelIndex"] := nil
411 [-]: SETTABLE  R127 K197 K8 ; R127["SplinePoints"] := nil
412 [-]: MOVE      R128 R0      ; R128 := R0
413 [-]: NEWTABLE  R129 0 0     ; R129 := {}
414 [-]: CLOSURE   R130 0       ; R130 := closure(Function #1)
415 [-]: CLOSURE   R131 1       ; R131 := closure(Function #2)
416 [-]: CLOSURE   R132 2       ; R132 := closure(Function #3)
417 [-]: MOVE      R0 R43       ; R0 := R43
418 [-]: MOVE      R0 R98       ; R0 := R98
419 [-]: MOVE      R0 R41       ; R0 := R41
420 [-]: MOVE      R0 R126      ; R0 := R126
421 [-]: MOVE      R0 R123      ; R0 := R123
422 [-]: MOVE      R0 R131      ; R0 := R131
423 [-]: CLOSURE   R133 3       ; R133 := closure(Function #4)
424 [-]: CLOSURE   R134 4       ; R134 := closure(Function #5)
425 [-]: MOVE      R0 R98       ; R0 := R98
426 [-]: MOVE      R0 R60       ; R0 := R60
427 [-]: CLOSURE   R135 5       ; R135 := closure(Function #6)
428 [-]: MOVE      R0 R134      ; R0 := R134
429 [-]: MOVE      R0 R123      ; R0 := R123
430 [-]: MOVE      R0 R98       ; R0 := R98
431 [-]: MOVE      R0 R133      ; R0 := R133
432 [-]: MOVE      R0 R0        ; R0 := R0
433 [-]: MOVE      R0 R126      ; R0 := R126
434 [-]: CLOSURE   R136 6       ; R136 := closure(Function #7)
435 [-]: CLOSURE   R137 7       ; R137 := closure(Function #8)
436 [-]: CLOSURE   R138 8       ; R138 := closure(Function #9)
437 [-]: MOVE      R0 R83       ; R0 := R83
438 [-]: MOVE      R0 R98       ; R0 := R98
439 [-]: CLOSURE   R139 9       ; R139 := closure(Function #10)
440 [-]: MOVE      R0 R98       ; R0 := R98
441 [-]: MOVE      R0 R122      ; R0 := R122
442 [-]: CLOSURE   R140 10      ; R140 := closure(Function #11)
443 [-]: MOVE      R0 R122      ; R0 := R122
444 [-]: MOVE      R0 R98       ; R0 := R98
445 [-]: CLOSURE   R141 11      ; R141 := closure(Function #12)
446 [-]: CLOSURE   R142 12      ; R142 := closure(Function #13)
447 [-]: CLOSURE   R143 13      ; R143 := closure(Function #14)
448 [-]: MOVE      R0 R95       ; R0 := R95
449 [-]: MOVE      R0 R94       ; R0 := R94
450 [-]: MOVE      R0 R96       ; R0 := R96
451 [-]: MOVE      R0 R92       ; R0 := R92
452 [-]: MOVE      R0 R82       ; R0 := R82
453 [-]: CLOSURE   R144 14      ; R144 := closure(Function #15)
454 [-]: MOVE      R0 R22       ; R0 := R22
455 [-]: MOVE      R0 R143      ; R0 := R143
456 [-]: LOADK     R145 K46     ; R145 := ""
457 [-]: CLOSURE   R146 15      ; R146 := closure(Function #16)
458 [-]: MOVE      R0 R67       ; R0 := R67
459 [-]: MOVE      R0 R145      ; R0 := R145
460 [-]: CLOSURE   R147 16      ; R147 := closure(Function #17)
461 [-]: MOVE      R0 R145      ; R0 := R145
462 [-]: MOVE      R0 R67       ; R0 := R67
463 [-]: CLOSURE   R148 17      ; R148 := closure(Function #18)
464 [-]: MOVE      R0 R98       ; R0 := R98
465 [-]: MOVE      R0 R67       ; R0 := R67
466 [-]: MOVE      R0 R99       ; R0 := R99
467 [-]: CLOSURE   R149 18      ; R149 := closure(Function #19)
468 [-]: MOVE      R0 R147      ; R0 := R147
469 [-]: SETGLOBAL R149 K198    ; OnTransmissionDone := R149
470 [-]: SETGLOBAL R149 K199    ; 0x72BF0075 := R149
471 [-]: CLOSURE   R149 19      ; R149 := closure(Function #20)
472 [-]: MOVE      R0 R68       ; R0 := R68
473 [-]: MOVE      R0 R106      ; R0 := R106
474 [-]: MOVE      R0 R43       ; R0 := R43
475 [-]: MOVE      R0 R149      ; R0 := R149
476 [-]: MOVE      R0 R14       ; R0 := R14
477 [-]: MOVE      R0 R98       ; R0 := R98
478 [-]: MOVE      R0 R146      ; R0 := R146
479 [-]: CLOSURE   R150 20      ; R150 := closure(Function #21)
480 [-]: MOVE      R0 R96       ; R0 := R96
481 [-]: CLOSURE   R151 21      ; R151 := closure(Function #22)
482 [-]: MOVE      R0 R88       ; R0 := R88
483 [-]: MOVE      R0 R95       ; R0 := R95
484 [-]: MOVE      R0 R94       ; R0 := R94
485 [-]: MOVE      R0 R2        ; R0 := R2
486 [-]: MOVE      R0 R96       ; R0 := R96
487 [-]: MOVE      R0 R150      ; R0 := R150
488 [-]: CLOSURE   R152 22      ; R152 := closure(Function #23)
489 [-]: MOVE      R0 R63       ; R0 := R63
490 [-]: MOVE      R0 R88       ; R0 := R88
491 [-]: CLOSURE   R153 23      ; R153 := closure(Function #24)
492 [-]: MOVE      R0 R95       ; R0 := R95
493 [-]: MOVE      R0 R94       ; R0 := R94
494 [-]: MOVE      R0 R152      ; R0 := R152
495 [-]: MOVE      R0 R151      ; R0 := R151
496 [-]: MOVE      R0 R144      ; R0 := R144
497 [-]: CLOSURE   R154 24      ; R154 := closure(Function #25)
498 [-]: MOVE      R0 R26       ; R0 := R26
499 [-]: MOVE      R0 R27       ; R0 := R27
500 [-]: MOVE      R0 R83       ; R0 := R83
501 [-]: MOVE      R0 R1        ; R0 := R1
502 [-]: MOVE      R0 R99       ; R0 := R99
503 [-]: MOVE      R0 R5        ; R0 := R5
504 [-]: MOVE      R0 R93       ; R0 := R93
505 [-]: MOVE      R0 R23       ; R0 := R23
506 [-]: MOVE      R0 R4        ; R0 := R4
507 [-]: MOVE      R0 R2        ; R0 := R2
508 [-]: CLOSURE   R155 25      ; R155 := closure(Function #26)
509 [-]: MOVE      R0 R20       ; R0 := R20
510 [-]: NEWTABLE  R156 0 0     ; R156 := {}
511 [-]: CLOSURE   R157 26      ; R157 := closure(Function #27)
512 [-]: MOVE      R0 R87       ; R0 := R87
513 [-]: MOVE      R0 R88       ; R0 := R88
514 [-]: MOVE      R0 R156      ; R0 := R156
515 [-]: MOVE      R0 R23       ; R0 := R23
516 [-]: MOVE      R0 R98       ; R0 := R98
517 [-]: MOVE      R0 R2        ; R0 := R2
518 [-]: MOVE      R0 R4        ; R0 := R4
519 [-]: CLOSURE   R158 27      ; R158 := closure(Function #28)
520 [-]: MOVE      R0 R98       ; R0 := R98
521 [-]: MOVE      R0 R28       ; R0 := R28
522 [-]: MOVE      R0 R35       ; R0 := R35
523 [-]: MOVE      R0 R156      ; R0 := R156
524 [-]: MOVE      R0 R88       ; R0 := R88
525 [-]: MOVE      R0 R87       ; R0 := R87
526 [-]: CLOSURE   R159 28      ; R159 := closure(Function #29)
527 [-]: CLOSURE   R160 29      ; R160 := closure(Function #30)
528 [-]: MOVE      R0 R86       ; R0 := R86
529 [-]: MOVE      R0 R159      ; R0 := R159
530 [-]: MOVE      R0 R85       ; R0 := R85
531 [-]: MOVE      R0 R98       ; R0 := R98
532 [-]: MOVE      R0 R120      ; R0 := R120
533 [-]: MOVE      R0 R65       ; R0 := R65
534 [-]: MOVE      R0 R93       ; R0 := R93
535 [-]: MOVE      R0 R127      ; R0 := R127
536 [-]: MOVE      R0 R100      ; R0 := R100
537 [-]: MOVE      R0 R25       ; R0 := R25
538 [-]: MOVE      R0 R106      ; R0 := R106
539 [-]: MOVE      R0 R0        ; R0 := R0
540 [-]: MOVE      R0 R135      ; R0 := R135
541 [-]: MOVE      R0 R154      ; R0 := R154
542 [-]: MOVE      R0 R82       ; R0 := R82
543 [-]: MOVE      R0 R14       ; R0 := R14
544 [-]: MOVE      R0 R60       ; R0 := R60
545 [-]: MOVE      R0 R29       ; R0 := R29
546 [-]: MOVE      R0 R153      ; R0 := R153
547 [-]: MOVE      R0 R94       ; R0 := R94
548 [-]: MOVE      R0 R155      ; R0 := R155
549 [-]: MOVE      R0 R124      ; R0 := R124
550 [-]: CLOSURE   R161 30      ; R161 := closure(Function #31)
551 [-]: MOVE      R0 R160      ; R0 := R160
552 [-]: SETGLOBAL R161 K200    ; Initialize := R161
553 [-]: SETGLOBAL R161 K201    ; 0x62648036 := R161
554 [-]: CLOSURE   R161 31      ; R161 := closure(Function #32)
555 [-]: MOVE      R0 R99       ; R0 := R99
556 [-]: CLOSURE   R162 32      ; R162 := closure(Function #33)
557 [-]: MOVE      R0 R15       ; R0 := R15
558 [-]: MOVE      R0 R73       ; R0 := R73
559 [-]: MOVE      R0 R161      ; R0 := R161
560 [-]: MOVE      R0 R17       ; R0 := R17
561 [-]: MOVE      R0 R18       ; R0 := R18
562 [-]: MOVE      R0 R16       ; R0 := R16
563 [-]: MOVE      R0 R58       ; R0 := R58
564 [-]: MOVE      R0 R98       ; R0 := R98
565 [-]: CLOSURE   R163 33      ; R163 := closure(Function #34)
566 [-]: MOVE      R0 R159      ; R0 := R159
567 [-]: CLOSURE   R85 34       ; R85 := closure(Function #35)
568 [-]: MOVE      R0 R86       ; R0 := R86
569 [-]: MOVE      R0 R120      ; R0 := R120
570 [-]: MOVE      R0 R162      ; R0 := R162
571 [-]: MOVE      R0 R98       ; R0 := R98
572 [-]: MOVE      R0 R163      ; R0 := R163
573 [-]: MOVE      R0 R160      ; R0 := R160
574 [-]: CLOSURE   R164 35      ; R164 := closure(Function #36)
575 [-]: MOVE      R0 R99       ; R0 := R99
576 [-]: MOVE      R0 R121      ; R0 := R121
577 [-]: MOVE      R0 R15       ; R0 := R15
578 [-]: MOVE      R0 R66       ; R0 := R66
579 [-]: MOVE      R0 R98       ; R0 := R98
580 [-]: MOVE      R0 R138      ; R0 := R138
581 [-]: MOVE      R0 R136      ; R0 := R136
582 [-]: MOVE      R0 R35       ; R0 := R35
583 [-]: MOVE      R0 R28       ; R0 := R28
584 [-]: MOVE      R0 R120      ; R0 := R120
585 [-]: MOVE      R0 R93       ; R0 := R93
586 [-]: CLOSURE   R165 36      ; R165 := closure(Function #37)
587 [-]: MOVE      R0 R164      ; R0 := R164
588 [-]: SETGLOBAL R165 K202    ; UpdateButtons := R165
589 [-]: SETGLOBAL R165 K203    ; 0xB97434A0 := R165
590 [-]: CLOSURE   R121 37      ; R121 := closure(Function #38)
591 [-]: MOVE      R0 R164      ; R0 := R164
592 [-]: CLOSURE   R165 38      ; R165 := closure(Function #39)
593 [-]: CLOSURE   R166 39      ; R166 := closure(Function #40)
594 [-]: CLOSURE   R167 40      ; R167 := closure(Function #41)
595 [-]: MOVE      R0 R84       ; R0 := R84
596 [-]: MOVE      R0 R88       ; R0 := R88
597 [-]: CLOSURE   R168 41      ; R168 := closure(Function #42)
598 [-]: MOVE      R0 R165      ; R0 := R165
599 [-]: MOVE      R0 R21       ; R0 := R21
600 [-]: MOVE      R0 R86       ; R0 := R86
601 [-]: MOVE      R0 R127      ; R0 := R127
602 [-]: MOVE      R0 R88       ; R0 := R88
603 [-]: CLOSURE   R169 42      ; R169 := closure(Function #43)
604 [-]: MOVE      R0 R65       ; R0 := R65
605 [-]: CLOSURE   R170 43      ; R170 := closure(Function #44)
606 [-]: MOVE      R0 R65       ; R0 := R65
607 [-]: MOVE      R0 R99       ; R0 := R99
608 [-]: MOVE      R0 R1        ; R0 := R1
609 [-]: CLOSURE   R171 44      ; R171 := closure(Function #45)
610 [-]: MOVE      R0 R98       ; R0 := R98
611 [-]: MOVE      R0 R99       ; R0 := R99
612 [-]: CLOSURE   R172 45      ; R172 := closure(Function #46)
613 [-]: MOVE      R0 R7        ; R0 := R7
614 [-]: CLOSURE   R173 46      ; R173 := closure(Function #47)
615 [-]: MOVE      R0 R7        ; R0 := R7
616 [-]: MOVE      R0 R1        ; R0 := R1
617 [-]: MOVE      R0 R141      ; R0 := R141
618 [-]: MOVE      R0 R139      ; R0 := R139
619 [-]: MOVE      R0 R8        ; R0 := R8
620 [-]: MOVE      R0 R107      ; R0 := R107
621 [-]: MOVE      R0 R87       ; R0 := R87
622 [-]: MOVE      R0 R108      ; R0 := R108
623 [-]: MOVE      R0 R101      ; R0 := R101
624 [-]: MOVE      R0 R115      ; R0 := R115
625 [-]: MOVE      R0 R86       ; R0 := R86
626 [-]: MOVE      R0 R111      ; R0 := R111
627 [-]: MOVE      R0 R113      ; R0 := R113
628 [-]: MOVE      R0 R114      ; R0 := R114
629 [-]: MOVE      R0 R74       ; R0 := R74
630 [-]: MOVE      R0 R88       ; R0 := R88
631 [-]: CLOSURE   R174 47      ; R174 := closure(Function #48)
632 [-]: CLOSURE   R175 48      ; R175 := closure(Function #49)
633 [-]: MOVE      R0 R2        ; R0 := R2
634 [-]: MOVE      R0 R1        ; R0 := R1
635 [-]: MOVE      R0 R4        ; R0 := R4
636 [-]: MOVE      R0 R166      ; R0 := R166
637 [-]: MOVE      R0 R3        ; R0 := R3
638 [-]: MOVE      R0 R21       ; R0 := R21
639 [-]: MOVE      R0 R127      ; R0 := R127
640 [-]: MOVE      R0 R139      ; R0 := R139
641 [-]: MOVE      R0 R174      ; R0 := R174
642 [-]: MOVE      R0 R28       ; R0 := R28
643 [-]: MOVE      R0 R141      ; R0 := R141
644 [-]: MOVE      R0 R86       ; R0 := R86
645 [-]: MOVE      R0 R25       ; R0 := R25
646 [-]: MOVE      R0 R88       ; R0 := R88
647 [-]: MOVE      R0 R98       ; R0 := R98
648 [-]: MOVE      R0 R168      ; R0 := R168
649 [-]: CLOSURE   R176 49      ; R176 := closure(Function #50)
650 [-]: MOVE      R0 R43       ; R0 := R43
651 [-]: SETGLOBAL R176 K204    ; RollOverRegionLabel := R176
652 [-]: SETGLOBAL R176 K205    ; 0xE570BFF2 := R176
653 [-]: CLOSURE   R176 50      ; R176 := closure(Function #51)
654 [-]: MOVE      R0 R43       ; R0 := R43
655 [-]: SETGLOBAL R176 K206    ; RollOutRegionLabel := R176
656 [-]: SETGLOBAL R176 K207    ; 0xEFF9053C := R176
657 [-]: CLOSURE   R176 51      ; R176 := closure(Function #52)
658 [-]: MOVE      R0 R1        ; R0 := R1
659 [-]: MOVE      R0 R99       ; R0 := R99
660 [-]: MOVE      R0 R173      ; R0 := R173
661 [-]: MOVE      R0 R175      ; R0 := R175
662 [-]: MOVE      R0 R61       ; R0 := R61
663 [-]: MOVE      R0 R2        ; R0 := R2
664 [-]: MOVE      R0 R88       ; R0 := R88
665 [-]: CLOSURE   R177 52      ; R177 := closure(Function #53)
666 [-]: MOVE      R0 R7        ; R0 := R7
667 [-]: MOVE      R0 R8        ; R0 := R8
668 [-]: CLOSURE   R178 53      ; R178 := closure(Function #54)
669 [-]: MOVE      R0 R28       ; R0 := R28
670 [-]: MOVE      R0 R35       ; R0 := R35
671 [-]: MOVE      R0 R32       ; R0 := R32
672 [-]: CLOSURE   R179 54      ; R179 := closure(Function #55)
673 [-]: MOVE      R0 R2        ; R0 := R2
674 [-]: MOVE      R0 R86       ; R0 := R86
675 [-]: MOVE      R0 R72       ; R0 := R72
676 [-]: MOVE      R0 R108      ; R0 := R108
677 [-]: MOVE      R0 R114      ; R0 := R114
678 [-]: MOVE      R0 R74       ; R0 := R74
679 [-]: MOVE      R0 R80       ; R0 := R80
680 [-]: MOVE      R0 R98       ; R0 := R98
681 [-]: MOVE      R0 R84       ; R0 := R84
682 [-]: MOVE      R0 R32       ; R0 := R32
683 [-]: MOVE      R0 R28       ; R0 := R28
684 [-]: MOVE      R0 R35       ; R0 := R35
685 [-]: MOVE      R0 R63       ; R0 := R63
686 [-]: MOVE      R0 R119      ; R0 := R119
687 [-]: MOVE      R0 R106      ; R0 := R106
688 [-]: MOVE      R0 R118      ; R0 := R118
689 [-]: MOVE      R0 R117      ; R0 := R117
690 [-]: MOVE      R0 R29       ; R0 := R29
691 [-]: MOVE      R0 R164      ; R0 := R164
692 [-]: MOVE      R0 R178      ; R0 := R178
693 [-]: MOVE      R0 R21       ; R0 := R21
694 [-]: CLOSURE   R180 55      ; R180 := closure(Function #56)
695 [-]: MOVE      R0 R2        ; R0 := R2
696 [-]: MOVE      R0 R61       ; R0 := R61
697 [-]: CLOSURE   R181 56      ; R181 := closure(Function #57)
698 [-]: MOVE      R0 R86       ; R0 := R86
699 [-]: MOVE      R0 R87       ; R0 := R87
700 [-]: MOVE      R0 R25       ; R0 := R25
701 [-]: MOVE      R0 R103      ; R0 := R103
702 [-]: MOVE      R0 R65       ; R0 := R65
703 [-]: MOVE      R0 R99       ; R0 := R99
704 [-]: MOVE      R0 R12       ; R0 := R12
705 [-]: MOVE      R0 R81       ; R0 := R81
706 [-]: MOVE      R0 R1        ; R0 := R1
707 [-]: MOVE      R0 R165      ; R0 := R165
708 [-]: MOVE      R0 R22       ; R0 := R22
709 [-]: MOVE      R0 R139      ; R0 := R139
710 [-]: MOVE      R0 R88       ; R0 := R88
711 [-]: MOVE      R0 R23       ; R0 := R23
712 [-]: MOVE      R0 R180      ; R0 := R180
713 [-]: MOVE      R0 R167      ; R0 := R167
714 [-]: MOVE      R0 R27       ; R0 := R27
715 [-]: CLOSURE   R182 57      ; R182 := closure(Function #58)
716 [-]: MOVE      R0 R170      ; R0 := R170
717 [-]: MOVE      R0 R169      ; R0 := R169
718 [-]: MOVE      R0 R171      ; R0 := R171
719 [-]: MOVE      R0 R23       ; R0 := R23
720 [-]: MOVE      R0 R98       ; R0 := R98
721 [-]: MOVE      R0 R78       ; R0 := R78
722 [-]: MOVE      R0 R79       ; R0 := R79
723 [-]: MOVE      R0 R84       ; R0 := R84
724 [-]: MOVE      R0 R86       ; R0 := R86
725 [-]: MOVE      R0 R143      ; R0 := R143
726 [-]: CLOSURE   R183 58      ; R183 := closure(Function #59)
727 [-]: MOVE      R0 R99       ; R0 := R99
728 [-]: MOVE      R0 R23       ; R0 := R23
729 [-]: MOVE      R0 R24       ; R0 := R24
730 [-]: MOVE      R0 R1        ; R0 := R1
731 [-]: CLOSURE   R184 59      ; R184 := closure(Function #60)
732 [-]: MOVE      R0 R79       ; R0 := R79
733 [-]: MOVE      R0 R78       ; R0 := R78
734 [-]: MOVE      R0 R183      ; R0 := R183
735 [-]: MOVE      R0 R22       ; R0 := R22
736 [-]: MOVE      R0 R182      ; R0 := R182
737 [-]: MOVE      R0 R154      ; R0 := R154
738 [-]: CLOSURE   R185 60      ; R185 := closure(Function #61)
739 [-]: MOVE      R0 R98       ; R0 := R98
740 [-]: CLOSURE   R186 61      ; R186 := closure(Function #62)
741 [-]: MOVE      R0 R22       ; R0 := R22
742 [-]: MOVE      R0 R2        ; R0 := R2
743 [-]: MOVE      R0 R185      ; R0 := R185
744 [-]: CLOSURE   R187 62      ; R187 := closure(Function #63)
745 [-]: MOVE      R0 R22       ; R0 := R22
746 [-]: MOVE      R0 R2        ; R0 := R2
747 [-]: MOVE      R0 R99       ; R0 := R99
748 [-]: MOVE      R0 R182      ; R0 := R182
749 [-]: MOVE      R0 R87       ; R0 := R87
750 [-]: CLOSURE   R188 63      ; R188 := closure(Function #64)
751 [-]: MOVE      R0 R22       ; R0 := R22
752 [-]: CLOSURE   R189 64      ; R189 := closure(Function #65)
753 [-]: MOVE      R0 R22       ; R0 := R22
754 [-]: MOVE      R0 R23       ; R0 := R23
755 [-]: MOVE      R0 R166      ; R0 := R166
756 [-]: MOVE      R0 R5        ; R0 := R5
757 [-]: MOVE      R0 R1        ; R0 := R1
758 [-]: MOVE      R0 R99       ; R0 := R99
759 [-]: MOVE      R0 R11       ; R0 := R11
760 [-]: MOVE      R0 R84       ; R0 := R84
761 [-]: MOVE      R0 R127      ; R0 := R127
762 [-]: MOVE      R0 R181      ; R0 := R181
763 [-]: MOVE      R0 R86       ; R0 := R86
764 [-]: MOVE      R0 R2        ; R0 := R2
765 [-]: MOVE      R0 R10       ; R0 := R10
766 [-]: MOVE      R0 R25       ; R0 := R25
767 [-]: MOVE      R0 R98       ; R0 := R98
768 [-]: MOVE      R0 R144      ; R0 := R144
769 [-]: CLOSURE   R190 65      ; R190 := closure(Function #66)
770 [-]: CLOSURE   R191 66      ; R191 := closure(Function #67)
771 [-]: CLOSURE   R192 67      ; R192 := closure(Function #68)
772 [-]: MOVE      R0 R23       ; R0 := R23
773 [-]: CLOSURE   R193 68      ; R193 := closure(Function #69)
774 [-]: MOVE      R0 R3        ; R0 := R3
775 [-]: MOVE      R0 R61       ; R0 := R61
776 [-]: MOVE      R0 R2        ; R0 := R2
777 [-]: MOVE      R0 R190      ; R0 := R190
778 [-]: MOVE      R0 R192      ; R0 := R192
779 [-]: MOVE      R0 R191      ; R0 := R191
780 [-]: CLOSURE   R194 69      ; R194 := closure(Function #70)
781 [-]: MOVE      R0 R6        ; R0 := R6
782 [-]: MOVE      R0 R1        ; R0 := R1
783 [-]: MOVE      R0 R63       ; R0 := R63
784 [-]: MOVE      R0 R64       ; R0 := R64
785 [-]: MOVE      R0 R23       ; R0 := R23
786 [-]: MOVE      R0 R127      ; R0 := R127
787 [-]: CLOSURE   R195 70      ; R195 := closure(Function #71)
788 [-]: MOVE      R0 R86       ; R0 := R86
789 [-]: MOVE      R0 R63       ; R0 := R63
790 [-]: MOVE      R0 R98       ; R0 := R98
791 [-]: MOVE      R0 R88       ; R0 := R88
792 [-]: MOVE      R0 R193      ; R0 := R193
793 [-]: CLOSURE   R196 71      ; R196 := closure(Function #72)
794 [-]: MOVE      R0 R75       ; R0 := R75
795 [-]: MOVE      R0 R63       ; R0 := R63
796 [-]: MOVE      R0 R23       ; R0 := R23
797 [-]: MOVE      R0 R98       ; R0 := R98
798 [-]: CLOSURE   R197 72      ; R197 := closure(Function #73)
799 [-]: MOVE      R0 R98       ; R0 := R98
800 [-]: MOVE      R0 R86       ; R0 := R86
801 [-]: MOVE      R0 R22       ; R0 := R22
802 [-]: CLOSURE   R198 73      ; R198 := closure(Function #74)
803 [-]: MOVE      R0 R81       ; R0 := R81
804 [-]: CLOSURE   R199 74      ; R199 := closure(Function #75)
805 [-]: MOVE      R0 R98       ; R0 := R98
806 [-]: MOVE      R0 R13       ; R0 := R13
807 [-]: MOVE      R0 R86       ; R0 := R86
808 [-]: MOVE      R0 R87       ; R0 := R87
809 [-]: MOVE      R0 R127      ; R0 := R127
810 [-]: MOVE      R0 R198      ; R0 := R198
811 [-]: MOVE      R0 R176      ; R0 := R176
812 [-]: MOVE      R0 R189      ; R0 := R189
813 [-]: MOVE      R0 R194      ; R0 := R194
814 [-]: MOVE      R0 R197      ; R0 := R197
815 [-]: MOVE      R0 R157      ; R0 := R157
816 [-]: MOVE      R0 R23       ; R0 := R23
817 [-]: MOVE      R0 R184      ; R0 := R184
818 [-]: MOVE      R0 R186      ; R0 := R186
819 [-]: MOVE      R0 R187      ; R0 := R187
820 [-]: MOVE      R0 R195      ; R0 := R195
821 [-]: MOVE      R0 R196      ; R0 := R196
822 [-]: MOVE      R0 R140      ; R0 := R140
823 [-]: MOVE      R0 R179      ; R0 := R179
824 [-]: MOVE      R0 R161      ; R0 := R161
825 [-]: CLOSURE   R200 75      ; R200 := closure(Function #76)
826 [-]: MOVE      R0 R30       ; R0 := R30
827 [-]: MOVE      R0 R31       ; R0 := R31
828 [-]: MOVE      R0 R199      ; R0 := R199
829 [-]: CLOSURE   R201 76      ; R201 := closure(Function #77)
830 [-]: MOVE      R0 R30       ; R0 := R30
831 [-]: MOVE      R0 R101      ; R0 := R101
832 [-]: MOVE      R0 R86       ; R0 := R86
833 [-]: CLOSURE   R202 77      ; R202 := closure(Function #78)
834 [-]: MOVE      R0 R99       ; R0 := R99
835 [-]: MOVE      R0 R31       ; R0 := R31
836 [-]: CLOSURE   R203 78      ; R203 := closure(Function #79)
837 [-]: CLOSURE   R204 79      ; R204 := closure(Function #80)
838 [-]: MOVE      R0 R32       ; R0 := R32
839 [-]: MOVE      R0 R55       ; R0 := R55
840 [-]: CLOSURE   R205 80      ; R205 := closure(Function #81)
841 [-]: MOVE      R0 R96       ; R0 := R96
842 [-]: CLOSURE   R206 81      ; R206 := closure(Function #82)
843 [-]: MOVE      R0 R92       ; R0 := R92
844 [-]: MOVE      R0 R96       ; R0 := R96
845 [-]: CLOSURE   R207 82      ; R207 := closure(Function #83)
846 [-]: MOVE      R0 R99       ; R0 := R99
847 [-]: CLOSURE   R208 83      ; R208 := closure(Function #84)
848 [-]: MOVE      R0 R99       ; R0 := R99
849 [-]: CLOSURE   R209 84      ; R209 := closure(Function #85)
850 [-]: MOVE      R0 R208      ; R0 := R208
851 [-]: SETGLOBAL R209 K208    ; AbortConfirm := R209
852 [-]: SETGLOBAL R209 K209    ; 0x575A9B5 := R209
853 [-]: CLOSURE   R209 85      ; R209 := closure(Function #86)
854 [-]: MOVE      R0 R98       ; R0 := R98
855 [-]: SETGLOBAL R209 K210    ; ShowQuestConfirm := R209
856 [-]: SETGLOBAL R209 K211    ; 0x3CC13774 := R209
857 [-]: CLOSURE   R209 86      ; R209 := closure(Function #87)
858 [-]: SETGLOBAL R209 K212    ; CanOpenRailJackMissionInCrewship := R209
859 [-]: SETGLOBAL R209 K213    ; 0xA5B49CBE := R209
860 [-]: CLOSURE   R209 87      ; R209 := closure(Function #88)
861 [-]: SETGLOBAL R209 K214    ; OnUpdateSessionSettings := R209
862 [-]: SETGLOBAL R209 K215    ; 0xF1D13E45 := R209
863 [-]: CLOSURE   R209 88      ; R209 := closure(Function #89)
864 [-]: MOVE      R0 R86       ; R0 := R86
865 [-]: MOVE      R0 R159      ; R0 := R159
866 [-]: CLOSURE   R210 89      ; R210 := closure(Function #90)
867 [-]: MOVE      R0 R103      ; R0 := R103
868 [-]: MOVE      R0 R98       ; R0 := R98
869 [-]: MOVE      R0 R99       ; R0 := R99
870 [-]: MOVE      R0 R209      ; R0 := R209
871 [-]: MOVE      R0 R2        ; R0 := R2
872 [-]: MOVE      R0 R102      ; R0 := R102
873 [-]: MOVE      R0 R120      ; R0 := R120
874 [-]: MOVE      R0 R86       ; R0 := R86
875 [-]: MOVE      R0 R208      ; R0 := R208
876 [-]: CLOSURE   R211 90      ; R211 := closure(Function #91)
877 [-]: MOVE      R0 R49       ; R0 := R49
878 [-]: MOVE      R0 R29       ; R0 := R29
879 [-]: CLOSURE   R212 91      ; R212 := closure(Function #92)
880 [-]: MOVE      R0 R49       ; R0 := R49
881 [-]: MOVE      R0 R29       ; R0 := R29
882 [-]: MOVE      R0 R210      ; R0 := R210
883 [-]: SETGLOBAL R212 K216    ; ConfirmInvasionFaction := R212
884 [-]: SETGLOBAL R212 K217    ; 0xFBA5AB02 := R212
885 [-]: CLOSURE   R212 92      ; R212 := closure(Function #93)
886 [-]: MOVE      R0 R50       ; R0 := R50
887 [-]: MOVE      R0 R99       ; R0 := R99
888 [-]: MOVE      R0 R57       ; R0 := R57
889 [-]: MOVE      R0 R15       ; R0 := R15
890 [-]: MOVE      R0 R29       ; R0 := R29
891 [-]: CLOSURE   R213 93      ; R213 := closure(Function #94)
892 [-]: MOVE      R0 R50       ; R0 := R50
893 [-]: MOVE      R0 R29       ; R0 := R29
894 [-]: MOVE      R0 R15       ; R0 := R15
895 [-]: MOVE      R0 R210      ; R0 := R210
896 [-]: MOVE      R0 R57       ; R0 := R57
897 [-]: MOVE      R0 R99       ; R0 := R99
898 [-]: SETGLOBAL R213 K218    ; OnVoidProjectionChosen := R213
899 [-]: SETGLOBAL R213 K219    ; 0x771EFB2E := R213
900 [-]: CLOSURE   R213 94      ; R213 := closure(Function #95)
901 [-]: SETGLOBAL R213 K220    ; ConfirmIncompatibleOnlineMode := R213
902 [-]: SETGLOBAL R213 K221    ; 0x2CA9D97 := R213
903 [-]: CLOSURE   R213 95      ; R213 := closure(Function #96)
904 [-]: MOVE      R0 R51       ; R0 := R51
905 [-]: MOVE      R0 R98       ; R0 := R98
906 [-]: MOVE      R0 R29       ; R0 := R29
907 [-]: CLOSURE   R214 96      ; R214 := closure(Function #97)
908 [-]: MOVE      R0 R51       ; R0 := R51
909 [-]: MOVE      R0 R29       ; R0 := R29
910 [-]: MOVE      R0 R99       ; R0 := R99
911 [-]: MOVE      R0 R210      ; R0 := R210
912 [-]: SETGLOBAL R214 K222    ; ConfirmNightmare := R214
913 [-]: SETGLOBAL R214 K223    ; 0xEEB0C7FF := R214
914 [-]: CLOSURE   R214 97      ; R214 := closure(Function #98)
915 [-]: SETGLOBAL R214 K224    ; ConfirmRaidSelection := R214
916 [-]: SETGLOBAL R214 K225    ; 0x1E9A77E0 := R214
917 [-]: CLOSURE   R214 98      ; R214 := closure(Function #99)
918 [-]: MOVE      R0 R58       ; R0 := R58
919 [-]: MOVE      R0 R15       ; R0 := R15
920 [-]: MOVE      R0 R29       ; R0 := R29
921 [-]: CLOSURE   R215 99      ; R215 := closure(Function #100)
922 [-]: MOVE      R0 R58       ; R0 := R58
923 [-]: MOVE      R0 R29       ; R0 := R29
924 [-]: MOVE      R0 R15       ; R0 := R15
925 [-]: MOVE      R0 R210      ; R0 := R210
926 [-]: SETGLOBAL R215 K226    ; ConfirmWagerSelection := R215
927 [-]: SETGLOBAL R215 K227    ; 0xAB823E52 := R215
928 [-]: CLOSURE   R215 100     ; R215 := closure(Function #101)
929 [-]: MOVE      R0 R29       ; R0 := R29
930 [-]: MOVE      R0 R53       ; R0 := R53
931 [-]: MOVE      R0 R99       ; R0 := R99
932 [-]: MOVE      R0 R102      ; R0 := R102
933 [-]: MOVE      R0 R98       ; R0 := R98
934 [-]: SETGLOBAL R215 K228    ; OpenSoloMission := R215
935 [-]: SETGLOBAL R215 K229    ; 0xE6723C78 := R215
936 [-]: CLOSURE   R215 101     ; R215 := closure(Function #102)
937 [-]: MOVE      R0 R52       ; R0 := R52
938 [-]: MOVE      R0 R29       ; R0 := R29
939 [-]: MOVE      R0 R53       ; R0 := R53
940 [-]: SETGLOBAL R215 K230    ; ConfirmSoloMission := R215
941 [-]: SETGLOBAL R215 K231    ; 0xCDF468C2 := R215
942 [-]: CLOSURE   R215 102     ; R215 := closure(Function #103)
943 [-]: MOVE      R0 R29       ; R0 := R29
944 [-]: MOVE      R0 R1        ; R0 := R1
945 [-]: MOVE      R0 R54       ; R0 := R54
946 [-]: MOVE      R0 R98       ; R0 := R98
947 [-]: MOVE      R0 R210      ; R0 := R210
948 [-]: MOVE      R0 R70       ; R0 := R70
949 [-]: MOVE      R0 R99       ; R0 := R99
950 [-]: SETGLOBAL R215 K232    ; GotHubInstances := R215
951 [-]: SETGLOBAL R215 K233    ; 0x924FB8E9 := R215
952 [-]: CLOSURE   R215 103     ; R215 := closure(Function #104)
953 [-]: MOVE      R0 R70       ; R0 := R70
954 [-]: MOVE      R0 R1        ; R0 := R1
955 [-]: MOVE      R0 R29       ; R0 := R29
956 [-]: CLOSURE   R216 104     ; R216 := closure(Function #105)
957 [-]: MOVE      R0 R99       ; R0 := R99
958 [-]: CLOSURE   R217 105     ; R217 := closure(Function #106)
959 [-]: MOVE      R0 R99       ; R0 := R99
960 [-]: MOVE      R0 R29       ; R0 := R29
961 [-]: MOVE      R0 R54       ; R0 := R54
962 [-]: MOVE      R0 R211      ; R0 := R211
963 [-]: MOVE      R0 R212      ; R0 := R212
964 [-]: MOVE      R0 R23       ; R0 := R23
965 [-]: MOVE      R0 R1        ; R0 := R1
966 [-]: MOVE      R0 R103      ; R0 := R103
967 [-]: MOVE      R0 R98       ; R0 := R98
968 [-]: MOVE      R0 R52       ; R0 := R52
969 [-]: MOVE      R0 R53       ; R0 := R53
970 [-]: MOVE      R0 R69       ; R0 := R69
971 [-]: MOVE      R0 R210      ; R0 := R210
972 [-]: MOVE      R0 R207      ; R0 := R207
973 [-]: MOVE      R0 R216      ; R0 := R216
974 [-]: MOVE      R0 R87       ; R0 := R87
975 [-]: CLOSURE   R218 106     ; R218 := closure(Function #107)
976 [-]: MOVE      R0 R99       ; R0 := R99
977 [-]: MOVE      R0 R98       ; R0 := R98
978 [-]: CLOSURE   R219 107     ; R219 := closure(Function #108)
979 [-]: MOVE      R0 R43       ; R0 := R43
980 [-]: MOVE      R0 R86       ; R0 := R86
981 [-]: MOVE      R0 R99       ; R0 := R99
982 [-]: MOVE      R0 R98       ; R0 := R98
983 [-]: MOVE      R0 R218      ; R0 := R218
984 [-]: MOVE      R0 R210      ; R0 := R210
985 [-]: MOVE      R0 R11       ; R0 := R11
986 [-]: MOVE      R0 R169      ; R0 := R169
987 [-]: MOVE      R0 R212      ; R0 := R212
988 [-]: MOVE      R0 R211      ; R0 := R211
989 [-]: MOVE      R0 R214      ; R0 := R214
990 [-]: MOVE      R0 R217      ; R0 := R217
991 [-]: MOVE      R0 R213      ; R0 := R213
992 [-]: MOVE      R0 R215      ; R0 := R215
993 [-]: MOVE      R0 R103      ; R0 := R103
994 [-]: MOVE      R0 R52       ; R0 := R52
995 [-]: MOVE      R0 R53       ; R0 := R53
996 [-]: CLOSURE   R220 108     ; R220 := closure(Function #109)
997 [-]: MOVE      R0 R163      ; R0 := R163
998 [-]: SETGLOBAL R220 K234    ; InitializeRailJackMap := R220
999 [-]: SETGLOBAL R220 K235    ; 0x6A247BFE := R220
1000 [-]: CLOSURE   R220 109     ; R220 := closure(Function #110)
1001 [-]: MOVE      R0 R98       ; R0 := R98
1002 [-]: SETGLOBAL R220 K236    ; InitialFade := R220
1003 [-]: SETGLOBAL R220 K237    ; 0x44C4C57C := R220
1004 [-]: CLOSURE   R220 110     ; R220 := closure(Function #111)
1005 [-]: MOVE      R0 R15       ; R0 := R15
1006 [-]: MOVE      R0 R99       ; R0 := R99
1007 [-]: MOVE      R0 R17       ; R0 := R17
1008 [-]: MOVE      R0 R18       ; R0 := R18
1009 [-]: MOVE      R0 R201      ; R0 := R201
1010 [-]: MOVE      R0 R202      ; R0 := R202
1011 [-]: MOVE      R0 R142      ; R0 := R142
1012 [-]: MOVE      R0 R203      ; R0 := R203
1013 [-]: MOVE      R0 R204      ; R0 := R204
1014 [-]: MOVE      R0 R205      ; R0 := R205
1015 [-]: MOVE      R0 R164      ; R0 := R164
1016 [-]: SETGLOBAL R220 K238    ; InitializeMore := R220
1017 [-]: SETGLOBAL R220 K239    ; 0x3479F2F3 := R220
1018 [-]: CLOSURE   R220 111     ; R220 := closure(Function #112)
1019 [-]: MOVE      R0 R162      ; R0 := R162
1020 [-]: SETGLOBAL R220 K240    ; Shutdown := R220
1021 [-]: SETGLOBAL R220 K241    ; 0x3C577FA3 := R220
1022 [-]: CLOSURE   R220 112     ; R220 := closure(Function #113)
1023 [-]: MOVE      R0 R13       ; R0 := R13
1024 [-]: CLOSURE   R221 113     ; R221 := closure(Function #114)
1025 [-]: MOVE      R0 R130      ; R0 := R130
1026 [-]: CLOSURE   R222 114     ; R222 := closure(Function #115)
1027 [-]: MOVE      R0 R43       ; R0 := R43
1028 [-]: MOVE      R0 R2        ; R0 := R2
1029 [-]: MOVE      R0 R3        ; R0 := R3
1030 [-]: MOVE      R0 R86       ; R0 := R86
1031 [-]: MOVE      R0 R61       ; R0 := R61
1032 [-]: MOVE      R0 R123      ; R0 := R123
1033 [-]: MOVE      R0 R25       ; R0 := R25
1034 [-]: MOVE      R0 R35       ; R0 := R35
1035 [-]: MOVE      R0 R28       ; R0 := R28
1036 [-]: MOVE      R0 R88       ; R0 := R88
1037 [-]: MOVE      R0 R41       ; R0 := R41
1038 [-]: MOVE      R0 R29       ; R0 := R29
1039 [-]: MOVE      R0 R98       ; R0 := R98
1040 [-]: MOVE      R0 R62       ; R0 := R62
1041 [-]: MOVE      R0 R21       ; R0 := R21
1042 [-]: CLOSURE   R223 115     ; R223 := closure(Function #116)
1043 [-]: MOVE      R0 R95       ; R0 := R95
1044 [-]: MOVE      R0 R94       ; R0 := R94
1045 [-]: MOVE      R0 R96       ; R0 := R96
1046 [-]: MOVE      R0 R221      ; R0 := R221
1047 [-]: MOVE      R0 R1        ; R0 := R1
1048 [-]: MOVE      R0 R22       ; R0 := R22
1049 [-]: MOVE      R0 R180      ; R0 := R180
1050 [-]: MOVE      R0 R63       ; R0 := R63
1051 [-]: MOVE      R0 R193      ; R0 := R193
1052 [-]: MOVE      R0 R222      ; R0 := R222
1053 [-]: MOVE      R0 R92       ; R0 := R92
1054 [-]: MOVE      R0 R131      ; R0 := R131
1055 [-]: MOVE      R0 R143      ; R0 := R143
1056 [-]: MOVE      R0 R190      ; R0 := R190
1057 [-]: MOVE      R0 R98       ; R0 := R98
1058 [-]: MOVE      R0 R88       ; R0 := R88
1059 [-]: MOVE      R0 R32       ; R0 := R32
1060 [-]: MOVE      R0 R86       ; R0 := R86
1061 [-]: MOVE      R0 R33       ; R0 := R33
1062 [-]: MOVE      R0 R34       ; R0 := R34
1063 [-]: MOVE      R0 R35       ; R0 := R35
1064 [-]: MOVE      R0 R36       ; R0 := R36
1065 [-]: MOVE      R0 R178      ; R0 := R178
1066 [-]: MOVE      R0 R45       ; R0 := R45
1067 [-]: MOVE      R0 R13       ; R0 := R13
1068 [-]: MOVE      R0 R74       ; R0 := R74
1069 [-]: MOVE      R0 R41       ; R0 := R41
1070 [-]: MOVE      R0 R108      ; R0 := R108
1071 [-]: MOVE      R0 R114      ; R0 := R114
1072 [-]: MOVE      R0 R115      ; R0 := R115
1073 [-]: MOVE      R0 R2        ; R0 := R2
1074 [-]: MOVE      R0 R76       ; R0 := R76
1075 [-]: MOVE      R0 R43       ; R0 := R43
1076 [-]: MOVE      R0 R39       ; R0 := R39
1077 [-]: MOVE      R0 R87       ; R0 := R87
1078 [-]: MOVE      R0 R77       ; R0 := R77
1079 [-]: MOVE      R0 R40       ; R0 := R40
1080 [-]: MOVE      R0 R116      ; R0 := R116
1081 [-]: CLOSURE   R224 116     ; R224 := closure(Function #117)
1082 [-]: MOVE      R0 R72       ; R0 := R72
1083 [-]: MOVE      R0 R61       ; R0 := R61
1084 [-]: MOVE      R0 R98       ; R0 := R98
1085 [-]: CLOSURE   R225 117     ; R225 := closure(Function #118)
1086 [-]: MOVE      R0 R127      ; R0 := R127
1087 [-]: MOVE      R0 R1        ; R0 := R1
1088 [-]: MOVE      R0 R28       ; R0 := R28
1089 [-]: MOVE      R0 R41       ; R0 := R41
1090 [-]: MOVE      R0 R119      ; R0 := R119
1091 [-]: MOVE      R0 R32       ; R0 := R32
1092 [-]: MOVE      R0 R141      ; R0 := R141
1093 [-]: MOVE      R0 R21       ; R0 := R21
1094 [-]: MOVE      R0 R88       ; R0 := R88
1095 [-]: MOVE      R0 R64       ; R0 := R64
1096 [-]: MOVE      R0 R193      ; R0 := R193
1097 [-]: MOVE      R0 R63       ; R0 := R63
1098 [-]: CLOSURE   R226 118     ; R226 := closure(Function #119)
1099 [-]: MOVE      R0 R20       ; R0 := R20
1100 [-]: MOVE      R0 R2        ; R0 := R2
1101 [-]: CLOSURE   R227 119     ; R227 := closure(Function #120)
1102 [-]: MOVE      R0 R18       ; R0 := R18
1103 [-]: MOVE      R0 R35       ; R0 := R35
1104 [-]: MOVE      R0 R155      ; R0 := R155
1105 [-]: MOVE      R0 R2        ; R0 := R2
1106 [-]: MOVE      R0 R41       ; R0 := R41
1107 [-]: CLOSURE   R228 120     ; R228 := closure(Function #121)
1108 [-]: MOVE      R0 R98       ; R0 := R98
1109 [-]: CLOSURE   R229 121     ; R229 := closure(Function #122)
1110 [-]: MOVE      R0 R35       ; R0 := R35
1111 [-]: MOVE      R0 R37       ; R0 := R37
1112 [-]: MOVE      R0 R38       ; R0 := R38
1113 [-]: MOVE      R0 R33       ; R0 := R33
1114 [-]: MOVE      R0 R34       ; R0 := R34
1115 [-]: MOVE      R0 R43       ; R0 := R43
1116 [-]: MOVE      R0 R39       ; R0 := R39
1117 [-]: MOVE      R0 R76       ; R0 := R76
1118 [-]: MOVE      R0 R40       ; R0 := R40
1119 [-]: MOVE      R0 R2        ; R0 := R2
1120 [-]: MOVE      R0 R77       ; R0 := R77
1121 [-]: MOVE      R0 R95       ; R0 := R95
1122 [-]: MOVE      R0 R94       ; R0 := R94
1123 [-]: MOVE      R0 R88       ; R0 := R88
1124 [-]: MOVE      R0 R21       ; R0 := R21
1125 [-]: MOVE      R0 R46       ; R0 := R46
1126 [-]: MOVE      R0 R47       ; R0 := R47
1127 [-]: MOVE      R0 R125      ; R0 := R125
1128 [-]: MOVE      R0 R22       ; R0 := R22
1129 [-]: MOVE      R0 R116      ; R0 := R116
1130 [-]: MOVE      R0 R3        ; R0 := R3
1131 [-]: MOVE      R0 R63       ; R0 := R63
1132 [-]: MOVE      R0 R228      ; R0 := R228
1133 [-]: MOVE      R0 R87       ; R0 := R87
1134 [-]: MOVE      R0 R8        ; R0 := R8
1135 [-]: MOVE      R0 R75       ; R0 := R75
1136 [-]: MOVE      R0 R158      ; R0 := R158
1137 [-]: MOVE      R0 R227      ; R0 := R227
1138 [-]: MOVE      R0 R127      ; R0 := R127
1139 [-]: MOVE      R0 R98       ; R0 := R98
1140 [-]: MOVE      R0 R134      ; R0 := R134
1141 [-]: MOVE      R0 R67       ; R0 := R67
1142 [-]: MOVE      R0 R148      ; R0 := R148
1143 [-]: MOVE      R0 R224      ; R0 := R224
1144 [-]: MOVE      R0 R25       ; R0 := R25
1145 [-]: MOVE      R0 R225      ; R0 := R225
1146 [-]: MOVE      R0 R74       ; R0 := R74
1147 [-]: MOVE      R0 R108      ; R0 := R108
1148 [-]: MOVE      R0 R73       ; R0 := R73
1149 [-]: GETGLOBAL R230 K10     ; R230 := 0x221C9700
1150 [-]: CALL      R230 1 2     ; R230 := R230()
1151 [-]: CLOSURE   R231 122     ; R231 := closure(Function #123)
1152 [-]: MOVE      R0 R90       ; R0 := R90
1153 [-]: MOVE      R0 R92       ; R0 := R92
1154 [-]: MOVE      R0 R8        ; R0 := R8
1155 [-]: MOVE      R0 R221      ; R0 := R221
1156 [-]: MOVE      R0 R230      ; R0 := R230
1157 [-]: CLOSURE   R124 123     ; R124 := closure(Function #124)
1158 [-]: MOVE      R0 R123      ; R0 := R123
1159 [-]: MOVE      R0 R22       ; R0 := R22
1160 [-]: MOVE      R0 R98       ; R0 := R98
1161 [-]: CLOSURE   R232 124     ; R232 := closure(Function #125)
1162 [-]: MOVE      R0 R16       ; R0 := R16
1163 [-]: MOVE      R0 R41       ; R0 := R41
1164 [-]: MOVE      R0 R98       ; R0 := R98
1165 [-]: CLOSURE   R233 125     ; R233 := closure(Function #126)
1166 [-]: MOVE      R0 R58       ; R0 := R58
1167 [-]: MOVE      R0 R22       ; R0 := R22
1168 [-]: CLOSURE   R234 126     ; R234 := closure(Function #127)
1169 [-]: MOVE      R0 R130      ; R0 := R130
1170 [-]: MOVE      R0 R86       ; R0 := R86
1171 [-]: SETTABLE  R86 K242 R234; R86["IntersectVoidPlane"] := R234
1172 [-]: CLOSURE   R234 127     ; R234 := closure(Function #128)
1173 [-]: MOVE      R0 R86       ; R0 := R86
1174 [-]: SETTABLE  R86 K243 R234; R86["SetDistortions"] := R234
1175 [-]: CLOSURE   R234 128     ; R234 := closure(Function #129)
1176 [-]: MOVE      R0 R106      ; R0 := R106
1177 [-]: MOVE      R0 R13       ; R0 := R13
1178 [-]: MOVE      R0 R86       ; R0 := R86
1179 [-]: MOVE      R0 R28       ; R0 := R28
1180 [-]: MOVE      R0 R35       ; R0 := R35
1181 [-]: MOVE      R0 R41       ; R0 := R41
1182 [-]: MOVE      R0 R2        ; R0 := R2
1183 [-]: MOVE      R0 R3        ; R0 := R3
1184 [-]: MOVE      R0 R22       ; R0 := R22
1185 [-]: MOVE      R0 R105      ; R0 := R105
1186 [-]: MOVE      R0 R56       ; R0 := R56
1187 [-]: MOVE      R0 R98       ; R0 := R98
1188 [-]: MOVE      R0 R111      ; R0 := R111
1189 [-]: MOVE      R0 R112      ; R0 := R112
1190 [-]: MOVE      R0 R44       ; R0 := R44
1191 [-]: MOVE      R0 R18       ; R0 := R18
1192 [-]: MOVE      R0 R19       ; R0 := R19
1193 [-]: MOVE      R0 R15       ; R0 := R15
1194 [-]: MOVE      R0 R132      ; R0 := R132
1195 [-]: MOVE      R0 R29       ; R0 := R29
1196 [-]: MOVE      R0 R23       ; R0 := R23
1197 [-]: MOVE      R0 R43       ; R0 := R43
1198 [-]: MOVE      R0 R232      ; R0 := R232
1199 [-]: MOVE      R0 R219      ; R0 := R219
1200 [-]: MOVE      R0 R73       ; R0 := R73
1201 [-]: MOVE      R0 R25       ; R0 := R25
1202 [-]: MOVE      R0 R117      ; R0 := R117
1203 [-]: MOVE      R0 R118      ; R0 := R118
1204 [-]: MOVE      R0 R103      ; R0 := R103
1205 [-]: MOVE      R0 R200      ; R0 := R200
1206 [-]: MOVE      R0 R223      ; R0 := R223
1207 [-]: MOVE      R0 R220      ; R0 := R220
1208 [-]: MOVE      R0 R229      ; R0 := R229
1209 [-]: MOVE      R0 R231      ; R0 := R231
1210 [-]: MOVE      R0 R151      ; R0 := R151
1211 [-]: MOVE      R0 R69       ; R0 := R69
1212 [-]: MOVE      R0 R52       ; R0 := R52
1213 [-]: MOVE      R0 R108      ; R0 := R108
1214 [-]: MOVE      R0 R88       ; R0 := R88
1215 [-]: MOVE      R0 R87       ; R0 := R87
1216 [-]: MOVE      R0 R188      ; R0 := R188
1217 [-]: MOVE      R0 R109      ; R0 := R109
1218 [-]: MOVE      R0 R110      ; R0 := R110
1219 [-]: MOVE      R0 R74       ; R0 := R74
1220 [-]: MOVE      R0 R79       ; R0 := R79
1221 [-]: MOVE      R0 R78       ; R0 := R78
1222 [-]: MOVE      R0 R46       ; R0 := R46
1223 [-]: MOVE      R0 R80       ; R0 := R80
1224 [-]: MOVE      R0 R84       ; R0 := R84
1225 [-]: MOVE      R0 R99       ; R0 := R99
1226 [-]: MOVE      R0 R48       ; R0 := R48
1227 [-]: MOVE      R0 R128      ; R0 := R128
1228 [-]: MOVE      R0 R233      ; R0 := R233
1229 [-]: MOVE      R0 R66       ; R0 := R66
1230 [-]: MOVE      R0 R164      ; R0 := R164
1231 [-]: SETGLOBAL R234 K244    ; Update := R234
1232 [-]: SETGLOBAL R234 K245    ; 0x8C7099E9 := R234
1233 [-]: CLOSURE   R234 129     ; R234 := closure(Function #130)
1234 [-]: MOVE      R0 R86       ; R0 := R86
1235 [-]: MOVE      R0 R102      ; R0 := R102
1236 [-]: CLOSURE   R235 130     ; R235 := closure(Function #131)
1237 [-]: MOVE      R0 R234      ; R0 := R234
1238 [-]: MOVE      R0 R98       ; R0 := R98
1239 [-]: CLOSURE   R120 131     ; R120 := closure(Function #132)
1240 [-]: MOVE      R0 R29       ; R0 := R29
1241 [-]: MOVE      R0 R15       ; R0 := R15
1242 [-]: MOVE      R0 R18       ; R0 := R18
1243 [-]: MOVE      R0 R95       ; R0 := R95
1244 [-]: MOVE      R0 R94       ; R0 := R94
1245 [-]: MOVE      R0 R153      ; R0 := R153
1246 [-]: MOVE      R0 R35       ; R0 := R35
1247 [-]: MOVE      R0 R28       ; R0 := R28
1248 [-]: MOVE      R0 R98       ; R0 := R98
1249 [-]: MOVE      R0 R234      ; R0 := R234
1250 [-]: MOVE      R0 R32       ; R0 := R32
1251 [-]: MOVE      R0 R108      ; R0 := R108
1252 [-]: MOVE      R0 R74       ; R0 := R74
1253 [-]: MOVE      R0 R114      ; R0 := R114
1254 [-]: MOVE      R0 R235      ; R0 := R235
1255 [-]: CLOSURE   R236 132     ; R236 := closure(Function #133)
1256 [-]: MOVE      R0 R120      ; R0 := R120
1257 [-]: SETGLOBAL R236 K246    ; TransitionOut := R236
1258 [-]: SETGLOBAL R236 K247    ; 0x7097B1B4 := R236
1259 [-]: CLOSURE   R236 133     ; R236 := closure(Function #134)
1260 [-]: CLOSURE   R237 134     ; R237 := closure(Function #135)
1261 [-]: CLOSURE   R238 135     ; R238 := closure(Function #136)
1262 [-]: CLOSURE   R239 136     ; R239 := closure(Function #137)
1263 [-]: MOVE      R0 R29       ; R0 := R29
1264 [-]: MOVE      R0 R131      ; R0 := R131
1265 [-]: MOVE      R0 R98       ; R0 := R98
1266 [-]: MOVE      R0 R55       ; R0 := R55
1267 [-]: MOVE      R0 R90       ; R0 := R90
1268 [-]: MOVE      R0 R32       ; R0 := R32
1269 [-]: MOVE      R0 R95       ; R0 := R95
1270 [-]: MOVE      R0 R94       ; R0 := R94
1271 [-]: MOVE      R0 R96       ; R0 := R96
1272 [-]: SETGLOBAL R239 K248    ; onKeyUp_MENU_CLICK := R239
1273 [-]: SETGLOBAL R239 K249    ; 0x367BCD7E := R239
1274 [-]: CLOSURE   R119 137     ; R119 := closure(Function #138)
1275 [-]: CLOSURE   R239 138     ; R239 := closure(Function #139)
1276 [-]: MOVE      R0 R2        ; R0 := R2
1277 [-]: MOVE      R0 R45       ; R0 := R45
1278 [-]: CLOSURE   R240 139     ; R240 := closure(Function #140)
1279 [-]: MOVE      R0 R41       ; R0 := R41
1280 [-]: MOVE      R0 R177      ; R0 := R177
1281 [-]: MOVE      R0 R42       ; R0 := R42
1282 [-]: CLOSURE   R118 140     ; R118 := closure(Function #141)
1283 [-]: MOVE      R0 R41       ; R0 := R41
1284 [-]: MOVE      R0 R240      ; R0 := R240
1285 [-]: MOVE      R0 R119      ; R0 := R119
1286 [-]: MOVE      R0 R32       ; R0 := R32
1287 [-]: MOVE      R0 R35       ; R0 := R35
1288 [-]: MOVE      R0 R36       ; R0 := R36
1289 [-]: MOVE      R0 R80       ; R0 := R80
1290 [-]: MOVE      R0 R98       ; R0 := R98
1291 [-]: MOVE      R0 R84       ; R0 := R84
1292 [-]: MOVE      R0 R164      ; R0 := R164
1293 [-]: MOVE      R0 R112      ; R0 := R112
1294 [-]: MOVE      R0 R1        ; R0 := R1
1295 [-]: MOVE      R0 R104      ; R0 := R104
1296 [-]: CLOSURE   R117 141     ; R117 := closure(Function #142)
1297 [-]: MOVE      R0 R41       ; R0 := R41
1298 [-]: MOVE      R0 R240      ; R0 := R240
1299 [-]: MOVE      R0 R80       ; R0 := R80
1300 [-]: MOVE      R0 R98       ; R0 := R98
1301 [-]: MOVE      R0 R84       ; R0 := R84
1302 [-]: MOVE      R0 R119      ; R0 := R119
1303 [-]: MOVE      R0 R32       ; R0 := R32
1304 [-]: MOVE      R0 R35       ; R0 := R35
1305 [-]: MOVE      R0 R33       ; R0 := R33
1306 [-]: MOVE      R0 R34       ; R0 := R34
1307 [-]: MOVE      R0 R29       ; R0 := R29
1308 [-]: MOVE      R0 R112      ; R0 := R112
1309 [-]: CLOSURE   R241 142     ; R241 := closure(Function #143)
1310 [-]: MOVE      R0 R48       ; R0 := R48
1311 [-]: MOVE      R0 R99       ; R0 := R99
1312 [-]: MOVE      R0 R9        ; R0 := R9
1313 [-]: MOVE      R0 R98       ; R0 := R98
1314 [-]: MOVE      R0 R27       ; R0 := R27
1315 [-]: MOVE      R0 R43       ; R0 := R43
1316 [-]: MOVE      R0 R89       ; R0 := R89
1317 [-]: MOVE      R0 R86       ; R0 := R86
1318 [-]: MOVE      R0 R87       ; R0 := R87
1319 [-]: CLOSURE   R242 143     ; R242 := closure(Function #144)
1320 [-]: MOVE      R0 R129      ; R0 := R129
1321 [-]: MOVE      R0 R43       ; R0 := R43
1322 [-]: SETGLOBAL R242 K250    ; OnEmblemReady := R242
1323 [-]: SETGLOBAL R242 K251    ; 0x855C37AA := R242
1324 [-]: CLOSURE   R242 144     ; R242 := closure(Function #145)
1325 [-]: MOVE      R0 R46       ; R0 := R46
1326 [-]: MOVE      R0 R47       ; R0 := R47
1327 [-]: MOVE      R0 R43       ; R0 := R43
1328 [-]: MOVE      R0 R167      ; R0 := R167
1329 [-]: MOVE      R0 R22       ; R0 := R22
1330 [-]: MOVE      R0 R44       ; R0 := R44
1331 [-]: MOVE      R0 R95       ; R0 := R95
1332 [-]: MOVE      R0 R94       ; R0 := R94
1333 [-]: MOVE      R0 R149      ; R0 := R149
1334 [-]: MOVE      R0 R98       ; R0 := R98
1335 [-]: MOVE      R0 R232      ; R0 := R232
1336 [-]: MOVE      R0 R81       ; R0 := R81
1337 [-]: MOVE      R0 R71       ; R0 := R71
1338 [-]: MOVE      R0 R1        ; R0 := R1
1339 [-]: MOVE      R0 R99       ; R0 := R99
1340 [-]: MOVE      R0 R23       ; R0 := R23
1341 [-]: MOVE      R0 R86       ; R0 := R86
1342 [-]: MOVE      R0 R241      ; R0 := R241
1343 [-]: MOVE      R0 R60       ; R0 := R60
1344 [-]: MOVE      R0 R129      ; R0 := R129
1345 [-]: MOVE      R0 R14       ; R0 := R14
1346 [-]: MOVE      R0 R9        ; R0 := R9
1347 [-]: MOVE      R0 R67       ; R0 := R67
1348 [-]: MOVE      R0 R88       ; R0 := R88
1349 [-]: CLOSURE   R125 145     ; R125 := closure(Function #146)
1350 [-]: MOVE      R0 R46       ; R0 := R46
1351 [-]: MOVE      R0 R47       ; R0 := R47
1352 [-]: MOVE      R0 R43       ; R0 := R43
1353 [-]: MOVE      R0 R44       ; R0 := R44
1354 [-]: MOVE      R0 R22       ; R0 := R22
1355 [-]: MOVE      R0 R67       ; R0 := R67
1356 [-]: MOVE      R0 R167      ; R0 := R167
1357 [-]: MOVE      R0 R88       ; R0 := R88
1358 [-]: MOVE      R0 R16       ; R0 := R16
1359 [-]: CLOSURE   R243 146     ; R243 := closure(Function #147)
1360 [-]: MOVE      R0 R29       ; R0 := R29
1361 [-]: MOVE      R0 R15       ; R0 := R15
1362 [-]: MOVE      R0 R86       ; R0 := R86
1363 [-]: MOVE      R0 R43       ; R0 := R43
1364 [-]: MOVE      R0 R2        ; R0 := R2
1365 [-]: MOVE      R0 R98       ; R0 := R98
1366 [-]: MOVE      R0 R95       ; R0 := R95
1367 [-]: MOVE      R0 R94       ; R0 := R94
1368 [-]: MOVE      R0 R96       ; R0 := R96
1369 [-]: MOVE      R0 R221      ; R0 := R221
1370 [-]: MOVE      R0 R22       ; R0 := R22
1371 [-]: MOVE      R0 R131      ; R0 := R131
1372 [-]: MOVE      R0 R92       ; R0 := R92
1373 [-]: MOVE      R0 R150      ; R0 := R150
1374 [-]: MOVE      R0 R32       ; R0 := R32
1375 [-]: MOVE      R0 R90       ; R0 := R90
1376 [-]: MOVE      R0 R8        ; R0 := R8
1377 [-]: MOVE      R0 R91       ; R0 := R91
1378 [-]: MOVE      R0 R238      ; R0 := R238
1379 [-]: MOVE      R0 R59       ; R0 := R59
1380 [-]: MOVE      R0 R55       ; R0 := R55
1381 [-]: MOVE      R0 R93       ; R0 := R93
1382 [-]: MOVE      R0 R117      ; R0 := R117
1383 [-]: MOVE      R0 R97       ; R0 := R97
1384 [-]: MOVE      R0 R219      ; R0 := R219
1385 [-]: MOVE      R0 R73       ; R0 := R73
1386 [-]: MOVE      R0 R118      ; R0 := R118
1387 [-]: MOVE      R0 R123      ; R0 := R123
1388 [-]: SETGLOBAL R243 K252    ; onKeyDown_MENU_CLICK := R243
1389 [-]: SETGLOBAL R243 K253    ; 0xE40A2FCA := R243
1390 [-]: CLOSURE   R243 147     ; R243 := closure(Function #148)
1391 [-]: CLOSURE   R244 148     ; R244 := closure(Function #149)
1392 [-]: CLOSURE   R245 149     ; R245 := closure(Function #150)
1393 [-]: MOVE      R0 R29       ; R0 := R29
1394 [-]: MOVE      R0 R90       ; R0 := R90
1395 [-]: MOVE      R0 R32       ; R0 := R32
1396 [-]: SETGLOBAL R245 K254    ; onKeyUp_MENU_RIGHT_CLICK := R245
1397 [-]: SETGLOBAL R245 K255    ; 0x3A763170 := R245
1398 [-]: CLOSURE   R245 150     ; R245 := closure(Function #151)
1399 [-]: MOVE      R0 R29       ; R0 := R29
1400 [-]: MOVE      R0 R15       ; R0 := R15
1401 [-]: MOVE      R0 R90       ; R0 := R90
1402 [-]: MOVE      R0 R32       ; R0 := R32
1403 [-]: MOVE      R0 R35       ; R0 := R35
1404 [-]: MOVE      R0 R28       ; R0 := R28
1405 [-]: MOVE      R0 R80       ; R0 := R80
1406 [-]: MOVE      R0 R98       ; R0 := R98
1407 [-]: MOVE      R0 R84       ; R0 := R84
1408 [-]: MOVE      R0 R41       ; R0 := R41
1409 [-]: MOVE      R0 R42       ; R0 := R42
1410 [-]: MOVE      R0 R125      ; R0 := R125
1411 [-]: MOVE      R0 R112      ; R0 := R112
1412 [-]: MOVE      R0 R113      ; R0 := R113
1413 [-]: MOVE      R0 R164      ; R0 := R164
1414 [-]: SETGLOBAL R245 K256    ; onKeyDown_MENU_RIGHT_CLICK := R245
1415 [-]: SETGLOBAL R245 K257    ; 0xA930FBF := R245
1416 [-]: CLOSURE   R245 151     ; R245 := closure(Function #152)
1417 [-]: SETGLOBAL R245 K258    ; onKeyUp_NEXT_MENU := R245
1418 [-]: SETGLOBAL R245 K259    ; 0x9D432BFE := R245
1419 [-]: CLOSURE   R245 152     ; R245 := closure(Function #153)
1420 [-]: SETGLOBAL R245 K260    ; onKeyDown_NEXT_MENU := R245
1421 [-]: SETGLOBAL R245 K261    ; 0xE25DD8CF := R245
1422 [-]: CLOSURE   R245 153     ; R245 := closure(Function #154)
1423 [-]: MOVE      R0 R29       ; R0 := R29
1424 [-]: MOVE      R0 R28       ; R0 := R28
1425 [-]: MOVE      R0 R35       ; R0 := R35
1426 [-]: MOVE      R0 R95       ; R0 := R95
1427 [-]: MOVE      R0 R94       ; R0 := R94
1428 [-]: MOVE      R0 R43       ; R0 := R43
1429 [-]: MOVE      R0 R41       ; R0 := R41
1430 [-]: MOVE      R0 R133      ; R0 := R133
1431 [-]: MOVE      R0 R98       ; R0 := R98
1432 [-]: MOVE      R0 R118      ; R0 := R118
1433 [-]: MOVE      R0 R120      ; R0 := R120
1434 [-]: SETGLOBAL R245 K262    ; onKeyDown_MENU_MOUSE_Z := R245
1435 [-]: SETGLOBAL R245 K263    ; 0x56EAD3A9 := R245
1436 [-]: CLOSURE   R245 154     ; R245 := closure(Function #155)
1437 [-]: MOVE      R0 R93       ; R0 := R93
1438 [-]: MOVE      R0 R98       ; R0 := R98
1439 [-]: MOVE      R0 R92       ; R0 := R92
1440 [-]: MOVE      R0 R95       ; R0 := R95
1441 [-]: MOVE      R0 R94       ; R0 := R94
1442 [-]: MOVE      R0 R206      ; R0 := R206
1443 [-]: MOVE      R0 R144      ; R0 := R144
1444 [-]: MOVE      R0 R153      ; R0 := R153
1445 [-]: MOVE      R0 R1        ; R0 := R1
1446 [-]: MOVE      R0 R96       ; R0 := R96
1447 [-]: MOVE      R0 R63       ; R0 := R63
1448 [-]: MOVE      R0 R6        ; R0 := R6
1449 [-]: MOVE      R0 R150      ; R0 := R150
1450 [-]: MOVE      R0 R195      ; R0 := R195
1451 [-]: MOVE      R0 R2        ; R0 := R2
1452 [-]: MOVE      R0 R118      ; R0 := R118
1453 [-]: MOVE      R0 R151      ; R0 := R151
1454 [-]: MOVE      R0 R71       ; R0 := R71
1455 [-]: MOVE      R0 R15       ; R0 := R15
1456 [-]: SETGLOBAL R245 K264    ; onRawInputEvent := R245
1457 [-]: SETGLOBAL R245 K265    ; 0x11563913 := R245
1458 [-]: CLOSURE   R245 155     ; R245 := closure(Function #156)
1459 [-]: MOVE      R0 R242      ; R0 := R242
1460 [-]: SETGLOBAL R245 K266    ; NodeRollOver := R245
1461 [-]: SETGLOBAL R245 K267    ; 0xFA36E361 := R245
1462 [-]: CLOSURE   R245 156     ; R245 := closure(Function #157)
1463 [-]: MOVE      R0 R125      ; R0 := R125
1464 [-]: SETGLOBAL R245 K268    ; NodeRollOut := R245
1465 [-]: SETGLOBAL R245 K269    ; 0xA4A3822 := R245
1466 [-]: CLOSURE   R245 157     ; R245 := closure(Function #158)
1467 [-]: MOVE      R0 R46       ; R0 := R46
1468 [-]: MOVE      R0 R47       ; R0 := R47
1469 [-]: MOVE      R0 R22       ; R0 := R22
1470 [-]: SETGLOBAL R245 K270    ; NodeSelect := R245
1471 [-]: SETGLOBAL R245 K271    ; 0x6FB07481 := R245
1472 [-]: CLOSURE   R245 158     ; R245 := closure(Function #159)
1473 [-]: MOVE      R0 R15       ; R0 := R15
1474 [-]: SETGLOBAL R245 K272    ; WorldStateWindowVisChanged := R245
1475 [-]: SETGLOBAL R245 K273    ; 0x6E3DB508 := R245
1476 [-]: CLOSURE   R245 159     ; R245 := closure(Function #160)
1477 [-]: MOVE      R0 R15       ; R0 := R15
1478 [-]: MOVE      R0 R164      ; R0 := R164
1479 [-]: SETGLOBAL R245 K274    ; WSWDioramaChanged := R245
1480 [-]: SETGLOBAL R245 K275    ; 0xE705EF6F := R245
1481 [-]: CLOSURE   R245 160     ; R245 := closure(Function #161)
1482 [-]: MOVE      R0 R135      ; R0 := R135
1483 [-]: MOVE      R0 R229      ; R0 := R229
1484 [-]: SETGLOBAL R245 K276    ; onViewportSizeChanged := R245
1485 [-]: SETGLOBAL R245 K277    ; 0x3A900427 := R245
1486 [-]: CLOSURE   R245 161     ; R245 := closure(Function #162)
1487 [-]: MOVE      R0 R29       ; R0 := R29
1488 [-]: SETGLOBAL R245 K278    ; IsInputBlocked := R245
1489 [-]: SETGLOBAL R245 K279    ; 0x6FE7E740 := R245
1490 [-]: CLOSURE   R245 162     ; R245 := closure(Function #163)
1491 [-]: MOVE      R0 R86       ; R0 := R86
1492 [-]: SETGLOBAL R245 K280    ; OnTopMenuClosed := R245
1493 [-]: SETGLOBAL R245 K281    ; 0xF531F775 := R245
1494 [-]: CLOSURE   R245 163     ; R245 := closure(Function #164)
1495 [-]: SETGLOBAL R245 K282    ; SetTrigger := R245
1496 [-]: SETGLOBAL R245 K283    ; 0x3F956A34 := R245
1497 [-]: CLOSURE   R245 164     ; R245 := closure(Function #165)
1498 [-]: MOVE      R0 R184      ; R0 := R184
1499 [-]: SETGLOBAL R245 K284    ; OnQuestsChanged := R245
1500 [-]: SETGLOBAL R245 K285    ; 0x406548E4 := R245
1501 [-]: CLOSURE   R245 165     ; R245 := closure(Function #166)
1502 [-]: MOVE      R0 R79       ; R0 := R79
1503 [-]: MOVE      R0 R78       ; R0 := R78
1504 [-]: MOVE      R0 R23       ; R0 := R23
1505 [-]: MOVE      R0 R182      ; R0 := R182
1506 [-]: SETGLOBAL R245 K286    ; OnWorldStateChanged := R245
1507 [-]: SETGLOBAL R245 K287    ; 0xECDF5016 := R245
1508 [-]: GETGLOBAL R245 K288    ; R245 := _T
1509 [-]: LOADK     R246 K289    ; R246 := "RadialSolarMapFade"
1510 [-]: CLOSURE   R247 166     ; R247 := closure(Function #167)
1511 [-]: MOVE      R0 R73       ; R0 := R73
1512 [-]: MOVE      R0 R29       ; R0 := R29
1513 [-]: MOVE      R0 R239      ; R0 := R239
1514 [-]: MOVE      R0 R32       ; R0 := R32
1515 [-]: MOVE      R0 R35       ; R0 := R35
1516 [-]: MOVE      R0 R13       ; R0 := R13
1517 [-]: MOVE      R0 R74       ; R0 := R74
1518 [-]: MOVE      R0 R108      ; R0 := R108
1519 [-]: SETTABLE  R245 R246 R247; R245[R246] := R247
1520 [-]: CLOSURE   R245 167     ; R245 := closure(Function #168)
1521 [-]: MOVE      R0 R164      ; R0 := R164
1522 [-]: SETGLOBAL R245 K290    ; PlayersChanged := R245
1523 [-]: SETGLOBAL R245 K291    ; 0x2C9E65B5 := R245
1524 [-]: CLOSURE   R245 168     ; R245 := closure(Function #169)
1525 [-]: MOVE      R0 R128      ; R0 := R128
1526 [-]: SETGLOBAL R245 K292    ; OnSquadMissionChanged := R245
1527 [-]: SETGLOBAL R245 K293    ; 0xB5CFAF92 := R245
1528 [-]: CLOSURE   R245 169     ; R245 := closure(Function #170)
1529 [-]: MOVE      R0 R30       ; R0 := R30
1530 [-]: MOVE      R0 R98       ; R0 := R98
1531 [-]: SETGLOBAL R245 K294    ; OnLoadoutChanged := R245
1532 [-]: SETGLOBAL R245 K295    ; 0xB7028B7 := R245
1533 [-]: CLOSURE   R245 170     ; R245 := closure(Function #171)
1534 [-]: MOVE      R0 R164      ; R0 := R164
1535 [-]: MOVE      R0 R197      ; R0 := R197
1536 [-]: SETGLOBAL R245 K296    ; OnGamepadTransition := R245
1537 [-]: SETGLOBAL R245 K297    ; 0x98E4F633 := R245
1538 [-]: CLOSURE   R245 171     ; R245 := closure(Function #172)
1539 [-]: SETGLOBAL R245 K298    ; SupportsThemes := R245
1540 [-]: SETGLOBAL R245 K299    ; 0xDBE73B9E := R245
1541 [-]: CLOSURE   R245 172     ; R245 := closure(Function #173)
1542 [-]: MOVE      R0 R86       ; R0 := R86
1543 [-]: SETGLOBAL R245 K300    ; OnMatchMakingModeChanged := R245
1544 [-]: SETGLOBAL R245 K301    ; 0x30A832FF := R245
1545 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 317
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: MOVE      R4 R2        ; R4 := R2
  2 [-]: GETGLOBAL R5 K0        ; R5 := 0xDBA27FAF
  3 [-]: MOVE      R6 R4        ; R6 := R4
  4 [-]: MOVE      R7 R1        ; R7 := R1
  5 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
  6 [-]: EQ        0 R5 K1      ; if R5 ~= 0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETGLOBAL R6 K2        ; R6 := 0x221C9700
  9 [-]: TAILCALL  R6 1 0       ; R6,... := R6()
 10 [-]: RETURN    R6 0         ; return R6,...
 11 [-]: GETGLOBAL R6 K0        ; R6 := 0xDBA27FAF
 12 [-]: MOVE      R7 R4        ; R7 := R4
 13 [-]: MOVE      R8 R0        ; R8 := R0
 14 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 15 [-]: SUB       R6 R3 R6     ; R6 := R3 - R6
 16 [-]: DIV       R6 R6 R5     ; R6 := R6 / R5
 17 [-]: MUL       R7 R1 R6     ; R7 := R1 * R6
 18 [-]: ADD       R7 R0 R7     ; R7 := R0 + R7
 19 [-]: RETURN    R7 2         ; return R7
 20 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 330
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
  4 [-]: LOADK     R3 K3        ; R3 := "_root"
  5 [-]: LOADK     R4 K4        ; R4 := "_xmouse"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
  9 [-]: LOADK     R4 K3        ; R4 := "_root"
 10 [-]: LOADK     R5 K5        ; R5 := "_ymouse"
 11 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 12 [-]: LOADK     R3 K6        ; R3 := 0
 13 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 334
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Region"]
  7 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: GETGLOBAL R1 K3        ; R1 := 0x221C9700
 12 [-]: CALL      R1 1 2       ; R1 := R1()
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 15 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 32
 16 [-]: JMP       32           ; PC := 32
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x69B983D"]
 19 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Node"]
 22 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["clipName"]
 23 [-]: CALL      R2 3 3       ; R2,R3 := R2(R3,R4)
 24 [-]: GETUPVAL  R4 U1        ; R4 := U1
 25 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0x4F6BF2C8"]
 26 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 27 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 28 [-]: SETTABLE  R6 K8 R2     ; R6["x"] := R2
 29 [-]: SETTABLE  R6 K9 R3     ; R6["y"] := R3
 30 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 31 [-]: MOVE      R1 R4        ; R1 := R4
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Region"]
 34 [-]: EQ        1 R4 K1      ; if R4 == nil then PC := 62
 35 [-]: JMP       62           ; PC := 62
 36 [-]: GETGLOBAL R4 K10       ; R4 := 0x400E7765
 37 [-]: GETUPVAL  R5 U0        ; R5 := U0
 38 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Region"]
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["instance"]
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: TEST      R4 1         ; if R4 then PC := 62
 42 [-]: JMP       62           ; PC := 62
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Region"]
 45 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["instance"]
 46 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x6DA72501"]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 49 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0xAF296C52"]
 50 [-]: MOVE      R7 R4        ; R7 := R4
 51 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 52 [-]: GETUPVAL  R6 U1        ; R6 := U1
 53 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0x4F6BF2C8"]
 54 [-]: GETGLOBAL R7 K5        ; R7 := mMovie
 55 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 56 [-]: GETTABLE  R9 R5 K8     ; R9 := R5["x"]
 57 [-]: SETTABLE  R8 K8 R9     ; R8["x"] := R9
 58 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["y"]
 59 [-]: SETTABLE  R8 K9 R9     ; R8["y"] := R9
 60 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 61 [-]: MOVE      R1 R6        ; R1 := R6
 62 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 63 [-]: SETTABLE  R6 K14 K15   ; R6["outer"] := 0.059999998658895
 64 [-]: SETTABLE  R6 K16 K17   ; R6["inner"] := 0.019999999552965
 65 [-]: LOADK     R7 K18       ; R7 := 0
 66 [-]: GETUPVAL  R8 U1        ; R8 := U1
 67 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["0xF81722A2"]
 68 [-]: GETUPVAL  R9 U2        ; R9 := U2
 69 [-]: GETUPVAL  R10 U3       ; R10 := U3
 70 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["ZoomedMultiplier"]
 71 [-]: GETUPVAL  R11 U3       ; R11 := U3
 72 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["SpaceMultiplier"]
 73 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 74 [-]: GETUPVAL  R9 U4        ; R9 := U4
 75 [-]: SETTABLE  R9 K22 R8    ; R9["SpeedMultiplier"] := R8
 76 [-]: TEST      R0 0         ; if not R0 then PC := 122
 77 [-]: JMP       122          ; PC := 122
 78 [-]: GETUPVAL  R9 U1        ; R9 := U1
 79 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["0xF81722A2"]
 80 [-]: GETUPVAL  R10 U2       ; R10 := U2
 81 [-]: GETUPVAL  R11 U3       ; R11 := U3
 82 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["ZoomedHoveringMultiplier"]
 83 [-]: GETUPVAL  R12 U3       ; R12 := U3
 84 [-]: GETTABLE  R12 R12 K24  ; R12 := R12["SpaceHoveringMultiplier"]
 85 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 86 [-]: GETUPVAL  R10 U5       ; R10 := U5
 87 [-]: CALL      R10 1 2      ; R10 := R10()
 88 [-]: GETUPVAL  R11 U1       ; R11 := U1
 89 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0x4F6BF2C8"]
 90 [-]: GETGLOBAL R12 K5       ; R12 := mMovie
 91 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 92 [-]: GETTABLE  R14 R10 K8   ; R14 := R10["x"]
 93 [-]: SETTABLE  R13 K8 R14   ; R13["x"] := R14
 94 [-]: GETTABLE  R14 R10 K9   ; R14 := R10["y"]
 95 [-]: SETTABLE  R13 K9 R14   ; R13["y"] := R14
 96 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 97 [-]: GETGLOBAL R12 K25      ; R12 := math
 98 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["0x8B011038"]
 99 [-]: GETGLOBAL R13 K27      ; R13 := 0xB09F286F
100 [-]: MOVE      R14 R11      ; R14 := R11
101 [-]: MOVE      R15 R1       ; R15 := R1
102 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
103 [-]: GETTABLE  R14 R6 K16   ; R14 := R6["inner"]
104 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
105 [-]: MOVE      R7 R12       ; R7 := R12
106 [-]: GETTABLE  R12 R6 K14   ; R12 := R6["outer"]
107 [-]: LE        0 R7 R12     ; if R7 > R12 then PC := 122
108 [-]: JMP       122          ; PC := 122
109 [-]: GETTABLE  R12 R6 K16   ; R12 := R6["inner"]
110 [-]: SUB       R12 R7 R12   ; R12 := R7 - R12
111 [-]: GETTABLE  R13 R6 K14   ; R13 := R6["outer"]
112 [-]: GETTABLE  R14 R6 K16   ; R14 := R6["inner"]
113 [-]: SUB       R13 R13 R14  ; R13 := R13 - R14
114 [-]: DIV       R12 R12 R13  ; R12 := R12 / R13
115 [-]: GETUPVAL  R13 U4       ; R13 := U4
116 [-]: GETGLOBAL R14 K28      ; R14 := 0x93034B55
117 [-]: MOVE      R15 R8       ; R15 := R8
118 [-]: MOVE      R16 R9       ; R16 := R9
119 [-]: SUB       R17 K29 R12  ; R17 := 1 - R12
120 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
121 [-]: SETTABLE  R13 K22 R14  ; R13["SpeedMultiplier"] := R14
122 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 368
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := gRegion
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x372CB914"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x2EA5AFA"]
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: GETGLOBAL R2 K3        ; R2 := gFlashMgr
  9 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xE8178C52"]
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 13 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 373
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x69B983D"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := "InfoTip"
  5 [-]: CALL      R0 3 3       ; R0,R1 := R0(R1,R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["InitLocationPicYPos"]
  8 [-]: ADD       R2 R1 R2     ; R2 := R1 + R2
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x65939576"]
 11 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 12 [-]: GETUPVAL  R5 U1        ; R5 := U1
 13 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["InitLocationPicHeight"]
 14 [-]: DIV       R5 R5 K6     ; R5 := R5 / 2
 15 [-]: SUB       R5 R2 R5     ; R5 := R2 - R5
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0x9884F87F"]
 19 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 20 [-]: GETUPVAL  R6 U1        ; R6 := U1
 21 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["InitLocationPicHeight"]
 22 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 23 [-]: GETGLOBAL R5 K8        ; R5 := locationPicMaterial
 24 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x94FB2E1A"]
 25 [-]: GETGLOBAL R7 K10       ; R7 := Lotus_Game
 26 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["VISIBILITY_CENTER"]
 27 [-]: MOVE      R8 R3        ; R8 := R3
 28 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 29 [-]: GETGLOBAL R5 K8        ; R5 := locationPicMaterial
 30 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x94FB2E1A"]
 31 [-]: GETGLOBAL R7 K10       ; R7 := Lotus_Game
 32 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["VISIBILITY_SIZE"]
 33 [-]: MOVE      R8 R4        ; R8 := R4
 34 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 35 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 384
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xF3E132E0"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: SETTABLE  R0 K0 R1     ; R0["MaxX"] := R1
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x68998E7D"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: SETTABLE  R0 K3 R1     ; R0["MaxY"] := R1
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: GETGLOBAL R1 K5        ; R1 := math
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x8B011038"]
 16 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 17 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF595D5E1"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETUPVAL  R3 U1        ; R3 := U1
 20 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["MaxX"]
 21 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 22 [-]: SETTABLE  R0 K0 R1     ; R0["MaxX"] := R1
 23 [-]: GETUPVAL  R0 U1        ; R0 := U1
 24 [-]: GETGLOBAL R1 K5        ; R1 := math
 25 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x8B011038"]
 26 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 27 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0xEE069D65"]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["MaxY"]
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: SETTABLE  R0 K3 R1     ; R0["MaxY"] := R1
 33 [-]: GETUPVAL  R0 U1        ; R0 := U1
 34 [-]: GETUPVAL  R1 U2        ; R1 := U2
 35 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xB57E56DF"]
 36 [-]: GETUPVAL  R2 U1        ; R2 := U1
 37 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["MaxX"]
 38 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 39 [-]: GETUPVAL  R4 U1        ; R4 := U1
 40 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["MinX"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 43 [-]: DIV       R2 R2 K13    ; R2 := R2 / 2
 44 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 45 [-]: SETTABLE  R0 K9 R1     ; R0["X"] := R1
 46 [-]: GETUPVAL  R0 U1        ; R0 := U1
 47 [-]: GETUPVAL  R1 U2        ; R1 := U2
 48 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xB57E56DF"]
 49 [-]: GETUPVAL  R2 U1        ; R2 := U1
 50 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MaxY"]
 51 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 52 [-]: GETUPVAL  R4 U1        ; R4 := U1
 53 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["MinY"]
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 56 [-]: DIV       R2 R2 K13    ; R2 := R2 / 2
 57 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 58 [-]: SETTABLE  R0 K14 R1    ; R0["Y"] := R1
 59 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 60 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 61 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 62 [-]: LOADK     R3 K18       ; R3 := "_x"
 63 [-]: GETUPVAL  R4 U1        ; R4 := U1
 64 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["X"]
 65 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 66 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 67 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 68 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 69 [-]: LOADK     R3 K19       ; R3 := "_y"
 70 [-]: GETUPVAL  R4 U1        ; R4 := U1
 71 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["Y"]
 72 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 73 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 74 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 75 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 76 [-]: LOADK     R3 K20       ; R3 := "_visible"
 77 [-]: GETUPVAL  R4 U1        ; R4 := U1
 78 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["IsVisible"]
 79 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 80 [-]: GETUPVAL  R0 U3        ; R0 := U3
 81 [-]: GETUPVAL  R1 U1        ; R1 := U1
 82 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["X"]
 83 [-]: GETUPVAL  R2 U1        ; R2 := U1
 84 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Y"]
 85 [-]: CALL      R0 3 1       ; R0(R1,R2)
 86 [-]: GETGLOBAL R0 K22       ; R0 := 0x400E7765
 87 [-]: GETUPVAL  R1 U4        ; R1 := U4
 88 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 89 [-]: TEST      R0 1         ; if R0 then PC := 100
 90 [-]: JMP       100          ; PC := 100
 91 [-]: GETUPVAL  R0 U4        ; R0 := U4
 92 [-]: SELF      R0 R0 K23    ; R1 := R0; R0 := R0["0x8C7099E9"]
 93 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 94 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF595D5E1"]
 95 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 96 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 97 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xEE069D65"]
 98 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 99 [-]: CALL      R0 0 1       ; R0(R1,...)
100 [-]: GETUPVAL  R0 U5        ; R0 := U5
101 [-]: GETUPVAL  R1 U1        ; R1 := U1
102 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["MaxX"]
103 [-]: GETUPVAL  R2 U1        ; R2 := U1
104 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MaxY"]
105 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
106 [-]: SETTABLE  R0 K24 R1    ; R0["AspectRatio"] := R1
107 [-]: GETUPVAL  R0 U2        ; R0 := U2
108 [-]: GETTABLE  R0 R0 K25    ; R0 := R0["0xEA569929"]
109 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
110 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
111 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
112 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
113 [-]: LOADK     R4 K26       ; R4 := "InfluenceMap"
114 [-]: LOADK     R5 K27       ; R5 := "_width"
115 [-]: MOVE      R6 R0        ; R6 := R0
116 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
117 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
118 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
119 [-]: LOADK     R4 K26       ; R4 := "InfluenceMap"
120 [-]: LOADK     R5 K28       ; R5 := "_height"
121 [-]: MOVE      R6 R1        ; R6 := R1
122 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
123 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 412
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["SquadOverlay"]
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x458F27A9"]
 10 [-]: LOADK     R2 K4        ; R2 := "OpenInvite"
 11 [-]: LOADK     R3 K5        ; R3 := ""
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 418
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 422
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 18
  4 [-]: JMP       18           ; PC := 18
  5 [-]: GETGLOBAL R0 K2        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["ForceAggregateSessions"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: TEST      R0 1         ; if R0 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: GETGLOBAL R0 K2        ; R0 := _T
 15 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["0xEAD7F082"]
 16 [-]: CALL      R0 1 1       ; R0()
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["0x930EC5CF"]
 20 [-]: LOADK     R1 K6        ; R1 := "SwitchLoadout"
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0["0xDA085F65"]
 28 [-]: CALL      R1 2 1       ; R1(R2)
 29 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 437
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x1B252E3C"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xBFFBFE5E"]
  5 [-]: GETUPVAL  R3 U1        ; R3 := U1
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: TEST      R2 1         ; if R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K2        ; R2 := table
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xE6450C9D"]
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R2 3 1       ; R2(R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 444
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x63B09107
  3 [-]: GETGLOBAL R3 K1        ; R3 := decorationLoader
  4 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R7 K2        ; R7 := table
  7 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["0xE6450C9D"]
  8 [-]: MOVE      R8 R1        ; R8 := R1
  9 [-]: SELF      R9 R6 K4     ; R10 := R6; R9 := R6["0x1B252E3C"]
 10 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 11 [-]: CALL      R7 0 1       ; R7(R8,...)
 12 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 6; R4 := R5 end
 13 [-]: JMP       6            ; PC := 6
 14 [-]: LOADK     R7 K5        ; R7 := 1
 15 [-]: GETUPVAL  R8 U0        ; R8 := U0
 16 [-]: LEN       R8 R8        ; R8 := # R8
 17 [-]: LOADK     R9 K5        ; R9 := 1
 18 [-]: FORPREP   R7 34        ; R7 -= R9; PC := 34
 19 [-]: GETUPVAL  R11 U1       ; R11 := U1
 20 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["0xBFFBFE5E"]
 21 [-]: MOVE      R12 R1       ; R12 := R1
 22 [-]: GETUPVAL  R13 U0       ; R13 := U0
 23 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
 24 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 25 [-]: TEST      R11 1        ; if R11 then PC := 34
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R11 K7       ; R11 := 0x93B1256B
 28 [-]: LOADK     R12 K8       ; R12 := "ERROR: Not preloading "
 29 [-]: GETUPVAL  R13 U0       ; R13 := U0
 30 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
 31 [-]: LOADK     R14 K9       ; R14 := " Add it to the decorationLoader list in MapRedux.lua"
 32 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
 33 [-]: CALL      R11 2 1      ; R11(R12)
 34 [-]: FORLOOP   R7 19        ; R7 += R9; if R7 <= R8 then begin PC := 19; R10 := R7 end
 35 [-]: LOADK     R11 K5       ; R11 := 1
 36 [-]: LEN       R12 R1       ; R12 := # R1
 37 [-]: LOADK     R13 K5       ; R13 := 1
 38 [-]: FORPREP   R11 52       ; R11 -= R13; PC := 52
 39 [-]: GETUPVAL  R15 U1       ; R15 := U1
 40 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["0xBFFBFE5E"]
 41 [-]: GETUPVAL  R16 U0       ; R16 := U0
 42 [-]: GETTABLE  R17 R1 R14   ; R17 := R1[R14]
 43 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 44 [-]: TEST      R15 1        ; if R15 then PC := 52
 45 [-]: JMP       52           ; PC := 52
 46 [-]: GETGLOBAL R15 K7       ; R15 := 0x93B1256B
 47 [-]: LOADK     R16 K10      ; R16 := "ERROR: Preloading unused deco "
 48 [-]: GETTABLE  R17 R1 R14   ; R17 := R1[R14]
 49 [-]: LOADK     R18 K11      ; R18 := " Remove it from decorationLoader list in MapRedux.lua"
 50 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
 51 [-]: CALL      R15 2 1      ; R15(R16)
 52 [-]: FORLOOP   R11 39       ; R11 += R13; if R11 <= R12 then begin PC := 39; R14 := R11 end
 53 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 463
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x221C9700
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["x"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["y"]
  4 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["z"]
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: LOADK     R2 K4        ; R2 := 1
  7 [-]: LOADK     R3 K4        ; R3 := 1
  8 [-]: LOADK     R4 K4        ; R4 := 1
  9 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["x"]
 10 [-]: MUL       R5 R5 R4     ; R5 := R5 * R4
 11 [-]: MUL       R5 R5 R2     ; R5 := R5 * R2
 12 [-]: SETTABLE  R1 K1 R5     ; R1["x"] := R5
 13 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["y"]
 14 [-]: MUL       R5 R5 R2     ; R5 := R5 * R2
 15 [-]: SETTABLE  R1 K2 R5     ; R1["y"] := R5
 16 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["z"]
 17 [-]: MUL       R5 R5 R3     ; R5 := R5 * R3
 18 [-]: SETTABLE  R1 K3 R5     ; R1["z"] := R5
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 478
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mapFogTexture
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: LOADK     R0 K2        ; R0 := 0
  8 [-]: LOADK     R1 K3        ; R1 := 63
  9 [-]: LOADK     R2 K4        ; R2 := 1
 10 [-]: FORPREP   R0 25        ; R0 -= R2; PC := 25
 11 [-]: LOADK     R4 K2        ; R4 := 0
 12 [-]: LOADK     R5 K3        ; R5 := 63
 13 [-]: LOADK     R6 K4        ; R6 := 1
 14 [-]: FORPREP   R4 24        ; R4 -= R6; PC := 24
 15 [-]: LOADK     R8 K5        ; R8 := 255
 16 [-]: GETGLOBAL R9 K1        ; R9 := mapFogTexture
 17 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9["0x9EC00F7F"]
 18 [-]: MOVE      R11 R8       ; R11 := R8
 19 [-]: MOVE      R12 R3       ; R12 := R3
 20 [-]: MOVE      R13 R7       ; R13 := R7
 21 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 22 [-]: GETGLOBAL R9 K7        ; R9 := 0x1BF588C6
 23 [-]: CALL      R9 1 1       ; R9()
 24 [-]: FORLOOP   R4 15        ; R4 += R6; if R4 <= R5 then begin PC := 15; R7 := R4 end
 25 [-]: FORLOOP   R0 11        ; R0 += R2; if R0 <= R1 then begin PC := 11; R3 := R0 end
 26 [-]: GETGLOBAL R9 K8        ; R9 := gFlashMgr
 27 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0x2E4D89AB"]
 28 [-]: GETGLOBAL R11 K1       ; R11 := mapFogTexture
 29 [-]: CALL      R9 3 1       ; R9(R10,R11)
 30 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 495
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["guildId"]
  3 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 116
  4 [-]: JMP       116          ; PC := 116
  5 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["locName"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["EDIT_NODES"]
  9 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["EDIT_EDGES"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 50
 15 [-]: JMP       50           ; PC := 50
 16 [-]: MOVE      R2 R1        ; R2 := R1
 17 [-]: LOADK     R3 K6        ; R3 := "\r["
 18 [-]: GETGLOBAL R4 K7        ; R4 := 0x9FAED6BC
 19 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["name"]
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: LOADK     R5 K9        ; R5 := "]"
 22 [-]: CONCAT    R1 R2 R5     ; R1 := R2 .. R3 .. R4 .. R5
 23 [-]: GETGLOBAL R2 K10       ; R2 := 0x400E7765
 24 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["radialSector"]
 25 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mission"]
 26 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["levelOverride"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 107
 29 [-]: JMP       107          ; PC := 107
 30 [-]: GETUPVAL  R2 U0        ; R2 := U0
 31 [-]: GETUPVAL  R3 U1        ; R3 := U1
 32 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["EDIT_EDGES"]
 33 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 107
 34 [-]: JMP       107          ; PC := 107
 35 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["radialSector"]
 36 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mission"]
 37 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["levelOverride"]
 38 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x1B252E3C"]
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: GETGLOBAL R3 K15       ; R3 := string
 41 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["0xAF449107"]
 42 [-]: MOVE      R4 R2        ; R4 := R2
 43 [-]: LOADK     R5 K17       ; R5 := ".*/(.*)"
 44 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 45 [-]: MOVE      R4 R1        ; R4 := R1
 46 [-]: LOADK     R5 K18       ; R5 := "\r"
 47 [-]: MOVE      R6 R3        ; R6 := R3
 48 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
 49 [-]: JMP       107          ; PC := 107
 50 [-]: GETUPVAL  R4 U0        ; R4 := U0
 51 [-]: GETUPVAL  R5 U1        ; R5 := U1
 52 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["EDIT_NODE_DECOS"]
 53 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 107
 54 [-]: JMP       107          ; PC := 107
 55 [-]: GETTABLE  R4 R0 K20    ; R4 := R0["deco"]
 56 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 107
 57 [-]: JMP       107          ; PC := 107
 58 [-]: GETUPVAL  R4 U2        ; R4 := U2
 59 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["mEditingRotation"]
 60 [-]: TEST      R4 1         ; if R4 then PC := 70
 61 [-]: JMP       70           ; PC := 70
 62 [-]: GETUPVAL  R4 U3        ; R4 := U3
 63 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["mShiftDown"]
 64 [-]: TEST      R4 1         ; if R4 then PC := 70
 65 [-]: JMP       70           ; PC := 70
 66 [-]: GETUPVAL  R4 U3        ; R4 := U3
 67 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["mControlDown"]
 68 [-]: TEST      R4 0         ; if not R4 then PC := 84
 69 [-]: JMP       84           ; PC := 84
 70 [-]: MOVE      R4 R1        ; R4 := R1
 71 [-]: LOADK     R5 K18       ; R5 := "\r"
 72 [-]: GETUPVAL  R6 U2        ; R6 := U2
 73 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["mRotationAxis"]
 74 [-]: LOADK     R7 K25       ; R7 := "="
 75 [-]: GETGLOBAL R8 K7        ; R8 := 0x9FAED6BC
 76 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["deco"]
 77 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["mRotation"]
 78 [-]: GETUPVAL  R10 U2       ; R10 := U2
 79 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["mRotationAxis"]
 80 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 81 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 82 [-]: CONCAT    R1 R4 R8     ; R1 := R4 .. R5 .. R6 .. R7 .. R8
 83 [-]: JMP       107          ; PC := 107
 84 [-]: GETUPVAL  R4 U2        ; R4 := U2
 85 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["mEditingScale"]
 86 [-]: TEST      R4 1         ; if R4 then PC := 92
 87 [-]: JMP       92           ; PC := 92
 88 [-]: GETUPVAL  R4 U3        ; R4 := U3
 89 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["mAltDown"]
 90 [-]: TEST      R4 0         ; if not R4 then PC := 100
 91 [-]: JMP       100          ; PC := 100
 92 [-]: MOVE      R4 R1        ; R4 := R1
 93 [-]: LOADK     R5 K29       ; R5 := "\rScale="
 94 [-]: GETGLOBAL R6 K7        ; R6 := 0x9FAED6BC
 95 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["deco"]
 96 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["mScale"]
 97 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 98 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
 99 [-]: JMP       107          ; PC := 107
100 [-]: MOVE      R4 R1        ; R4 := R1
101 [-]: LOADK     R5 K18       ; R5 := "\r"
102 [-]: GETGLOBAL R6 K7        ; R6 := 0x9FAED6BC
103 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["deco"]
104 [-]: GETTABLE  R7 R7 K31    ; R7 := R7["mOffset"]
105 [-]: CALL      R6 2 2       ; R6 := R6(R7)
106 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
107 [-]: GETTABLE  R4 R0 K32    ; R4 := R0["locked"]
108 [-]: TEST      R4 0         ; if not R4 then PC := 116
109 [-]: JMP       116          ; PC := 116
110 [-]: GETTABLE  R4 R0 K33    ; R4 := R0["locationEnabled"]
111 [-]: TEST      R4 0         ; if not R4 then PC := 116
112 [-]: JMP       116          ; PC := 116
113 [-]: GETUPVAL  R4 U4        ; R4 := U4
114 [-]: MOVE      R5 R1        ; R5 := R1
115 [-]: CONCAT    R1 R4 R5     ; R1 := R4 .. R5
116 [-]: GETGLOBAL R4 K34       ; R4 := mMovie
117 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4["0xD6A79FE9"]
118 [-]: GETTABLE  R6 R0 K36    ; R6 := R0["clipName"]
119 [-]: LOADK     R7 K37       ; R7 := ".Name.Label"
120 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
121 [-]: LOADK     R7 K38       ; R7 := "text"
122 [-]: MOVE      R8 R1        ; R8 := R1
123 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
124 [-]: GETGLOBAL R4 K39       ; R4 := 0xF595ADDE
125 [-]: GETGLOBAL R5 K34       ; R5 := mMovie
126 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x6B7B470B"]
127 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["clipName"]
128 [-]: LOADK     R8 K37       ; R8 := ".Name.Label"
129 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
130 [-]: LOADK     R8 K41       ; R8 := "textWidth"
131 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
132 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
133 [-]: TEST      R4 0         ; if not R4 then PC := 142
134 [-]: JMP       142          ; PC := 142
135 [-]: GETGLOBAL R5 K34       ; R5 := mMovie
136 [-]: SELF      R5 R5 K42    ; R6 := R5; R5 := R5["0x880196A7"]
137 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["clipName"]
138 [-]: LOADK     R8 K43       ; R8 := "Name.Bg"
139 [-]: LOADK     R9 K44       ; R9 := "_width"
140 [-]: ADD       R10 R4 K45   ; R10 := R4 + 7
141 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
142 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 530
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 12        ; R0 -= R2; PC := 12
  6 [-]: GETGLOBAL R4 K1        ; R4 := 0x1BF588C6
  7 [-]: CALL      R4 1 1       ; R4()
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 11 [-]: CALL      R4 2 1       ; R4(R5)
 12 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 13 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 539
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Playing"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: LOADK     R2 K2        ; R2 := "InfoTip.NodeTransmission"
 12 [-]: MOVE      R2 R1        ; R2 := R1
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SETTABLE  R2 K1 K3     ; R2["Playing"] := "0x1"
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: SETTABLE  R2 K4 R0     ; R2["Node"] := R0
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: SETTABLE  R2 K5 R1     ; R2["Transmission"] := R1
 19 [-]: GETGLOBAL R2 K6        ; R2 := gFlashMgr
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x616DD092"]
 21 [-]: GETGLOBAL R4 K8        ; R4 := _G
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["UIMovie_TransmissionMovie"]
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 25 [-]: MOVE      R4 R2        ; R4 := R2
 26 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 27 [-]: TEST      R3 1         ; if R3 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETGLOBAL R3 K10       ; R3 := _T
 30 [-]: SETTABLE  R3 K11 K12   ; R3["curTransmission"] := nil
 31 [-]: GETGLOBAL R3 K10       ; R3 := _T
 32 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 33 [-]: SETTABLE  R3 K13 R4    ; R3["QueuedTransmissions"] := R4
 34 [-]: SELF      R3 R2 K14    ; R4 := R2; R3 := R2["0x458F27A9"]
 35 [-]: LOADK     R5 K15       ; R5 := "PreviewClose"
 36 [-]: LOADK     R6 K16       ; R6 := "true"
 37 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 38 [-]: GETGLOBAL R3 K10       ; R3 := _T
 39 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["QueuedTransmissions"]
 40 [-]: EQ        0 R3 K12     ; if R3 ~= nil then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: GETGLOBAL R3 K10       ; R3 := _T
 43 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 44 [-]: SETTABLE  R3 K13 R4    ; R3["QueuedTransmissions"] := R4
 45 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 46 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 47 [-]: GETUPVAL  R5 U1        ; R5 := U1
 48 [-]: LOADK     R6 K19       ; R6 := "_visible"
 49 [-]: MOVE      R7 R1        ; R7 := R1
 50 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 51 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 52 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 53 [-]: LOADK     R5 K20       ; R5 := "InfoTip.EnemyIcon"
 54 [-]: LOADK     R6 K19       ; R6 := "_visible"
 55 [-]: MOVE      R7 R0        ; R7 := R0
 56 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 57 [-]: GETGLOBAL R3 K10       ; R3 := _T
 58 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
 59 [-]: SETTABLE  R3 K21 R4    ; R3["TransmissionOverrideMovie"] := R4
 60 [-]: GETGLOBAL R3 K10       ; R3 := _T
 61 [-]: GETUPVAL  R4 U1        ; R4 := U1
 62 [-]: LOADK     R5 K23       ; R5 := ".Container"
 63 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 64 [-]: SETTABLE  R3 K22 R4    ; R3["TransmissionOverrideMainClipName"] := R4
 65 [-]: GETGLOBAL R3 K10       ; R3 := _T
 66 [-]: SETTABLE  R3 K24 K12   ; R3["TransmissionOverrideY"] := nil
 67 [-]: GETGLOBAL R3 K10       ; R3 := _T
 68 [-]: SETTABLE  R3 K25 K12   ; R3["TransmissionOverrideX"] := nil
 69 [-]: GETGLOBAL R3 K26       ; R3 := table
 70 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["0xE6450C9D"]
 71 [-]: GETGLOBAL R4 K10       ; R4 := _T
 72 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["QueuedTransmissions"]
 73 [-]: MOVE      R5 R1        ; R5 := R1
 74 [-]: CALL      R3 3 1       ; R3(R4,R5)
 75 [-]: GETGLOBAL R3 K6        ; R3 := gFlashMgr
 76 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3["0x24FF386"]
 77 [-]: GETGLOBAL R5 K8        ; R5 := _G
 78 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["UIMovie_TransmissionMovie"]
 79 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 80 [-]: MOVE      R2 R3        ; R2 := R3
 81 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 82 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3["0x7E1F26D7"]
 83 [-]: GETUPVAL  R5 U1        ; R5 := U1
 84 [-]: LOADK     R6 K30       ; R6 := ".Container.ImageOuter.Image"
 85 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 86 [-]: GETGLOBAL R6 K31       ; R6 := infoTransmissionMaterial
 87 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 88 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 89 [-]: GETUPVAL  R4 U0        ; R4 := U0
 90 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["Projector"]
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: TEST      R3 0         ; if not R3 then PC := 94
 93 [-]: JMP       94           ; PC := 94
 94 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 95 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 96 [-]: GETUPVAL  R5 U1        ; R5 := U1
 97 [-]: LOADK     R6 K33       ; R6 := "_alpha"
 98 [-]: LOADK     R7 K34       ; R7 := 0
 99 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
100 [-]: GETGLOBAL R3 K35       ; R3 := 0x52E17A90
101 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
102 [-]: GETUPVAL  R5 U1        ; R5 := U1
103 [-]: GETGLOBAL R6 K36       ; R6 := UISys
104 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["FlashInstance_EASE_OUT_ELASTIC"]
105 [-]: NEWTABLE  R7 1 0       ; R7 := {}
106 [-]: LOADK     R8 K33       ; R8 := "_alpha"
107 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
108 [-]: NEWTABLE  R8 1 0       ; R8 := {}
109 [-]: LOADK     R9 K38       ; R9 := 75
110 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
111 [-]: LOADK     R9 K39       ; R9 := 1.3500000238419
112 [-]: LOADK     R10 K34      ; R10 := 0
113 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
114 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 598
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x6B7B470B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "_alpha"
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
  8 [-]: LOADK     R3 K4        ; R3 := "InfoTip.EnemyIcon"
  9 [-]: LOADK     R4 K5        ; R4 := "_visible"
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 12 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 14 [-]: LOADK     R3 K4        ; R3 := "InfoTip.EnemyIcon"
 15 [-]: LOADK     R4 K2        ; R4 := "_alpha"
 16 [-]: LOADK     R5 K6        ; R5 := 0
 17 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 18 [-]: CLOSURE   R1 0         ; R1 := closure(Function #17.1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: MOVE      R0 R0        ; R0 := R0
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: GETGLOBAL R2 K7        ; R2 := 0x52E17A90
 23 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETGLOBAL R5 K8        ; R5 := UISys
 26 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["FlashInstance_LINEAR"]
 27 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 28 [-]: MOVE      R7 R1        ; R7 := R1
 29 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 30 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 31 [-]: LOADK     R8 K10       ; R8 := 1
 32 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 33 [-]: LOADK     R8 K11       ; R8 := 0.25
 34 [-]: LOADK     R9 K6        ; R9 := 0
 35 [-]: CLOSURE   R10 1        ; R10 := closure(Function #17.2)
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETUPVAL  R0 U1        ; R0 := U1
 38 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 39 [-]: RETURN    R0 1         ; return 


; Function #17.1:
;
; Name:            
; Defined at line: 605
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: LOADK     R4 K2        ; R4 := "_alpha"
  5 [-]: GETGLOBAL R5 K3        ; R5 := 0x93034B55
  6 [-]: LOADK     R6 K4        ; R6 := 0
  7 [-]: GETUPVAL  R7 U1        ; R7 := U1
  8 [-]: MOVE      R8 R0        ; R8 := R0
  9 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 12 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 13 [-]: LOADK     R3 K5        ; R3 := "InfoTip.EnemyIcon"
 14 [-]: LOADK     R4 K2        ; R4 := "_alpha"
 15 [-]: GETGLOBAL R5 K3        ; R5 := 0x93034B55
 16 [-]: LOADK     R6 K4        ; R6 := 0
 17 [-]: LOADK     R7 K6        ; R7 := 100
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 20 [-]: CALL      R1 0 1       ; R1(R2,...)
 21 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 22 [-]: GETUPVAL  R2 U2        ; R2 := U2
 23 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["Projector"]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 27
 26 [-]: JMP       27           ; PC := 27
 27 [-]: RETURN    R0 1         ; return 


; Function #17.2:
;
; Name:            
; Defined at line: 616
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "_visible"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Projector"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R0 K5        ; R0 := gBackgroundRegion
 14 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x9B0A3887"]
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Projector"]
 17 [-]: CALL      R0 3 1       ; R0(R1,R2)
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: SETTABLE  R0 K7 K8     ; R0["Playing"] := "0x0"
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: SETTABLE  R0 K9 K10    ; R0["Node"] := nil
 22 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 628
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := transmissionInterruptedSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: SETTABLE  R0 K2 K3     ; R0["Playing"] := "0x0"
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["0xD66C1755"]
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Transmission"]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 634
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 638
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := gFlashMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x616DD092"]
  3 [-]: GETGLOBAL R3 K2        ; R3 := _G
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x61494587"]
 13 [-]: LOADK     R4 K6        ; R4 := 2
 14 [-]: CLOSURE   R5 0         ; R5 := closure(Function #20.1)
 15 [-]: GETUPVAL  R0 U2        ; R0 := U2
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: GETUPVAL  R0 U3        ; R0 := U3
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R2 K7        ; R2 := 0x9FAED6BC
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["name"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: GETGLOBAL R3 K9        ; R3 := _T
 25 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["CachedInvasionInfo"]
 26 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 27 [-]: TEST      R3 0         ; if not R3 then PC := 37
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R3 K9        ; R3 := _T
 30 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["CachedInvasionInfo"]
 31 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mDefenderMissionInfo"]
 33 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["uniqueName"]
 34 [-]: EQ        0 R3 K13     ; if R3 ~= "/Lotus/Language/Bosses/BossPhorid" then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADK     R2 K14       ; R2 := "/Lotus/Types/Keys/SortieBossKeyPhorid"
 37 [-]: GETGLOBAL R3 K15       ; R3 := 0x63B09107
 38 [-]: GETUPVAL  R4 U4        ; R4 := U4
 39 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 40 [-]: JMP       58           ; PC := 58
 41 [-]: GETTABLE  R8 R7 K16    ; R8 := R7["BossNode"]
 42 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 58
 43 [-]: JMP       58           ; PC := 58
 44 [-]: GETUPVAL  R8 U5        ; R8 := U5
 45 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["0xF81722A2"]
 46 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
 47 [-]: GETTABLE  R10 R7 K18   ; R10 := R7["BossNodeTransmission"]
 48 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 49 [-]: MOVE      R9 R9        ; R9 := R9
 50 [-]: GETTABLE  R10 R7 K18   ; R10 := R7["BossNodeTransmission"]
 51 [-]: GETTABLE  R11 R7 K19   ; R11 := R7["Transmission"]
 52 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 53 [-]: GETUPVAL  R9 U6        ; R9 := U6
 54 [-]: MOVE      R10 R0       ; R10 := R0
 55 [-]: MOVE      R11 R8       ; R11 := R8
 56 [-]: CALL      R9 3 1       ; R9(R10,R11)
 57 [-]: JMP       60           ; PC := 60
 58 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 41; R5 := R6 end
 59 [-]: JMP       41           ; PC := 41
 60 [-]: RETURN    R0 1         ; return 


; Function #20.1:
;
; Name:            
; Defined at line: 642
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["nodeIndex"]
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["nodeIndex"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 665
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mEdgeNode1"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 32
  7 [-]: JMP       32           ; PC := 32
  8 [-]: LOADK     R1 K3        ; R1 := ": "
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x9FAED6BC
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mEdgeNode1"]
 12 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["radialSector"]
 13 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["name"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: CONCAT    R0 R1 R2     ; R0 := R1 .. R2
 16 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mEdgeNode2"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 32
 21 [-]: JMP       32           ; PC := 32
 22 [-]: MOVE      R1 R0        ; R1 := R0
 23 [-]: LOADK     R2 K8        ; R2 := " TO "
 24 [-]: GETGLOBAL R3 K4        ; R3 := 0x9FAED6BC
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mEdgeNode2"]
 27 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["radialSector"]
 28 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["name"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: LOADK     R4 K9        ; R4 := " (A)dd or (D)elete?"
 31 [-]: CONCAT    R0 R1 R4     ; R0 := R1 .. R2 .. R3 .. R4
 32 [-]: LOADK     R1 K10       ; R1 := "EDITING EDGES"
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: LOADK     R3 K11       ; R3 := "\r >CTRL=Multi-select"
 35 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 36 [-]: RETURN    R1 2         ; return R1
 37 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 677
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: SETTABLE  R1 K1 K2     ; R1["INACTIVE_NODE_ALPHA"] := 0
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: GETUPVAL  R2 U2        ; R2 := U2
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["EDIT_REGIONS"]
  7 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADK     R0 K4        ; R0 := "EDITING REGIONS"
 10 [-]: JMP       83           ; PC := 83
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETUPVAL  R2 U2        ; R2 := U2
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["EDIT_REGION_FRAMING"]
 14 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 37
 15 [-]: JMP       37           ; PC := 37
 16 [-]: GETUPVAL  R1 U3        ; R1 := U3
 17 [-]: GETUPVAL  R2 U4        ; R2 := U4
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mFramingRegion"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: LOADK     R2 K7        ; R2 := "NONE"
 21 [-]: EQ        1 R1 K8      ; if R1 == nil then PC := 32
 22 [-]: JMP       32           ; PC := 32
 23 [-]: GETGLOBAL R3 K9        ; R3 := string
 24 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0x639C642A"]
 25 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 26 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 27 [-]: GETTABLE  R6 R1 K13    ; R6 := R1["name"]
 28 [-]: MOVE      R7 R0        ; R7 := R0
 29 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 30 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 31 [-]: MOVE      R2 R3        ; R2 := R3
 32 [-]: LOADK     R3 K14       ; R3 := "EDITING REGION FRAMING ["
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: LOADK     R5 K15       ; R5 := "]\r >R=Toggle"
 35 [-]: CONCAT    R0 R3 R5     ; R0 := R3 .. R4 .. R5
 36 [-]: JMP       83           ; PC := 83
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: GETUPVAL  R4 U2        ; R4 := U2
 39 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["EDIT_NODES"]
 40 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: LOADK     R0 K17       ; R0 := "EDITING NODES\r >SHIFT=Z Depth"
 43 [-]: GETUPVAL  R3 U0        ; R3 := U0
 44 [-]: SETTABLE  R3 K1 K18    ; R3["INACTIVE_NODE_ALPHA"] := 20
 45 [-]: JMP       83           ; PC := 83
 46 [-]: GETUPVAL  R3 U1        ; R3 := U1
 47 [-]: GETUPVAL  R4 U2        ; R4 := U2
 48 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["EDIT_EDGES"]
 49 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETUPVAL  R3 U5        ; R3 := U5
 52 [-]: CALL      R3 1 2       ; R3 := R3()
 53 [-]: MOVE      R0 R3        ; R0 := R3
 54 [-]: GETUPVAL  R3 U0        ; R3 := U0
 55 [-]: SETTABLE  R3 K1 K18    ; R3["INACTIVE_NODE_ALPHA"] := 20
 56 [-]: JMP       83           ; PC := 83
 57 [-]: GETUPVAL  R3 U1        ; R3 := U1
 58 [-]: GETUPVAL  R4 U2        ; R4 := U2
 59 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["EDIT_NODE_DECOS"]
 60 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 64
 61 [-]: JMP       64           ; PC := 64
 62 [-]: LOADK     R0 K21       ; R0 := "EDITING NODE DECOS \r >ALT=Scale\r >SHIFT=Heading\r >CTRL=Pitch\r >SHIFT+CTRL=Bank"
 63 [-]: JMP       83           ; PC := 83
 64 [-]: GETUPVAL  R3 U1        ; R3 := U1
 65 [-]: GETUPVAL  R4 U2        ; R4 := U2
 66 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["EDIT_SHORTCUT_CONTROL_POINTS"]
 67 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LOADK     R0 K23       ; R0 := "EDITING EDGE CONTROL POINTS \r >SHIFT=Z Depth"
 70 [-]: JMP       83           ; PC := 83
 71 [-]: GETGLOBAL R3 K24       ; R3 := _T
 72 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 73 [-]: TEST      R3 0         ; if not R3 then PC := 83
 74 [-]: JMP       83           ; PC := 83
 75 [-]: GETGLOBAL R3 K24       ; R3 := _T
 76 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 77 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["StarChartLabel"]
 78 [-]: TEST      R3 0         ; if not R3 then PC := 83
 79 [-]: JMP       83           ; PC := 83
 80 [-]: GETGLOBAL R3 K24       ; R3 := _T
 81 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 82 [-]: GETTABLE  R0 R3 K26    ; R0 := R3["StarChartLabel"]
 83 [-]: GETGLOBAL R3 K11       ; R3 := mMovie
 84 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3["0x1C19D966"]
 85 [-]: LOADK     R5 K28       ; R5 := "ScreenModeLabel"
 86 [-]: LOADK     R6 K29       ; R6 := "text"
 87 [-]: MOVE      R7 R0        ; R7 := R0
 88 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 89 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 706
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: LOADK     R1 K0        ; R1 := 1
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LOADK     R3 K0        ; R3 := 1
  5 [-]: FORPREP   R1 57        ; R1 -= R3; PC := 57
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
  8 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["IsShortcut"]
  9 [-]: TEST      R5 0         ; if not R5 then PC := 57
 10 [-]: JMP       57           ; PC := 57
 11 [-]: GETGLOBAL R5 K2        ; R5 := 0x63B09107
 12 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 13 [-]: GETUPVAL  R7 U0        ; R7 := U0
 14 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 15 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["controlPointA"]
 16 [-]: GETUPVAL  R8 U0        ; R8 := U0
 17 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 18 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["controlPointB"]
 19 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 20 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 21 [-]: JMP       55           ; PC := 55
 22 [-]: TEST      R0 0         ; if not R0 then PC := 51
 23 [-]: JMP       51           ; PC := 51
 24 [-]: GETGLOBAL R10 K6       ; R10 := gBackgroundRegion
 25 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0xBDD34CC6"]
 26 [-]: GETGLOBAL R12 K8       ; R12 := hoverRing
 27 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["position"]
 28 [-]: GETUPVAL  R14 U1       ; R14 := U1
 29 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["RING_ROTATION"]
 30 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
 31 [-]: SETTABLE  R9 K5 R10    ; R9["ringInstance"] := R10
 32 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 33 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0xA20F64C0"]
 34 [-]: GETGLOBAL R12 K12      ; R12 := 0xB5A59043
 35 [-]: LOADK     R13 K13      ; R13 := 0
 36 [-]: LOADK     R14 K14      ; R14 := 255
 37 [-]: LOADK     R15 K13      ; R15 := 0
 38 [-]: LOADK     R16 K14      ; R16 := 255
 39 [-]: CALL      R12 5 0      ; R12,... := R12(R13,R14,R15,R16)
 40 [-]: CALL      R10 0 1      ; R10(R11,...)
 41 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 42 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x9F133E77"]
 43 [-]: LOADK     R12 K16      ; R12 := 0.025000000372529
 44 [-]: LOADK     R13 K16      ; R13 := 0.025000000372529
 45 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 46 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 47 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10["0x66A7D2"]
 48 [-]: LOADK     R12 K18      ; R12 := 0.20000000298023
 49 [-]: CALL      R10 3 1      ; R10(R11,R12)
 50 [-]: JMP       55           ; PC := 55
 51 [-]: GETGLOBAL R10 K6       ; R10 := gBackgroundRegion
 52 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10["0x9B0A3887"]
 53 [-]: GETTABLE  R12 R9 K5    ; R12 := R9["ringInstance"]
 54 [-]: CALL      R10 3 1      ; R10(R11,R12)
 55 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 22; R7 := R8 end
 56 [-]: JMP       22           ; PC := 22
 57 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 58 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 723
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
  5 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["EDIT_SHORTCUT_CONTROL_POINTS"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: GETUPVAL  R2 U3        ; R2 := U3
 20 [-]: CALL      R2 1 1       ; R2()
 21 [-]: GETUPVAL  R2 U4        ; R2 := U4
 22 [-]: CALL      R2 1 1       ; R2()
 23 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 739
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: MOVE      R0 R2        ; R0 := R2
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U3        ; R1 := U3
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: NEWTABLE  R0 13 0      ; R0 := {}
 14 [-]: GETUPVAL  R1 U4        ; R1 := U4
 15 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ALERT_FLAG"]
 16 [-]: GETUPVAL  R2 U4        ; R2 := U4
 17 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["EVENT_FLAG"]
 18 [-]: GETUPVAL  R3 U4        ; R3 := U4
 19 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["PVP_FLAG"]
 20 [-]: GETUPVAL  R4 U4        ; R4 := U4
 21 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["NIGHTMARE_FLAG"]
 22 [-]: GETUPVAL  R5 U4        ; R5 := U4
 23 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["INVASION_ATTACKER_FLAG"]
 24 [-]: GETUPVAL  R6 U4        ; R6 := U4
 25 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["INVASION_DEFENDER_FLAG"]
 26 [-]: GETUPVAL  R7 U4        ; R7 := U4
 27 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["BADLAND_ATTACKER_FLAG"]
 28 [-]: GETUPVAL  R8 U4        ; R8 := U4
 29 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["BADLAND_DEFENDER_FLAG"]
 30 [-]: GETUPVAL  R9 U4        ; R9 := U4
 31 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["BADLAND_MISSION_FLAG"]
 32 [-]: GETUPVAL  R10 U4       ; R10 := U4
 33 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["SORTIE_MISSION_FLAG"]
 34 [-]: GETUPVAL  R11 U4       ; R11 := U4
 35 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["SYNDICATE_MISSION_FLAG"]
 36 [-]: GETUPVAL  R12 U4       ; R12 := U4
 37 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["ACTIVE_MISSION_FLAG"]
 38 [-]: GETUPVAL  R13 U4       ; R13 := U4
 39 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["KUVA_TOWER_MISSION_FLAG"]
 40 [-]: SETLIST   R0 13 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 13
 41 [-]: CLOSURE   R1 0         ; R1 := closure(Function #25.1)
 42 [-]: MOVE      R0 R0        ; R0 := R0
 43 [-]: GETGLOBAL R2 K14       ; R2 := gMatchingService
 44 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x40DFB818"]
 45 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 46 [-]: MOVE      R3 R0        ; R3 := R0
 47 [-]: TEST      R3 0         ; if not R3 then PC := 65
 48 [-]: JMP       65           ; PC := 65
 49 [-]: GETGLOBAL R3 K16       ; R3 := 0x93B1256B
 50 [-]: LOADK     R4 K17       ; R4 := "Aggregation Results:"
 51 [-]: CALL      R3 2 1       ; R3(R4)
 52 [-]: GETGLOBAL R3 K18       ; R3 := 0xECFDD17
 53 [-]: MOVE      R4 R2        ; R4 := R2
 54 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 55 [-]: JMP       63           ; PC := 63
 56 [-]: GETGLOBAL R8 K16       ; R8 := 0x93B1256B
 57 [-]: LOADK     R9 K19       ; R9 := "gameModeId="
 58 [-]: GETTABLE  R10 R7 K20   ; R10 := R7["gameModeId"]
 59 [-]: LOADK     R11 K21      ; R11 := ", count="
 60 [-]: GETTABLE  R12 R7 K22   ; R12 := R7["count"]
 61 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 62 [-]: CALL      R8 2 1       ; R8(R9)
 63 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 56; R5 := R6 end
 64 [-]: JMP       56           ; PC := 56
 65 [-]: LOADNIL   R8 R10       ; R8 := R9 := R10 := nil
 66 [-]: GETGLOBAL R11 K18      ; R11 := 0xECFDD17
 67 [-]: GETUPVAL  R12 U5       ; R12 := U5
 68 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
 69 [-]: JMP       253          ; PC := 253
 70 [-]: GETGLOBAL R16 K23      ; R16 := 0x1BF588C6
 71 [-]: LOADK     R17 K24      ; R17 := 0
 72 [-]: CALL      R16 2 1      ; R16(R17)
 73 [-]: GETTABLE  R16 R15 K25  ; R16 := R15["nodeType"]
 74 [-]: GETGLOBAL R17 K26      ; R17 := Lotus_Game
 75 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["NT_EMPTY"]
 76 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 253
 77 [-]: JMP       253          ; PC := 253
 78 [-]: GETTABLE  R16 R15 K28  ; R16 := R15["region"]
 79 [-]: ADD       R8 R16 K29   ; R8 := R16 + 1
 80 [-]: GETGLOBAL R16 K30      ; R16 := 0x9FAED6BC
 81 [-]: GETTABLE  R17 R15 K31  ; R17 := R15["name"]
 82 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 83 [-]: MOVE      R9 R16       ; R9 := R16
 84 [-]: GETUPVAL  R16 U4       ; R16 := U4
 85 [-]: GETTABLE  R16 R16 K32  ; R16 := R16["0xE4E5932F"]
 86 [-]: MOVE      R17 R9       ; R17 := R9
 87 [-]: GETUPVAL  R18 U3       ; R18 := U3
 88 [-]: MOVE      R19 R15      ; R19 := R15
 89 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 90 [-]: MOVE      R10 R16      ; R10 := R16
 91 [-]: GETUPVAL  R16 U1       ; R16 := U1
 92 [-]: SETTABLE  R16 R10 K24  ; R16[R10] := 0
 93 [-]: GETGLOBAL R16 K18      ; R16 := 0xECFDD17
 94 [-]: MOVE      R17 R2       ; R17 := R2
 95 [-]: CALL      R16 2 4      ; R16,R17,R18 := R16(R17)
 96 [-]: JMP       143          ; PC := 143
 97 [-]: GETGLOBAL R21 K33      ; R21 := _G
 98 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["StalkerMode"]
 99 [-]: TEST      R21 0        ; if not R21 then PC := 131
100 [-]: JMP       131          ; PC := 131
101 [-]: GETTABLE  R21 R20 K20  ; R21 := R20["gameModeId"]
102 [-]: EQ        1 R21 R10    ; if R21 == R10 then PC := 110
103 [-]: JMP       110          ; PC := 110
104 [-]: GETTABLE  R21 R20 K20  ; R21 := R20["gameModeId"]
105 [-]: GETUPVAL  R22 U4       ; R22 := U4
106 [-]: GETTABLE  R22 R22 K9   ; R22 := R22["BADLAND_MISSION_FLAG"]
107 [-]: ADD       R22 R10 R22  ; R22 := R10 + R22
108 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 143
109 [-]: JMP       143          ; PC := 143
110 [-]: GETTABLE  R21 R15 K25  ; R21 := R15["nodeType"]
111 [-]: GETGLOBAL R22 K26      ; R22 := Lotus_Game
112 [-]: GETTABLE  R22 R22 K35  ; R22 := R22["NT_MISSION"]
113 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 120
114 [-]: JMP       120          ; PC := 120
115 [-]: GETTABLE  R21 R15 K25  ; R21 := R15["nodeType"]
116 [-]: GETGLOBAL R22 K26      ; R22 := Lotus_Game
117 [-]: GETTABLE  R22 R22 K36  ; R22 := R22["NT_CLAN"]
118 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 143
119 [-]: JMP       143          ; PC := 143
120 [-]: GETTABLE  R21 R15 K37  ; R21 := R15["mission"]
121 [-]: GETTABLE  R21 R21 K38  ; R21 := R21["archwingRequired"]
122 [-]: TEST      R21 1        ; if R21 then PC := 143
123 [-]: JMP       143          ; PC := 143
124 [-]: GETUPVAL  R21 U1       ; R21 := U1
125 [-]: GETUPVAL  R22 U1       ; R22 := U1
126 [-]: GETTABLE  R22 R22 R10  ; R22 := R22[R10]
127 [-]: GETTABLE  R23 R20 K22  ; R23 := R20["count"]
128 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
129 [-]: SETTABLE  R21 R10 R22  ; R21[R10] := R22
130 [-]: JMP       143          ; PC := 143
131 [-]: MOVE      R21 R1       ; R21 := R1
132 [-]: GETTABLE  R22 R20 K20  ; R22 := R20["gameModeId"]
133 [-]: MOVE      R23 R10      ; R23 := R10
134 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
135 [-]: TEST      R21 0        ; if not R21 then PC := 143
136 [-]: JMP       143          ; PC := 143
137 [-]: GETUPVAL  R21 U1       ; R21 := U1
138 [-]: GETUPVAL  R22 U1       ; R22 := U1
139 [-]: GETTABLE  R22 R22 R10  ; R22 := R22[R10]
140 [-]: GETTABLE  R23 R20 K22  ; R23 := R20["count"]
141 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
142 [-]: SETTABLE  R21 R10 R22  ; R21[R10] := R22
143 [-]: TFORLOOP  R16 2        ; R19,R20 :=  R16(R17,R18); if R19 ~= nil then begin PC = 97; R18 := R19 end
144 [-]: JMP       97           ; PC := 97
145 [-]: GETUPVAL  R21 U0       ; R21 := U0
146 [-]: GETTABLE  R21 R21 R8   ; R21 := R21[R8]
147 [-]: EQ        0 R21 K39    ; if R21 ~= nil then PC := 151
148 [-]: JMP       151          ; PC := 151
149 [-]: GETUPVAL  R21 U0       ; R21 := U0
150 [-]: SETTABLE  R21 R8 K24   ; R21[R8] := 0
151 [-]: GETUPVAL  R21 U1       ; R21 := U1
152 [-]: GETTABLE  R21 R21 R10  ; R21 := R21[R10]
153 [-]: EQ        1 R21 K39    ; if R21 == nil then PC := 162
154 [-]: JMP       162          ; PC := 162
155 [-]: GETUPVAL  R21 U0       ; R21 := U0
156 [-]: GETUPVAL  R22 U0       ; R22 := U0
157 [-]: GETTABLE  R22 R22 R8   ; R22 := R22[R8]
158 [-]: GETUPVAL  R23 U1       ; R23 := U1
159 [-]: GETTABLE  R23 R23 R10  ; R23 := R23[R10]
160 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
161 [-]: SETTABLE  R21 R8 R22   ; R21[R8] := R22
162 [-]: GETGLOBAL R21 K33      ; R21 := _G
163 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["StalkerMode"]
164 [-]: TEST      R21 0        ; if not R21 then PC := 253
165 [-]: JMP       253          ; PC := 253
166 [-]: GETUPVAL  R21 U6       ; R21 := U6
167 [-]: TEST      R21 0        ; if not R21 then PC := 201
168 [-]: JMP       201          ; PC := 201
169 [-]: EQ        0 R14 K29    ; if R14 ~= 1 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETGLOBAL R21 K16      ; R21 := 0x93B1256B
172 [-]: LOADK     R22 K40      ; R22 := "Total nodes with open squads: "
173 [-]: LEN       R23 R2       ; R23 := # R2
174 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
175 [-]: CALL      R21 2 1      ; R21(R22)
176 [-]: GETUPVAL  R21 U1       ; R21 := U1
177 [-]: GETTABLE  R21 R21 R10  ; R21 := R21[R10]
178 [-]: LT        0 K24 R21    ; if 0 >= R21 then PC := 201
179 [-]: JMP       201          ; PC := 201
180 [-]: GETGLOBAL R21 K16      ; R21 := 0x93B1256B
181 [-]: GETGLOBAL R22 K30      ; R22 := 0x9FAED6BC
182 [-]: GETTABLE  R23 R15 K31  ; R23 := R15["name"]
183 [-]: CALL      R22 2 2      ; R22 := R22(R23)
184 [-]: LOADK     R23 K41      ; R23 := " ("
185 [-]: GETGLOBAL R24 K42      ; R24 := 0xE6DC43B0
186 [-]: GETGLOBAL R25 K30      ; R25 := 0x9FAED6BC
187 [-]: GETTABLE  R26 R15 K43  ; R26 := R15["locTag"]
188 [-]: CALL      R25 2 2      ; R25 := R25(R26)
189 [-]: MOVE      R26 R0       ; R26 := R0
190 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
191 [-]: LOADK     R25 K44      ; R25 := ")"
192 [-]: LOADK     R26 K45      ; R26 := ", matchmakingName="
193 [-]: MOVE      R27 R9       ; R27 := R9
194 [-]: LOADK     R28 K46      ; R28 := ", matchMakingId="
195 [-]: MOVE      R29 R10      ; R29 := R10
196 [-]: LOADK     R30 K47      ; R30 := ", sessionsFound="
197 [-]: GETUPVAL  R31 U1       ; R31 := U1
198 [-]: GETTABLE  R31 R31 R10  ; R31 := R31[R10]
199 [-]: CONCAT    R22 R22 R31  ; R22 := R22 .. R23 .. R24 .. R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31
200 [-]: CALL      R21 2 1      ; R21(R22)
201 [-]: GETGLOBAL R21 K0       ; R21 := 0x400E7765
202 [-]: GETGLOBAL R22 K48      ; R22 := mMovie
203 [-]: CALL      R21 2 2      ; R21 := R21(R22)
204 [-]: TEST      R21 1        ; if R21 then PC := 253
205 [-]: JMP       253          ; PC := 253
206 [-]: GETUPVAL  R21 U7       ; R21 := U7
207 [-]: TEST      R21 0        ; if not R21 then PC := 253
208 [-]: JMP       253          ; PC := 253
209 [-]: GETUPVAL  R21 U7       ; R21 := U7
210 [-]: GETTABLE  R21 R21 R9   ; R21 := R21[R9]
211 [-]: TEST      R21 0        ; if not R21 then PC := 253
212 [-]: JMP       253          ; PC := 253
213 [-]: GETGLOBAL R21 K48      ; R21 := mMovie
214 [-]: SELF      R21 R21 K49  ; R22 := R21; R21 := R21["0x1C19D966"]
215 [-]: GETUPVAL  R23 U7       ; R23 := U7
216 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
217 [-]: GETTABLE  R23 R23 K50  ; R23 := R23["clipName"]
218 [-]: LOADK     R24 K51      ; R24 := "_visible"
219 [-]: GETUPVAL  R25 U1       ; R25 := U1
220 [-]: TEST      R25 0        ; if not R25 then PC := 232
221 [-]: JMP       232          ; PC := 232
222 [-]: GETUPVAL  R25 U1       ; R25 := U1
223 [-]: GETTABLE  R25 R25 R10  ; R25 := R25[R10]
224 [-]: TEST      R25 0        ; if not R25 then PC := 232
225 [-]: JMP       232          ; PC := 232
226 [-]: GETUPVAL  R25 U1       ; R25 := U1
227 [-]: GETTABLE  R25 R25 R10  ; R25 := R25[R10]
228 [-]: LT        1 K24 R25    ; if 0 < R25 then PC := 231
229 [-]: JMP       231          ; PC := 231
230 [-]: MOVE      R25 R0       ; R25 := R0
231 [-]: MOVE      R25 R1       ; R25 := R1
232 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
233 [-]: GETGLOBAL R21 K48      ; R21 := mMovie
234 [-]: SELF      R21 R21 K52  ; R22 := R21; R21 := R21["0xD6A79FE9"]
235 [-]: GETUPVAL  R23 U8       ; R23 := U8
236 [-]: GETTABLE  R23 R23 R8   ; R23 := R23[R8]
237 [-]: LOADK     R24 K53      ; R24 := ".Name"
238 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
239 [-]: LOADK     R24 K54      ; R24 := "text"
240 [-]: GETGLOBAL R25 K42      ; R25 := 0xE6DC43B0
241 [-]: GETGLOBAL R26 K30      ; R26 := 0x9FAED6BC
242 [-]: GETUPVAL  R27 U9       ; R27 := U9
243 [-]: GETTABLE  R27 R27 R8   ; R27 := R27[R8]
244 [-]: GETTABLE  R27 R27 K31  ; R27 := R27["name"]
245 [-]: CALL      R26 2 2      ; R26 := R26(R27)
246 [-]: MOVE      R27 R0       ; R27 := R0
247 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
248 [-]: LOADK     R26 K55      ; R26 := " "
249 [-]: GETUPVAL  R27 U0       ; R27 := U0
250 [-]: GETTABLE  R27 R27 R8   ; R27 := R27[R8]
251 [-]: CONCAT    R25 R25 R27  ; R25 := R25 .. R26 .. R27
252 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
253 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 70; R13 := R14 end
254 [-]: JMP       70           ; PC := 70
255 [-]: RETURN    R0 1         ; return 


; Function #25.1:
;
; Name:            
; Defined at line: 751
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: RETURN    R2 2         ; return R2
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0xECFDD17
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  8 [-]: JMP       14           ; PC := 14
  9 [-]: ADD       R7 R1 R6     ; R7 := R1 + R6
 10 [-]: EQ        0 R0 R7      ; if R0 ~= R7 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R7 R1        ; R7 := R1
 13 [-]: RETURN    R7 2         ; return R7
 14 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 9; R4 := R5 end
 15 [-]: JMP       9            ; PC := 9
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: RETURN    R7 2         ; return R7
 18 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 828
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == "0x1" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: LOADK     R1 K1        ; R1 := -1
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 10 [-]: LOADK     R3 K4        ; R3 := "RegionInfo"
 11 [-]: LOADK     R4 K5        ; R4 := "_alpha"
 12 [-]: LOADK     R5 K6        ; R5 := 0
 13 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0x52E17A90
 16 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 17 [-]: LOADK     R3 K4        ; R3 := "RegionInfo"
 18 [-]: GETGLOBAL R4 K8        ; R4 := UISys
 19 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 20 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 21 [-]: LOADK     R6 K5        ; R6 := "_alpha"
 22 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 23 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 24 [-]: LOADK     R7 K6        ; R7 := 0
 25 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 26 [-]: LOADK     R7 K10       ; R7 := 0.20000000298023
 27 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 28 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 844
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x7E1F26D7"]
  3 [-]: LOADK     R2 K2        ; R2 := "InfluenceMap"
  4 [-]: GETGLOBAL R3 K3        ; R3 := influenceMapMaterial
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  8 [-]: SETTABLE  R0 K4 R1     ; R0["INFLUENCE_MAP"] := R1
  9 [-]: LOADK     R0 K5        ; R0 := 0
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MAX_SHADER_INFLUENCES"]
 12 [-]: SUB       R1 R1 K7     ; R1 := R1 - 1
 13 [-]: LOADK     R2 K7        ; R2 := 1
 14 [-]: FORPREP   R0 25        ; R0 -= R2; PC := 25
 15 [-]: GETGLOBAL R4 K8        ; R4 := table
 16 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xE6450C9D"]
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["INFLUENCE_MAP"]
 19 [-]: GETGLOBAL R6 K10       ; R6 := 0xEC274B1A
 20 [-]: LOADK     R7 K11       ; R7 := "Influence"
 21 [-]: MOVE      R8 R3        ; R8 := R3
 22 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 23 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 24 [-]: CALL      R4 0 1       ; R4(R5,...)
 25 [-]: FORLOOP   R0 15        ; R0 += R2; if R0 <= R1 then begin PC := 15; R3 := R0 end
 26 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 27 [-]: MOVE      R4 R2        ; R4 := R2
 28 [-]: GETGLOBAL R4 K12       ; R4 := gGameData
 29 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x17358D95"]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: SELF      R5 R4 K14    ; R6 := R4; R5 := R4["0xB3F0027"]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: TEST      R5 0         ; if not R5 then PC := 58
 34 [-]: JMP       58           ; PC := 58
 35 [-]: GETTABLE  R5 R4 K15    ; R5 := R4["mInfluenceNodes"]
 36 [-]: LOADK     R6 K7        ; R6 := 1
 37 [-]: LEN       R7 R5        ; R7 := # R5
 38 [-]: LOADK     R8 K7        ; R8 := 1
 39 [-]: FORPREP   R6 57        ; R6 -= R8; PC := 57
 40 [-]: GETGLOBAL R10 K16      ; R10 := 0x93034B55
 41 [-]: LOADK     R11 K17      ; R11 := 0.5
 42 [-]: LOADK     R12 K18      ; R12 := 1.2000000476837
 43 [-]: GETTABLE  R13 R5 R9    ; R13 := R5[R9]
 44 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["mInfluence"]
 45 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 46 [-]: GETGLOBAL R11 K8       ; R11 := table
 47 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["0xE6450C9D"]
 48 [-]: GETUPVAL  R12 U2       ; R12 := U2
 49 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 50 [-]: GETTABLE  R14 R5 R9    ; R14 := R5[R9]
 51 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["mNode"]
 52 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5EC7A3D2"]
 53 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 54 [-]: SETTABLE  R13 K20 R14  ; R13["Node"] := R14
 55 [-]: SETTABLE  R13 K11 R10  ; R13["Influence"] := R10
 56 [-]: CALL      R11 3 1      ; R11(R12,R13)
 57 [-]: FORLOOP   R6 40        ; R6 += R8; if R6 <= R7 then begin PC := 40; R9 := R6 end
 58 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 59 [-]: GETGLOBAL R12 K0       ; R12 := mMovie
 60 [-]: SELF      R12 R12 K23  ; R13 := R12; R12 := R12["0x5DB0BD4"]
 61 [-]: LOADK     R14 K24      ; R14 := "<KUVA_LICH>"
 62 [-]: MOVE      R15 R1       ; R15 := R1
 63 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 64 [-]: LOADK     R13 K7       ; R13 := 1
 65 [-]: GETUPVAL  R14 U2       ; R14 := U2
 66 [-]: LEN       R14 R14      ; R14 := # R14
 67 [-]: LOADK     R15 K7       ; R15 := 1
 68 [-]: FORPREP   R13 123      ; R13 -= R15; PC := 123
 69 [-]: GETUPVAL  R17 U3       ; R17 := U3
 70 [-]: GETUPVAL  R18 U2       ; R18 := U2
 71 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 72 [-]: GETTABLE  R18 R18 K20  ; R18 := R18["Node"]
 73 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
 74 [-]: GETGLOBAL R18 K25      ; R18 := 0x400E7765
 75 [-]: MOVE      R19 R17      ; R19 := R17
 76 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 77 [-]: TEST      R18 1        ; if R18 then PC := 123
 78 [-]: JMP       123          ; PC := 123
 79 [-]: GETUPVAL  R18 U2       ; R18 := U2
 80 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 81 [-]: SETTABLE  R18 K26 R17  ; R18["NodeData"] := R17
 82 [-]: MOVE      R18 R12      ; R18 := R12
 83 [-]: GETTABLE  R19 R17 K27  ; R19 := R17["locName"]
 84 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
 85 [-]: SETTABLE  R17 K27 R18  ; R17["locName"] := R18
 86 [-]: GETTABLE  R18 R17 K28  ; R18 := R17["radialSector"]
 87 [-]: GETTABLE  R19 R18 K29  ; R19 := R18["region"]
 88 [-]: ADD       R19 R19 K7   ; R19 := R19 + 1
 89 [-]: GETUPVAL  R20 U4       ; R20 := U4
 90 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["0xBFFBFE5E"]
 91 [-]: MOVE      R21 R11      ; R21 := R11
 92 [-]: MOVE      R22 R19      ; R22 := R19
 93 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 94 [-]: TEST      R20 1        ; if R20 then PC := 123
 95 [-]: JMP       123          ; PC := 123
 96 [-]: GETGLOBAL R20 K8       ; R20 := table
 97 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["0xE6450C9D"]
 98 [-]: MOVE      R21 R11      ; R21 := R11
 99 [-]: MOVE      R22 R19      ; R22 := R19
100 [-]: CALL      R20 3 1      ; R20(R21,R22)
101 [-]: MOVE      R20 R12      ; R20 := R12
102 [-]: GETGLOBAL R21 K31      ; R21 := string
103 [-]: GETTABLE  R21 R21 K32  ; R21 := R21["0x639C642A"]
104 [-]: GETGLOBAL R22 K33      ; R22 := 0xE6DC43B0
105 [-]: GETGLOBAL R23 K34      ; R23 := 0x9FAED6BC
106 [-]: GETUPVAL  R24 U5       ; R24 := U5
107 [-]: GETTABLE  R24 R24 R19  ; R24 := R24[R19]
108 [-]: GETTABLE  R24 R24 K35  ; R24 := R24["name"]
109 [-]: CALL      R23 2 2      ; R23 := R23(R24)
110 [-]: MOVE      R24 R0       ; R24 := R0
111 [-]: CALL      R22 3 0      ; R22,... := R22(R23,R24)
112 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
113 [-]: CONCAT    R20 R20 R21  ; R20 := R20 .. R21
114 [-]: GETGLOBAL R21 K0       ; R21 := mMovie
115 [-]: SELF      R21 R21 K36  ; R22 := R21; R21 := R21["0xD6A79FE9"]
116 [-]: GETUPVAL  R23 U6       ; R23 := U6
117 [-]: GETTABLE  R23 R23 R19  ; R23 := R23[R19]
118 [-]: LOADK     R24 K37      ; R24 := ".Name"
119 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
120 [-]: LOADK     R24 K38      ; R24 := "text"
121 [-]: MOVE      R25 R20      ; R25 := R20
122 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
123 [-]: FORLOOP   R13 69       ; R13 += R15; if R13 <= R14 then begin PC := 69; R16 := R13 end
124 [-]: GETGLOBAL R21 K0       ; R21 := mMovie
125 [-]: SELF      R21 R21 K39  ; R22 := R21; R21 := R21["0x1C19D966"]
126 [-]: LOADK     R23 K2       ; R23 := "InfluenceMap"
127 [-]: LOADK     R24 K40      ; R24 := "_alpha"
128 [-]: GETUPVAL  R25 U4       ; R25 := U4
129 [-]: GETTABLE  R25 R25 K41  ; R25 := R25["0xF81722A2"]
130 [-]: GETUPVAL  R26 U2       ; R26 := U2
131 [-]: LEN       R26 R26      ; R26 := # R26
132 [-]: LT        1 K5 R26     ; if 0 < R26 then PC := 135
133 [-]: JMP       135          ; PC := 135
134 [-]: MOVE      R26 R0       ; R26 := R0
135 [-]: MOVE      R26 R1       ; R26 := R1
136 [-]: LOADK     R27 K42      ; R27 := 100
137 [-]: LOADK     R28 K5       ; R28 := 0
138 [-]: CALL      R25 4 0      ; R25,... := R25(R26,R27,R28)
139 [-]: CALL      R21 0 1      ; R21(R22,...)
140 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 884
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xEA569929"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
  5 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xF3E132E0"]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: SUB       R2 R0 R2     ; R2 := R0 - R2
  9 [-]: MUL       R2 R2 K3     ; R2 := R2 * 0.5
 10 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 11 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x68998E7D"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: SUB       R3 R1 R3     ; R3 := R1 - R3
 14 [-]: MUL       R3 R3 K3     ; R3 := R3 * 0.5
 15 [-]: GETGLOBAL R4 K5        ; R4 := 0x994A1A7
 16 [-]: GETUPVAL  R5 U1        ; R5 := U1
 17 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["MIN_ZOOM"]
 18 [-]: GETUPVAL  R6 U1        ; R6 := U1
 19 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["MAX_ZOOM"]
 20 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 21 [-]: GETGLOBAL R5 K8        ; R5 := 0x6374FD98
 22 [-]: GETUPVAL  R6 U2        ; R6 := U2
 23 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["mCurVal"]
 24 [-]: GETTABLE  R7 R4 K10    ; R7 := R4["minValue"]
 25 [-]: GETTABLE  R8 R4 K11    ; R8 := R4["maxValue"]
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: SELF      R6 R4 K12    ; R7 := R4; R6 := R4["0x3B43F25"]
 28 [-]: MOVE      R8 R5        ; R8 := R5
 29 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 30 [-]: MOVE      R5 R6        ; R5 := R6
 31 [-]: MUL       R5 R5 R5     ; R5 := R5 * R5
 32 [-]: LOADK     R6 K13       ; R6 := 0.40000000596046
 33 [-]: LOADK     R7 K14       ; R7 := 0.93999999761581
 34 [-]: MOVE      R8 R5        ; R8 := R5
 35 [-]: LE        0 R8 R6      ; if R8 > R6 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: MOVE      R8 R6        ; R8 := R6
 38 [-]: JMP       50           ; PC := 50
 39 [-]: LE        0 R7 R8      ; if R7 > R8 then PC := 43
 40 [-]: JMP       43           ; PC := 43
 41 [-]: MOVE      R8 R7        ; R8 := R7
 42 [-]: JMP       50           ; PC := 50
 43 [-]: SUB       R9 R8 R6     ; R9 := R8 - R6
 44 [-]: SUB       R10 R7 R6    ; R10 := R7 - R6
 45 [-]: DIV       R8 R9 R10    ; R8 := R9 / R10
 46 [-]: MUL       R9 R8 R8     ; R9 := R8 * R8
 47 [-]: MUL       R10 K15 R8   ; R10 := 2 * R8
 48 [-]: SUB       R10 K16 R10  ; R10 := 3 - R10
 49 [-]: MUL       R8 R9 R10    ; R8 := R9 * R10
 50 [-]: MUL       R9 K17 R8    ; R9 := 0.20000000298023 * R8
 51 [-]: ADD       R9 K3 R9     ; R9 := 0.5 + R9
 52 [-]: LOADNIL   R10 R12      ; R10 := R11 := R12 := nil
 53 [-]: LOADK     R13 K18      ; R13 := 1
 54 [-]: LOADK     R14 K19      ; R14 := 0
 55 [-]: LOADK     R15 K18      ; R15 := 1
 56 [-]: LOADK     R16 K19      ; R16 := 0
 57 [-]: DIV       R17 R1 R0    ; R17 := R1 / R0
 58 [-]: NEWTABLE  R18 0 0      ; R18 := {}
 59 [-]: LOADK     R19 K18      ; R19 := 1
 60 [-]: GETUPVAL  R20 U3       ; R20 := U3
 61 [-]: LEN       R20 R20      ; R20 := # R20
 62 [-]: LOADK     R21 K18      ; R21 := 1
 63 [-]: FORPREP   R19 149      ; R19 -= R21; PC := 149
 64 [-]: LOADK     R10 K19      ; R10 := 0
 65 [-]: LOADK     R11 K19      ; R11 := 0
 66 [-]: LOADK     R12 K19      ; R12 := 0
 67 [-]: GETUPVAL  R23 U3       ; R23 := U3
 68 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
 69 [-]: EQ        1 R23 K20    ; if R23 == nil then PC := 149
 70 [-]: JMP       149          ; PC := 149
 71 [-]: GETGLOBAL R23 K21      ; R23 := 0x400E7765
 72 [-]: GETUPVAL  R24 U3       ; R24 := U3
 73 [-]: GETTABLE  R24 R24 R22  ; R24 := R24[R22]
 74 [-]: GETTABLE  R24 R24 K22  ; R24 := R24["NodeData"]
 75 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 76 [-]: TEST      R23 1        ; if R23 then PC := 149
 77 [-]: JMP       149          ; PC := 149
 78 [-]: GETUPVAL  R23 U3       ; R23 := U3
 79 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
 80 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["Influence"]
 81 [-]: MUL       R12 R23 R5   ; R12 := R23 * R5
 82 [-]: GETUPVAL  R23 U0       ; R23 := U0
 83 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["0x69B983D"]
 84 [-]: GETGLOBAL R24 K1       ; R24 := mMovie
 85 [-]: GETUPVAL  R25 U3       ; R25 := U3
 86 [-]: GETTABLE  R25 R25 R22  ; R25 := R25[R22]
 87 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["NodeData"]
 88 [-]: GETTABLE  R25 R25 K25  ; R25 := R25["clipName"]
 89 [-]: CALL      R23 3 3      ; R23,R24 := R23(R24,R25)
 90 [-]: MOVE      R11 R24      ; R11 := R24
 91 [-]: MOVE      R10 R23      ; R10 := R23
 92 [-]: ADD       R23 R10 R2   ; R23 := R10 + R2
 93 [-]: DIV       R10 R23 R0   ; R10 := R23 / R0
 94 [-]: ADD       R23 R11 R3   ; R23 := R11 + R3
 95 [-]: DIV       R11 R23 R1   ; R11 := R23 / R1
 96 [-]: GETGLOBAL R23 K26      ; R23 := math
 97 [-]: GETTABLE  R23 R23 K27  ; R23 := R23["0x8B011038"]
 98 [-]: LOADK     R24 K28      ; R24 := 0.0099999997764826
 99 [-]: MUL       R25 R12 K29  ; R25 := R12 * 0.10000000149012
100 [-]: MUL       R25 R25 R9   ; R25 := R25 * R9
101 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
102 [-]: UNM       R24 R23      ; R24 := - R23
103 [-]: LE        0 R24 R10    ; if R24 > R10 then PC := 149
104 [-]: JMP       149          ; PC := 149
105 [-]: ADD       R24 K18 R23  ; R24 := 1 + R23
106 [-]: LE        0 R10 R24    ; if R10 > R24 then PC := 149
107 [-]: JMP       149          ; PC := 149
108 [-]: UNM       R24 R23      ; R24 := - R23
109 [-]: LE        0 R24 R11    ; if R24 > R11 then PC := 149
110 [-]: JMP       149          ; PC := 149
111 [-]: ADD       R24 K18 R23  ; R24 := 1 + R23
112 [-]: LE        0 R11 R24    ; if R11 > R24 then PC := 149
113 [-]: JMP       149          ; PC := 149
114 [-]: GETGLOBAL R24 K30      ; R24 := table
115 [-]: GETTABLE  R24 R24 K31  ; R24 := R24["0xE6450C9D"]
116 [-]: MOVE      R25 R18      ; R25 := R18
117 [-]: GETGLOBAL R26 K32      ; R26 := 0x221C9700
118 [-]: MOVE      R27 R10      ; R27 := R10
119 [-]: MOVE      R28 R11      ; R28 := R11
120 [-]: MOVE      R29 R23      ; R29 := R23
121 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
122 [-]: CALL      R24 0 1      ; R24(R25,...)
123 [-]: GETGLOBAL R24 K26      ; R24 := math
124 [-]: GETTABLE  R24 R24 K33  ; R24 := R24["0x65F9712A"]
125 [-]: MOVE      R25 R13      ; R25 := R13
126 [-]: MUL       R26 R23 R17  ; R26 := R23 * R17
127 [-]: SUB       R26 R10 R26  ; R26 := R10 - R26
128 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
129 [-]: MOVE      R13 R24      ; R13 := R24
130 [-]: GETGLOBAL R24 K26      ; R24 := math
131 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["0x8B011038"]
132 [-]: MOVE      R25 R14      ; R25 := R14
133 [-]: MUL       R26 R23 R17  ; R26 := R23 * R17
134 [-]: ADD       R26 R10 R26  ; R26 := R10 + R26
135 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
136 [-]: MOVE      R14 R24      ; R14 := R24
137 [-]: GETGLOBAL R24 K26      ; R24 := math
138 [-]: GETTABLE  R24 R24 K33  ; R24 := R24["0x65F9712A"]
139 [-]: MOVE      R25 R15      ; R25 := R15
140 [-]: SUB       R26 R11 R23  ; R26 := R11 - R23
141 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
142 [-]: MOVE      R15 R24      ; R15 := R24
143 [-]: GETGLOBAL R24 K26      ; R24 := math
144 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["0x8B011038"]
145 [-]: MOVE      R25 R16      ; R25 := R16
146 [-]: ADD       R26 R11 R23  ; R26 := R11 + R23
147 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
148 [-]: MOVE      R16 R24      ; R16 := R24
149 [-]: FORLOOP   R19 64       ; R19 += R21; if R19 <= R20 then begin PC := 64; R22 := R19 end
150 [-]: LEN       R24 R18      ; R24 := # R18
151 [-]: GETUPVAL  R25 U4       ; R25 := U4
152 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["MAX_SHADER_INFLUENCES"]
153 [-]: LT        0 R25 R24    ; if R25 >= R24 then PC := 161
154 [-]: JMP       161          ; PC := 161
155 [-]: GETGLOBAL R24 K35      ; R24 := 0xC1209670
156 [-]: MOVE      R25 R18      ; R25 := R18
157 [-]: GETUPVAL  R26 U4       ; R26 := U4
158 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["MAX_SHADER_INFLUENCES"]
159 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
160 [-]: MOVE      R18 R24      ; R18 := R24
161 [-]: LOADK     R24 K18      ; R24 := 1
162 [-]: GETGLOBAL R25 K26      ; R25 := math
163 [-]: GETTABLE  R25 R25 K33  ; R25 := R25["0x65F9712A"]
164 [-]: GETUPVAL  R26 U4       ; R26 := U4
165 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["MAX_SHADER_INFLUENCES"]
166 [-]: LEN       R27 R18      ; R27 := # R18
167 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
168 [-]: LOADK     R26 K18      ; R26 := 1
169 [-]: FORPREP   R24 183      ; R24 -= R26; PC := 183
170 [-]: GETGLOBAL R28 K36      ; R28 := influenceMapMaterial
171 [-]: SELF      R28 R28 K37  ; R29 := R28; R28 := R28["0x94FB2E1A"]
172 [-]: GETUPVAL  R30 U5       ; R30 := U5
173 [-]: GETTABLE  R30 R30 K38  ; R30 := R30["INFLUENCE_MAP"]
174 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
175 [-]: GETTABLE  R31 R18 R27  ; R31 := R18[R27]
176 [-]: GETTABLE  R31 R31 K39  ; R31 := R31["x"]
177 [-]: GETTABLE  R32 R18 R27  ; R32 := R18[R27]
178 [-]: GETTABLE  R32 R32 K40  ; R32 := R32["y"]
179 [-]: LOADK     R33 K19      ; R33 := 0
180 [-]: GETTABLE  R34 R18 R27  ; R34 := R18[R27]
181 [-]: GETTABLE  R34 R34 K41  ; R34 := R34["z"]
182 [-]: CALL      R28 7 1      ; R28(R29,R30,R31,R32,R33,R34)
183 [-]: FORLOOP   R24 170      ; R24 += R26; if R24 <= R25 then begin PC := 170; R27 := R24 end
184 [-]: LEN       R28 R18      ; R28 := # R18
185 [-]: ADD       R28 R28 K18  ; R28 := R28 + 1
186 [-]: GETUPVAL  R29 U4       ; R29 := U4
187 [-]: GETTABLE  R29 R29 K34  ; R29 := R29["MAX_SHADER_INFLUENCES"]
188 [-]: LOADK     R30 K18      ; R30 := 1
189 [-]: FORPREP   R28 205      ; R28 -= R30; PC := 205
190 [-]: GETUPVAL  R32 U5       ; R32 := U5
191 [-]: GETTABLE  R32 R32 K38  ; R32 := R32["INFLUENCE_MAP"]
192 [-]: GETTABLE  R32 R32 R31  ; R32 := R32[R31]
193 [-]: TEST      R32 0        ; if not R32 then PC := 205
194 [-]: JMP       205          ; PC := 205
195 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
196 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
197 [-]: GETUPVAL  R34 U5       ; R34 := U5
198 [-]: GETTABLE  R34 R34 K38  ; R34 := R34["INFLUENCE_MAP"]
199 [-]: GETTABLE  R34 R34 R31  ; R34 := R34[R31]
200 [-]: LOADK     R35 K19      ; R35 := 0
201 [-]: LOADK     R36 K19      ; R36 := 0
202 [-]: LOADK     R37 K19      ; R37 := 0
203 [-]: LOADK     R38 K19      ; R38 := 0
204 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
205 [-]: FORLOOP   R28 190      ; R28 += R30; if R28 <= R29 then begin PC := 190; R31 := R28 end
206 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
207 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
208 [-]: GETGLOBAL R34 K42      ; R34 := 0xEC274B1A
209 [-]: LOADK     R35 K43      ; R35 := "ZoomValue_NumNodes"
210 [-]: CALL      R34 2 2      ; R34 := R34(R35)
211 [-]: MOVE      R35 R5       ; R35 := R5
212 [-]: LOADK     R36 K19      ; R36 := 0
213 [-]: LOADK     R37 K19      ; R37 := 0
214 [-]: LOADK     R38 K19      ; R38 := 0
215 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
216 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
217 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
218 [-]: GETGLOBAL R34 K42      ; R34 := 0xEC274B1A
219 [-]: LOADK     R35 K44      ; R35 := "Bounds"
220 [-]: CALL      R34 2 2      ; R34 := R34(R35)
221 [-]: SUB       R35 R13 K45  ; R35 := R13 - 0.019999999552965
222 [-]: ADD       R36 R14 K45  ; R36 := R14 + 0.019999999552965
223 [-]: SUB       R37 R15 K45  ; R37 := R15 - 0.019999999552965
224 [-]: ADD       R38 R16 K45  ; R38 := R16 + 0.019999999552965
225 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
226 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 960
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x8DB5D01F"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x7AEE2957"]
 10 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 11 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 12 [-]: MOVE      R1 R1        ; R1 := R1
 13 [-]: JMP       16           ; PC := 16
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 964
; #Upvalues:       22
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "VoidTrader"
  4 [-]: LOADK     R4 K3        ; R4 := "_visible"
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  9 [-]: LOADK     R3 K4        ; R3 := "Nodes.Node"
 10 [-]: LOADK     R4 K3        ; R4 := "_visible"
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 15 [-]: LOADK     R3 K5        ; R3 := "NodeNotification"
 16 [-]: LOADK     R4 K3        ; R4 := "_visible"
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 20 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 21 [-]: LOADK     R3 K6        ; R3 := "SubLabel"
 22 [-]: LOADK     R4 K3        ; R4 := "_visible"
 23 [-]: MOVE      R5 R0        ; R5 := R0
 24 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 25 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 26 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 27 [-]: LOADK     R3 K7        ; R3 := "NodeTransmission"
 28 [-]: LOADK     R4 K3        ; R4 := "_visible"
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 31 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 32 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 33 [-]: LOADK     R3 K8        ; R3 := "InfoTip.NodeTransmission"
 34 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 35 [-]: LOADK     R5 K10       ; R5 := 0
 36 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 37 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 38 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 39 [-]: LOADK     R3 K11       ; R3 := "InfoTip"
 40 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 41 [-]: LOADK     R5 K10       ; R5 := 0
 42 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 43 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 44 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 45 [-]: LOADK     R3 K12       ; R3 := "InfluenceMap"
 46 [-]: LOADK     R4 K9        ; R4 := "_alpha"
 47 [-]: LOADK     R5 K10       ; R5 := 0
 48 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 49 [-]: GETUPVAL  R1 U0        ; R1 := U0
 50 [-]: GETGLOBAL R2 K14       ; R2 := 0x400E7765
 51 [-]: GETGLOBAL R3 K15       ; R3 := _T
 52 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["InRailJackMode"]
 53 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 54 [-]: TEST      R2 1         ; if R2 then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: GETGLOBAL R2 K15       ; R2 := _T
 57 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["InRailJackMode"]
 58 [-]: JMP       61           ; PC := 61
 59 [-]: MOVE      R2 R0        ; R2 := R0
 60 [-]: MOVE      R2 R1        ; R2 := R1
 61 [-]: SETTABLE  R1 K13 R2    ; R1["Active"] := R2
 62 [-]: GETUPVAL  R1 U0        ; R1 := U0
 63 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["Button"]
 64 [-]: EQ        0 R1 K18     ; if R1 ~= nil then PC := 80
 65 [-]: JMP       80           ; PC := 80
 66 [-]: GETGLOBAL R1 K19       ; R1 := 0x329BDC44
 67 [-]: LOADK     R2 K20       ; R2 := "Lotus.Interface.Components.RailjackModeButton"
 68 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 69 [-]: GETUPVAL  R2 U0        ; R2 := U0
 70 [-]: GETTABLE  R3 R1 K21    ; R3 := R1["0x46FF1A3C"]
 71 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 72 [-]: LOADK     R5 K22       ; R5 := "RailjackBtn"
 73 [-]: GETUPVAL  R6 U1        ; R6 := U1
 74 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 75 [-]: SETTABLE  R2 K17 R3    ; R2["Button"] := R3
 76 [-]: GETUPVAL  R2 U0        ; R2 := U0
 77 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Button"]
 78 [-]: GETUPVAL  R3 U2        ; R3 := U2
 79 [-]: SETTABLE  R2 K23 R3    ; R2["mOnPressedCallback"] := R3
 80 [-]: GETUPVAL  R2 U0        ; R2 := U0
 81 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Button"]
 82 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2["0xE2A2E3AC"]
 83 [-]: GETUPVAL  R4 U0        ; R4 := U0
 84 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["Active"]
 85 [-]: MOVE      R5 R0        ; R5 := R0
 86 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 87 [-]: GETUPVAL  R2 U0        ; R2 := U0
 88 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["Button"]
 89 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2["0x625791A8"]
 90 [-]: GETGLOBAL R4 K15       ; R4 := _T
 91 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["gActiveMatchMakingMode"]
 92 [-]: GETGLOBAL R5 K15       ; R5 := _T
 93 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["MATCHMAKING_OFFLINE_GAMEMODE"]
 94 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 100
 95 [-]: JMP       100          ; PC := 100
 96 [-]: GETUPVAL  R4 U0        ; R4 := U0
 97 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["Active"]
 98 [-]: JMP       101          ; PC := 101
 99 [-]: MOVE      R4 R0        ; R4 := R0
100 [-]: MOVE      R4 R1        ; R4 := R1
101 [-]: CALL      R2 3 1       ; R2(R3,R4)
102 [-]: GETUPVAL  R2 U0        ; R2 := U0
103 [-]: CLOSURE   R3 0         ; R3 := closure(Function #30.1)
104 [-]: GETUPVAL  R0 U0        ; R0 := U0
105 [-]: SETTABLE  R2 K28 R3    ; R2["UpdateButtonVisibility"] := R3
106 [-]: GETUPVAL  R2 U0        ; R2 := U0
107 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["0x42C0C1F"]
108 [-]: CALL      R2 1 1       ; R2()
109 [-]: GETGLOBAL R2 K30       ; R2 := gGameConfig
110 [-]: SELF      R2 R2 K31    ; R3 := R2; R2 := R2["0x89E53943"]
111 [-]: CALL      R2 2 2       ; R2 := R2(R3)
112 [-]: TEST      R2 0         ; if not R2 then PC := 129
113 [-]: JMP       129          ; PC := 129
114 [-]: GETUPVAL  R2 U0        ; R2 := U0
115 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["Active"]
116 [-]: TEST      R2 1         ; if R2 then PC := 129
117 [-]: JMP       129          ; PC := 129
118 [-]: GETUPVAL  R2 U3        ; R2 := U3
119 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["0xB11F032"]
120 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
121 [-]: SELF      R3 R3 K33    ; R4 := R3; R3 := R3["0x5DB0BD4"]
122 [-]: LOADK     R5 K34       ; R5 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
123 [-]: MOVE      R6 R0        ; R6 := R0
124 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
125 [-]: CALL      R2 0 1       ; R2(R3,...)
126 [-]: GETUPVAL  R2 U4        ; R2 := U4
127 [-]: CALL      R2 1 1       ; R2()
128 [-]: RETURN    R0 1         ; return 
129 [-]: GETGLOBAL R2 K15       ; R2 := _T
130 [-]: SETTABLE  R2 K35 K36   ; R2["RadialSolarMapOpen"] := "0x1"
131 [-]: GETGLOBAL R2 K15       ; R2 := _T
132 [-]: GETTABLE  R2 R2 K37    ; R2 := R2["HideHud"]
133 [-]: EQ        0 R2 K18     ; if R2 ~= nil then PC := 138
134 [-]: JMP       138          ; PC := 138
135 [-]: GETGLOBAL R2 K15       ; R2 := _T
136 [-]: SETTABLE  R2 K37 K38   ; R2["HideHud"] := 1
137 [-]: JMP       143          ; PC := 143
138 [-]: GETGLOBAL R2 K15       ; R2 := _T
139 [-]: GETGLOBAL R3 K15       ; R3 := _T
140 [-]: GETTABLE  R3 R3 K37    ; R3 := R3["HideHud"]
141 [-]: ADD       R3 R3 K38    ; R3 := R3 + 1
142 [-]: SETTABLE  R2 K37 R3    ; R2["HideHud"] := R3
143 [-]: GETGLOBAL R2 K15       ; R2 := _T
144 [-]: GETTABLE  R2 R2 K39    ; R2 := R2["WareframeChallenge"]
145 [-]: EQ        0 R2 K18     ; if R2 ~= nil then PC := 148
146 [-]: JMP       148          ; PC := 148
147 [-]: MOVE      R2 R0        ; R2 := R0
148 [-]: MOVE      R2 R1        ; R2 := R1
149 [-]: MOVE      R2 R5        ; R2 := R5
150 [-]: MOVE      R2 R0        ; R2 := R0
151 [-]: MOVE      R2 R6        ; R2 := R6
152 [-]: GETUPVAL  R2 U7        ; R2 := U7
153 [-]: GETUPVAL  R3 U8        ; R3 := U8
154 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["0xB6EF57A6"]
155 [-]: CALL      R3 1 2       ; R3 := R3()
156 [-]: SETTABLE  R2 K40 R3    ; R2["SplinePoints"] := R3
157 [-]: GETUPVAL  R2 U5        ; R2 := U5
158 [-]: TEST      R2 1         ; if R2 then PC := 187
159 [-]: JMP       187          ; PC := 187
160 [-]: GETGLOBAL R2 K14       ; R2 := 0x400E7765
161 [-]: GETGLOBAL R3 K42       ; R3 := gGameData
162 [-]: CALL      R2 2 2       ; R2 := R2(R3)
163 [-]: TEST      R2 1         ; if R2 then PC := 187
164 [-]: JMP       187          ; PC := 187
165 [-]: GETGLOBAL R2 K42       ; R2 := gGameData
166 [-]: SELF      R2 R2 K43    ; R3 := R2; R2 := R2["0x66024816"]
167 [-]: CALL      R2 2 2       ; R2 := R2(R3)
168 [-]: TEST      R2 1         ; if R2 then PC := 174
169 [-]: JMP       174          ; PC := 174
170 [-]: GETUPVAL  R2 U9        ; R2 := U9
171 [-]: GETGLOBAL R3 K15       ; R3 := _T
172 [-]: GETTABLE  R3 R3 K44    ; R3 := R3["REGION_ID_MOON"]
173 [-]: SETTABLE  R2 R3 K36    ; R2[R3] := "0x1"
174 [-]: GETGLOBAL R2 K42       ; R2 := gGameData
175 [-]: SELF      R2 R2 K45    ; R3 := R2; R2 := R2["0xD172216E"]
176 [-]: CALL      R2 2 2       ; R2 := R2(R3)
177 [-]: TEST      R2 1         ; if R2 then PC := 183
178 [-]: JMP       183          ; PC := 183
179 [-]: GETUPVAL  R2 U9        ; R2 := U9
180 [-]: GETGLOBAL R3 K15       ; R3 := _T
181 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["REGION_ID_FORTRESS"]
182 [-]: SETTABLE  R2 R3 K36    ; R2[R3] := "0x1"
183 [-]: GETUPVAL  R2 U9        ; R2 := U9
184 [-]: GETGLOBAL R3 K15       ; R3 := _T
185 [-]: GETTABLE  R3 R3 K47    ; R3 := R3["REGION_ID_DARK_SECTOR"]
186 [-]: SETTABLE  R2 R3 K36    ; R2[R3] := "0x1"
187 [-]: GETUPVAL  R2 U9        ; R2 := U9
188 [-]: GETGLOBAL R3 K15       ; R3 := _T
189 [-]: GETTABLE  R3 R3 K48    ; R3 := R3["REGION_ID_DEEP_SPACE"]
190 [-]: GETUPVAL  R4 U0        ; R4 := U0
191 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["Active"]
192 [-]: MOVE      R4 R4        ; R4 := R4
193 [-]: SETTABLE  R2 R3 R4     ; R2[R3] := R4
194 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
195 [-]: SELF      R2 R2 K49    ; R3 := R2; R2 := R2["0xF017C404"]
196 [-]: LOADK     R4 K10       ; R4 := 0
197 [-]: CALL      R2 3 1       ; R2(R3,R4)
198 [-]: GETGLOBAL R2 K19       ; R2 := 0x329BDC44
199 [-]: LOADK     R3 K50       ; R3 := "Lotus.Interface.Libs.TimerMgr"
200 [-]: CALL      R2 2 2       ; R2 := R2(R3)
201 [-]: GETTABLE  R3 R2 K51    ; R3 := R2["0xC2A7FAC0"]
202 [-]: CALL      R3 1 2       ; R3 := R3()
203 [-]: MOVE      R3 R10       ; R3 := R10
204 [-]: GETUPVAL  R3 U11       ; R3 := U11
205 [-]: EQ        0 R3 K18     ; if R3 ~= nil then PC := 236
206 [-]: JMP       236          ; PC := 236
207 [-]: GETGLOBAL R3 K19       ; R3 := 0x329BDC44
208 [-]: LOADK     R4 K52       ; R4 := "EE.Interface.AnchorMgr"
209 [-]: CALL      R3 2 2       ; R3 := R3(R4)
210 [-]: GETTABLE  R4 R3 K21    ; R4 := R3["0x46FF1A3C"]
211 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
212 [-]: CALL      R4 2 2       ; R4 := R4(R5)
213 [-]: MOVE      R4 R11       ; R4 := R11
214 [-]: GETUPVAL  R4 U11       ; R4 := U11
215 [-]: SELF      R4 R4 K53    ; R5 := R4; R4 := R4["0x99AA2516"]
216 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
217 [-]: LOADK     R7 K54       ; R7 := "RegionInfo"
218 [-]: NEWTABLE  R8 2 0       ; R8 := {}
219 [-]: GETUPVAL  R9 U11       ; R9 := U11
220 [-]: GETTABLE  R9 R9 K55    ; R9 := R9["ANCHOR_H_RIGHT"]
221 [-]: GETUPVAL  R10 U11      ; R10 := U11
222 [-]: GETTABLE  R10 R10 K56  ; R10 := R10["ANCHOR_V_TOP"]
223 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
224 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
225 [-]: GETUPVAL  R4 U11       ; R4 := U11
226 [-]: SELF      R4 R4 K53    ; R5 := R4; R4 := R4["0x99AA2516"]
227 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
228 [-]: LOADK     R7 K57       ; R7 := "RailJackBtn"
229 [-]: NEWTABLE  R8 2 0       ; R8 := {}
230 [-]: GETUPVAL  R9 U11       ; R9 := U11
231 [-]: GETTABLE  R9 R9 K55    ; R9 := R9["ANCHOR_H_RIGHT"]
232 [-]: GETUPVAL  R10 U11      ; R10 := U11
233 [-]: GETTABLE  R10 R10 K56  ; R10 := R10["ANCHOR_V_TOP"]
234 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
235 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
236 [-]: TEST      R0 0         ; if not R0 then PC := 258
237 [-]: JMP       258          ; PC := 258
238 [-]: GETUPVAL  R4 U12       ; R4 := U12
239 [-]: CALL      R4 1 1       ; R4()
240 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
241 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4["0x1C19D966"]
242 [-]: LOADK     R6 K58       ; R6 := "Reticle"
243 [-]: LOADK     R7 K59       ; R7 := "_x"
244 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
245 [-]: SELF      R8 R8 K60    ; R9 := R8; R8 := R8["0xF3E132E0"]
246 [-]: CALL      R8 2 2       ; R8 := R8(R9)
247 [-]: MUL       R8 R8 K61    ; R8 := R8 * 0.5
248 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
249 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
250 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4["0x1C19D966"]
251 [-]: LOADK     R6 K58       ; R6 := "Reticle"
252 [-]: LOADK     R7 K62       ; R7 := "_y"
253 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
254 [-]: SELF      R8 R8 K63    ; R9 := R8; R8 := R8["0x68998E7D"]
255 [-]: CALL      R8 2 2       ; R8 := R8(R9)
256 [-]: MUL       R8 R8 K61    ; R8 := R8 * 0.5
257 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
258 [-]: GETGLOBAL R4 K15       ; R4 := _T
259 [-]: GETUPVAL  R5 U13       ; R5 := U13
260 [-]: SETTABLE  R4 K64 R5    ; R4["RadialSolarMap_OnAggregateResults"] := R5
261 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
262 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4["0x5DB0BD4"]
263 [-]: LOADK     R6 K65       ; R6 := "<LOCKED>"
264 [-]: MOVE      R7 R1        ; R7 := R1
265 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
266 [-]: MOVE      R4 R14       ; R4 := R14
267 [-]: GETGLOBAL R4 K19       ; R4 := 0x329BDC44
268 [-]: LOADK     R5 K66       ; R5 := "Lotus.Interface.Libs.SortieGenerator"
269 [-]: CALL      R4 2 2       ; R4 := R4(R5)
270 [-]: GETTABLE  R5 R4 K67    ; R5 := R4["0xF6BFCC97"]
271 [-]: CALL      R5 1 2       ; R5 := R5()
272 [-]: MOVE      R5 R15       ; R5 := R15
273 [-]: TEST      R0 0         ; if not R0 then PC := 279
274 [-]: JMP       279          ; PC := 279
275 [-]: GETUPVAL  R5 U3        ; R5 := U3
276 [-]: GETTABLE  R5 R5 K68    ; R5 := R5["0x25992394"]
277 [-]: GETGLOBAL R6 K69       ; R6 := openSound
278 [-]: CALL      R5 2 1       ; R5(R6)
279 [-]: GETUPVAL  R5 U16       ; R5 := U16
280 [-]: GETGLOBAL R6 K71       ; R6 := 0xF595ADDE
281 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
282 [-]: SELF      R7 R7 K72    ; R8 := R7; R7 := R7["0x6B7B470B"]
283 [-]: LOADK     R9 K73       ; R9 := "InfoTip.LocationPic"
284 [-]: LOADK     R10 K74      ; R10 := "_height"
285 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
286 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
287 [-]: SETTABLE  R5 K70 R6    ; R5["InitLocationPicHeight"] := R6
288 [-]: GETUPVAL  R5 U16       ; R5 := U16
289 [-]: GETGLOBAL R6 K71       ; R6 := 0xF595ADDE
290 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
291 [-]: SELF      R7 R7 K72    ; R8 := R7; R7 := R7["0x6B7B470B"]
292 [-]: LOADK     R9 K73       ; R9 := "InfoTip.LocationPic"
293 [-]: LOADK     R10 K62      ; R10 := "_y"
294 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
295 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
296 [-]: SETTABLE  R5 K75 R6    ; R5["InitLocationPicYPos"] := R6
297 [-]: MOVE      R5 R1        ; R5 := R1
298 [-]: MOVE      R5 R17       ; R5 := R17
299 [-]: GETGLOBAL R5 K76       ; R5 := gGameRules
300 [-]: SELF      R5 R5 K77    ; R6 := R5; R5 := R5["0x8709CE86"]
301 [-]: CALL      R5 2 2       ; R5 := R5(R6)
302 [-]: GETGLOBAL R6 K14       ; R6 := 0x400E7765
303 [-]: MOVE      R7 R5        ; R7 := R5
304 [-]: CALL      R6 2 2       ; R6 := R6(R7)
305 [-]: TEST      R6 1         ; if R6 then PC := 310
306 [-]: JMP       310          ; PC := 310
307 [-]: SELF      R6 R5 K25    ; R7 := R5; R6 := R5["0x625791A8"]
308 [-]: MOVE      R8 R0        ; R8 := R0
309 [-]: CALL      R6 3 1       ; R6(R7,R8)
310 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
311 [-]: SELF      R6 R6 K78    ; R7 := R6; R6 := R6["0x6B4C9862"]
312 [-]: MOVE      R8 R1        ; R8 := R1
313 [-]: CALL      R6 3 1       ; R6(R7,R8)
314 [-]: GETUPVAL  R6 U18       ; R6 := U18
315 [-]: GETUPVAL  R7 U19       ; R7 := U19
316 [-]: GETTABLE  R7 R7 K79    ; R7 := R7["READ_ONLY"]
317 [-]: CALL      R6 2 1       ; R6(R7)
318 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
319 [-]: SELF      R6 R6 K80    ; R7 := R6; R6 := R6["0x7E1F26D7"]
320 [-]: LOADK     R8 K81       ; R8 := "InfoTip.Bg"
321 [-]: GETGLOBAL R9 K82       ; R9 := _G
322 [-]: GETTABLE  R9 R9 K83    ; R9 := R9["UIMaterial_SmoothEdgeNoDepthTest"]
323 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
324 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
325 [-]: SELF      R6 R6 K80    ; R7 := R6; R6 := R6["0x7E1F26D7"]
326 [-]: LOADK     R8 K84       ; R8 := "InfoTip.Bg2"
327 [-]: GETGLOBAL R9 K82       ; R9 := _G
328 [-]: GETTABLE  R9 R9 K83    ; R9 := R9["UIMaterial_SmoothEdgeNoDepthTest"]
329 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
330 [-]: GETGLOBAL R6 K85       ; R6 := 0x8C64AFA9
331 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
332 [-]: LOADK     R8 K86       ; R8 := "Reticle.swapDepths"
333 [-]: LOADK     R9 K87       ; R9 := 605
334 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
335 [-]: GETGLOBAL R6 K85       ; R6 := 0x8C64AFA9
336 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
337 [-]: LOADK     R8 K88       ; R8 := "InfoTip.swapDepths"
338 [-]: LOADK     R9 K89       ; R9 := 500
339 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
340 [-]: GETGLOBAL R6 K85       ; R6 := 0x8C64AFA9
341 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
342 [-]: LOADK     R8 K90       ; R8 := "NodeTransmission.swapDepths"
343 [-]: LOADK     R9 K91       ; R9 := 480
344 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
345 [-]: GETUPVAL  R6 U20       ; R6 := U20
346 [-]: MOVE      R7 R1        ; R7 := R1
347 [-]: CALL      R6 2 1       ; R6(R7)
348 [-]: GETGLOBAL R6 K15       ; R6 := _T
349 [-]: GETTABLE  R6 R6 K92    ; R6 := R6["MAP_HideExtraUI"]
350 [-]: TEST      R6 1         ; if R6 then PC := 356
351 [-]: JMP       356          ; PC := 356
352 [-]: GETGLOBAL R6 K15       ; R6 := _T
353 [-]: GETTABLE  R6 R6 K93    ; R6 := R6["0x8ED0D55D"]
354 [-]: MOVE      R7 R1        ; R7 := R1
355 [-]: CALL      R6 2 1       ; R6(R7)
356 [-]: GETGLOBAL R6 K94       ; R6 := gFlashMgr
357 [-]: SELF      R6 R6 K95    ; R7 := R6; R6 := R6["0x616DD092"]
358 [-]: GETUPVAL  R8 U3        ; R8 := U3
359 [-]: GETTABLE  R8 R8 K96    ; R8 := R8["0xBCEEAD81"]
360 [-]: CALL      R8 1 0       ; R8,... := R8()
361 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
362 [-]: GETGLOBAL R7 K14       ; R7 := 0x400E7765
363 [-]: MOVE      R8 R6        ; R8 := R6
364 [-]: CALL      R7 2 2       ; R7 := R7(R8)
365 [-]: TEST      R7 1         ; if R7 then PC := 370
366 [-]: JMP       370          ; PC := 370
367 [-]: SELF      R7 R6 K97    ; R8 := R6; R7 := R6["0xD692CA7B"]
368 [-]: MOVE      R9 R1        ; R9 := R1
369 [-]: CALL      R7 3 1       ; R7(R8,R9)
370 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
371 [-]: SELF      R7 R7 K78    ; R8 := R7; R7 := R7["0x6B4C9862"]
372 [-]: MOVE      R9 R1        ; R9 := R1
373 [-]: CALL      R7 3 1       ; R7(R8,R9)
374 [-]: GETGLOBAL R7 K98       ; R7 := gRegion
375 [-]: SELF      R7 R7 K99    ; R8 := R7; R7 := R7["0x3E2F6BF"]
376 [-]: CALL      R7 2 2       ; R7 := R7(R8)
377 [-]: GETUPVAL  R8 U0        ; R8 := U0
378 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["Active"]
379 [-]: TEST      R8 1         ; if R8 then PC := 391
380 [-]: JMP       391          ; PC := 391
381 [-]: GETGLOBAL R8 K14       ; R8 := 0x400E7765
382 [-]: MOVE      R9 R7        ; R9 := R7
383 [-]: CALL      R8 2 2       ; R8 := R8(R9)
384 [-]: TEST      R8 1         ; if R8 then PC := 391
385 [-]: JMP       391          ; PC := 391
386 [-]: SELF      R8 R7 K100   ; R9 := R7; R8 := R7["0x28609C89"]
387 [-]: GETGLOBAL R10 K101     ; R10 := 0xEC274B1A
388 [-]: LOADK     R11 K102     ; R11 := "InstantKneel"
389 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
390 [-]: CALL      R8 0 1       ; R8(R9,...)
391 [-]: GETUPVAL  R8 U10       ; R8 := U10
392 [-]: SELF      R8 R8 K103   ; R9 := R8; R8 := R8["0x61494587"]
393 [-]: LOADK     R10 K104     ; R10 := 0.30000001192093
394 [-]: CLOSURE   R11 1        ; R11 := closure(Function #30.2)
395 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
396 [-]: GETUPVAL  R8 U10       ; R8 := U10
397 [-]: SELF      R8 R8 K103   ; R9 := R8; R8 := R8["0x61494587"]
398 [-]: LOADK     R10 K105     ; R10 := 0.60000002384186
399 [-]: CLOSURE   R11 2        ; R11 := closure(Function #30.3)
400 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
401 [-]: GETGLOBAL R8 K106      ; R8 := gGameStatsMgr
402 [-]: EQ        1 R8 K18     ; if R8 == nil then PC := 411
403 [-]: JMP       411          ; PC := 411
404 [-]: GETGLOBAL R8 K106      ; R8 := gGameStatsMgr
405 [-]: SELF      R8 R8 K107   ; R9 := R8; R8 := R8["0xCFF953A5"]
406 [-]: GETGLOBAL R10 K101     ; R10 := 0xEC274B1A
407 [-]: LOADK     R11 K108     ; R11 := "IN_SHIP_VIEW_TIME"
408 [-]: CALL      R10 2 2      ; R10 := R10(R11)
409 [-]: LOADK     R11 K109     ; R11 := "STARCHART"
410 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
411 [-]: GETUPVAL  R8 U21       ; R8 := U21
412 [-]: MOVE      R9 R0        ; R9 := R0
413 [-]: CALL      R8 2 1       ; R8(R9)
414 [-]: RETURN    R0 1         ; return 


; Function #30.1:
;
; Name:            
; Defined at line: 987
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Button"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 69
  4 [-]: JMP       69           ; PC := 69
  5 [-]: GETGLOBAL R0 K1        ; R0 := gPlayerProfileMgr
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  7 [-]: LOADK     R2 K3        ; R2 := 0
  8 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  9 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x654F1092"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0x30BDE7F"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1["0x6200B095"]
 14 [-]: GETGLOBAL R4 K7        ; R4 := Lotus_Game
 15 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["LOT_ARCHWING"]
 16 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 17 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["SUIT_SLOT"]
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: SELF      R3 R1 K6     ; R4 := R1; R3 := R1["0x6200B095"]
 20 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 21 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["LOT_ARCHWING"]
 22 [-]: GETGLOBAL R6 K7        ; R6 := Lotus_Game
 23 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["LONG_GUN_SLOT"]
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: SELF      R4 R1 K6     ; R5 := R1; R4 := R1["0x6200B095"]
 26 [-]: GETGLOBAL R6 K7        ; R6 := Lotus_Game
 27 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["LOT_ARCHWING"]
 28 [-]: GETGLOBAL R7 K7        ; R7 := Lotus_Game
 29 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["MELEE_SLOT"]
 30 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 31 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 32 [-]: GETTABLE  R6 R2 K13    ; R6 := R2["mItemType"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: TEST      R5 1         ; if R5 then PC := 46
 35 [-]: JMP       46           ; PC := 46
 36 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 37 [-]: GETTABLE  R6 R3 K13    ; R6 := R3["mItemType"]
 38 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 39 [-]: TEST      R5 1         ; if R5 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETGLOBAL R5 K12       ; R5 := 0x400E7765
 42 [-]: GETTABLE  R6 R4 K13    ; R6 := R4["mItemType"]
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: MOVE      R5 R5        ; R5 := R5
 45 [-]: JMP       48           ; PC := 48
 46 [-]: MOVE      R5 R0        ; R5 := R0
 47 [-]: MOVE      R5 R1        ; R5 := R1
 48 [-]: SELF      R6 R0 K14    ; R7 := R0; R6 := R0["0x95FCF4A0"]
 49 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 50 [-]: GETUPVAL  R7 U0        ; R7 := U0
 51 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["Button"]
 52 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7["0x625791A8"]
 53 [-]: TESTSET   R9 R5 0      ; if not R5 then PC := 68 else R9 := R5
 54 [-]: JMP       68           ; PC := 68
 55 [-]: TESTSET   R9 R6 0      ; if not R6 then PC := 68 else R9 := R6
 56 [-]: JMP       68           ; PC := 68
 57 [-]: GETGLOBAL R9 K16       ; R9 := _T
 58 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["gActiveMatchMakingMode"]
 59 [-]: GETGLOBAL R10 K16      ; R10 := _T
 60 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["MATCHMAKING_OFFLINE_GAMEMODE"]
 61 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 67
 62 [-]: JMP       67           ; PC := 67
 63 [-]: GETUPVAL  R9 U0        ; R9 := U0
 64 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["Active"]
 65 [-]: JMP       68           ; PC := 68
 66 [-]: MOVE      R9 R0        ; R9 := R0
 67 [-]: MOVE      R9 R1        ; R9 := R1
 68 [-]: CALL      R7 3 1       ; R7(R8,R9)
 69 [-]: RETURN    R0 1         ; return 


; Function #30.2:
;
; Name:            
; Defined at line: 1100
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "InitialFade"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #30.3:
;
; Name:            
; Defined at line: 1105
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R0 K3        ; R0 := mMovie
  8 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x458F27A9"]
  9 [-]: LOADK     R2 K5        ; R2 := "InitializeMore"
 10 [-]: LOADK     R3 K6        ; R3 := ""
 11 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 1118
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 1122
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["quest"]
 10 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K0        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
 14 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["quest"]
 15 [-]: EQ        1 R0 K4      ; if R0 == "" then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: MOVE      R0 R1        ; R0 := R1
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: GETGLOBAL R0 K5        ; R0 := _G
 20 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["QuestNodeNames"]
 21 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 55
 22 [-]: JMP       55           ; PC := 55
 23 [-]: GETGLOBAL R0 K7        ; R0 := 0x9FAED6BC
 24 [-]: GETGLOBAL R1 K0        ; R1 := _T
 25 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["gPendingMission"]
 26 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["name"]
 27 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 28 [-]: GETGLOBAL R1 K9        ; R1 := string
 29 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xDE44F664"]
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["HUB_TAG"]
 33 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 34 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETGLOBAL R1 K7        ; R1 := 0x9FAED6BC
 37 [-]: GETGLOBAL R2 K0        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gPendingMission"]
 39 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["baseNodeName"]
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: LOADK     R2 K13       ; R2 := 1
 42 [-]: GETGLOBAL R3 K5        ; R3 := _G
 43 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["QuestNodeNames"]
 44 [-]: LEN       R3 R3        ; R3 := # R3
 45 [-]: LOADK     R4 K13       ; R4 := 1
 46 [-]: FORPREP   R2 54        ; R2 -= R4; PC := 54
 47 [-]: GETGLOBAL R6 K5        ; R6 := _G
 48 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["QuestNodeNames"]
 49 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 50 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: MOVE      R6 R1        ; R6 := R1
 53 [-]: RETURN    R6 2         ; return R6
 54 [-]: FORLOOP   R2 47        ; R2 += R4; if R2 <= R3 then begin PC := 47; R5 := R2 end
 55 [-]: MOVE      R6 R0        ; R6 := R0
 56 [-]: RETURN    R6 2         ; return R6
 57 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 1146
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Movie"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Movie"]
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xA58BB96C"]
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["TransitioningOut"]
 13 [-]: TEST      R1 0         ; if not R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R1 R0        ; R1 := R0
 19 [-]: MOVE      R1 R1        ; R1 := R1
 20 [-]: TEST      R0 1         ; if R0 then PC := 37
 21 [-]: JMP       37           ; PC := 37
 22 [-]: TEST      R1 0         ; if not R1 then PC := 37
 23 [-]: JMP       37           ; PC := 37
 24 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 25 [-]: GETGLOBAL R3 K4        ; R3 := _G
 26 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["MapSoundInst"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R2 K4        ; R2 := _G
 31 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["MapSoundInst"]
 32 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x2842784A"]
 33 [-]: MOVE      R4 R0        ; R4 := R0
 34 [-]: CALL      R2 3 1       ; R2(R3,R4)
 35 [-]: GETGLOBAL R2 K4        ; R2 := _G
 36 [-]: SETTABLE  R2 K5 K7     ; R2["MapSoundInst"] := nil
 37 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 38 [-]: GETUPVAL  R3 U3        ; R3 := U3
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: TEST      R2 1         ; if R2 then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: GETUPVAL  R2 U3        ; R2 := U3
 43 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xA58BB96C"]
 44 [-]: CALL      R2 2 1       ; R2(R3)
 45 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 46 [-]: GETUPVAL  R3 U4        ; R3 := U4
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 1         ; if R2 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: GETUPVAL  R2 U4        ; R2 := U4
 51 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xA58BB96C"]
 52 [-]: CALL      R2 2 1       ; R2(R3)
 53 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 54 [-]: GETUPVAL  R3 U5        ; R3 := U5
 55 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 56 [-]: TEST      R2 1         ; if R2 then PC := 61
 57 [-]: JMP       61           ; PC := 61
 58 [-]: GETUPVAL  R2 U5        ; R2 := U5
 59 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xA58BB96C"]
 60 [-]: CALL      R2 2 1       ; R2(R3)
 61 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 62 [-]: GETUPVAL  R3 U6        ; R3 := U6
 63 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["MovieInst"]
 64 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 65 [-]: TEST      R2 1         ; if R2 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: GETUPVAL  R2 U6        ; R2 := U6
 68 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["MovieInst"]
 69 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xA58BB96C"]
 70 [-]: CALL      R2 2 1       ; R2(R3)
 71 [-]: GETGLOBAL R2 K9        ; R2 := gFlashMgr
 72 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x616DD092"]
 73 [-]: GETUPVAL  R4 U7        ; R4 := U7
 74 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xBCEEAD81"]
 75 [-]: CALL      R4 1 0       ; R4,... := R4()
 76 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 77 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 78 [-]: MOVE      R4 R2        ; R4 := R2
 79 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 80 [-]: TEST      R3 1         ; if R3 then PC := 85
 81 [-]: JMP       85           ; PC := 85
 82 [-]: SELF      R3 R2 K12    ; R4 := R2; R3 := R2["0xD692CA7B"]
 83 [-]: MOVE      R5 R0        ; R5 := R0
 84 [-]: CALL      R3 3 1       ; R3(R4,R5)
 85 [-]: GETGLOBAL R3 K13       ; R3 := _T
 86 [-]: SETTABLE  R3 K14 K15   ; R3["RadialSolarMapOpen"] := "0x0"
 87 [-]: GETGLOBAL R3 K13       ; R3 := _T
 88 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["HideHud"]
 89 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 96
 90 [-]: JMP       96           ; PC := 96
 91 [-]: GETGLOBAL R3 K13       ; R3 := _T
 92 [-]: GETGLOBAL R4 K13       ; R4 := _T
 93 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["HideHud"]
 94 [-]: SUB       R4 R4 K17    ; R4 := R4 - 1
 95 [-]: SETTABLE  R3 K16 R4    ; R3["HideHud"] := R4
 96 [-]: GETGLOBAL R3 K18       ; R3 := gGameStatsMgr
 97 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 106
 98 [-]: JMP       106          ; PC := 106
 99 [-]: GETGLOBAL R3 K18       ; R3 := gGameStatsMgr
100 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x47B87262"]
101 [-]: GETGLOBAL R5 K20       ; R5 := 0xEC274B1A
102 [-]: LOADK     R6 K21       ; R6 := "IN_SHIP_VIEW_TIME"
103 [-]: CALL      R5 2 2       ; R5 := R5(R6)
104 [-]: LOADK     R6 K22       ; R6 := "STARCHART"
105 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
106 [-]: GETGLOBAL R3 K23       ; R3 := gPlayerProfileMgr
107 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3["0x21EF7B1A"]
108 [-]: LOADK     R5 K25       ; R5 := 0
109 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
110 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
111 [-]: MOVE      R5 R3        ; R5 := R3
112 [-]: CALL      R4 2 2       ; R4 := R4(R5)
113 [-]: TEST      R4 1         ; if R4 then PC := 122
114 [-]: JMP       122          ; PC := 122
115 [-]: SELF      R4 R3 K26    ; R5 := R3; R4 := R3["0x3EEB612E"]
116 [-]: CALL      R4 2 2       ; R4 := R4(R5)
117 [-]: SELF      R5 R4 K27    ; R6 := R4; R5 := R4["0xF7E57216"]
118 [-]: GETGLOBAL R7 K13       ; R7 := _T
119 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["ResourceDroneVisible"]
120 [-]: MOVE      R7 R7        ; R7 := R7
121 [-]: CALL      R5 3 1       ; R5(R6,R7)
122 [-]: GETGLOBAL R5 K13       ; R5 := _T
123 [-]: SETTABLE  R5 K29 K15   ; R5["InStarChart"] := "0x0"
124 [-]: GETGLOBAL R5 K13       ; R5 := _T
125 [-]: SETTABLE  R5 K30 K7    ; R5["InRailJackMode"] := nil
126 [-]: GETGLOBAL R5 K13       ; R5 := _T
127 [-]: SETTABLE  R5 K28 K7    ; R5["ResourceDroneVisible"] := nil
128 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1202
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gRegion
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x3E2F6BF"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADK     R1 K2        ; R1 := 1
 10 [-]: RETURN    R1 2         ; return R1
 11 [-]: LOADK     R1 K3        ; R1 := 2
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1210
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: SETTABLE  R0 K0 R1     ; R0["Active"] := R1
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: SETTABLE  R0 K1 K2     ; R0["Transitioned"] := "0x1"
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: MOVE      R1 R1        ; R1 := R1
 10 [-]: LOADNIL   R2 R2        ; R2 := nil
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: MOVE      R1 R1        ; R1 := R1
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: GETUPVAL  R0 U3        ; R0 := U3
 17 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xDB33ECB2"]
 18 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 19 [-]: LOADK     R2 K5        ; R2 := 1
 20 [-]: LOADK     R3 K6        ; R3 := 0.20000000298023
 21 [-]: LOADK     R4 K7        ; R4 := 0
 22 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 23 [-]: GETGLOBAL R0 K8        ; R0 := 0x201191EA
 24 [-]: LOADK     R1 K7        ; R1 := 0
 25 [-]: CALL      R0 2 1       ; R0(R1)
 26 [-]: GETUPVAL  R0 U0        ; R0 := U0
 27 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Active"]
 28 [-]: TEST      R0 0         ; if not R0 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R0 K9        ; R0 := _T
 31 [-]: GETUPVAL  R1 U4        ; R1 := U4
 32 [-]: CALL      R1 1 2       ; R1 := R1()
 33 [-]: SETTABLE  R0 K10 R1    ; R0["InRailJackMode"] := R1
 34 [-]: JMP       37           ; PC := 37
 35 [-]: GETGLOBAL R0 K9        ; R0 := _T
 36 [-]: SETTABLE  R0 K10 K11   ; R0["InRailJackMode"] := nil
 37 [-]: GETUPVAL  R0 U5        ; R0 := U5
 38 [-]: CALL      R0 1 1       ; R0()
 39 [-]: GETGLOBAL R0 K12       ; R0 := 0x52E17A90
 40 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 41 [-]: LOADK     R2 K13       ; R2 := "_root"
 42 [-]: GETGLOBAL R3 K14       ; R3 := UISys
 43 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["FlashInstance_LINEAR"]
 44 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 45 [-]: LOADK     R5 K16       ; R5 := "_alpha"
 46 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 47 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 48 [-]: LOADK     R6 K17       ; R6 := 100
 49 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 50 [-]: LOADK     R6 K18       ; R6 := 0.30000001192093
 51 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 52 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1229
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["WareframeChallenge"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x5B8EB241"]
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: TEST      R1 0         ; if not R1 then PC := 29
 11 [-]: JMP       29           ; PC := 29
 12 [-]: GETGLOBAL R1 K3        ; R1 := table
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xE6450C9D"]
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 16 [-]: GETGLOBAL R4 K0        ; R4 := _T
 17 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["ResourceDroneVisible"]
 18 [-]: TEST      R4 0         ; if not R4 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: LOADK     R4 K7        ; R4 := "/Lotus/Language/Menu/EpisodeStatus"
 21 [-]: TEST      R4 1         ; if R4 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: LOADK     R4 K8        ; R4 := "/Lotus/Language/Menu/ResourceDrones"
 24 [-]: SETTABLE  R3 K5 R4     ; R3["Label"] := R4
 25 [-]: GETUPVAL  R4 U1        ; R4 := U1
 26 [-]: SETTABLE  R3 K9 R4     ; R3["CallBack"] := R4
 27 [-]: SETTABLE  R3 K10 K11   ; R3["CallOut"] := "MENU_LTHUMB"
 28 [-]: CALL      R1 3 1       ; R1(R2,R3)
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["DioOpen"]
 31 [-]: TEST      R1 1         ; if R1 then PC := 101
 32 [-]: JMP       101          ; PC := 101
 33 [-]: GETUPVAL  R1 U3        ; R1 := U3
 34 [-]: TEST      R1 1         ; if R1 then PC := 101
 35 [-]: JMP       101          ; PC := 101
 36 [-]: MOVE      R1 R1        ; R1 := R1
 37 [-]: GETGLOBAL R2 K13       ; R2 := Engine
 38 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0x9490FE70"]
 39 [-]: CALL      R2 1 2       ; R2 := R2()
 40 [-]: TEST      R2 0         ; if not R2 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R2 K15       ; R2 := 0x400E7765
 43 [-]: GETGLOBAL R3 K0        ; R3 := _T
 44 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["SquadOverlay"]
 45 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 46 [-]: TEST      R2 1         ; if R2 then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETGLOBAL R2 K0        ; R2 := _T
 49 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["SquadOverlay"]
 50 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x458F27A9"]
 51 [-]: LOADK     R4 K18       ; R4 := "IsAcceptBtnVisible"
 52 [-]: LOADK     R5 K19       ; R5 := ""
 53 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 54 [-]: MOVE      R1 R2        ; R1 := R2
 55 [-]: TEST      R1 0         ; if not R1 then PC := 73
 56 [-]: JMP       73           ; PC := 73
 57 [-]: GETGLOBAL R2 K3        ; R2 := table
 58 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xE6450C9D"]
 59 [-]: MOVE      R3 R0        ; R3 := R0
 60 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 61 [-]: GETUPVAL  R5 U4        ; R5 := U4
 62 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["0xF81722A2"]
 63 [-]: GETGLOBAL R6 K21       ; R6 := _G
 64 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["StalkerMode"]
 65 [-]: LOADK     R7 K23       ; R7 := "LOCATE TENNO"
 66 [-]: LOADK     R8 K24       ; R8 := "/Lotus/Language/Menu/Loadout_Change"
 67 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 68 [-]: SETTABLE  R4 K5 R5     ; R4["Label"] := R5
 69 [-]: GETUPVAL  R5 U5        ; R5 := U5
 70 [-]: SETTABLE  R4 K9 R5     ; R4["CallBack"] := R5
 71 [-]: SETTABLE  R4 K10 K25   ; R4["CallOut"] := "MENU_GENERIC1"
 72 [-]: CALL      R2 3 1       ; R2(R3,R4)
 73 [-]: GETGLOBAL R2 K13       ; R2 := Engine
 74 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0x9490FE70"]
 75 [-]: CALL      R2 1 2       ; R2 := R2()
 76 [-]: TEST      R2 0         ; if not R2 then PC := 101
 77 [-]: JMP       101          ; PC := 101
 78 [-]: GETGLOBAL R2 K15       ; R2 := 0x400E7765
 79 [-]: GETGLOBAL R3 K0        ; R3 := _T
 80 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["SquadOverlay"]
 81 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 82 [-]: TEST      R2 1         ; if R2 then PC := 101
 83 [-]: JMP       101          ; PC := 101
 84 [-]: GETGLOBAL R2 K0        ; R2 := _T
 85 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["SquadOverlay"]
 86 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x458F27A9"]
 87 [-]: LOADK     R4 K26       ; R4 := "CanInvite"
 88 [-]: LOADK     R5 K19       ; R5 := ""
 89 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 90 [-]: TEST      R2 0         ; if not R2 then PC := 101
 91 [-]: JMP       101          ; PC := 101
 92 [-]: GETGLOBAL R2 K3        ; R2 := table
 93 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xE6450C9D"]
 94 [-]: MOVE      R3 R0        ; R3 := R0
 95 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 96 [-]: SETTABLE  R4 K5 K27    ; R4["Label"] := "/Lotus/Language/Menu/SocialOverlay_Invite"
 97 [-]: GETUPVAL  R5 U6        ; R5 := U6
 98 [-]: SETTABLE  R4 K9 R5     ; R4["CallBack"] := R5
 99 [-]: SETTABLE  R4 K10 K28   ; R4["CallOut"] := "MENU_RTRIGGER1"
100 [-]: CALL      R2 3 1       ; R2(R3,R4)
101 [-]: LOADK     R2 K19       ; R2 := ""
102 [-]: GETUPVAL  R3 U2        ; R3 := U2
103 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["DioOpen"]
104 [-]: TEST      R3 0         ; if not R3 then PC := 108
105 [-]: JMP       108          ; PC := 108
106 [-]: LOADK     R2 K29       ; R2 := "/Lotus/Language/Menu/Global_Back"
107 [-]: JMP       122          ; PC := 122
108 [-]: GETUPVAL  R3 U4        ; R3 := U4
109 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["0xF81722A2"]
110 [-]: GETUPVAL  R4 U7        ; R4 := U7
111 [-]: GETTABLE  R4 R4 K30    ; R4 := R4["mTargetVal"]
112 [-]: GETUPVAL  R5 U8        ; R5 := U8
113 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["STARTING_ZOOM"]
114 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 117
115 [-]: JMP       117          ; PC := 117
116 [-]: MOVE      R4 R0        ; R4 := R0
117 [-]: MOVE      R4 R1        ; R4 := R1
118 [-]: LOADK     R5 K32       ; R5 := "/Lotus/Language/Menu/Lobby_ZoomOut"
119 [-]: LOADK     R6 K33       ; R6 := "/Lotus/Language/Menu/Exit"
120 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
121 [-]: MOVE      R2 R3        ; R2 := R3
122 [-]: GETGLOBAL R3 K3        ; R3 := table
123 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xE6450C9D"]
124 [-]: MOVE      R4 R0        ; R4 := R0
125 [-]: NEWTABLE  R5 0 3       ; R5 := {}
126 [-]: SETTABLE  R5 K5 R2     ; R5["Label"] := R2
127 [-]: GETUPVAL  R6 U9        ; R6 := U9
128 [-]: SETTABLE  R5 K9 R6     ; R5["CallBack"] := R6
129 [-]: SETTABLE  R5 K10 K34   ; R5["CallOut"] := "MENU_CANCEL"
130 [-]: CALL      R3 3 1       ; R3(R4,R5)
131 [-]: GETUPVAL  R3 U10       ; R3 := U10
132 [-]: TEST      R3 0         ; if not R3 then PC := 134
133 [-]: JMP       134          ; PC := 134
134 [-]: GETGLOBAL R3 K0        ; R3 := _T
135 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["SetButtons"]
136 [-]: TEST      R3 0         ; if not R3 then PC := 146
137 [-]: JMP       146          ; PC := 146
138 [-]: GETGLOBAL R3 K0        ; R3 := _T
139 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["0xEFDFBF7E"]
140 [-]: GETGLOBAL R4 K37       ; R4 := mMovie
141 [-]: MOVE      R5 R0        ; R5 := R0
142 [-]: GETGLOBAL R6 K38       ; R6 := 0x6B695579
143 [-]: LOADK     R7 K39       ; R7 := 1
144 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
145 [-]: CALL      R3 0 1       ; R3(R4,...)
146 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1281
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1285
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETGLOBAL R1 K0        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ResourceDroneVisible"]
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: SETTABLE  R0 K1 R1     ; R0["ResourceDroneVisible"] := R1
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1290
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: MOVE      R5 R1        ; R5 := R1
  2 [-]: MOVE      R6 R2        ; R6 := R2
  3 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  4 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
  5 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0x6B7B470B"]
  6 [-]: MOVE      R8 R5        ; R8 := R5
  7 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  8 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
  9 [-]: MOVE      R8 R6        ; R8 := R6
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: TEST      R7 1         ; if R7 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R7 K3        ; R7 := 0x9FAED6BC
 14 [-]: MOVE      R8 R6        ; R8 := R6
 15 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 16 [-]: EQ        0 R7 K4      ; if R7 ~= "undefined" then PC := 37
 17 [-]: JMP       37           ; PC := 37
 18 [-]: TEST      R4 0         ; if not R4 then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETGLOBAL R7 K5        ; R7 := 0x8C64AFA9
 21 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
 22 [-]: MOVE      R9 R0        ; R9 := R0
 23 [-]: LOADK     R10 K6       ; R10 := ".createEmptyMovieClip"
 24 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 25 [-]: MOVE      R10 R5       ; R10 := R5
 26 [-]: ADD       R11 R2 R3    ; R11 := R2 + R3
 27 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R7 K5        ; R7 := 0x8C64AFA9
 30 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
 31 [-]: MOVE      R9 R0        ; R9 := R0
 32 [-]: LOADK     R10 K7       ; R10 := ".duplicateMovieClip"
 33 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 34 [-]: MOVE      R10 R5       ; R10 := R5
 35 [-]: ADD       R11 R2 R3    ; R11 := R2 + R3
 36 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 37 [-]: GETGLOBAL R7 K8        ; R7 := string
 38 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0xAF449107"]
 39 [-]: MOVE      R8 R0        ; R8 := R0
 40 [-]: LOADK     R9 K10       ; R9 := "(.*%.).+$"
 41 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 42 [-]: EQ        0 R7 K11     ; if R7 ~= nil then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: MOVE      R7 R5        ; R7 := R5
 45 [-]: JMP       49           ; PC := 49
 46 [-]: MOVE      R8 R7        ; R8 := R7
 47 [-]: MOVE      R9 R5        ; R9 := R5
 48 [-]: CONCAT    R7 R8 R9     ; R7 := R8 .. R9
 49 [-]: RETURN    R7 2         ; return R7
 50 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1309
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x8C64AFA9
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K2        ; R4 := ".removeMovieClip"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: CALL      R1 3 1       ; R1(R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1313
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: TEST      R0 0         ; if not R0 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["name"]
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionsCompleted"]
 11 [-]: EQ        0 R1 K2      ; if R1 ~= 0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADK     R1 K3        ; R1 := 25
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["LABEL_ALPHA"]
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1321
; #Upvalues:       5
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: LOADK     R8 K0        ; R8 := "SubLabel"
  3 [-]: LOADK     R9 K0        ; R9 := "SubLabel"
  4 [-]: GETUPVAL  R10 U1       ; R10 := U1
  5 [-]: LEN       R10 R10      ; R10 := # R10
  6 [-]: ADD       R10 R10 K1   ; R10 := R10 + 1
  7 [-]: LOADK     R11 K2       ; R11 := 200
  8 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
  9 [-]: GETGLOBAL R8 K3        ; R8 := mMovie
 10 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8["0xA7FE5515"]
 11 [-]: MOVE      R10 R7       ; R10 := R7
 12 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 13 [-]: GETUPVAL  R9 U2        ; R9 := U2
 14 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["Active"]
 15 [-]: TEST      R9 0         ; if not R9 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: MOVE      R9 R0        ; R9 := R0
 18 [-]: LOADK     R10 K6       ; R10 := "_SPACE"
 19 [-]: CONCAT    R0 R9 R10    ; R0 := R9 .. R10
 20 [-]: GETGLOBAL R9 K7        ; R9 := string
 21 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x639C642A"]
 22 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 23 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10["0x5DB0BD4"]
 24 [-]: MOVE      R12 R0       ; R12 := R0
 25 [-]: MOVE      R13 R0       ; R13 := R0
 26 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 27 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 28 [-]: GETUPVAL  R10 U3       ; R10 := U3
 29 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["Tag"]
 30 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 45
 31 [-]: JMP       45           ; PC := 45
 32 [-]: GETGLOBAL R10 K7       ; R10 := string
 33 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0x633C4246"]
 34 [-]: MOVE      R11 R9       ; R11 := R9
 35 [-]: LOADK     R12 K12      ; R12 := " "
 36 [-]: LOADK     R13 K13      ; R13 := "\r\n\r\n"
 37 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 38 [-]: MOVE      R9 R10       ; R9 := R10
 39 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 40 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 41 [-]: MOVE      R12 R7       ; R12 := R7
 42 [-]: LOADK     R13 K15      ; R13 := "verticalAlignment"
 43 [-]: LOADK     R14 K16      ; R14 := "bottom"
 44 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 45 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 46 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10["0xD6A79FE9"]
 47 [-]: MOVE      R12 R7       ; R12 := R7
 48 [-]: LOADK     R13 K18      ; R13 := ".Name"
 49 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 50 [-]: LOADK     R13 K19      ; R13 := "text"
 51 [-]: MOVE      R14 R9       ; R14 := R9
 52 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 53 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 54 [-]: SELF      R10 R10 K20  ; R11 := R10; R10 := R10["0x880196A7"]
 55 [-]: MOVE      R12 R7       ; R12 := R7
 56 [-]: LOADK     R13 K21      ; R13 := "Name"
 57 [-]: LOADK     R14 K22      ; R14 := "multiline"
 58 [-]: MOVE      R15 R0       ; R15 := R0
 59 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 60 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 61 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 62 [-]: MOVE      R12 R7       ; R12 := R7
 63 [-]: LOADK     R13 K23      ; R13 := "_alpha"
 64 [-]: GETUPVAL  R14 U4       ; R14 := U4
 65 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["LABEL_ALPHA"]
 66 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 67 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 68 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 69 [-]: MOVE      R12 R7       ; R12 := R7
 70 [-]: LOADK     R13 K25      ; R13 := "_visible"
 71 [-]: MOVE      R14 R4       ; R14 := R4
 72 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 73 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 74 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 75 [-]: MOVE      R12 R7       ; R12 := R7
 76 [-]: LOADK     R13 K18      ; R13 := ".Name"
 77 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 78 [-]: LOADK     R13 K26      ; R13 := "_color"
 79 [-]: LOADK     R14 K27      ; R14 := 16777215
 80 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 81 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 82 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x1C19D966"]
 83 [-]: MOVE      R12 R7       ; R12 := R7
 84 [-]: LOADK     R13 K18      ; R13 := ".Name"
 85 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 86 [-]: LOADK     R13 K23      ; R13 := "_alpha"
 87 [-]: LOADK     R14 K28      ; R14 := 190
 88 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 89 [-]: TEST      R2 0         ; if not R2 then PC := 98
 90 [-]: JMP       98           ; PC := 98
 91 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 92 [-]: SELF      R10 R10 K20  ; R11 := R10; R10 := R10["0x880196A7"]
 93 [-]: MOVE      R12 R7       ; R12 := R7
 94 [-]: LOADK     R13 K21      ; R13 := "Name"
 95 [-]: LOADK     R14 K29      ; R14 := "textAlign"
 96 [-]: LOADK     R15 K30      ; R15 := "left"
 97 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 98 [-]: GETTABLE  R10 R1 K31   ; R10 := R1["z"]
 99 [-]: SUB       R10 R10 K32  ; R10 := R10 - -2
100 [-]: DIV       R10 K1 R10   ; R10 := 1 / R10
101 [-]: MUL       R10 R10 K33  ; R10 := R10 * 4
102 [-]: GETGLOBAL R11 K34      ; R11 := 0x6374FD98
103 [-]: MOVE      R12 R10      ; R12 := R10
104 [-]: LOADK     R13 K35      ; R13 := 0.75
105 [-]: LOADK     R14 K36      ; R14 := 1.25
106 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
107 [-]: MOVE      R10 R11      ; R10 := R11
108 [-]: MUL       R10 R10 K37  ; R10 := R10 * 80
109 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
110 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
111 [-]: MOVE      R13 R7       ; R13 := R7
112 [-]: LOADK     R14 K38      ; R14 := "_xscale"
113 [-]: MOVE      R15 R10      ; R15 := R10
114 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
115 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
116 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
117 [-]: MOVE      R13 R7       ; R13 := R7
118 [-]: LOADK     R14 K39      ; R14 := "_yscale"
119 [-]: MOVE      R15 R10      ; R15 := R10
120 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
121 [-]: GETGLOBAL R11 K40      ; R11 := table
122 [-]: GETTABLE  R11 R11 K41  ; R11 := R11["0xE6450C9D"]
123 [-]: GETUPVAL  R12 U1       ; R12 := U1
124 [-]: NEWTABLE  R13 0 4      ; R13 := {}
125 [-]: SETTABLE  R13 K42 R8   ; R13["memberIndex"] := R8
126 [-]: SETTABLE  R13 K43 R7   ; R13["clipName"] := R7
127 [-]: SETTABLE  R13 K44 R1   ; R13["pos"] := R1
128 [-]: SETTABLE  R13 K45 R3   ; R13["layer"] := R3
129 [-]: CALL      R11 3 1      ; R11(R12,R13)
130 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
131 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
132 [-]: MOVE      R13 R7       ; R13 := R7
133 [-]: LOADK     R14 K46      ; R14 := "enabled"
134 [-]: EQ        0 R5 K47     ; if R5 ~= nil then PC := 137
135 [-]: JMP       137          ; PC := 137
136 [-]: MOVE      R15 R0       ; R15 := R0
137 [-]: MOVE      R15 R1       ; R15 := R1
138 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
139 [-]: EQ        1 R5 K47     ; if R5 == nil then PC := 178
140 [-]: JMP       178          ; PC := 178
141 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
142 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
143 [-]: MOVE      R13 R7       ; R13 := R7
144 [-]: LOADK     R14 K48      ; R14 := "Id"
145 [-]: MOVE      R15 R6       ; R15 := R6
146 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
147 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
148 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
149 [-]: MOVE      R13 R7       ; R13 := R7
150 [-]: LOADK     R14 K49      ; R14 := "RollOverCallback"
151 [-]: GETTABLE  R15 R5 K50   ; R15 := R5["RollOver"]
152 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
153 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
154 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
155 [-]: MOVE      R13 R7       ; R13 := R7
156 [-]: LOADK     R14 K51      ; R14 := "RollOutCallback"
157 [-]: GETTABLE  R15 R5 K52   ; R15 := R5["RollOut"]
158 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
159 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
160 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x1C19D966"]
161 [-]: MOVE      R13 R7       ; R13 := R7
162 [-]: LOADK     R14 K53      ; R14 := "SelectCallback"
163 [-]: GETTABLE  R15 R5 K54   ; R15 := R5["Select"]
164 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
165 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
166 [-]: SELF      R11 R11 K20  ; R12 := R11; R11 := R11["0x880196A7"]
167 [-]: MOVE      R13 R7       ; R13 := R7
168 [-]: LOADK     R14 K55      ; R14 := "Btn"
169 [-]: LOADK     R15 K56      ; R15 := "_width"
170 [-]: GETGLOBAL R16 K3       ; R16 := mMovie
171 [-]: SELF      R16 R16 K57  ; R17 := R16; R16 := R16["0x6B7B470B"]
172 [-]: MOVE      R18 R7       ; R18 := R7
173 [-]: LOADK     R19 K18      ; R19 := ".Name"
174 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
175 [-]: LOADK     R19 K58      ; R19 := "textWidth"
176 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
177 [-]: CALL      R11 0 1      ; R11(R12,...)
178 [-]: RETURN    R7 2         ; return R7
179 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1369
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["locationEnabled"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["edgesLocked"]
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["radialSector"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x9FAED6BC
 11 [-]: GETTABLE  R4 R2 K4     ; R4 := R2["name"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K5        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["CachedSortieMissions"]
 15 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 16 [-]: EQ        1 R4 K7      ; if R4 == nil then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETGLOBAL R4 K5        ; R4 := _T
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["CachedSortieMissions"]
 20 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 21 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["mShowInStarChart"]
 22 [-]: JMP       25           ; PC := 25
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: GETGLOBAL R5 K5        ; R5 := _T
 26 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedAlerts"]
 27 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 28 [-]: EQ        1 R5 K7      ; if R5 == nil then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R5 K5        ; R5 := _T
 31 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedAlerts"]
 32 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mUnlocked"]
 34 [-]: TEST      R5 1         ; if R5 then PC := 54
 35 [-]: JMP       54           ; PC := 54
 36 [-]: GETGLOBAL R5 K11       ; R5 := _G
 37 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["CachedGoalInfo"]
 38 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 39 [-]: EQ        0 R5 K7      ; if R5 ~= nil then PC := 53
 40 [-]: JMP       53           ; PC := 53
 41 [-]: TESTSET   R5 R4 1      ; if R4 then PC := 54 else R5 := R4
 42 [-]: JMP       54           ; PC := 54
 43 [-]: GETGLOBAL R5 K5        ; R5 := _T
 44 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedActiveMissions"]
 45 [-]: TEST      R5 0         ; if not R5 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R5 K5        ; R5 := _T
 48 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedActiveMissions"]
 49 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 50 [-]: EQ        0 R5 K7      ; if R5 ~= nil then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R5 R0        ; R5 := R0
 53 [-]: MOVE      R5 R1        ; R5 := R1
 54 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["forceUnlock"]
 55 [-]: TEST      R6 1         ; if R6 then PC := 94
 56 [-]: JMP       94           ; PC := 94
 57 [-]: GETTABLE  R6 R2 K15    ; R6 := R2["nodeType"]
 58 [-]: GETGLOBAL R7 K16       ; R7 := Lotus_Game
 59 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["NT_PVP"]
 60 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 93
 61 [-]: JMP       93           ; PC := 93
 62 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 69
 63 [-]: JMP       69           ; PC := 69
 64 [-]: GETGLOBAL R6 K18       ; R6 := 0x400E7765
 65 [-]: GETTABLE  R7 R2 K19    ; R7 := R2["keyChain"]
 66 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 67 [-]: TEST      R6 0         ; if not R6 then PC := 93
 68 [-]: JMP       93           ; PC := 93
 69 [-]: TEST      R4 1         ; if R4 then PC := 74
 70 [-]: JMP       74           ; PC := 74
 71 [-]: GETTABLE  R6 R2 K20    ; R6 := R2["unlocked"]
 72 [-]: TEST      R6 1         ; if R6 then PC := 94
 73 [-]: JMP       94           ; PC := 94
 74 [-]: TEST      R5 0         ; if not R5 then PC := 80
 75 [-]: JMP       80           ; PC := 80
 76 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["radialSector"]
 77 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["unlocked"]
 78 [-]: TEST      R6 1         ; if R6 then PC := 94
 79 [-]: JMP       94           ; PC := 94
 80 [-]: GETTABLE  R6 R2 K21    ; R6 := R2["region"]
 81 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
 82 [-]: GETGLOBAL R7 K5        ; R7 := _T
 83 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["REGION_ID_DARK_SECTOR"]
 84 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 93
 85 [-]: JMP       93           ; PC := 93
 86 [-]: GETGLOBAL R6 K11       ; R6 := _G
 87 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["StalkerMode"]
 88 [-]: TEST      R6 1         ; if R6 then PC := 94
 89 [-]: JMP       94           ; PC := 94
 90 [-]: GETUPVAL  R6 U0        ; R6 := U0
 91 [-]: JMP       94           ; PC := 94
 92 [-]: MOVE      R6 R0        ; R6 := R0
 93 [-]: MOVE      R6 R1        ; R6 := R1
 94 [-]: GETGLOBAL R7 K25       ; R7 := gGameRules
 95 [-]: GETGLOBAL R8 K3        ; R8 := 0x9FAED6BC
 96 [-]: GETTABLE  R9 R2 K4     ; R9 := R2["name"]
 97 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 98 [-]: SELF      R9 R7 K26    ; R10 := R7; R9 := R7["0x8B598ED4"]
 99 [-]: GETGLOBAL R11 K27      ; R11 := gLotusHubGameRulesType
100 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
101 [-]: TEST      R9 0         ; if not R9 then PC := 112
102 [-]: JMP       112          ; PC := 112
103 [-]: GETGLOBAL R9 K3        ; R9 := 0x9FAED6BC
104 [-]: GETGLOBAL R10 K25      ; R10 := gGameRules
105 [-]: SELF      R10 R10 K28  ; R11 := R10; R10 := R10["0xB8637349"]
106 [-]: CALL      R10 2 2      ; R10 := R10(R11)
107 [-]: GETTABLE  R10 R10 K29  ; R10 := R10["location"]
108 [-]: CALL      R9 2 2       ; R9 := R9(R10)
109 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 112
110 [-]: JMP       112          ; PC := 112
111 [-]: MOVE      R6 R0        ; R6 := R0
112 [-]: RETURN    R6 2         ; return R6
113 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1406
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["missionsCompleted"]
  2 [-]: TEST      R1 1         ; if R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADK     R1 K1        ; R1 := 0
  5 [-]: LT        1 K1 R1      ; if 0 < R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: MOVE      R2 R1        ; R2 := R1
  9 [-]: TEST      R2 1         ; if R2 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["nodeType"]
 12 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 13 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["NT_PVP"]
 14 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: TEST      R2 1         ; if R2 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["nodeType"]
 21 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 22 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["NT_HUB"]
 23 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R2 R0        ; R2 := R0
 26 [-]: MOVE      R2 R1        ; R2 := R1
 27 [-]: TEST      R2 1         ; if R2 then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["nodeType"]
 30 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 31 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["NT_BONUS_MISSION"]
 32 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R2 R0        ; R2 := R0
 35 [-]: MOVE      R2 R1        ; R2 := R1
 36 [-]: TEST      R2 1         ; if R2 then PC := 43
 37 [-]: JMP       43           ; PC := 43
 38 [-]: GETGLOBAL R3 K7        ; R3 := 0x400E7765
 39 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mission"]
 40 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["levelOverride"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: MOVE      R2 R3        ; R2 := R3
 43 [-]: TEST      R2 1         ; if R2 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: TESTSET   R2 R3 1      ; if R3 then PC := 50 else R2 := R3
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETGLOBAL R3 K10       ; R3 := _G
 49 [-]: GETTABLE  R2 R3 K11    ; R2 := R3["StalkerMode"]
 50 [-]: TEST      R2 0         ; if not R2 then PC := 66
 51 [-]: JMP       66           ; PC := 66
 52 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["name"]
 53 [-]: GETUPVAL  R4 U1        ; R4 := U1
 54 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["CETUS_NODE_TAG"]
 55 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETUPVAL  R3 U2        ; R3 := U2
 58 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0xDF213CE1"]
 59 [-]: GETUPVAL  R5 U1        ; R5 := U1
 60 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["PLAINS_NODE_TAG"]
 61 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 62 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["missionsCompleted"]
 63 [-]: EQ        0 R3 K1      ; if R3 ~= 0 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: MOVE      R2 R0        ; R2 := R0
 66 [-]: RETURN    R2 2         ; return R2
 67 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1424
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["name"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["locked"]
  5 [-]: TEST      R2 1         ; if R2 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["completed"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["isShortcut"]
 11 [-]: TEST      R2 0         ; if not R2 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: JMP       250          ; PC := 250
 16 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["IsQuest"]
 17 [-]: TEST      R2 0         ; if not R2 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R2 K6        ; R2 := _G
 20 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UITexture_Story"]
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: JMP       250          ; PC := 250
 23 [-]: EQ        0 R1 K8      ; if R1 ~= "Story" then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETGLOBAL R2 K6        ; R2 := _G
 26 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UITexture_Story"]
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: JMP       250          ; PC := 250
 29 [-]: GETGLOBAL R2 K9        ; R2 := _T
 30 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedAlerts"]
 31 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 32 [-]: TEST      R2 0         ; if not R2 then PC := 59
 33 [-]: JMP       59           ; PC := 59
 34 [-]: GETGLOBAL R2 K9        ; R2 := _T
 35 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedAlerts"]
 36 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 37 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
 38 [-]: TEST      R2 0         ; if not R2 then PC := 59
 39 [-]: JMP       59           ; PC := 59
 40 [-]: GETUPVAL  R2 U0        ; R2 := U0
 41 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0xF81722A2"]
 42 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
 43 [-]: GETGLOBAL R4 K9        ; R4 := _T
 44 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["CachedAlerts"]
 45 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
 46 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mAlertInfo"]
 47 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mIcon"]
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: GETGLOBAL R4 K6        ; R4 := _G
 50 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["UITexture_Alert"]
 51 [-]: GETGLOBAL R5 K9        ; R5 := _T
 52 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["CachedAlerts"]
 53 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mAlertInfo"]
 55 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["mIcon"]
 56 [-]: TAILCALL  R2 4 0       ; R2,... := R2(R3,R4,R5)
 57 [-]: RETURN    R2 0         ; return R2,...
 58 [-]: JMP       250          ; PC := 250
 59 [-]: GETGLOBAL R2 K6        ; R2 := _G
 60 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["CachedGoalInfo"]
 61 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 62 [-]: TEST      R2 0         ; if not R2 then PC := 70
 63 [-]: JMP       70           ; PC := 70
 64 [-]: GETUPVAL  R2 U1        ; R2 := U1
 65 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0xC192E91A"]
 66 [-]: MOVE      R3 R1        ; R3 := R1
 67 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 68 [-]: RETURN    R2 0         ; return R2,...
 69 [-]: JMP       250          ; PC := 250
 70 [-]: GETGLOBAL R2 K9        ; R2 := _T
 71 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 72 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 73 [-]: EQ        1 R2 K20     ; if R2 == nil then PC := 101
 74 [-]: JMP       101          ; PC := 101
 75 [-]: GETGLOBAL R2 K9        ; R2 := _T
 76 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 77 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 78 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["mUnlocked"]
 79 [-]: TEST      R2 0         ; if not R2 then PC := 101
 80 [-]: JMP       101          ; PC := 101
 81 [-]: GETGLOBAL R2 K9        ; R2 := _T
 82 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 83 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 84 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["mShowInStarChart"]
 85 [-]: TEST      R2 0         ; if not R2 then PC := 101
 86 [-]: JMP       101          ; PC := 101
 87 [-]: GETGLOBAL R2 K9        ; R2 := _T
 88 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 89 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 90 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["mMissionInfo"]
 91 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["minEnemyLevel"]
 92 [-]: LE        0 K25 R2     ; if 80 > R2 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETGLOBAL R2 K6        ; R2 := _G
 95 [-]: GETTABLE  R2 R2 K26    ; R2 := R2["UITextures_GhostTowerVariant"]
 96 [-]: RETURN    R2 2         ; return R2
 97 [-]: GETGLOBAL R2 K6        ; R2 := _G
 98 [-]: GETTABLE  R2 R2 K27    ; R2 := R2["UITextures_GhostTower"]
 99 [-]: RETURN    R2 2         ; return R2
100 [-]: JMP       250          ; PC := 250
101 [-]: GETGLOBAL R2 K9        ; R2 := _T
102 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["CachedSkullNodes"]
103 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
104 [-]: EQ        1 R2 K20     ; if R2 == nil then PC := 110
105 [-]: JMP       110          ; PC := 110
106 [-]: GETGLOBAL R2 K6        ; R2 := _G
107 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["UITexture_Skull"]
108 [-]: RETURN    R2 2         ; return R2
109 [-]: JMP       250          ; PC := 250
110 [-]: GETGLOBAL R2 K9        ; R2 := _T
111 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
112 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
113 [-]: TEST      R2 0         ; if not R2 then PC := 135
114 [-]: JMP       135          ; PC := 135
115 [-]: GETGLOBAL R2 K9        ; R2 := _T
116 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
117 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
118 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["mShowInStarChart"]
119 [-]: TEST      R2 0         ; if not R2 then PC := 135
120 [-]: JMP       135          ; PC := 135
121 [-]: GETGLOBAL R2 K13       ; R2 := 0x400E7765
122 [-]: GETGLOBAL R3 K9        ; R3 := _T
123 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["CachedSortieMissions"]
124 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
125 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mIcon"]
126 [-]: CALL      R2 2 2       ; R2 := R2(R3)
127 [-]: TEST      R2 1         ; if R2 then PC := 135
128 [-]: JMP       135          ; PC := 135
129 [-]: GETGLOBAL R2 K9        ; R2 := _T
130 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
131 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
132 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mIcon"]
133 [-]: RETURN    R2 2         ; return R2
134 [-]: JMP       250          ; PC := 250
135 [-]: GETGLOBAL R2 K9        ; R2 := _T
136 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
137 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
138 [-]: TEST      R2 0         ; if not R2 then PC := 152
139 [-]: JMP       152          ; PC := 152
140 [-]: GETGLOBAL R2 K9        ; R2 := _T
141 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
142 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
143 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
144 [-]: TEST      R2 0         ; if not R2 then PC := 152
145 [-]: JMP       152          ; PC := 152
146 [-]: GETGLOBAL R2 K9        ; R2 := _T
147 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
148 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
149 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["mMapIcon"]
150 [-]: RETURN    R2 2         ; return R2
151 [-]: JMP       250          ; PC := 250
152 [-]: GETGLOBAL R2 K9        ; R2 := _T
153 [-]: GETTABLE  R2 R2 K33    ; R2 := R2["CachedInvasionInfo"]
154 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
155 [-]: TEST      R2 0         ; if not R2 then PC := 176
156 [-]: JMP       176          ; PC := 176
157 [-]: GETUPVAL  R2 U1        ; R2 := U1
158 [-]: GETTABLE  R2 R2 K34    ; R2 := R2["0x18FE37C1"]
159 [-]: LOADNIL   R3 R3        ; R3 := nil
160 [-]: CALL      R2 2 2       ; R2 := R2(R3)
161 [-]: TEST      R2 0         ; if not R2 then PC := 172
162 [-]: JMP       172          ; PC := 172
163 [-]: GETTABLE  R3 R2 K35    ; R3 := R2["mDefenderMissionInfo"]
164 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["missionType"]
165 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
166 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["MT_ASSASSINATION"]
167 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 172
168 [-]: JMP       172          ; PC := 172
169 [-]: GETGLOBAL R3 K6        ; R3 := _G
170 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["UITexture_BossNode"]
171 [-]: RETURN    R3 2         ; return R3
172 [-]: GETGLOBAL R3 K6        ; R3 := _G
173 [-]: GETTABLE  R3 R3 K40    ; R3 := R3["UITexture_Invasion"]
174 [-]: RETURN    R3 2         ; return R3
175 [-]: JMP       250          ; PC := 250
176 [-]: GETGLOBAL R3 K9        ; R3 := _T
177 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
178 [-]: TEST      R3 0         ; if not R3 then PC := 199
179 [-]: JMP       199          ; PC := 199
180 [-]: GETGLOBAL R3 K9        ; R3 := _T
181 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
182 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
183 [-]: TEST      R3 0         ; if not R3 then PC := 199
184 [-]: JMP       199          ; PC := 199
185 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
186 [-]: GETGLOBAL R4 K9        ; R4 := _T
187 [-]: GETTABLE  R4 R4 K41    ; R4 := R4["CachedActiveMissions"]
188 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
189 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mIcon"]
190 [-]: CALL      R3 2 2       ; R3 := R3(R4)
191 [-]: TEST      R3 1         ; if R3 then PC := 199
192 [-]: JMP       199          ; PC := 199
193 [-]: GETGLOBAL R3 K9        ; R3 := _T
194 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
195 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
196 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mIcon"]
197 [-]: RETURN    R3 2         ; return R3
198 [-]: JMP       250          ; PC := 250
199 [-]: GETGLOBAL R3 K9        ; R3 := _T
200 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
201 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
202 [-]: EQ        1 R3 K20     ; if R3 == nil then PC := 220
203 [-]: JMP       220          ; PC := 220
204 [-]: GETGLOBAL R3 K9        ; R3 := _T
205 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
206 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
207 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["mUnlocked"]
208 [-]: TEST      R3 0         ; if not R3 then PC := 220
209 [-]: JMP       220          ; PC := 220
210 [-]: GETGLOBAL R3 K9        ; R3 := _T
211 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
212 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
213 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["mShowInStarChart"]
214 [-]: TEST      R3 0         ; if not R3 then PC := 220
215 [-]: JMP       220          ; PC := 220
216 [-]: GETGLOBAL R3 K6        ; R3 := _G
217 [-]: GETTABLE  R3 R3 K43    ; R3 := R3["UITexture_EliteAlert"]
218 [-]: RETURN    R3 2         ; return R3
219 [-]: JMP       250          ; PC := 250
220 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
221 [-]: GETTABLE  R3 R3 K45    ; R3 := R3["mission"]
222 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["missionType"]
223 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
224 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["MT_ASSASSINATION"]
225 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 231
226 [-]: JMP       231          ; PC := 231
227 [-]: GETGLOBAL R3 K6        ; R3 := _G
228 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["UITexture_BossNode"]
229 [-]: RETURN    R3 2         ; return R3
230 [-]: JMP       250          ; PC := 250
231 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
232 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["nodeType"]
233 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
234 [-]: GETTABLE  R4 R4 K47    ; R4 := R4["NT_PVP"]
235 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 241
236 [-]: JMP       241          ; PC := 241
237 [-]: GETGLOBAL R3 K6        ; R3 := _G
238 [-]: GETTABLE  R3 R3 K48    ; R3 := R3["UITexture_Pvp"]
239 [-]: RETURN    R3 2         ; return R3
240 [-]: JMP       250          ; PC := 250
241 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
242 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["nodeType"]
243 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
244 [-]: GETTABLE  R4 R4 K49    ; R4 := R4["NT_CLAN"]
245 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 250
246 [-]: JMP       250          ; PC := 250
247 [-]: GETGLOBAL R3 K6        ; R3 := _G
248 [-]: GETTABLE  R3 R3 K50    ; R3 := R3["UITexture_DefaultClan"]
249 [-]: RETURN    R3 2         ; return R3
250 [-]: LOADNIL   R3 R3        ; R3 := nil
251 [-]: RETURN    R3 2         ; return R3
252 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1468
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[1]
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["pos"]
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x221C9700
  5 [-]: CALL      R3 1 2       ; R3 := R3()
  6 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  7 [-]: LOADK     R5 K3        ; R5 := 2
  8 [-]: LOADK     R6 K4        ; R6 := 0.20000000298023
  9 [-]: GETGLOBAL R7 K5        ; R7 := table
 10 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
 11 [-]: MOVE      R8 R4        ; R8 := R4
 12 [-]: GETGLOBAL R9 K2        ; R9 := 0x221C9700
 13 [-]: LOADK     R10 K7       ; R10 := -1
 14 [-]: LOADK     R11 K7       ; R11 := -1
 15 [-]: MOVE      R12 R6       ; R12 := R6
 16 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 17 [-]: MUL       R9 R9 R5     ; R9 := R9 * R5
 18 [-]: ADD       R9 R9 R3     ; R9 := R9 + R3
 19 [-]: CALL      R7 3 1       ; R7(R8,R9)
 20 [-]: GETGLOBAL R7 K5        ; R7 := table
 21 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
 22 [-]: MOVE      R8 R4        ; R8 := R4
 23 [-]: GETGLOBAL R9 K2        ; R9 := 0x221C9700
 24 [-]: LOADK     R10 K0       ; R10 := 1
 25 [-]: LOADK     R11 K7       ; R11 := -1
 26 [-]: MOVE      R12 R6       ; R12 := R6
 27 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 28 [-]: MUL       R9 R9 R5     ; R9 := R9 * R5
 29 [-]: ADD       R9 R9 R3     ; R9 := R9 + R3
 30 [-]: CALL      R7 3 1       ; R7(R8,R9)
 31 [-]: GETGLOBAL R7 K5        ; R7 := table
 32 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
 33 [-]: MOVE      R8 R4        ; R8 := R4
 34 [-]: GETGLOBAL R9 K2        ; R9 := 0x221C9700
 35 [-]: LOADK     R10 K0       ; R10 := 1
 36 [-]: LOADK     R11 K0       ; R11 := 1
 37 [-]: MOVE      R12 R6       ; R12 := R6
 38 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 39 [-]: MUL       R9 R9 R5     ; R9 := R9 * R5
 40 [-]: ADD       R9 R9 R3     ; R9 := R9 + R3
 41 [-]: CALL      R7 3 1       ; R7(R8,R9)
 42 [-]: GETGLOBAL R7 K5        ; R7 := table
 43 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
 44 [-]: MOVE      R8 R4        ; R8 := R4
 45 [-]: GETGLOBAL R9 K2        ; R9 := 0x221C9700
 46 [-]: LOADK     R10 K7       ; R10 := -1
 47 [-]: LOADK     R11 K0       ; R11 := 1
 48 [-]: MOVE      R12 R6       ; R12 := R6
 49 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 50 [-]: MUL       R9 R9 R5     ; R9 := R9 * R5
 51 [-]: ADD       R9 R9 R3     ; R9 := R9 + R3
 52 [-]: CALL      R7 3 1       ; R7(R8,R9)
 53 [-]: RETURN    R4 2         ; return R4
 54 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1485
; #Upvalues:       16
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  54

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
  9 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["instance"]
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: TEST      R5 1         ; if R5 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R5 K4        ; R5 := gBackgroundRegion
 14 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x9B0A3887"]
 15 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["instance"]
 16 [-]: CALL      R5 3 1       ; R5(R6,R7)
 17 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
 18 [-]: JMP       8            ; PC := 8
 19 [-]: GETUPVAL  R5 U1        ; R5 := U1
 20 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x871D2E8C"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: LOADK     R5 K7        ; R5 := 1
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: LEN       R6 R6        ; R6 := # R6
 26 [-]: LOADK     R7 K7        ; R7 := 1
 27 [-]: FORPREP   R5 105       ; R5 -= R7; PC := 105
 28 [-]: GETUPVAL  R9 U0        ; R9 := U0
 29 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 30 [-]: GETGLOBAL R10 K8       ; R10 := 0xCAA43ABB
 31 [-]: GETTABLE  R11 R9 K9    ; R11 := R9["deco"]
 32 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 33 [-]: GETGLOBAL R11 K10      ; R11 := 0x221C9700
 34 [-]: GETTABLE  R12 R9 K11   ; R12 := R9["pos"]
 35 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["x"]
 36 [-]: GETTABLE  R13 R9 K11   ; R13 := R9["pos"]
 37 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["y"]
 38 [-]: GETTABLE  R14 R9 K11   ; R14 := R9["pos"]
 39 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["z"]
 40 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 41 [-]: GETUPVAL  R12 U2       ; R12 := U2
 42 [-]: MOVE      R13 R11      ; R13 := R11
 43 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 44 [-]: MOVE      R11 R12      ; R11 := R12
 45 [-]: SETTABLE  R9 K11 R11   ; R9["pos"] := R11
 46 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
 47 [-]: MOVE      R13 R10      ; R13 := R10
 48 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 49 [-]: TEST      R12 1        ; if R12 then PC := 70
 50 [-]: JMP       70           ; PC := 70
 51 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
 52 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["deco"]
 53 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 54 [-]: TEST      R12 1        ; if R12 then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: GETUPVAL  R12 U3       ; R12 := U3
 57 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["deco"]
 58 [-]: CALL      R12 2 1      ; R12(R13)
 59 [-]: GETGLOBAL R12 K4       ; R12 := gBackgroundRegion
 60 [-]: SELF      R12 R12 K15  ; R13 := R12; R12 := R12["0xBDD34CC6"]
 61 [-]: MOVE      R14 R10      ; R14 := R10
 62 [-]: MOVE      R15 R11      ; R15 := R11
 63 [-]: GETGLOBAL R16 K16      ; R16 := ZERO_ROTATION
 64 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 65 [-]: SETTABLE  R9 K3 R12    ; R9["instance"] := R12
 66 [-]: GETTABLE  R12 R9 K3    ; R12 := R9["instance"]
 67 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12["0x6A7E5F92"]
 68 [-]: GETTABLE  R14 R9 K18   ; R14 := R9["scale"]
 69 [-]: CALL      R12 3 1      ; R12(R13,R14)
 70 [-]: LOADNIL   R12 R12      ; R12 := nil
 71 [-]: GETUPVAL  R13 U4       ; R13 := U4
 72 [-]: SETTABLE  R13 R8 R12   ; R13[R8] := R12
 73 [-]: NEWTABLE  R13 5 0      ; R13 := {}
 74 [-]: GETGLOBAL R14 K10      ; R14 := 0x221C9700
 75 [-]: CALL      R14 1 2      ; R14 := R14()
 76 [-]: GETGLOBAL R15 K10      ; R15 := 0x221C9700
 77 [-]: LOADK     R16 K19      ; R16 := 0
 78 [-]: LOADK     R17 K20      ; R17 := -1.2000000476837
 79 [-]: LOADK     R18 K19      ; R18 := 0
 80 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 81 [-]: GETGLOBAL R16 K10      ; R16 := 0x221C9700
 82 [-]: LOADK     R17 K21      ; R17 := 0.5
 83 [-]: LOADK     R18 K22      ; R18 := 1.1000000238419
 84 [-]: LOADK     R19 K19      ; R19 := 0
 85 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 86 [-]: GETGLOBAL R17 K10      ; R17 := 0x221C9700
 87 [-]: LOADK     R18 K19      ; R18 := 0
 88 [-]: LOADK     R19 K21      ; R19 := 0.5
 89 [-]: LOADK     R20 K19      ; R20 := 0
 90 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 91 [-]: GETGLOBAL R18 K10      ; R18 := 0x221C9700
 92 [-]: LOADK     R19 K7       ; R19 := 1
 93 [-]: LOADK     R20 K23      ; R20 := -1.2999999523163
 94 [-]: LOADK     R21 K19      ; R21 := 0
 95 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
 96 [-]: GETGLOBAL R19 K10      ; R19 := 0x221C9700
 97 [-]: LOADK     R20 K24      ; R20 := -1.6000000238419
 98 [-]: LOADK     R21 K25      ; R21 := -0.60000002384186
 99 [-]: LOADK     R22 K19      ; R22 := 0
100 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
101 [-]: SETLIST   R13 0 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 0
102 [-]: GETTABLE  R14 R9 K11   ; R14 := R9["pos"]
103 [-]: GETTABLE  R15 R13 R8   ; R15 := R13[R8]
104 [-]: ADD       R14 R14 R15  ; R14 := R14 + R15
105 [-]: FORLOOP   R5 28        ; R5 += R7; if R5 <= R6 then begin PC := 28; R8 := R5 end
106 [-]: GETGLOBAL R15 K4       ; R15 := gBackgroundRegion
107 [-]: SELF      R15 R15 K26  ; R16 := R15; R15 := R15["0x90391273"]
108 [-]: GETUPVAL  R17 U6       ; R17 := U6
109 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["STAR_CHART_ROOT"]
110 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
111 [-]: MOVE      R15 R5       ; R15 := R5
112 [-]: GETUPVAL  R15 U5       ; R15 := U5
113 [-]: SELF      R15 R15 K28  ; R16 := R15; R15 := R15["0x5097FD8C"]
114 [-]: GETGLOBAL R17 K29      ; R17 := 0x1E4F6281
115 [-]: LOADK     R18 K19      ; R18 := 0
116 [-]: LOADK     R19 K30      ; R19 := 60
117 [-]: LOADK     R20 K19      ; R20 := 0
118 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
119 [-]: CALL      R15 0 1      ; R15(R16,...)
120 [-]: GETGLOBAL R15 K4       ; R15 := gBackgroundRegion
121 [-]: SELF      R15 R15 K26  ; R16 := R15; R15 := R15["0x90391273"]
122 [-]: GETUPVAL  R17 U6       ; R17 := U6
123 [-]: GETTABLE  R17 R17 K31  ; R17 := R17["PLAYER"]
124 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
125 [-]: GETGLOBAL R16 K4       ; R16 := gBackgroundRegion
126 [-]: SELF      R16 R16 K26  ; R17 := R16; R16 := R16["0x90391273"]
127 [-]: GETUPVAL  R18 U6       ; R18 := U6
128 [-]: GETTABLE  R18 R18 K32  ; R18 := R18["PLAYER_OPERATOR"]
129 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
130 [-]: GETGLOBAL R17 K33      ; R17 := gRegion
131 [-]: SELF      R17 R17 K34  ; R18 := R17; R17 := R17["0x3E2F6BF"]
132 [-]: CALL      R17 2 2      ; R17 := R17(R18)
133 [-]: GETGLOBAL R18 K35      ; R18 := 0x2C00D429
134 [-]: LOADK     R19 K36      ; R19 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
135 [-]: CALL      R18 2 2      ; R18 := R18(R19)
136 [-]: GETGLOBAL R19 K2       ; R19 := 0x400E7765
137 [-]: MOVE      R20 R17      ; R20 := R17
138 [-]: CALL      R19 2 2      ; R19 := R19(R20)
139 [-]: TEST      R19 1        ; if R19 then PC := 145
140 [-]: JMP       145          ; PC := 145
141 [-]: SELF      R19 R17 K37  ; R20 := R17; R19 := R17["0x8B598ED4"]
142 [-]: MOVE      R21 R18      ; R21 := R18
143 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
144 [-]: JMP       147          ; PC := 147
145 [-]: MOVE      R19 R0       ; R19 := R0
146 [-]: MOVE      R19 R1       ; R19 := R1
147 [-]: TEST      R19 0        ; if not R19 then PC := 169
148 [-]: JMP       169          ; PC := 169
149 [-]: MOVE      R16 R7       ; R16 := R7
150 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
151 [-]: MOVE      R21 R15      ; R21 := R15
152 [-]: CALL      R20 2 2      ; R20 := R20(R21)
153 [-]: TEST      R20 1        ; if R20 then PC := 158
154 [-]: JMP       158          ; PC := 158
155 [-]: SELF      R20 R15 K38  ; R21 := R15; R20 := R15["0x7DBDDA0B"]
156 [-]: MOVE      R22 R0       ; R22 := R0
157 [-]: CALL      R20 3 1      ; R20(R21,R22)
158 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
159 [-]: MOVE      R21 R16      ; R21 := R16
160 [-]: CALL      R20 2 2      ; R20 := R20(R21)
161 [-]: TEST      R20 1        ; if R20 then PC := 178
162 [-]: JMP       178          ; PC := 178
163 [-]: GETUPVAL  R20 U8       ; R20 := U8
164 [-]: GETTABLE  R20 R20 K39  ; R20 := R20["0x52F80741"]
165 [-]: MOVE      R21 R16      ; R21 := R16
166 [-]: MOVE      R22 R17      ; R22 := R17
167 [-]: CALL      R20 3 1      ; R20(R21,R22)
168 [-]: JMP       178          ; PC := 178
169 [-]: MOVE      R15 R7       ; R15 := R7
170 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
171 [-]: MOVE      R21 R16      ; R21 := R16
172 [-]: CALL      R20 2 2      ; R20 := R20(R21)
173 [-]: TEST      R20 1        ; if R20 then PC := 178
174 [-]: JMP       178          ; PC := 178
175 [-]: SELF      R20 R16 K38  ; R21 := R16; R20 := R16["0x7DBDDA0B"]
176 [-]: MOVE      R22 R0       ; R22 := R0
177 [-]: CALL      R20 3 1      ; R20(R21,R22)
178 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
179 [-]: MOVE      R21 R17      ; R21 := R17
180 [-]: CALL      R20 2 2      ; R20 := R20(R21)
181 [-]: TEST      R20 1        ; if R20 then PC := 223
182 [-]: JMP       223          ; PC := 223
183 [-]: SELF      R20 R17 K40  ; R21 := R17; R20 := R17["0x8DB5D01F"]
184 [-]: CALL      R20 2 2      ; R20 := R20(R21)
185 [-]: SELF      R20 R20 K41  ; R21 := R20; R20 := R20["0x6978AC59"]
186 [-]: CALL      R20 2 2      ; R20 := R20(R21)
187 [-]: GETGLOBAL R21 K2       ; R21 := 0x400E7765
188 [-]: MOVE      R22 R20      ; R22 := R20
189 [-]: CALL      R21 2 2      ; R21 := R21(R22)
190 [-]: TEST      R21 1        ; if R21 then PC := 223
191 [-]: JMP       223          ; PC := 223
192 [-]: GETGLOBAL R21 K1       ; R21 := 0x63B09107
193 [-]: GETGLOBAL R22 K42      ; R22 := heavyFrames
194 [-]: CALL      R21 2 4      ; R21,R22,R23 := R21(R22)
195 [-]: JMP       204          ; PC := 204
196 [-]: SELF      R26 R20 K37  ; R27 := R20; R26 := R20["0x8B598ED4"]
197 [-]: MOVE      R28 R25      ; R28 := R25
198 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
199 [-]: TEST      R26 0        ; if not R26 then PC := 204
200 [-]: JMP       204          ; PC := 204
201 [-]: GETGLOBAL R26 K43      ; R26 := kneelHeavyLoopAnim
202 [-]: MOVE      R26 R9       ; R26 := R9
203 [-]: JMP       206          ; PC := 206
204 [-]: TFORLOOP  R21 2        ; R24,R25 :=  R21(R22,R23); if R24 ~= nil then begin PC = 196; R23 := R24 end
205 [-]: JMP       196          ; PC := 196
206 [-]: GETUPVAL  R26 U9       ; R26 := U9
207 [-]: TEST      R26 1        ; if R26 then PC := 223
208 [-]: JMP       223          ; PC := 223
209 [-]: GETGLOBAL R26 K1       ; R26 := 0x63B09107
210 [-]: GETGLOBAL R27 K44      ; R27 := veryHeavyFrames
211 [-]: CALL      R26 2 4      ; R26,R27,R28 := R26(R27)
212 [-]: JMP       221          ; PC := 221
213 [-]: SELF      R31 R20 K37  ; R32 := R20; R31 := R20["0x8B598ED4"]
214 [-]: MOVE      R33 R30      ; R33 := R30
215 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
216 [-]: TEST      R31 0        ; if not R31 then PC := 221
217 [-]: JMP       221          ; PC := 221
218 [-]: GETGLOBAL R31 K45      ; R31 := kneelVeryHeavyLoopAnim
219 [-]: MOVE      R31 R9       ; R31 := R9
220 [-]: JMP       223          ; PC := 223
221 [-]: TFORLOOP  R26 2        ; R29,R30 :=  R26(R27,R28); if R29 ~= nil then begin PC = 213; R28 := R29 end
222 [-]: JMP       213          ; PC := 213
223 [-]: GETUPVAL  R31 U9       ; R31 := U9
224 [-]: TEST      R31 1        ; if R31 then PC := 228
225 [-]: JMP       228          ; PC := 228
226 [-]: GETGLOBAL R31 K46      ; R31 := kneelLoopAnim
227 [-]: MOVE      R31 R9       ; R31 := R9
228 [-]: GETGLOBAL R31 K2       ; R31 := 0x400E7765
229 [-]: GETUPVAL  R32 U7       ; R32 := U7
230 [-]: CALL      R31 2 2      ; R31 := R31(R32)
231 [-]: TEST      R31 1        ; if R31 then PC := 244
232 [-]: JMP       244          ; PC := 244
233 [-]: GETUPVAL  R31 U7       ; R31 := U7
234 [-]: SELF      R31 R31 K47  ; R32 := R31; R31 := R31["0x7DEB8965"]
235 [-]: MOVE      R33 R1       ; R33 := R1
236 [-]: CALL      R31 3 1      ; R31(R32,R33)
237 [-]: GETUPVAL  R31 U7       ; R31 := U7
238 [-]: SELF      R31 R31 K38  ; R32 := R31; R31 := R31["0x7DBDDA0B"]
239 [-]: GETUPVAL  R33 U10      ; R33 := U10
240 [-]: GETTABLE  R33 R33 K48  ; R33 := R33["Active"]
241 [-]: MOVE      R33 R33      ; R33 := R33
242 [-]: MOVE      R34 R1       ; R34 := R1
243 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
244 [-]: GETGLOBAL R31 K4       ; R31 := gBackgroundRegion
245 [-]: SELF      R31 R31 K26  ; R32 := R31; R31 := R31["0x90391273"]
246 [-]: GETUPVAL  R33 U6       ; R33 := U6
247 [-]: GETTABLE  R33 R33 K49  ; R33 := R33["PLAYER_LIGHT"]
248 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
249 [-]: MOVE      R31 R11      ; R31 := R11
250 [-]: GETGLOBAL R31 K2       ; R31 := 0x400E7765
251 [-]: GETUPVAL  R32 U11      ; R32 := U11
252 [-]: CALL      R31 2 2      ; R31 := R31(R32)
253 [-]: TEST      R31 1        ; if R31 then PC := 259
254 [-]: JMP       259          ; PC := 259
255 [-]: GETUPVAL  R31 U11      ; R31 := U11
256 [-]: SELF      R31 R31 K50  ; R32 := R31; R31 := R31["0xDDA3917C"]
257 [-]: CALL      R31 2 2      ; R31 := R31(R32)
258 [-]: MOVE      R31 R12      ; R31 := R12
259 [-]: GETGLOBAL R31 K2       ; R31 := 0x400E7765
260 [-]: GETUPVAL  R32 U7       ; R32 := U7
261 [-]: CALL      R31 2 2      ; R31 := R31(R32)
262 [-]: TEST      R31 1        ; if R31 then PC := 278
263 [-]: JMP       278          ; PC := 278
264 [-]: GETUPVAL  R31 U7       ; R31 := U7
265 [-]: SELF      R31 R31 K51  ; R32 := R31; R31 := R31["0x6DA72501"]
266 [-]: CALL      R31 2 2      ; R31 := R31(R32)
267 [-]: MOVE      R31 R13      ; R31 := R13
268 [-]: GETUPVAL  R31 U14      ; R31 := U14
269 [-]: GETUPVAL  R32 U7       ; R32 := U7
270 [-]: SELF      R32 R32 K51  ; R33 := R32; R32 := R32["0x6DA72501"]
271 [-]: CALL      R32 2 2      ; R32 := R32(R33)
272 [-]: SETTABLE  R31 K52 R32  ; R31["Previous"] := R32
273 [-]: GETUPVAL  R31 U14      ; R31 := U14
274 [-]: GETUPVAL  R32 U7       ; R32 := U7
275 [-]: SELF      R32 R32 K51  ; R33 := R32; R32 := R32["0x6DA72501"]
276 [-]: CALL      R32 2 2      ; R32 := R32(R33)
277 [-]: SETTABLE  R31 K53 R32  ; R31["Target"] := R32
278 [-]: GETUPVAL  R31 U14      ; R31 := U14
279 [-]: TEST      R31 0        ; if not R31 then PC := 300
280 [-]: JMP       300          ; PC := 300
281 [-]: GETUPVAL  R31 U14      ; R31 := U14
282 [-]: GETTABLE  R31 R31 K52  ; R31 := R31["Previous"]
283 [-]: TEST      R31 0        ; if not R31 then PC := 300
284 [-]: JMP       300          ; PC := 300
285 [-]: GETUPVAL  R31 U11      ; R31 := U11
286 [-]: SELF      R31 R31 K54  ; R32 := R31; R31 := R31["0xFCAE2926"]
287 [-]: LOADK     R33 K55      ; R33 := 2
288 [-]: CALL      R31 3 1      ; R31(R32,R33)
289 [-]: GETUPVAL  R31 U11      ; R31 := U11
290 [-]: SELF      R31 R31 K56  ; R32 := R31; R31 := R31["0xEC183DDC"]
291 [-]: GETUPVAL  R33 U14      ; R33 := U14
292 [-]: GETTABLE  R33 R33 K52  ; R33 := R33["Previous"]
293 [-]: GETGLOBAL R34 K10      ; R34 := 0x221C9700
294 [-]: LOADK     R35 K19      ; R35 := 0
295 [-]: LOADK     R36 K21      ; R36 := 0.5
296 [-]: LOADK     R37 K57      ; R37 := -0.5
297 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
298 [-]: ADD       R33 R33 R34  ; R33 := R33 + R34
299 [-]: CALL      R31 3 1      ; R31(R32,R33)
300 [-]: LOADK     R31 K7       ; R31 := 1
301 [-]: LOADK     R32 K58      ; R32 := 9
302 [-]: LOADK     R33 K7       ; R33 := 1
303 [-]: FORPREP   R31 327      ; R31 -= R33; PC := 327
304 [-]: GETUPVAL  R35 U5       ; R35 := U5
305 [-]: SELF      R35 R35 K59  ; R36 := R35; R35 := R35["0xAB436EF2"]
306 [-]: GETGLOBAL R37 K60      ; R37 := solarRing
307 [-]: GETGLOBAL R38 K61      ; R38 := EMPTY_SYMBOL
308 [-]: GETGLOBAL R39 K62      ; R39 := ZERO_VECTOR
309 [-]: GETUPVAL  R40 U15      ; R40 := U15
310 [-]: GETTABLE  R40 R40 K63  ; R40 := R40["RING_ROTATION"]
311 [-]: CALL      R35 6 2      ; R35 := R35(R36,R37,R38,R39,R40)
312 [-]: GETGLOBAL R36 K2       ; R36 := 0x400E7765
313 [-]: MOVE      R37 R35      ; R37 := R35
314 [-]: CALL      R36 2 2      ; R36 := R36(R37)
315 [-]: TEST      R36 1        ; if R36 then PC := 327
316 [-]: JMP       327          ; PC := 327
317 [-]: GETGLOBAL R36 K64      ; R36 := math
318 [-]: GETTABLE  R36 R36 K65  ; R36 := R36["0xD6F2D811"]
319 [-]: MOVE      R37 R34      ; R37 := R34
320 [-]: LOADK     R38 K66      ; R38 := 1.5
321 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
322 [-]: MUL       R36 R36 K67  ; R36 := R36 * 0.20000000298023
323 [-]: SELF      R37 R35 K68  ; R38 := R35; R37 := R35["0x9F133E77"]
324 [-]: MOVE      R39 R36      ; R39 := R36
325 [-]: MOVE      R40 R36      ; R40 := R36
326 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
327 [-]: FORLOOP   R31 304      ; R31 += R33; if R31 <= R32 then begin PC := 304; R34 := R31 end
328 [-]: LOADK     R37 K69      ; R37 := 8
329 [-]: LOADK     R38 K7       ; R38 := 1
330 [-]: MOVE      R39 R37      ; R39 := R37
331 [-]: LOADK     R40 K7       ; R40 := 1
332 [-]: FORPREP   R38 379      ; R38 -= R40; PC := 379
333 [-]: GETGLOBAL R42 K4       ; R42 := gBackgroundRegion
334 [-]: SELF      R42 R42 K15  ; R43 := R42; R42 := R42["0xBDD34CC6"]
335 [-]: GETGLOBAL R44 K70      ; R44 := edgeLineTypeB
336 [-]: GETGLOBAL R45 K62      ; R45 := ZERO_VECTOR
337 [-]: GETGLOBAL R46 K16      ; R46 := ZERO_ROTATION
338 [-]: CALL      R42 5 2      ; R42 := R42(R43,R44,R45,R46)
339 [-]: DIV       R43 R41 R37  ; R43 := R41 / R37
340 [-]: DIV       R43 R43 K55  ; R43 := R43 / 2
341 [-]: LOADK     R44 K71      ; R44 := 7
342 [-]: GETGLOBAL R45 K64      ; R45 := math
343 [-]: GETTABLE  R45 R45 K72  ; R45 := R45["0x96330A01"]
344 [-]: GETGLOBAL R46 K64      ; R46 := math
345 [-]: GETTABLE  R46 R46 K73  ; R46 := R46["pi"]
346 [-]: MUL       R46 R46 K55  ; R46 := R46 * 2
347 [-]: GETGLOBAL R47 K74      ; R47 := 0xA1FD035F
348 [-]: MOVE      R48 R43      ; R48 := R43
349 [-]: CALL      R47 2 2      ; R47 := R47(R48)
350 [-]: MUL       R46 R46 R47  ; R46 := R46 * R47
351 [-]: CALL      R45 2 2      ; R45 := R45(R46)
352 [-]: MUL       R45 R45 R44  ; R45 := R45 * R44
353 [-]: GETGLOBAL R46 K64      ; R46 := math
354 [-]: GETTABLE  R46 R46 K75  ; R46 := R46["0xBB3F1476"]
355 [-]: GETGLOBAL R47 K64      ; R47 := math
356 [-]: GETTABLE  R47 R47 K73  ; R47 := R47["pi"]
357 [-]: MUL       R47 R47 K55  ; R47 := R47 * 2
358 [-]: GETGLOBAL R48 K74      ; R48 := 0xA1FD035F
359 [-]: MOVE      R49 R43      ; R49 := R43
360 [-]: CALL      R48 2 2      ; R48 := R48(R49)
361 [-]: MUL       R47 R47 R48  ; R47 := R47 * R48
362 [-]: CALL      R46 2 2      ; R46 := R46(R47)
363 [-]: MUL       R46 R46 R44  ; R46 := R46 * R44
364 [-]: NEWTABLE  R47 1 0      ; R47 := {}
365 [-]: GETGLOBAL R48 K10      ; R48 := 0x221C9700
366 [-]: UNM       R49 R45      ; R49 := - R45
367 [-]: UNM       R50 R46      ; R50 := - R46
368 [-]: LOADK     R51 K19      ; R51 := 0
369 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
370 [-]: GETGLOBAL R49 K10      ; R49 := 0x221C9700
371 [-]: MOVE      R50 R45      ; R50 := R45
372 [-]: MOVE      R51 R46      ; R51 := R46
373 [-]: LOADK     R52 K19      ; R52 := 0
374 [-]: CALL      R49 4 0      ; R49,... := R49(R50,R51,R52)
375 [-]: SETLIST   R47 0 1      ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 0
376 [-]: SELF      R48 R42 K76  ; R49 := R42; R48 := R42["0x5BD03F6B"]
377 [-]: MOVE      R50 R47      ; R50 := R47
378 [-]: CALL      R48 3 1      ; R48(R49,R50)
379 [-]: FORLOOP   R38 333      ; R38 += R40; if R38 <= R39 then begin PC := 333; R41 := R38 end
380 [-]: GETUPVAL  R48 U10      ; R48 := U10
381 [-]: GETTABLE  R48 R48 K48  ; R48 := R48["Active"]
382 [-]: TEST      R48 0        ; if not R48 then PC := 398
383 [-]: JMP       398          ; PC := 398
384 [-]: GETGLOBAL R48 K2       ; R48 := 0x400E7765
385 [-]: GETUPVAL  R49 U5       ; R49 := U5
386 [-]: CALL      R48 2 2      ; R48 := R48(R49)
387 [-]: TEST      R48 1        ; if R48 then PC := 398
388 [-]: JMP       398          ; PC := 398
389 [-]: GETUPVAL  R48 U5       ; R48 := U5
390 [-]: SELF      R49 R48 K77  ; R50 := R48; R49 := R48["0x15D4DAEE"]
391 [-]: GETGLOBAL R51 K78      ; R51 := gEntityType
392 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
393 [-]: LOADK     R50 K7       ; R50 := 1
394 [-]: LEN       R51 R49      ; R51 := # R49
395 [-]: LOADK     R52 K7       ; R52 := 1
396 [-]: FORPREP   R50 397      ; R50 -= R52; PC := 397
397 [-]: FORLOOP   R50 397      ; R50 += R52; if R50 <= R51 then begin PC := 397; R53 := R50 end
398 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1638
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 41
  5 [-]: JMP       41           ; PC := 41
  6 [-]: GETGLOBAL R1 K2        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Initialized"]
  9 [-]: EQ        0 R1 K5      ; if R1 ~= "0x0" then PC := 41
 10 [-]: JMP       41           ; PC := 41
 11 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
 12 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x2D0B8A86"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x67D8B42"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K2        ; R3 := _T
 17 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["FortressLocation"]
 18 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Velocity"]
 19 [-]: DIV       R3 K9 R3     ; R3 := 1 / R3
 20 [-]: GETGLOBAL R4 K2        ; R4 := _T
 21 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FortressLocation"]
 22 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["MaxSplines"]
 23 [-]: MUL       R4 R3 R4     ; R4 := R3 * R4
 24 [-]: MOD       R4 R2 R4     ; R4 := R2 % R4
 25 [-]: GETGLOBAL R5 K2        ; R5 := _T
 26 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 27 [-]: GETGLOBAL R6 K12       ; R6 := math
 28 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["0xF7005A7B"]
 29 [-]: DIV       R7 R4 R3     ; R7 := R4 / R3
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: ADD       R6 K9 R6     ; R6 := 1 + R6
 32 [-]: SETTABLE  R5 K11 R6    ; R5["SplineIndex"] := R6
 33 [-]: GETGLOBAL R5 K2        ; R5 := _T
 34 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 35 [-]: MOD       R6 R4 R3     ; R6 := R4 % R3
 36 [-]: DIV       R6 R6 R3     ; R6 := R6 / R3
 37 [-]: SETTABLE  R5 K14 R6    ; R5["Progress"] := R6
 38 [-]: GETGLOBAL R5 K2        ; R5 := _T
 39 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 40 [-]: SETTABLE  R5 K4 R0     ; R5["Initialized"] := R0
 41 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1650
; #Upvalues:       16
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  56

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x5B0E7439"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 17
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R0 K2        ; R0 := 0x63B09107
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R5 U3        ; R5 := U3
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 1       ; R5(R6)
 15 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 12; R2 := R3 end
 16 [-]: JMP       12           ; PC := 12
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: MOVE      R5 R2        ; R5 := R2
 19 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 20 [-]: MOVE      R5 R4        ; R5 := R4
 21 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 22 [-]: MOVE      R5 R5        ; R5 := R5
 23 [-]: LOADK     R5 K3        ; R5 := 1
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: LEN       R6 R6        ; R6 := # R6
 26 [-]: LOADK     R7 K3        ; R7 := 1
 27 [-]: FORPREP   R5 388       ; R5 -= R7; PC := 388
 28 [-]: GETUPVAL  R9 U0        ; R9 := U0
 29 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 30 [-]: GETGLOBAL R10 K4       ; R10 := 0xCAA43ABB
 31 [-]: GETTABLE  R11 R9 K5    ; R11 := R9["decoRedux"]
 32 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 33 [-]: MOVE      R11 R0       ; R11 := R0
 34 [-]: GETGLOBAL R12 K6       ; R12 := 0x400E7765
 35 [-]: GETUPVAL  R13 U6       ; R13 := U6
 36 [-]: GETTABLE  R13 R13 K7   ; R13 := R13["Region"]
 37 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 38 [-]: TEST      R12 0        ; if not R12 then PC := 48
 39 [-]: JMP       48           ; PC := 48
 40 [-]: GETTABLE  R12 R9 K8    ; R12 := R9["name"]
 41 [-]: GETUPVAL  R13 U6       ; R13 := U6
 42 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["Tag"]
 43 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETUPVAL  R12 U6       ; R12 := U6
 46 [-]: SETTABLE  R12 K7 R9    ; R12["Region"] := R9
 47 [-]: MOVE      R11 R1       ; R11 := R1
 48 [-]: GETGLOBAL R12 K6       ; R12 := 0x400E7765
 49 [-]: GETTABLE  R13 R9 K5    ; R13 := R9["decoRedux"]
 50 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 51 [-]: TEST      R12 1        ; if R12 then PC := 56
 52 [-]: JMP       56           ; PC := 56
 53 [-]: GETUPVAL  R12 U7       ; R12 := U7
 54 [-]: GETTABLE  R13 R9 K5    ; R13 := R9["decoRedux"]
 55 [-]: CALL      R12 2 1      ; R12(R13)
 56 [-]: GETGLOBAL R12 K6       ; R12 := 0x400E7765
 57 [-]: MOVE      R13 R10      ; R13 := R10
 58 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 59 [-]: TEST      R12 0        ; if not R12 then PC := 73
 60 [-]: JMP       73           ; PC := 73
 61 [-]: GETGLOBAL R12 K4       ; R12 := 0xCAA43ABB
 62 [-]: GETTABLE  R13 R9 K10   ; R13 := R9["deco"]
 63 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 64 [-]: MOVE      R10 R12      ; R10 := R12
 65 [-]: GETGLOBAL R12 K6       ; R12 := 0x400E7765
 66 [-]: GETTABLE  R13 R9 K10   ; R13 := R9["deco"]
 67 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 68 [-]: TEST      R12 1        ; if R12 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: GETUPVAL  R12 U7       ; R12 := U7
 71 [-]: GETTABLE  R13 R9 K10   ; R13 := R9["deco"]
 72 [-]: CALL      R12 2 1      ; R12(R13)
 73 [-]: TEST      R11 0        ; if not R11 then PC := 234
 74 [-]: JMP       234          ; PC := 234
 75 [-]: GETUPVAL  R12 U6       ; R12 := U6
 76 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["SplinePoints"]
 77 [-]: LOADNIL   R13 R13      ; R13 := nil
 78 [-]: LOADK     R14 K3       ; R14 := 1
 79 [-]: LEN       R15 R12      ; R15 := # R12
 80 [-]: SUB       R15 R15 K12  ; R15 := R15 - 3
 81 [-]: LOADK     R16 K3       ; R16 := 1
 82 [-]: FORPREP   R14 136      ; R14 -= R16; PC := 136
 83 [-]: GETGLOBAL R18 K6       ; R18 := 0x400E7765
 84 [-]: GETUPVAL  R19 U6       ; R19 := U6
 85 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["Splines"]
 86 [-]: GETTABLE  R19 R19 R17  ; R19 := R19[R17]
 87 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 88 [-]: TEST      R18 1        ; if R18 then PC := 96
 89 [-]: JMP       96           ; PC := 96
 90 [-]: GETGLOBAL R18 K14      ; R18 := gBackgroundRegion
 91 [-]: SELF      R18 R18 K15  ; R19 := R18; R18 := R18["0x9B0A3887"]
 92 [-]: GETUPVAL  R20 U6       ; R20 := U6
 93 [-]: GETTABLE  R20 R20 K13  ; R20 := R20["Splines"]
 94 [-]: GETTABLE  R20 R20 R17  ; R20 := R20[R17]
 95 [-]: CALL      R18 3 1      ; R18(R19,R20)
 96 [-]: GETGLOBAL R18 K14      ; R18 := gBackgroundRegion
 97 [-]: SELF      R18 R18 K16  ; R19 := R18; R18 := R18["0xBDD34CC6"]
 98 [-]: GETGLOBAL R20 K17      ; R20 := splineConnectionType
 99 [-]: GETGLOBAL R21 K18      ; R21 := ZERO_VECTOR
100 [-]: GETGLOBAL R22 K19      ; R22 := ZERO_ROTATION
101 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
102 [-]: MOVE      R13 R18      ; R13 := R18
103 [-]: GETUPVAL  R18 U6       ; R18 := U6
104 [-]: GETTABLE  R18 R18 K13  ; R18 := R18["Splines"]
105 [-]: SETTABLE  R18 R17 R13  ; R18[R17] := R13
106 [-]: NEWTABLE  R18 4 0      ; R18 := {}
107 [-]: GETTABLE  R19 R12 R17  ; R19 := R12[R17]
108 [-]: ADD       R20 R17 K3   ; R20 := R17 + 1
109 [-]: GETTABLE  R20 R12 R20  ; R20 := R12[R20]
110 [-]: ADD       R21 R17 K20  ; R21 := R17 + 2
111 [-]: GETTABLE  R21 R12 R21  ; R21 := R12[R21]
112 [-]: ADD       R22 R17 K12  ; R22 := R17 + 3
113 [-]: GETTABLE  R22 R12 R22  ; R22 := R12[R22]
114 [-]: SETLIST   R18 4 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 4
115 [-]: SELF      R19 R13 K21  ; R20 := R13; R19 := R13["0x5BD03F6B"]
116 [-]: MOVE      R21 R18      ; R21 := R18
117 [-]: CALL      R19 3 1      ; R19(R20,R21)
118 [-]: SELF      R19 R13 K22  ; R20 := R13; R19 := R13["0xA20F64C0"]
119 [-]: GETGLOBAL R21 K23      ; R21 := 0xB5A59043
120 [-]: LOADK     R22 K24      ; R22 := 0
121 [-]: LOADK     R23 K25      ; R23 := 255
122 [-]: LOADK     R24 K24      ; R24 := 0
123 [-]: LOADK     R25 K25      ; R25 := 255
124 [-]: CALL      R21 5 0      ; R21,... := R21(R22,R23,R24,R25)
125 [-]: CALL      R19 0 1      ; R19(R20,...)
126 [-]: SELF      R19 R13 K26  ; R20 := R13; R19 := R13["0xD63FF2C2"]
127 [-]: GETGLOBAL R21 K27      ; R21 := 0x994A1A7
128 [-]: LOADK     R22 K24      ; R22 := 0
129 [-]: LOADK     R23 K28      ; R23 := 30
130 [-]: CALL      R21 3 0      ; R21,... := R21(R22,R23)
131 [-]: CALL      R19 0 1      ; R19(R20,...)
132 [-]: SELF      R19 R13 K29  ; R20 := R13; R19 := R13["0x7DBDDA0B"]
133 [-]: MOVE      R21 R0       ; R21 := R0
134 [-]: MOVE      R22 R1       ; R22 := R1
135 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
136 [-]: FORLOOP   R14 83       ; R14 += R16; if R14 <= R15 then begin PC := 83; R17 := R14 end
137 [-]: GETGLOBAL R19 K30      ; R19 := _T
138 [-]: GETTABLE  R19 R19 K31  ; R19 := R19["FortressLocation"]
139 [-]: GETUPVAL  R20 U6       ; R20 := U6
140 [-]: GETTABLE  R20 R20 K13  ; R20 := R20["Splines"]
141 [-]: LEN       R20 R20      ; R20 := # R20
142 [-]: SETTABLE  R19 K32 R20  ; R19["MaxSplines"] := R20
143 [-]: GETUPVAL  R19 U6       ; R19 := U6
144 [-]: GETGLOBAL R20 K30      ; R20 := _T
145 [-]: GETTABLE  R20 R20 K31  ; R20 := R20["FortressLocation"]
146 [-]: GETTABLE  R20 R20 K32  ; R20 := R20["MaxSplines"]
147 [-]: GETUPVAL  R21 U6       ; R21 := U6
148 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["LoopTime"]
149 [-]: DIV       R20 R20 R21  ; R20 := R20 / R21
150 [-]: SETTABLE  R19 K33 R20  ; R19["Velocity"] := R20
151 [-]: GETGLOBAL R19 K30      ; R19 := _T
152 [-]: GETTABLE  R19 R19 K31  ; R19 := R19["FortressLocation"]
153 [-]: GETUPVAL  R20 U6       ; R20 := U6
154 [-]: GETTABLE  R20 R20 K33  ; R20 := R20["Velocity"]
155 [-]: SETTABLE  R19 K33 R20  ; R19["Velocity"] := R20
156 [-]: GETGLOBAL R19 K6       ; R19 := 0x400E7765
157 [-]: GETGLOBAL R20 K35      ; R20 := gGameData
158 [-]: CALL      R19 2 2      ; R19 := R19(R20)
159 [-]: TEST      R19 1        ; if R19 then PC := 164
160 [-]: JMP       164          ; PC := 164
161 [-]: GETUPVAL  R19 U8       ; R19 := U8
162 [-]: MOVE      R20 R1       ; R20 := R1
163 [-]: CALL      R19 2 1      ; R19(R20)
164 [-]: GETUPVAL  R19 U6       ; R19 := U6
165 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["Splines"]
166 [-]: GETGLOBAL R20 K30      ; R20 := _T
167 [-]: GETTABLE  R20 R20 K31  ; R20 := R20["FortressLocation"]
168 [-]: GETTABLE  R20 R20 K36  ; R20 := R20["SplineIndex"]
169 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
170 [-]: SELF      R19 R19 K37  ; R20 := R19; R19 := R19["0xAC71FD5A"]
171 [-]: GETGLOBAL R21 K30      ; R21 := _T
172 [-]: GETTABLE  R21 R21 K31  ; R21 := R21["FortressLocation"]
173 [-]: GETTABLE  R21 R21 K38  ; R21 := R21["Progress"]
174 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
175 [-]: GETUPVAL  R20 U1       ; R20 := U1
176 [-]: SELF      R20 R20 K39  ; R21 := R20; R20 := R20["0x2721E25D"]
177 [-]: GETUPVAL  R22 U6       ; R22 := U6
178 [-]: GETTABLE  R22 R22 K7   ; R22 := R22["Region"]
179 [-]: GETGLOBAL R23 K40      ; R23 := 0x221C9700
180 [-]: GETTABLE  R24 R19 K41  ; R24 := R19["x"]
181 [-]: MUL       R24 R24 K42  ; R24 := R24 * 0.041000001132488
182 [-]: ADD       R24 K43 R24  ; R24 := 0.5 + R24
183 [-]: GETTABLE  R25 R19 K44  ; R25 := R19["y"]
184 [-]: ADD       R25 R25 K45  ; R25 := R25 + 0.029999999329448
185 [-]: MUL       R25 R25 K46  ; R25 := R25 * 0.043000001460314
186 [-]: SUB       R25 K43 R25  ; R25 := 0.5 - R25
187 [-]: GETUPVAL  R26 U9       ; R26 := U9
188 [-]: GETTABLE  R26 R26 K47  ; R26 := R26["MAX_ZOOM"]
189 [-]: SUB       R26 R26 K48  ; R26 := R26 - 0.30000001192093
190 [-]: GETTABLE  R27 R19 K49  ; R27 := R19["z"]
191 [-]: ADD       R26 R26 R27  ; R26 := R26 + R27
192 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
193 [-]: CALL      R20 0 1      ; R20(R21,...)
194 [-]: SETTABLE  R9 K50 R19   ; R9["pos"] := R19
195 [-]: LOADK     R20 K3       ; R20 := 1
196 [-]: GETUPVAL  R21 U6       ; R21 := U6
197 [-]: GETTABLE  R21 R21 K7   ; R21 := R21["Region"]
198 [-]: GETTABLE  R21 R21 K51  ; R21 := R21["tiers"]
199 [-]: LEN       R21 R21      ; R21 := # R21
200 [-]: LOADK     R22 K3       ; R22 := 1
201 [-]: FORPREP   R20 233      ; R20 -= R22; PC := 233
202 [-]: GETUPVAL  R24 U6       ; R24 := U6
203 [-]: GETTABLE  R24 R24 K7   ; R24 := R24["Region"]
204 [-]: GETTABLE  R24 R24 K51  ; R24 := R24["tiers"]
205 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
206 [-]: GETTABLE  R24 R24 K52  ; R24 := R24["sectors"]
207 [-]: LOADK     R25 K3       ; R25 := 1
208 [-]: LEN       R26 R24      ; R26 := # R24
209 [-]: LOADK     R27 K3       ; R27 := 1
210 [-]: FORPREP   R25 232      ; R25 -= R27; PC := 232
211 [-]: GETTABLE  R29 R24 R28  ; R29 := R24[R28]
212 [-]: GETTABLE  R30 R29 K53  ; R30 := R29["decoOffset"]
213 [-]: ADD       R30 R19 R30  ; R30 := R19 + R30
214 [-]: SETTABLE  R29 K50 R30  ; R29["pos"] := R30
215 [-]: GETGLOBAL R30 K54      ; R30 := 0x9FAED6BC
216 [-]: GETTABLE  R31 R29 K8   ; R31 := R29["name"]
217 [-]: CALL      R30 2 2      ; R30 := R30(R31)
218 [-]: GETUPVAL  R31 U6       ; R31 := U6
219 [-]: GETTABLE  R31 R31 K55  ; R31 := R31["Sectors"]
220 [-]: GETTABLE  R31 R31 R30  ; R31 := R31[R30]
221 [-]: EQ        1 R31 K1     ; if R31 == nil then PC := 229
222 [-]: JMP       229          ; PC := 229
223 [-]: GETGLOBAL R31 K56      ; R31 := 0x93B1256B
224 [-]: LOADK     R32 K57      ; R32 := "Ignoring duplicate fortress sector"
225 [-]: GETTABLE  R33 R29 K8   ; R33 := R29["name"]
226 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
227 [-]: CALL      R31 2 1      ; R31(R32)
228 [-]: JMP       232          ; PC := 232
229 [-]: GETUPVAL  R31 U6       ; R31 := U6
230 [-]: GETTABLE  R31 R31 K55  ; R31 := R31["Sectors"]
231 [-]: SETTABLE  R31 R30 R29  ; R31[R30] := R29
232 [-]: FORLOOP   R25 211      ; R25 += R27; if R25 <= R26 then begin PC := 211; R28 := R25 end
233 [-]: FORLOOP   R20 202      ; R20 += R22; if R20 <= R21 then begin PC := 202; R23 := R20 end
234 [-]: GETGLOBAL R31 K40      ; R31 := 0x221C9700
235 [-]: GETTABLE  R32 R9 K50   ; R32 := R9["pos"]
236 [-]: GETTABLE  R32 R32 K41  ; R32 := R32["x"]
237 [-]: GETTABLE  R33 R9 K50   ; R33 := R9["pos"]
238 [-]: GETTABLE  R33 R33 K44  ; R33 := R33["y"]
239 [-]: GETTABLE  R34 R9 K50   ; R34 := R9["pos"]
240 [-]: GETTABLE  R34 R34 K49  ; R34 := R34["z"]
241 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
242 [-]: GETUPVAL  R32 U10      ; R32 := U10
243 [-]: MOVE      R33 R31      ; R33 := R31
244 [-]: CALL      R32 2 2      ; R32 := R32(R33)
245 [-]: MOVE      R31 R32      ; R31 := R32
246 [-]: SETTABLE  R9 K50 R31   ; R9["pos"] := R31
247 [-]: GETGLOBAL R32 K14      ; R32 := gBackgroundRegion
248 [-]: SELF      R32 R32 K16  ; R33 := R32; R32 := R32["0xBDD34CC6"]
249 [-]: MOVE      R34 R10      ; R34 := R10
250 [-]: MOVE      R35 R31      ; R35 := R31
251 [-]: GETGLOBAL R36 K58      ; R36 := 0x1E4F6281
252 [-]: LOADK     R37 K24      ; R37 := 0
253 [-]: LOADK     R38 K59      ; R38 := -15
254 [-]: LOADK     R39 K24      ; R39 := 0
255 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
256 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
257 [-]: SETTABLE  R9 K60 R32   ; R9["instance"] := R32
258 [-]: GETGLOBAL R33 K6       ; R33 := 0x400E7765
259 [-]: GETUPVAL  R34 U4       ; R34 := U4
260 [-]: GETTABLE  R34 R34 R8   ; R34 := R34[R8]
261 [-]: CALL      R33 2 2      ; R33 := R33(R34)
262 [-]: TEST      R33 1        ; if R33 then PC := 269
263 [-]: JMP       269          ; PC := 269
264 [-]: GETGLOBAL R33 K14      ; R33 := gBackgroundRegion
265 [-]: SELF      R33 R33 K15  ; R34 := R33; R33 := R33["0x9B0A3887"]
266 [-]: GETUPVAL  R35 U4       ; R35 := U4
267 [-]: GETTABLE  R35 R35 R8   ; R35 := R35[R8]
268 [-]: CALL      R33 3 1      ; R33(R34,R35)
269 [-]: GETUPVAL  R33 U4       ; R33 := U4
270 [-]: SETTABLE  R33 R8 R32   ; R33[R8] := R32
271 [-]: SELF      R33 R32 K61  ; R34 := R32; R33 := R32["0x6A7E5F92"]
272 [-]: GETTABLE  R35 R9 K62   ; R35 := R9["scale"]
273 [-]: CALL      R33 3 1      ; R33(R34,R35)
274 [-]: CLOSURE   R33 0        ; R33 := closure(Function #49.1)
275 [-]: GETUPVAL  R34 U11      ; R34 := U11
276 [-]: GETTABLE  R34 R34 K63  ; R34 := R34["Active"]
277 [-]: TEST      R34 0        ; if not R34 then PC := 292
278 [-]: JMP       292          ; PC := 292
279 [-]: GETUPVAL  R34 U11      ; R34 := U11
280 [-]: GETTABLE  R34 R34 K64  ; R34 := R34["Regions"]
281 [-]: GETGLOBAL R35 K30      ; R35 := _T
282 [-]: GETTABLE  R35 R35 K65  ; R35 := R35["REGION_ID_DOJO"]
283 [-]: EQ        1 R8 R35     ; if R8 == R35 then PC := 290
284 [-]: JMP       290          ; PC := 290
285 [-]: MOVE      R35 R33      ; R35 := R33
286 [-]: MOVE      R36 R9       ; R36 := R9
287 [-]: CALL      R35 2 2      ; R35 := R35(R36)
288 [-]: JMP       291          ; PC := 291
289 [-]: MOVE      R35 R0       ; R35 := R0
290 [-]: MOVE      R35 R1       ; R35 := R1
291 [-]: SETTABLE  R34 R8 R35   ; R34[R8] := R35
292 [-]: GETUPVAL  R34 U12      ; R34 := U12
293 [-]: GETTABLE  R34 R34 R8   ; R34 := R34[R8]
294 [-]: EQ        1 R34 K66    ; if R34 == "0x1" then PC := 306
295 [-]: JMP       306          ; PC := 306
296 [-]: GETUPVAL  R34 U11      ; R34 := U11
297 [-]: GETTABLE  R34 R34 K63  ; R34 := R34["Active"]
298 [-]: TEST      R34 0        ; if not R34 then PC := 307
299 [-]: JMP       307          ; PC := 307
300 [-]: GETUPVAL  R34 U11      ; R34 := U11
301 [-]: GETTABLE  R34 R34 K64  ; R34 := R34["Regions"]
302 [-]: GETTABLE  R34 R34 R8   ; R34 := R34[R8]
303 [-]: MOVE      R34 R34      ; R34 := R34
304 [-]: JMP       307          ; PC := 307
305 [-]: MOVE      R34 R0       ; R34 := R0
306 [-]: MOVE      R34 R1       ; R34 := R1
307 [-]: TEST      R34 0        ; if not R34 then PC := 326
308 [-]: JMP       326          ; PC := 326
309 [-]: SELF      R35 R32 K29  ; R36 := R32; R35 := R32["0x7DBDDA0B"]
310 [-]: MOVE      R37 R0       ; R37 := R0
311 [-]: MOVE      R38 R1       ; R38 := R1
312 [-]: CALL      R35 4 1      ; R35(R36,R37,R38)
313 [-]: SELF      R35 R32 K67  ; R36 := R32; R35 := R32["0x15D4DAEE"]
314 [-]: GETGLOBAL R37 K68      ; R37 := gEntityType
315 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
316 [-]: LOADK     R36 K3       ; R36 := 1
317 [-]: LEN       R37 R35      ; R37 := # R35
318 [-]: LOADK     R38 K3       ; R38 := 1
319 [-]: FORPREP   R36 325      ; R36 -= R38; PC := 325
320 [-]: GETTABLE  R40 R35 R39  ; R40 := R35[R39]
321 [-]: SELF      R40 R40 K29  ; R41 := R40; R40 := R40["0x7DBDDA0B"]
322 [-]: MOVE      R42 R0       ; R42 := R0
323 [-]: MOVE      R43 R1       ; R43 := R1
324 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
325 [-]: FORLOOP   R36 320      ; R36 += R38; if R36 <= R37 then begin PC := 320; R39 := R36 end
326 [-]: GETUPVAL  R40 U11      ; R40 := U11
327 [-]: GETTABLE  R40 R40 K64  ; R40 := R40["Regions"]
328 [-]: GETTABLE  R40 R40 R8   ; R40 := R40[R8]
329 [-]: TEST      R40 0        ; if not R40 then PC := 344
330 [-]: JMP       344          ; PC := 344
331 [-]: SELF      R40 R32 K67  ; R41 := R32; R40 := R32["0x15D4DAEE"]
332 [-]: GETGLOBAL R42 K69      ; R42 := gLightType
333 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
334 [-]: LOADK     R41 K3       ; R41 := 1
335 [-]: LEN       R42 R40      ; R42 := # R40
336 [-]: LOADK     R43 K3       ; R43 := 1
337 [-]: FORPREP   R41 343      ; R41 -= R43; PC := 343
338 [-]: GETTABLE  R45 R40 R44  ; R45 := R40[R44]
339 [-]: SELF      R45 R45 K29  ; R46 := R45; R45 := R45["0x7DBDDA0B"]
340 [-]: MOVE      R47 R0       ; R47 := R0
341 [-]: MOVE      R48 R1       ; R48 := R1
342 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
343 [-]: FORLOOP   R41 338      ; R41 += R43; if R41 <= R42 then begin PC := 338; R44 := R41 end
344 [-]: GETGLOBAL R45 K40      ; R45 := 0x221C9700
345 [-]: LOADK     R46 K24      ; R46 := 0
346 [-]: GETTABLE  R47 R9 K62   ; R47 := R9["scale"]
347 [-]: MUL       R47 R47 K70  ; R47 := R47 * 1.0499999523163
348 [-]: GETUPVAL  R48 U13      ; R48 := U13
349 [-]: GETTABLE  R48 R48 K71  ; R48 := R48["PLANET_UNIT_MULTIPLIER"]
350 [-]: MUL       R47 R47 R48  ; R47 := R47 * R48
351 [-]: LOADK     R48 K72      ; R48 := 9.9999997473788e-05
352 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
353 [-]: ADD       R45 R31 R45  ; R45 := R31 + R45
354 [-]: GETUPVAL  R46 U14      ; R46 := U14
355 [-]: GETTABLE  R46 R46 K73  ; R46 := R46["0xF81722A2"]
356 [-]: GETUPVAL  R47 U11      ; R47 := U11
357 [-]: GETTABLE  R47 R47 K63  ; R47 := R47["Active"]
358 [-]: TEST      R47 0        ; if not R47 then PC := 365
359 [-]: JMP       365          ; PC := 365
360 [-]: GETUPVAL  R47 U11      ; R47 := U11
361 [-]: GETTABLE  R47 R47 K64  ; R47 := R47["Regions"]
362 [-]: GETTABLE  R47 R47 R8   ; R47 := R47[R8]
363 [-]: JMP       366          ; PC := 366
364 [-]: MOVE      R47 R0       ; R47 := R0
365 [-]: MOVE      R47 R1       ; R47 := R1
366 [-]: GETTABLE  R48 R9 K8    ; R48 := R9["name"]
367 [-]: LOADK     R49 K74      ; R49 := ""
368 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
369 [-]: GETUPVAL  R47 U2       ; R47 := U2
370 [-]: GETUPVAL  R48 U15      ; R48 := U15
371 [-]: MOVE      R49 R46      ; R49 := R46
372 [-]: MOVE      R50 R45      ; R50 := R45
373 [-]: MOVE      R51 R0       ; R51 := R0
374 [-]: LOADK     R52 K20      ; R52 := 2
375 [-]: MOVE      R53 R34      ; R53 := R34
376 [-]: NEWTABLE  R54 0 2      ; R54 := {}
377 [-]: SETTABLE  R54 K75 K76  ; R54["RollOver"] := "RollOverRegionLabel"
378 [-]: SETTABLE  R54 K77 K78  ; R54["RollOut"] := "RollOutRegionLabel"
379 [-]: MOVE      R55 R8       ; R55 := R8
380 [-]: CALL      R48 8 2      ; R48 := R48(R49,R50,R51,R52,R53,R54,R55)
381 [-]: SETTABLE  R47 R8 R48   ; R47[R8] := R48
382 [-]: TEST      R11 0        ; if not R11 then PC := 388
383 [-]: JMP       388          ; PC := 388
384 [-]: GETUPVAL  R47 U6       ; R47 := U6
385 [-]: GETUPVAL  R48 U5       ; R48 := U5
386 [-]: LEN       R48 R48      ; R48 := # R48
387 [-]: SETTABLE  R47 K79 R48  ; R47["SubLabelIndex"] := R48
388 [-]: FORLOOP   R5 28        ; R5 += R7; if R5 <= R6 then begin PC := 28; R8 := R5 end
389 [-]: RETURN    R0 1         ; return 


; Function #49.1:
;
; Name:            
; Defined at line: 1748
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xECFDD17
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["tiers"]
  3 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
  4 [-]: JMP       31           ; PC := 31
  5 [-]: GETGLOBAL R6 K0        ; R6 := 0xECFDD17
  6 [-]: GETTABLE  R7 R5 K2     ; R7 := R5["sectors"]
  7 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
  8 [-]: JMP       29           ; PC := 29
  9 [-]: GETTABLE  R11 R10 K3   ; R11 := R10["mission"]
 10 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["missionType"]
 11 [-]: GETGLOBAL R12 K5       ; R12 := Lotus_Game
 12 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["MT_RAILJACK"]
 13 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R11 K7       ; R11 := 0x400E7765
 16 [-]: GETTABLE  R12 R10 K3   ; R12 := R10["mission"]
 17 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["levelOverride"]
 18 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 19 [-]: TEST      R11 1        ; if R11 then PC := 29
 20 [-]: JMP       29           ; PC := 29
 21 [-]: GETTABLE  R11 R10 K3   ; R11 := R10["mission"]
 22 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["faction"]
 23 [-]: GETGLOBAL R12 K5       ; R12 := Lotus_Game
 24 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["FC_GRINEER"]
 25 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: MOVE      R11 R1       ; R11 := R1
 28 [-]: RETURN    R11 2        ; return R11
 29 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 9; R8 := R9 end
 30 [-]: JMP       9            ; PC := 9
 31 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 5; R3 := R4 end
 32 [-]: JMP       5            ; PC := 5
 33 [-]: MOVE      R11 R0       ; R11 := R0
 34 [-]: RETURN    R11 2        ; return R11
 35 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1788
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: SETTABLE  R1 K0 R2     ; R1["RegionLabel"] := R2
  6 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1792
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["RegionLabel"] := nil
  3 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1796
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xBB3AACF2"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: GETUPVAL  R0 U3        ; R0 := U3
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: NEWTABLE  R0 0 0       ; R0 := {}
 10 [-]: MOVE      R0 R4        ; R0 := R4
 11 [-]: LOADNIL   R0 R0        ; R0 := nil
 12 [-]: LOADK     R1 K1        ; R1 := 1
 13 [-]: GETUPVAL  R2 U5        ; R2 := U5
 14 [-]: LEN       R2 R2        ; R2 := # R2
 15 [-]: LOADK     R3 K1        ; R3 := 1
 16 [-]: FORPREP   R1 30        ; R1 -= R3; PC := 30
 17 [-]: GETUPVAL  R5 U5        ; R5 := U5
 18 [-]: GETTABLE  R0 R5 R4     ; R0 := R5[R4]
 19 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
 20 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["instance"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: TEST      R5 1         ; if R5 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R5 U4        ; R5 := U4
 25 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["scale"]
 26 [-]: GETUPVAL  R7 U6        ; R7 := U6
 27 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["PLANET_UNIT_MULTIPLIER"]
 28 [-]: MUL       R6 R6 R7     ; R6 := R6 * R7
 29 [-]: SETTABLE  R5 R4 R6     ; R5[R4] := R6
 30 [-]: FORLOOP   R1 17        ; R1 += R3; if R1 <= R2 then begin PC := 17; R4 := R1 end
 31 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1811
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["name"]
  2 [-]: LOADK     R2 K1        ; R2 := 1
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: LEN       R3 R3        ; R3 := # R3
  5 [-]: LOADK     R4 K1        ; R4 := 1
  6 [-]: FORPREP   R2 37        ; R2 -= R4; PC := 37
  7 [-]: LOADK     R6 K1        ; R6 := 1
  8 [-]: GETUPVAL  R7 U0        ; R7 := U0
  9 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 10 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["regionLinks"]
 11 [-]: LEN       R7 R7        ; R7 := # R7
 12 [-]: LOADK     R8 K1        ; R8 := 1
 13 [-]: FORPREP   R6 36        ; R6 -= R8; PC := 36
 14 [-]: GETUPVAL  R10 U0       ; R10 := U0
 15 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 16 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["regionLinks"]
 17 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 18 [-]: EQ        0 R10 R1     ; if R10 ~= R1 then PC := 36
 19 [-]: JMP       36           ; PC := 36
 20 [-]: LOADK     R10 K1       ; R10 := 1
 21 [-]: GETUPVAL  R11 U1       ; R11 := U1
 22 [-]: LEN       R11 R11      ; R11 := # R11
 23 [-]: LOADK     R12 K1       ; R12 := 1
 24 [-]: FORPREP   R10 35       ; R10 -= R12; PC := 35
 25 [-]: GETUPVAL  R14 U0       ; R14 := U0
 26 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
 27 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["instance"]
 28 [-]: GETUPVAL  R15 U1       ; R15 := U1
 29 [-]: GETTABLE  R15 R15 R13  ; R15 := R15[R13]
 30 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETUPVAL  R14 U1       ; R14 := U1
 33 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
 34 [-]: RETURN    R14 2        ; return R14
 35 [-]: FORLOOP   R10 25       ; R10 += R12; if R10 <= R11 then begin PC := 25; R13 := R10 end
 36 [-]: FORLOOP   R6 14        ; R6 += R8; if R6 <= R7 then begin PC := 14; R9 := R6 end
 37 [-]: FORLOOP   R2 7         ; R2 += R4; if R2 <= R3 then begin PC := 7; R5 := R2 end
 38 [-]: LOADNIL   R14 R14      ; R14 := nil
 39 [-]: RETURN    R14 2        ; return R14
 40 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 1828
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x994A1A7
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MIN_ZOOM"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MAX_ZOOM"]
  6 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x6374FD98
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mCurVal"]
 10 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["minValue"]
 11 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["maxValue"]
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0["0x3B43F25"]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 16 [-]: GETUPVAL  R3 U2        ; R3 := U2
 17 [-]: GETGLOBAL R4 K9        ; R4 := 0x93034B55
 18 [-]: LOADK     R5 K10       ; R5 := 1
 19 [-]: LOADK     R6 K11       ; R6 := 0.10000000149012
 20 [-]: MOVE      R7 R2        ; R7 := R2
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: SETTABLE  R3 K8 R4     ; R3["mDragMultiplier"] := R4
 23 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 1835
; #Upvalues:       21
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: LOADNIL   R1 R4        ; R1 := R2 := R3 := R4 := nil
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: TEST      R5 1         ; if R5 then PC := 34
 10 [-]: JMP       34           ; PC := 34
 11 [-]: GETGLOBAL R5 K4        ; R5 := _G
 12 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["StalkerMode"]
 13 [-]: TEST      R5 1         ; if R5 then PC := 34
 14 [-]: JMP       34           ; PC := 34
 15 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0x654F1092"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 18 [-]: MOVE      R7 R5        ; R7 := R5
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 1         ; if R6 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: SELF      R6 R5 K7     ; R7 := R5; R6 := R5["0x722B1CB7"]
 23 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 24 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x5EC7A3D2"]
 25 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 26 [-]: MOVE      R2 R6        ; R2 := R6
 27 [-]: SELF      R6 R5 K9     ; R7 := R5; R6 := R5["0x30BDE7F"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: GETGLOBAL R7 K10       ; R7 := 0xCAA43ABB
 30 [-]: GETTABLE  R8 R6 K11    ; R8 := R6["mShip"]
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: MOVE      R3 R7        ; R3 := R7
 33 [-]: GETTABLE  R4 R6 K12    ; R4 := R6["mShipExterior"]
 34 [-]: LOADK     R7 K13       ; R7 := "Earth"
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: LOADK     R9 K14       ; R9 := 1
 37 [-]: GETUPVAL  R10 U0       ; R10 := U0
 38 [-]: LEN       R10 R10      ; R10 := # R10
 39 [-]: LOADK     R11 K14      ; R11 := 1
 40 [-]: FORPREP   R9 83        ; R9 -= R11; PC := 83
 41 [-]: GETUPVAL  R13 U0       ; R13 := U0
 42 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 43 [-]: GETGLOBAL R14 K3       ; R14 := 0x400E7765
 44 [-]: MOVE      R15 R13      ; R15 := R13
 45 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 46 [-]: TEST      R14 1        ; if R14 then PC := 83
 47 [-]: JMP       83           ; PC := 83
 48 [-]: SELF      R14 R13 K15  ; R15 := R13; R14 := R13["0x80A80EEB"]
 49 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 50 [-]: GETGLOBAL R15 K16      ; R15 := Lotus_Game
 51 [-]: GETTABLE  R15 R15 K17  ; R15 := R15["RadialRegion_RCS_LOCKED"]
 52 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 83
 53 [-]: JMP       83           ; PC := 83
 54 [-]: GETUPVAL  R14 U1       ; R14 := U1
 55 [-]: GETTABLE  R14 R14 K18  ; R14 := R14["Active"]
 56 [-]: TEST      R14 0        ; if not R14 then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETUPVAL  R14 U1       ; R14 := U1
 59 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["Regions"]
 60 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
 61 [-]: TEST      R14 0        ; if not R14 then PC := 83
 62 [-]: JMP       83           ; PC := 83
 63 [-]: GETGLOBAL R14 K20      ; R14 := 0xD1E7609B
 64 [-]: LOADK     R15 K21      ; R15 := "/"
 65 [-]: GETTABLE  R16 R13 K22  ; R16 := R13["name"]
 66 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 67 [-]: LEN       R15 R14      ; R15 := # R14
 68 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 69 [-]: EQ        1 R14 R2     ; if R14 == R2 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: MOVE      R8 R0        ; R8 := R0
 72 [-]: MOVE      R8 R1        ; R8 := R1
 73 [-]: TEST      R8 1         ; if R8 then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: EQ        0 R14 R7     ; if R14 ~= R7 then PC := 83
 76 [-]: JMP       83           ; PC := 83
 77 [-]: MOVE      R1 R13       ; R1 := R13
 78 [-]: GETUPVAL  R15 U2       ; R15 := U2
 79 [-]: SETTABLE  R15 K23 R12  ; R15["RegionIndex"] := R12
 80 [-]: TEST      R8 0         ; if not R8 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: JMP       84           ; PC := 84
 83 [-]: FORLOOP   R9 41        ; R9 += R11; if R9 <= R10 then begin PC := 41; R12 := R9 end
 84 [-]: TEST      R8 1         ; if R8 then PC := 87
 85 [-]: JMP       87           ; PC := 87
 86 [-]: MOVE      R2 R7        ; R2 := R7
 87 [-]: EQ        1 R1 K24     ; if R1 == nil then PC := 137
 88 [-]: JMP       137          ; PC := 137
 89 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
 90 [-]: MOVE      R16 R3       ; R16 := R3
 91 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 92 [-]: TEST      R15 1        ; if R15 then PC := 137
 93 [-]: JMP       137          ; PC := 137
 94 [-]: GETUPVAL  R15 U1       ; R15 := U1
 95 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["Active"]
 96 [-]: TEST      R15 1        ; if R15 then PC := 137
 97 [-]: JMP       137          ; PC := 137
 98 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
 99 [-]: GETUPVAL  R16 U2       ; R16 := U2
100 [-]: GETTABLE  R16 R16 K25  ; R16 := R16["Deco"]
101 [-]: CALL      R15 2 2      ; R15 := R15(R16)
102 [-]: TEST      R15 0        ; if not R15 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETUPVAL  R15 U2       ; R15 := U2
105 [-]: GETGLOBAL R16 K26      ; R16 := gBackgroundRegion
106 [-]: SELF      R16 R16 K27  ; R17 := R16; R16 := R16["0xBDD34CC6"]
107 [-]: GETGLOBAL R18 K28      ; R18 := lisetDecorationType
108 [-]: GETTABLE  R19 R1 K29   ; R19 := R1["instance"]
109 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19["0x6DA72501"]
110 [-]: CALL      R19 2 2      ; R19 := R19(R20)
111 [-]: GETGLOBAL R20 K31      ; R20 := ZERO_ROTATION
112 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
113 [-]: SETTABLE  R15 K25 R16  ; R15["Deco"] := R16
114 [-]: GETUPVAL  R15 U2       ; R15 := U2
115 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["Deco"]
116 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15["0x6A7E5F92"]
117 [-]: LOADK     R17 K33      ; R17 := 0.00069999997504056
118 [-]: CALL      R15 3 1      ; R15(R16,R17)
119 [-]: GETUPVAL  R15 U2       ; R15 := U2
120 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["Deco"]
121 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0xE031E3AB"]
122 [-]: GETGLOBAL R17 K35      ; R17 := 0x7C282057
123 [-]: MOVE      R18 R3       ; R18 := R3
124 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
125 [-]: CALL      R15 0 1      ; R15(R16,...)
126 [-]: GETUPVAL  R15 U2       ; R15 := U2
127 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["Deco"]
128 [-]: SELF      R15 R15 K36  ; R16 := R15; R15 := R15["0xC2123CF5"]
129 [-]: GETTABLE  R17 R4 K37   ; R17 := R4["mSkinFlavourItem"]
130 [-]: GETTABLE  R18 R4 K38   ; R18 := R4["mColors"]
131 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
132 [-]: GETUPVAL  R15 U2       ; R15 := U2
133 [-]: GETTABLE  R16 R1 K29   ; R16 := R1["instance"]
134 [-]: SELF      R16 R16 K30  ; R17 := R16; R16 := R16["0x6DA72501"]
135 [-]: CALL      R16 2 2      ; R16 := R16(R17)
136 [-]: SETTABLE  R15 K39 R16  ; R15["AnchorPosition"] := R16
137 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
138 [-]: GETUPVAL  R16 U3       ; R16 := U3
139 [-]: CALL      R15 2 2      ; R15 := R15(R16)
140 [-]: TEST      R15 1        ; if R15 then PC := 173
141 [-]: JMP       173          ; PC := 173
142 [-]: GETUPVAL  R15 U3       ; R15 := U3
143 [-]: SELF      R15 R15 K40  ; R16 := R15; R15 := R15["0xEC183DDC"]
144 [-]: GETUPVAL  R17 U4       ; R17 := U4
145 [-]: GETGLOBAL R18 K41      ; R18 := 0x221C9700
146 [-]: LOADK     R19 K2       ; R19 := 0
147 [-]: LOADK     R20 K2       ; R20 := 0
148 [-]: LOADK     R21 K42      ; R21 := 20
149 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
150 [-]: ADD       R17 R17 R18  ; R17 := R17 + R18
151 [-]: CALL      R15 3 1      ; R15(R16,R17)
152 [-]: GETUPVAL  R15 U5       ; R15 := U5
153 [-]: GETUPVAL  R16 U4       ; R16 := U4
154 [-]: GETGLOBAL R17 K41      ; R17 := 0x221C9700
155 [-]: LOADK     R18 K2       ; R18 := 0
156 [-]: LOADK     R19 K2       ; R19 := 0
157 [-]: LOADK     R20 K44      ; R20 := 4
158 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
159 [-]: ADD       R16 R16 R17  ; R16 := R16 + R17
160 [-]: SETTABLE  R15 K43 R16  ; R15["Target"] := R16
161 [-]: GETUPVAL  R15 U5       ; R15 := U5
162 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["Prop"]
163 [-]: SELF      R15 R15 K46  ; R16 := R15; R15 := R15["0x5A7A6B1"]
164 [-]: LOADK     R17 K2       ; R17 := 0
165 [-]: CALL      R15 3 1      ; R15(R16,R17)
166 [-]: GETUPVAL  R15 U5       ; R15 := U5
167 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["Prop"]
168 [-]: SELF      R15 R15 K47  ; R16 := R15; R15 := R15["0xDB349344"]
169 [-]: LOADK     R17 K14      ; R17 := 1
170 [-]: CALL      R15 3 1      ; R15(R16,R17)
171 [-]: GETUPVAL  R15 U5       ; R15 := U5
172 [-]: SETTABLE  R15 K48 K49  ; R15["Region"] := -1
173 [-]: GETUPVAL  R15 U7       ; R15 := U7
174 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["0xF81722A2"]
175 [-]: GETUPVAL  R16 U8       ; R16 := U8
176 [-]: LOADK     R17 K14      ; R17 := 1
177 [-]: LOADK     R18 K51      ; R18 := 1.5
178 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
179 [-]: MOVE      R15 R6       ; R15 := R6
180 [-]: GETUPVAL  R15 U9       ; R15 := U9
181 [-]: GETTABLE  R15 R15 K52  ; R15 := R15["mCurrentScroll"]
182 [-]: GETTABLE  R15 R15 K53  ; R15 := R15["x"]
183 [-]: GETUPVAL  R16 U9       ; R16 := U9
184 [-]: GETTABLE  R16 R16 K52  ; R16 := R16["mCurrentScroll"]
185 [-]: GETTABLE  R16 R16 K54  ; R16 := R16["y"]
186 [-]: GETUPVAL  R17 U10      ; R17 := U10
187 [-]: GETTABLE  R17 R17 K55  ; R17 := R17["STARTING_ZOOM"]
188 [-]: SUB       R17 R17 K56  ; R17 := R17 - 80
189 [-]: GETUPVAL  R18 U11      ; R18 := U11
190 [-]: SELF      R18 R18 K46  ; R19 := R18; R18 := R18["0x5A7A6B1"]
191 [-]: MOVE      R20 R17      ; R20 := R17
192 [-]: CALL      R18 3 1      ; R18(R19,R20)
193 [-]: LOADNIL   R18 R18      ; R18 := nil
194 [-]: GETGLOBAL R19 K3       ; R19 := 0x400E7765
195 [-]: GETGLOBAL R20 K4       ; R20 := _G
196 [-]: GETTABLE  R20 R20 K57  ; R20 := R20["JunctionComplete"]
197 [-]: CALL      R19 2 2      ; R19 := R19(R20)
198 [-]: TEST      R19 1        ; if R19 then PC := 264
199 [-]: JMP       264          ; PC := 264
200 [-]: LOADNIL   R19 R19      ; R19 := nil
201 [-]: GETGLOBAL R20 K58      ; R20 := 0x63B09107
202 [-]: GETUPVAL  R21 U12      ; R21 := U12
203 [-]: CALL      R20 2 4      ; R20,R21,R22 := R20(R21)
204 [-]: JMP       225          ; PC := 225
205 [-]: GETTABLE  R25 R24 K59  ; R25 := R24["IsJunction"]
206 [-]: TEST      R25 0        ; if not R25 then PC := 225
207 [-]: JMP       225          ; PC := 225
208 [-]: GETTABLE  R25 R24 K60  ; R25 := R24["NodeA"]
209 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["name"]
210 [-]: GETGLOBAL R26 K4       ; R26 := _G
211 [-]: GETTABLE  R26 R26 K57  ; R26 := R26["JunctionComplete"]
212 [-]: GETTABLE  R26 R26 K61  ; R26 := R26["location"]
213 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 217
214 [-]: JMP       217          ; PC := 217
215 [-]: GETTABLE  R19 R24 K62  ; R19 := R24["NodeB"]
216 [-]: JMP       225          ; PC := 225
217 [-]: GETTABLE  R25 R24 K62  ; R25 := R24["NodeB"]
218 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["name"]
219 [-]: GETGLOBAL R26 K4       ; R26 := _G
220 [-]: GETTABLE  R26 R26 K57  ; R26 := R26["JunctionComplete"]
221 [-]: GETTABLE  R26 R26 K61  ; R26 := R26["location"]
222 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 225
223 [-]: JMP       225          ; PC := 225
224 [-]: GETTABLE  R19 R24 K60  ; R19 := R24["NodeA"]
225 [-]: TFORLOOP  R20 2        ; R23,R24 :=  R20(R21,R22); if R23 ~= nil then begin PC = 205; R22 := R23 end
226 [-]: JMP       205          ; PC := 205
227 [-]: GETGLOBAL R25 K3       ; R25 := 0x400E7765
228 [-]: MOVE      R26 R19      ; R26 := R19
229 [-]: CALL      R25 2 2      ; R25 := R25(R26)
230 [-]: TEST      R25 1        ; if R25 then PC := 262
231 [-]: JMP       262          ; PC := 262
232 [-]: GETGLOBAL R25 K58      ; R25 := 0x63B09107
233 [-]: GETUPVAL  R26 U12      ; R26 := U12
234 [-]: CALL      R25 2 4      ; R25,R26,R27 := R25(R26)
235 [-]: JMP       260          ; PC := 260
236 [-]: GETTABLE  R30 R29 K63  ; R30 := R29["IsShortcut"]
237 [-]: TEST      R30 0        ; if not R30 then PC := 260
238 [-]: JMP       260          ; PC := 260
239 [-]: GETTABLE  R30 R29 K60  ; R30 := R29["NodeA"]
240 [-]: EQ        0 R30 R19    ; if R30 ~= R19 then PC := 250
241 [-]: JMP       250          ; PC := 250
242 [-]: GETUPVAL  R30 U0       ; R30 := U0
243 [-]: GETTABLE  R31 R29 K62  ; R31 := R29["NodeB"]
244 [-]: GETTABLE  R31 R31 K64  ; R31 := R31["radialSector"]
245 [-]: GETTABLE  R31 R31 K65  ; R31 := R31["region"]
246 [-]: ADD       R31 R31 K14  ; R31 := R31 + 1
247 [-]: GETTABLE  R18 R30 R31  ; R18 := R30[R31]
248 [-]: JMP       262          ; PC := 262
249 [-]: JMP       260          ; PC := 260
250 [-]: GETTABLE  R30 R29 K62  ; R30 := R29["NodeB"]
251 [-]: EQ        0 R30 R19    ; if R30 ~= R19 then PC := 260
252 [-]: JMP       260          ; PC := 260
253 [-]: GETUPVAL  R30 U0       ; R30 := U0
254 [-]: GETTABLE  R31 R29 K60  ; R31 := R29["NodeA"]
255 [-]: GETTABLE  R31 R31 K64  ; R31 := R31["radialSector"]
256 [-]: GETTABLE  R31 R31 K65  ; R31 := R31["region"]
257 [-]: ADD       R31 R31 K14  ; R31 := R31 + 1
258 [-]: GETTABLE  R18 R30 R31  ; R18 := R30[R31]
259 [-]: JMP       262          ; PC := 262
260 [-]: TFORLOOP  R25 2        ; R28,R29 :=  R25(R26,R27); if R28 ~= nil then begin PC = 236; R27 := R28 end
261 [-]: JMP       236          ; PC := 236
262 [-]: GETGLOBAL R30 K4       ; R30 := _G
263 [-]: SETTABLE  R30 K57 K24  ; R30["JunctionComplete"] := nil
264 [-]: EQ        1 R1 K24     ; if R1 == nil then PC := 312
265 [-]: JMP       312          ; PC := 312
266 [-]: GETGLOBAL R30 K66      ; R30 := _T
267 [-]: GETTABLE  R30 R30 K67  ; R30 := R30["WareframeChallenge"]
268 [-]: TEST      R30 1        ; if R30 then PC := 312
269 [-]: JMP       312          ; PC := 312
270 [-]: GETUPVAL  R30 U13      ; R30 := U13
271 [-]: MOVE      R31 R1       ; R31 := R1
272 [-]: GETTABLE  R32 R1 K68   ; R32 := R1["zoomedFraming"]
273 [-]: CALL      R30 3 4      ; R30,R31,R32 := R30(R31,R32)
274 [-]: CLOSURE   R33 0        ; R33 := closure(Function #55.1)
275 [-]: GETUPVAL  R0 U11       ; R0 := U11
276 [-]: MOVE      R0 R17       ; R0 := R17
277 [-]: MOVE      R0 R32       ; R0 := R32
278 [-]: GETUPVAL  R0 U9        ; R0 := U9
279 [-]: MOVE      R0 R15       ; R0 := R15
280 [-]: MOVE      R0 R30       ; R0 := R30
281 [-]: MOVE      R0 R16       ; R0 := R16
282 [-]: MOVE      R0 R31       ; R0 := R31
283 [-]: GETUPVAL  R34 U14      ; R34 := U14
284 [-]: SELF      R34 R34 K69  ; R35 := R34; R34 := R34["0x61494587"]
285 [-]: LOADK     R36 K70      ; R36 := 0.55000001192093
286 [-]: CLOSURE   R37 1        ; R37 := closure(Function #55.2)
287 [-]: GETUPVAL  R0 U15       ; R0 := U15
288 [-]: MOVE      R0 R1        ; R0 := R1
289 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
290 [-]: GETGLOBAL R34 K71      ; R34 := 0x52E17A90
291 [-]: GETGLOBAL R35 K72      ; R35 := mMovie
292 [-]: LOADK     R36 K73      ; R36 := "_root"
293 [-]: GETGLOBAL R37 K74      ; R37 := UISys
294 [-]: GETTABLE  R37 R37 K75  ; R37 := R37["FlashInstance_LINEAR"]
295 [-]: NEWTABLE  R38 1 0      ; R38 := {}
296 [-]: MOVE      R39 R33      ; R39 := R33
297 [-]: SETLIST   R38 1 1      ; R38[(1-1)*FPF+i] := R(38+i), 1 <= i <= 1
298 [-]: NEWTABLE  R39 1 0      ; R39 := {}
299 [-]: LOADK     R40 K14      ; R40 := 1
300 [-]: SETLIST   R39 1 1      ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 1
301 [-]: LOADK     R40 K76      ; R40 := 0.75
302 [-]: LOADK     R41 K77      ; R41 := 0.10000000149012
303 [-]: CLOSURE   R42 2        ; R42 := closure(Function #55.3)
304 [-]: MOVE      R0 R18       ; R0 := R18
305 [-]: GETUPVAL  R0 U16       ; R0 := U16
306 [-]: GETUPVAL  R0 U17       ; R0 := U17
307 [-]: GETUPVAL  R0 U18       ; R0 := U18
308 [-]: GETUPVAL  R0 U19       ; R0 := U19
309 [-]: CALL      R34 9 1      ; R34(R35,R36,R37,R38,R39,R40,R41,R42)
310 [-]: CLOSE     R30          ; SAVE R30,...
311 [-]: JMP       335          ; PC := 335
312 [-]: GETGLOBAL R30 K71      ; R30 := 0x52E17A90
313 [-]: GETGLOBAL R31 K72      ; R31 := mMovie
314 [-]: LOADK     R32 K73      ; R32 := "_root"
315 [-]: GETGLOBAL R33 K74      ; R33 := UISys
316 [-]: GETTABLE  R33 R33 K75  ; R33 := R33["FlashInstance_LINEAR"]
317 [-]: NEWTABLE  R34 1 0      ; R34 := {}
318 [-]: CLOSURE   R35 3        ; R35 := closure(Function #55.4)
319 [-]: GETUPVAL  R0 U11       ; R0 := U11
320 [-]: MOVE      R0 R17       ; R0 := R17
321 [-]: GETUPVAL  R0 U10       ; R0 := U10
322 [-]: SETLIST   R34 1 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
323 [-]: NEWTABLE  R35 1 0      ; R35 := {}
324 [-]: LOADK     R36 K14      ; R36 := 1
325 [-]: SETLIST   R35 1 1      ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
326 [-]: LOADK     R36 K78      ; R36 := 0.64999997615814
327 [-]: LOADK     R37 K2       ; R37 := 0
328 [-]: CLOSURE   R38 4        ; R38 := closure(Function #55.5)
329 [-]: GETUPVAL  R0 U17       ; R0 := U17
330 [-]: GETUPVAL  R0 U18       ; R0 := U18
331 [-]: GETUPVAL  R0 U19       ; R0 := U19
332 [-]: GETUPVAL  R0 U14       ; R0 := U14
333 [-]: GETUPVAL  R0 U20       ; R0 := U20
334 [-]: CALL      R30 9 1      ; R30(R31,R32,R33,R34,R35,R36,R37,R38)
335 [-]: RETURN    R0 1         ; return 


; Function #55.1:
;
; Name:            
; Defined at line: 1930
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x5A7A6B1"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x93034B55
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETUPVAL  R5 U2        ; R5 := U2
  6 [-]: MOVE      R6 R0        ; R6 := R0
  7 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  8 [-]: CALL      R1 0 1       ; R1(R2,...)
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0x9E1B8940
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x9E1B8940
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x9E1B8940
 12 [-]: GETGLOBAL R4 K2        ; R4 := 0x9E1B8940
 13 [-]: GETGLOBAL R5 K2        ; R5 := 0x9E1B8940
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 16 [-]: CALL      R4 0 0       ; R4,... := R4(R5,...)
 17 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 18 [-]: CALL      R2 0 0       ; R2,... := R2(R3,...)
 19 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 20 [-]: GETUPVAL  R2 U3        ; R2 := U3
 21 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xCE468565"]
 22 [-]: LOADK     R4 K4        ; R4 := "x"
 23 [-]: GETGLOBAL R5 K1        ; R5 := 0x93034B55
 24 [-]: GETUPVAL  R6 U4        ; R6 := U4
 25 [-]: GETUPVAL  R7 U5        ; R7 := U5
 26 [-]: MOVE      R8 R1        ; R8 := R1
 27 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 28 [-]: CALL      R2 0 1       ; R2(R3,...)
 29 [-]: GETUPVAL  R2 U3        ; R2 := U3
 30 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xCE468565"]
 31 [-]: LOADK     R4 K5        ; R4 := "y"
 32 [-]: GETGLOBAL R5 K1        ; R5 := 0x93034B55
 33 [-]: GETUPVAL  R6 U6        ; R6 := U6
 34 [-]: GETUPVAL  R7 U7        ; R7 := U7
 35 [-]: MOVE      R8 R1        ; R8 := R1
 36 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 37 [-]: CALL      R2 0 1       ; R2(R3,...)
 38 [-]: RETURN    R0 1         ; return 


; Function #55.2:
;
; Name:            
; Defined at line: 1937
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #55.3:
;
; Name:            
; Defined at line: 1939
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R2        ; R0 := R2
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: CALL      R0 1 1       ; R0()
 14 [-]: GETUPVAL  R0 U4        ; R0 := U4
 15 [-]: CALL      R0 1 1       ; R0()
 16 [-]: RETURN    R0 1         ; return 


; Function #55.4:
;
; Name:            
; Defined at line: 1949
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x5A7A6B1"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x93034B55
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETUPVAL  R5 U2        ; R5 := U2
  6 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["STARTING_ZOOM"]
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  9 [-]: CALL      R1 0 1       ; R1(R2,...)
 10 [-]: RETURN    R0 1         ; return 


; Function #55.5:
;
; Name:            
; Defined at line: 1950
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: GETUPVAL  R1 U3        ; R1 := U3
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x61494587"]
 11 [-]: LOADK     R3 K2        ; R3 := 0.050000000745058
 12 [-]: CLOSURE   R4 0         ; R4 := closure(Function #55.5.1)
 13 [-]: GETUPVAL  R0 U4        ; R0 := U4
 14 [-]: MOVE      R0 R0        ; R0 := R0
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: RETURN    R0 1         ; return 


; Function #55.5.1:
;
; Name:            
; Defined at line: 1957
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 26        ; R0 -= R2; PC := 26
  6 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  7 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x3688C0F4"]
  8 [-]: GETUPVAL  R6 U1        ; R6 := U1
  9 [-]: GETUPVAL  R7 U0        ; R7 := U0
 10 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 11 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["pos"]
 12 [-]: MOVE      R8 R1        ; R8 := R1
 13 [-]: MOVE      R9 R0        ; R9 := R0
 14 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 15 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 16 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x4717530F"]
 17 [-]: GETUPVAL  R6 U0        ; R6 := U0
 18 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 19 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["memberIndex"]
 20 [-]: GETUPVAL  R7 U1        ; R7 := U1
 21 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["x"]
 22 [-]: GETUPVAL  R8 U1        ; R8 := U1
 23 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["y"]
 24 [-]: SUB       R8 R8 K8     ; R8 := R8 - 10
 25 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 26 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 27 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 1967
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["radialSector"]
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["region"]
  3 [-]: ADD       R1 R1 K2     ; R1 := R1 + 1
  4 [-]: EQ        1 R1 K3      ; if R1 == 17 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: MOVE      R2 R1        ; R2 := R1
  8 [-]: EQ        1 R1 K4      ; if R1 == 15 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: EQ        1 R1 K5      ; if R1 == 14 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: TEST      R2 1         ; if R2 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: TEST      R3 1         ; if R3 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: TEST      R4 0         ; if not R4 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: RETURN    R5 2         ; return R5
 24 [-]: GETUPVAL  R5 U0        ; R5 := U0
 25 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 26 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["instance"]
 27 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0xAC8F6523"]
 28 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["position"]
 29 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 30 [-]: LOADK     R6 K9        ; R6 := 0.0049999998882413
 31 [-]: GETUPVAL  R7 U1        ; R7 := U1
 32 [-]: GETTABLE  R7 R7 R1     ; R7 := R7[R1]
 33 [-]: ADD       R7 R7 R6     ; R7 := R7 + R6
 34 [-]: LT        1 R5 R7      ; if R5 < R7 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R7 R0        ; R7 := R0
 37 [-]: MOVE      R7 R1        ; R7 := R1
 38 [-]: RETURN    R7 2         ; return R7
 39 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 1980
; #Upvalues:       17
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  45

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  4 [-]: MOVE      R1 R2        ; R1 := R2
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["nodeType"]
  6 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["NT_PVP"]
  8 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["locTag"]
 12 [-]: GETGLOBAL R3 K5        ; R3 := EMPTY_SYMBOL
 13 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R2 K6        ; R2 := 0x9FAED6BC
 17 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["name"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETGLOBAL R3 K8        ; R3 := string
 20 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0xDE44F664"]
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: LOADK     R5 K10       ; R5 := "Dojo"
 23 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 24 [-]: EQ        0 R3 K0      ; if R3 ~= nil then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R3 R0        ; R3 := R0
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: GETUPVAL  R4 U0        ; R4 := U0
 29 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["Active"]
 30 [-]: TEST      R4 1         ; if R4 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["missionTag"]
 33 [-]: GETUPVAL  R5 U0        ; R5 := U0
 34 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["Tag"]
 35 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: RETURN    R0 1         ; return 
 38 [-]: GETGLOBAL R4 K14       ; R4 := gGameRules
 39 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4["0x8B598ED4"]
 40 [-]: GETGLOBAL R6 K16       ; R6 := gLotusHubGameRulesType
 41 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 42 [-]: GETUPVAL  R5 U0        ; R5 := U0
 43 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Active"]
 44 [-]: TEST      R5 0         ; if not R5 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: TEST      R4 0         ; if not R4 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: TEST      R3 0         ; if not R3 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: TEST      R3 1         ; if R3 then PC := 68
 52 [-]: JMP       68           ; PC := 68
 53 [-]: GETUPVAL  R5 U0        ; R5 := U0
 54 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Active"]
 55 [-]: TEST      R5 0         ; if not R5 then PC := 68
 56 [-]: JMP       68           ; PC := 68
 57 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["missionTag"]
 58 [-]: GETUPVAL  R6 U0        ; R6 := U0
 59 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["Tag"]
 60 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["nodeType"]
 63 [-]: GETGLOBAL R6 K2        ; R6 := Lotus_Game
 64 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["NT_SHORTCUT"]
 65 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 68
 66 [-]: JMP       68           ; PC := 68
 67 [-]: RETURN    R0 1         ; return 
 68 [-]: GETUPVAL  R5 U0        ; R5 := U0
 69 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["Active"]
 70 [-]: TEST      R5 0         ; if not R5 then PC := 87
 71 [-]: JMP       87           ; PC := 87
 72 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["missionTag"]
 73 [-]: GETUPVAL  R6 U0        ; R6 := U0
 74 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["Tag"]
 75 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 81
 76 [-]: JMP       81           ; PC := 81
 77 [-]: GETTABLE  R5 R0 K18    ; R5 := R0["mission"]
 78 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["unlocked"]
 79 [-]: TEST      R5 0         ; if not R5 then PC := 86
 80 [-]: JMP       86           ; PC := 86
 81 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["nodeType"]
 82 [-]: GETGLOBAL R6 K2        ; R6 := Lotus_Game
 83 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["NT_SHORTCUT"]
 84 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 87
 85 [-]: JMP       87           ; PC := 87
 86 [-]: RETURN    R0 1         ; return 
 87 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["nodeType"]
 88 [-]: GETGLOBAL R6 K2        ; R6 := Lotus_Game
 89 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["NT_EVENT"]
 90 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 110
 91 [-]: JMP       110          ; PC := 110
 92 [-]: GETGLOBAL R5 K21       ; R5 := _G
 93 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["CachedGoalInfo"]
 94 [-]: GETTABLE  R5 R5 R2     ; R5 := R5[R2]
 95 [-]: TEST      R5 1         ; if R5 then PC := 110
 96 [-]: JMP       110          ; PC := 110
 97 [-]: GETGLOBAL R5 K23       ; R5 := _T
 98 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["WorldStateDerelictNodes"]
 99 [-]: TEST      R5 0         ; if not R5 then PC := 109
100 [-]: JMP       109          ; PC := 109
101 [-]: GETGLOBAL R5 K23       ; R5 := _T
102 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["WorldStateDerelictNodes"]
103 [-]: GETGLOBAL R6 K6        ; R6 := 0x9FAED6BC
104 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["name"]
105 [-]: CALL      R6 2 2       ; R6 := R6(R7)
106 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
107 [-]: TEST      R5 1         ; if R5 then PC := 110
108 [-]: JMP       110          ; PC := 110
109 [-]: RETURN    R0 1         ; return 
110 [-]: GETTABLE  R5 R0 K25    ; R5 := R0["region"]
111 [-]: ADD       R5 R5 K26    ; R5 := R5 + 1
112 [-]: GETGLOBAL R6 K23       ; R6 := _T
113 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["REGION_ID_MOON"]
114 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 126
115 [-]: JMP       126          ; PC := 126
116 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["nodeType"]
117 [-]: GETGLOBAL R6 K2        ; R6 := Lotus_Game
118 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["NT_SHORTCUT"]
119 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 133
120 [-]: JMP       133          ; PC := 133
121 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["name"]
122 [-]: GETUPVAL  R6 U1        ; R6 := U1
123 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["MOON_SHORTCUT_TAG"]
124 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 133
125 [-]: JMP       133          ; PC := 133
126 [-]: GETUPVAL  R5 U2        ; R5 := U2
127 [-]: GETGLOBAL R6 K23       ; R6 := _T
128 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["REGION_ID_MOON"]
129 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
130 [-]: EQ        0 R5 K29     ; if R5 ~= "0x1" then PC := 133
131 [-]: JMP       133          ; PC := 133
132 [-]: RETURN    R0 1         ; return 
133 [-]: GETTABLE  R5 R0 K25    ; R5 := R0["region"]
134 [-]: ADD       R5 R5 K26    ; R5 := R5 + 1
135 [-]: GETGLOBAL R6 K23       ; R6 := _T
136 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["REGION_ID_FORTRESS"]
137 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 146
138 [-]: JMP       146          ; PC := 146
139 [-]: GETUPVAL  R5 U2        ; R5 := U2
140 [-]: GETGLOBAL R6 K23       ; R6 := _T
141 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["REGION_ID_FORTRESS"]
142 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
143 [-]: EQ        0 R5 K29     ; if R5 ~= "0x1" then PC := 146
144 [-]: JMP       146          ; PC := 146
145 [-]: RETURN    R0 1         ; return 
146 [-]: GETGLOBAL R5 K21       ; R5 := _G
147 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["StarChartHiddenEventNode"]
148 [-]: EQ        0 R2 R5      ; if R2 ~= R5 then PC := 151
149 [-]: JMP       151          ; PC := 151
150 [-]: RETURN    R0 1         ; return 
151 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["missionTag"]
152 [-]: GETUPVAL  R6 U1        ; R6 := U1
153 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["TENNOCON_RELAY"]
154 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 173
155 [-]: JMP       173          ; PC := 173
156 [-]: GETGLOBAL R5 K21       ; R5 := _G
157 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["CachedGoalInfo"]
158 [-]: GETTABLE  R5 R5 R2     ; R5 := R5[R2]
159 [-]: TEST      R5 0         ; if not R5 then PC := 172
160 [-]: JMP       172          ; PC := 172
161 [-]: GETGLOBAL R5 K33       ; R5 := 0x400E7765
162 [-]: GETGLOBAL R6 K34       ; R6 := gGameData
163 [-]: CALL      R5 2 2       ; R5 := R5(R6)
164 [-]: TEST      R5 1         ; if R5 then PC := 173
165 [-]: JMP       173          ; PC := 173
166 [-]: GETUPVAL  R5 U3        ; R5 := U3
167 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["0x8D79D162"]
168 [-]: GETGLOBAL R6 K34       ; R6 := gGameData
169 [-]: CALL      R5 2 2       ; R5 := R5(R6)
170 [-]: TEST      R5 1         ; if R5 then PC := 173
171 [-]: JMP       173          ; PC := 173
172 [-]: RETURN    R0 1         ; return 
173 [-]: GETTABLE  R5 R0 K25    ; R5 := R0["region"]
174 [-]: ADD       R5 R5 K26    ; R5 := R5 + 1
175 [-]: GETGLOBAL R6 K23       ; R6 := _T
176 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["REGION_ID_DARK_SECTOR"]
177 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 180
178 [-]: JMP       180          ; PC := 180
179 [-]: RETURN    R0 1         ; return 
180 [-]: MOVE      R5 R0        ; R5 := R0
181 [-]: GETGLOBAL R6 K33       ; R6 := 0x400E7765
182 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["mission"]
183 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["questReq"]
184 [-]: CALL      R6 2 2       ; R6 := R6(R7)
185 [-]: TEST      R6 1         ; if R6 then PC := 277
186 [-]: JMP       277          ; PC := 277
187 [-]: GETGLOBAL R6 K33       ; R6 := 0x400E7765
188 [-]: GETGLOBAL R7 K34       ; R7 := gGameData
189 [-]: CALL      R6 2 2       ; R6 := R6(R7)
190 [-]: TEST      R6 1         ; if R6 then PC := 277
191 [-]: JMP       277          ; PC := 277
192 [-]: GETGLOBAL R6 K34       ; R6 := gGameData
193 [-]: SELF      R6 R6 K38    ; R7 := R6; R6 := R6["0x6F2E05FD"]
194 [-]: CALL      R6 2 2       ; R6 := R6(R7)
195 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6["0x52C8784B"]
196 [-]: CALL      R6 2 2       ; R6 := R6(R7)
197 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["mission"]
198 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["questReq"]
199 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 277
200 [-]: JMP       277          ; PC := 277
201 [-]: GETUPVAL  R6 U4        ; R6 := U4
202 [-]: TEST      R6 1         ; if R6 then PC := 277
203 [-]: JMP       277          ; PC := 277
204 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["name"]
205 [-]: GETUPVAL  R7 U5        ; R7 := U5
206 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["CETUS_NODE_TAG"]
207 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 216
208 [-]: JMP       216          ; PC := 216
209 [-]: GETUPVAL  R6 U5        ; R6 := U5
210 [-]: GETTABLE  R6 R6 K41    ; R6 := R6["0x2AAC7A8C"]
211 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["mission"]
212 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["questReq"]
213 [-]: CALL      R6 2 2       ; R6 := R6(R7)
214 [-]: MOVE      R5 R6        ; R5 := R6
215 [-]: JMP       277          ; PC := 277
216 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["name"]
217 [-]: GETUPVAL  R7 U5        ; R7 := U5
218 [-]: GETTABLE  R7 R7 K42    ; R7 := R7["PLAINS_NODE_TAG"]
219 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 233
220 [-]: JMP       233          ; PC := 233
221 [-]: GETGLOBAL R6 K43       ; R6 := gPlayerProfileMgr
222 [-]: SELF      R6 R6 K44    ; R7 := R6; R6 := R6["0x21EF7B1A"]
223 [-]: LOADK     R8 K45       ; R8 := 0
224 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
225 [-]: SELF      R6 R6 K46    ; R7 := R6; R6 := R6["0x654F1092"]
226 [-]: CALL      R6 2 2       ; R6 := R6(R7)
227 [-]: SELF      R6 R6 K47    ; R7 := R6; R6 := R6["0x8572D26E"]
228 [-]: GETUPVAL  R8 U5        ; R8 := U5
229 [-]: GETTABLE  R8 R8 K42    ; R8 := R8["PLAINS_NODE_TAG"]
230 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
231 [-]: MOVE      R5 R6        ; R5 := R6
232 [-]: JMP       277          ; PC := 277
233 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["name"]
234 [-]: GETUPVAL  R7 U5        ; R7 := U5
235 [-]: GETTABLE  R7 R7 K48    ; R7 := R7["ORB_VALLIS_NODE_TAG"]
236 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 244
237 [-]: JMP       244          ; PC := 244
238 [-]: GETUPVAL  R6 U5        ; R6 := U5
239 [-]: GETTABLE  R6 R6 K41    ; R6 := R6["0x2AAC7A8C"]
240 [-]: GETUPVAL  R7 U6        ; R7 := U6
241 [-]: CALL      R6 2 2       ; R6 := R6(R7)
242 [-]: MOVE      R5 R6        ; R5 := R6
243 [-]: JMP       277          ; PC := 277
244 [-]: GETTABLE  R6 R0 K18    ; R6 := R0["mission"]
245 [-]: GETTABLE  R6 R6 K49    ; R6 := R6["missionType"]
246 [-]: GETGLOBAL R7 K2        ; R7 := Lotus_Game
247 [-]: GETTABLE  R7 R7 K50    ; R7 := R7["MT_ARTIFACT"]
248 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 256
249 [-]: JMP       256          ; PC := 256
250 [-]: GETTABLE  R6 R0 K18    ; R6 := R0["mission"]
251 [-]: GETTABLE  R6 R6 K49    ; R6 := R6["missionType"]
252 [-]: GETGLOBAL R7 K2        ; R7 := Lotus_Game
253 [-]: GETTABLE  R7 R7 K51    ; R7 := R7["MT_ASSASSINATION"]
254 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 269
255 [-]: JMP       269          ; PC := 269
256 [-]: GETUPVAL  R6 U5        ; R6 := U5
257 [-]: GETTABLE  R6 R6 K41    ; R6 := R6["0x2AAC7A8C"]
258 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["mission"]
259 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["questReq"]
260 [-]: CALL      R6 2 2       ; R6 := R6(R7)
261 [-]: TEST      R6 1         ; if R6 then PC := 266
262 [-]: JMP       266          ; PC := 266
263 [-]: GETTABLE  R6 R0 K19    ; R6 := R0["unlocked"]
264 [-]: MOVE      R5 R6        ; R5 := R6
265 [-]: JMP       277          ; PC := 277
266 [-]: MOVE      R5 R0        ; R5 := R0
267 [-]: MOVE      R5 R1        ; R5 := R1
268 [-]: JMP       277          ; PC := 277
269 [-]: GETUPVAL  R6 U5        ; R6 := U5
270 [-]: GETTABLE  R6 R6 K41    ; R6 := R6["0x2AAC7A8C"]
271 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["mission"]
272 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["questReq"]
273 [-]: CALL      R6 2 2       ; R6 := R6(R7)
274 [-]: TEST      R6 1         ; if R6 then PC := 277
275 [-]: JMP       277          ; PC := 277
276 [-]: RETURN    R0 1         ; return 
277 [-]: MOVE      R6 R1        ; R6 := R1
278 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["missionTag"]
279 [-]: GETUPVAL  R8 U1        ; R8 := U1
280 [-]: GETTABLE  R8 R8 K52    ; R8 := R8["DESTROYED_NODE_TAG"]
281 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 286
282 [-]: JMP       286          ; PC := 286
283 [-]: GETGLOBAL R7 K54       ; R7 := destroyedNodeDeco
284 [-]: SETTABLE  R0 K53 R7    ; R0["deco"] := R7
285 [-]: MOVE      R6 R0        ; R6 := R0
286 [-]: LOADNIL   R7 R7        ; R7 := nil
287 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["missionTag"]
288 [-]: GETUPVAL  R9 U1        ; R9 := U1
289 [-]: GETTABLE  R9 R9 K55    ; R9 := R9["RECONSTRUCTION_NODE_TAG"]
290 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 297
291 [-]: JMP       297          ; PC := 297
292 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["missionTag"]
293 [-]: GETUPVAL  R9 U1        ; R9 := U1
294 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["UNDER_CONSTRUCTION_NODE_TAG"]
295 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 368
296 [-]: JMP       368          ; PC := 368
297 [-]: GETTABLE  R8 R0 K7     ; R8 := R0["name"]
298 [-]: SELF      R8 R8 K57    ; R9 := R8; R8 := R8["0x5EC7A3D2"]
299 [-]: CALL      R8 2 2       ; R8 := R8(R9)
300 [-]: GETGLOBAL R9 K8        ; R9 := string
301 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["0xDE44F664"]
302 [-]: MOVE      R10 R8       ; R10 := R8
303 [-]: LOADK     R11 K58      ; R11 := "Rebuild"
304 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
305 [-]: MOVE      R10 R8       ; R10 := R8
306 [-]: TEST      R9 0         ; if not R9 then PC := 315
307 [-]: JMP       315          ; PC := 315
308 [-]: GETGLOBAL R11 K8       ; R11 := string
309 [-]: GETTABLE  R11 R11 K59  ; R11 := R11["0x7B782033"]
310 [-]: MOVE      R12 R8       ; R12 := R8
311 [-]: LOADK     R13 K26      ; R13 := 1
312 [-]: SUB       R14 R9 K26   ; R14 := R9 - 1
313 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
314 [-]: MOVE      R10 R11      ; R10 := R11
315 [-]: GETUPVAL  R11 U7       ; R11 := U7
316 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
317 [-]: MOVE      R12 R0       ; R12 := R0
318 [-]: LOADNIL   R13 R13      ; R13 := nil
319 [-]: TEST      R11 0        ; if not R11 then PC := 337
320 [-]: JMP       337          ; PC := 337
321 [-]: GETTABLE  R13 R11 K60  ; R13 := R11["info"]
322 [-]: TEST      R13 0        ; if not R13 then PC := 337
323 [-]: JMP       337          ; PC := 337
324 [-]: GETTABLE  R14 R13 K61  ; R14 := R13["mActivation"]
325 [-]: SELF      R14 R14 K62  ; R15 := R14; R14 := R14["0x315E860F"]
326 [-]: CALL      R14 2 2      ; R14 := R14(R15)
327 [-]: TEST      R14 0        ; if not R14 then PC := 337
328 [-]: JMP       337          ; PC := 337
329 [-]: GETGLOBAL R14 K63      ; R14 := Engine
330 [-]: GETTABLE  R14 R14 K64  ; R14 := R14["0xD09D7910"]
331 [-]: GETTABLE  R15 R11 K60  ; R15 := R11["info"]
332 [-]: GETTABLE  R15 R15 K61  ; R15 := R15["mActivation"]
333 [-]: CALL      R14 2 2      ; R14 := R14(R15)
334 [-]: LE        0 R14 K45    ; if R14 > 0 then PC := 337
335 [-]: JMP       337          ; PC := 337
336 [-]: MOVE      R12 R1       ; R12 := R1
337 [-]: TEST      R12 0        ; if not R12 then PC := 340
338 [-]: JMP       340          ; PC := 340
339 [-]: GETTABLE  R7 R11 K65   ; R7 := R11["progress"]
340 [-]: TEST      R9 0         ; if not R9 then PC := 348
341 [-]: JMP       348          ; PC := 348
342 [-]: TEST      R12 0        ; if not R12 then PC := 346
343 [-]: JMP       346          ; PC := 346
344 [-]: EQ        1 R7 K45     ; if R7 == 0 then PC := 368
345 [-]: JMP       368          ; PC := 368
346 [-]: RETURN    R0 1         ; return 
347 [-]: JMP       368          ; PC := 368
348 [-]: TEST      R12 1        ; if R12 then PC := 358
349 [-]: JMP       358          ; PC := 358
350 [-]: MOVE      R14 R1       ; R14 := R1
351 [-]: TEST      R14 1        ; if R14 then PC := 368
352 [-]: JMP       368          ; PC := 368
353 [-]: MOVE      R6 R0        ; R6 := R0
354 [-]: GETGLOBAL R15 K54      ; R15 := destroyedNodeDeco
355 [-]: SETTABLE  R0 K53 R15   ; R0["deco"] := R15
356 [-]: JMP       368          ; PC := 368
357 [-]: JMP       368          ; PC := 368
358 [-]: EQ        0 R7 K45     ; if R7 ~= 0 then PC := 362
359 [-]: JMP       362          ; PC := 362
360 [-]: RETURN    R0 1         ; return 
361 [-]: JMP       368          ; PC := 368
362 [-]: EQ        0 R7 K26     ; if R7 ~= 1 then PC := 368
363 [-]: JMP       368          ; PC := 368
364 [-]: GETGLOBAL R15 K2       ; R15 := Lotus_Game
365 [-]: GETTABLE  R15 R15 K66  ; R15 := R15["NT_MISSION"]
366 [-]: SETTABLE  R0 K1 R15    ; R0["nodeType"] := R15
367 [-]: JMP       368          ; PC := 368
368 [-]: GETTABLE  R15 R0 K67   ; R15 := R0["pos"]
369 [-]: LOADNIL   R16 R16      ; R16 := nil
370 [-]: GETGLOBAL R17 K21      ; R17 := _G
371 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["CachedGoalInfo"]
372 [-]: GETTABLE  R17 R17 R2   ; R17 := R17[R2]
373 [-]: TEST      R17 0        ; if not R17 then PC := 497
374 [-]: JMP       497          ; PC := 497
375 [-]: GETGLOBAL R17 K21      ; R17 := _G
376 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["CachedGoalInfo"]
377 [-]: GETTABLE  R17 R17 R2   ; R17 := R17[R2]
378 [-]: GETTABLE  R17 R17 K68  ; R17 := R17["mFomorian"]
379 [-]: TEST      R17 0        ; if not R17 then PC := 440
380 [-]: JMP       440          ; PC := 440
381 [-]: GETUPVAL  R17 U8       ; R17 := U8
382 [-]: SELF      R17 R17 K69  ; R18 := R17; R17 := R17["0xDF213CE1"]
383 [-]: GETGLOBAL R19 K21      ; R19 := _G
384 [-]: GETTABLE  R19 R19 K22  ; R19 := R19["CachedGoalInfo"]
385 [-]: GETTABLE  R19 R19 R2   ; R19 := R19[R2]
386 [-]: GETTABLE  R19 R19 K70  ; R19 := R19["mVictimNode"]
387 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
388 [-]: GETTABLE  R18 R17 K67  ; R18 := R17["pos"]
389 [-]: SUB       R18 R18 R15  ; R18 := R18 - R15
390 [-]: MUL       R19 R18 K71  ; R19 := R18 * 0.80000001192093
391 [-]: GETGLOBAL R20 K21      ; R20 := _G
392 [-]: GETTABLE  R20 R20 K22  ; R20 := R20["CachedGoalInfo"]
393 [-]: GETTABLE  R20 R20 R2   ; R20 := R20[R2]
394 [-]: GETTABLE  R20 R20 K61  ; R20 := R20["mActivation"]
395 [-]: SELF      R20 R20 K72  ; R21 := R20; R20 := R20["0x6F4BAEB9"]
396 [-]: GETGLOBAL R22 K21      ; R22 := _G
397 [-]: GETTABLE  R22 R22 K22  ; R22 := R22["CachedGoalInfo"]
398 [-]: GETTABLE  R22 R22 R2   ; R22 := R22[R2]
399 [-]: GETTABLE  R22 R22 K73  ; R22 := R22["mExpiry"]
400 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
401 [-]: GETGLOBAL R21 K74      ; R21 := 0x6374FD98
402 [-]: GETGLOBAL R22 K63      ; R22 := Engine
403 [-]: GETTABLE  R22 R22 K64  ; R22 := R22["0xD09D7910"]
404 [-]: GETGLOBAL R23 K21      ; R23 := _G
405 [-]: GETTABLE  R23 R23 K22  ; R23 := R23["CachedGoalInfo"]
406 [-]: GETTABLE  R23 R23 R2   ; R23 := R23[R2]
407 [-]: GETTABLE  R23 R23 K73  ; R23 := R23["mExpiry"]
408 [-]: CALL      R22 2 2      ; R22 := R22(R23)
409 [-]: LOADK     R23 K45      ; R23 := 0
410 [-]: MOVE      R24 R20      ; R24 := R20
411 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
412 [-]: DIV       R22 R21 R20  ; R22 := R21 / R20
413 [-]: SUB       R22 K26 R22  ; R22 := 1 - R22
414 [-]: MUL       R23 R19 R22  ; R23 := R19 * R22
415 [-]: ADD       R15 R15 R23  ; R15 := R15 + R23
416 [-]: GETGLOBAL R24 K21      ; R24 := _G
417 [-]: GETTABLE  R24 R24 K22  ; R24 := R24["CachedGoalInfo"]
418 [-]: GETTABLE  R24 R24 R2   ; R24 := R24[R2]
419 [-]: GETTABLE  R24 R24 K75  ; R24 := R24["mFaction"]
420 [-]: GETGLOBAL R25 K2       ; R25 := Lotus_Game
421 [-]: GETTABLE  R25 R25 K76  ; R25 := R25["FC_CORPUS"]
422 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 432
423 [-]: JMP       432          ; PC := 432
424 [-]: GETGLOBAL R24 K77      ; R24 := armadaDeco
425 [-]: SETTABLE  R0 K53 R24   ; R0["deco"] := R24
426 [-]: GETGLOBAL R24 K79      ; R24 := 0x1E4F6281
427 [-]: LOADK     R25 K80      ; R25 := 50
428 [-]: LOADK     R26 K45      ; R26 := 0
429 [-]: LOADK     R27 K45      ; R27 := 0
430 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
431 [-]: SETTABLE  R0 K78 R24   ; R0["decoRotation"] := R24
432 [-]: GETGLOBAL R24 K21      ; R24 := _G
433 [-]: GETTABLE  R24 R24 K22  ; R24 := R24["CachedGoalInfo"]
434 [-]: GETTABLE  R24 R24 R2   ; R24 := R24[R2]
435 [-]: GETTABLE  R24 R24 K81  ; R24 := R24["mHealthPct"]
436 [-]: LE        0 R24 K45    ; if R24 > 0 then PC := 497
437 [-]: JMP       497          ; PC := 497
438 [-]: MOVE      R6 R0        ; R6 := R0
439 [-]: JMP       497          ; PC := 497
440 [-]: GETGLOBAL R24 K8       ; R24 := string
441 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["0xDE44F664"]
442 [-]: GETGLOBAL R25 K6       ; R25 := 0x9FAED6BC
443 [-]: GETGLOBAL R26 K21      ; R26 := _G
444 [-]: GETTABLE  R26 R26 K22  ; R26 := R26["CachedGoalInfo"]
445 [-]: GETTABLE  R26 R26 R2   ; R26 := R26[R2]
446 [-]: GETTABLE  R26 R26 K82  ; R26 := R26["mTag"]
447 [-]: CALL      R25 2 2      ; R25 := R25(R26)
448 [-]: LOADK     R26 K83      ; R26 := "Halloween"
449 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
450 [-]: EQ        1 R24 K0     ; if R24 == nil then PC := 497
451 [-]: JMP       497          ; PC := 497
452 [-]: GETGLOBAL R24 K84      ; R24 := 0x2C00D429
453 [-]: LOADK     R25 K85      ; R25 := "/Lotus/Upgrades/Skins/Festivities/PumpkinHeadDeco"
454 [-]: CALL      R24 2 2      ; R24 := R24(R25)
455 [-]: SETTABLE  R0 K53 R24   ; R0["deco"] := R24
456 [-]: GETGLOBAL R24 K79      ; R24 := 0x1E4F6281
457 [-]: LOADK     R25 K86      ; R25 := 180
458 [-]: LOADK     R26 K45      ; R26 := 0
459 [-]: LOADK     R27 K45      ; R27 := 0
460 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
461 [-]: SETTABLE  R0 K78 R24   ; R0["decoRotation"] := R24
462 [-]: SETTABLE  R0 K87 K88   ; R0["scale"] := 0.03999999910593
463 [-]: GETGLOBAL R24 K79      ; R24 := 0x1E4F6281
464 [-]: LOADK     R25 K89      ; R25 := -50
465 [-]: LOADK     R26 K45      ; R26 := 0
466 [-]: LOADK     R27 K45      ; R27 := 0
467 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
468 [-]: MOVE      R16 R24      ; R16 := R24
469 [-]: EQ        0 R2 K90     ; if R2 ~= "EventNode24" then PC := 473
470 [-]: JMP       473          ; PC := 473
471 [-]: GETTABLE  R24 R0 K91   ; R24 := R0["decoOffset"]
472 [-]: SETTABLE  R24 K92 K93  ; R24["z"] := -0.10000000149012
473 [-]: GETGLOBAL R24 K23      ; R24 := _T
474 [-]: GETTABLE  R24 R24 K94  ; R24 := R24["CachedGoalKeys"]
475 [-]: TEST      R24 0        ; if not R24 then PC := 497
476 [-]: JMP       497          ; PC := 497
477 [-]: GETGLOBAL R24 K23      ; R24 := _T
478 [-]: GETTABLE  R24 R24 K94  ; R24 := R24["CachedGoalKeys"]
479 [-]: GETTABLE  R24 R24 R2   ; R24 := R24[R2]
480 [-]: TEST      R24 0        ; if not R24 then PC := 497
481 [-]: JMP       497          ; PC := 497
482 [-]: GETGLOBAL R24 K23      ; R24 := _T
483 [-]: GETTABLE  R24 R24 K94  ; R24 := R24["CachedGoalKeys"]
484 [-]: GETTABLE  R24 R24 R2   ; R24 := R24[R2]
485 [-]: SELF      R24 R24 K95  ; R25 := R24; R24 := R24["0x387DBBEB"]
486 [-]: CALL      R24 2 2      ; R24 := R24(R25)
487 [-]: GETTABLE  R25 R24 K96  ; R25 := R24["x"]
488 [-]: EQ        1 R25 K45    ; if R25 == 0 then PC := 497
489 [-]: JMP       497          ; PC := 497
490 [-]: GETTABLE  R25 R24 K97  ; R25 := R24["y"]
491 [-]: EQ        1 R25 K45    ; if R25 == 0 then PC := 497
492 [-]: JMP       497          ; PC := 497
493 [-]: GETTABLE  R25 R24 K92  ; R25 := R24["z"]
494 [-]: EQ        1 R25 K45    ; if R25 == 0 then PC := 497
495 [-]: JMP       497          ; PC := 497
496 [-]: SETTABLE  R0 K67 R24   ; R0["pos"] := R24
497 [-]: GETUPVAL  R25 U9       ; R25 := U9
498 [-]: LOADK     R26 K98      ; R26 := "Nodes.Node"
499 [-]: LOADK     R27 K99      ; R27 := "Node"
500 [-]: GETUPVAL  R28 U10      ; R28 := U10
501 [-]: LEN       R28 R28      ; R28 := # R28
502 [-]: ADD       R28 R28 K26  ; R28 := R28 + 1
503 [-]: LOADK     R29 K100     ; R29 := -5000
504 [-]: CALL      R25 5 2      ; R25 := R25(R26,R27,R28,R29)
505 [-]: GETGLOBAL R26 K101     ; R26 := mMovie
506 [-]: SELF      R26 R26 K102 ; R27 := R26; R26 := R26["0xA7FE5515"]
507 [-]: MOVE      R28 R25      ; R28 := R25
508 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
509 [-]: GETGLOBAL R27 K101     ; R27 := mMovie
510 [-]: SELF      R27 R27 K102 ; R28 := R27; R27 := R27["0xA7FE5515"]
511 [-]: MOVE      R29 R25      ; R29 := R25
512 [-]: LOADK     R30 K103     ; R30 := ".Node"
513 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
514 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
515 [-]: GETGLOBAL R28 K101     ; R28 := mMovie
516 [-]: SELF      R28 R28 K104 ; R29 := R28; R28 := R28["0x7E1F26D7"]
517 [-]: MOVE      R30 R25      ; R30 := R25
518 [-]: LOADK     R31 K105     ; R31 := ".Name.Bg"
519 [-]: CONCAT    R30 R30 R31  ; R30 := R30 .. R31
520 [-]: GETGLOBAL R31 K21      ; R31 := _G
521 [-]: GETTABLE  R31 R31 K106 ; R31 := R31["UIMaterial_SmoothEdgeNoDepthTest"]
522 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
523 [-]: GETGLOBAL R28 K101     ; R28 := mMovie
524 [-]: SELF      R28 R28 K107 ; R29 := R28; R28 := R28["0x880196A7"]
525 [-]: MOVE      R30 R25      ; R30 := R25
526 [-]: LOADK     R31 K108     ; R31 := "Name.Bg"
527 [-]: LOADK     R32 K109     ; R32 := "noMenuSelection"
528 [-]: MOVE      R33 R1       ; R33 := R1
529 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
530 [-]: LOADNIL   R28 R28      ; R28 := nil
531 [-]: GETGLOBAL R29 K33      ; R29 := 0x400E7765
532 [-]: GETTABLE  R30 R0 K53   ; R30 := R0["deco"]
533 [-]: CALL      R29 2 2      ; R29 := R29(R30)
534 [-]: TEST      R29 1        ; if R29 then PC := 595
535 [-]: JMP       595          ; PC := 595
536 [-]: GETUPVAL  R29 U11      ; R29 := U11
537 [-]: GETTABLE  R30 R0 K53   ; R30 := R0["deco"]
538 [-]: CALL      R29 2 1      ; R29(R30)
539 [-]: NEWTABLE  R29 0 3      ; R29 := {}
540 [-]: GETTABLE  R30 R0 K91   ; R30 := R0["decoOffset"]
541 [-]: SETTABLE  R29 K110 R30 ; R29["mOffset"] := R30
542 [-]: GETTABLE  R30 R0 K78   ; R30 := R0["decoRotation"]
543 [-]: SETTABLE  R29 K111 R30 ; R29["mRotation"] := R30
544 [-]: GETTABLE  R30 R0 K87   ; R30 := R0["scale"]
545 [-]: SETTABLE  R29 K112 R30 ; R29["mScale"] := R30
546 [-]: MOVE      R28 R29      ; R28 := R29
547 [-]: GETGLOBAL R29 K114     ; R29 := gBackgroundRegion
548 [-]: SELF      R29 R29 K115 ; R30 := R29; R29 := R29["0xBDD34CC6"]
549 [-]: GETGLOBAL R31 K116     ; R31 := 0xCAA43ABB
550 [-]: GETTABLE  R32 R0 K53   ; R32 := R0["deco"]
551 [-]: CALL      R31 2 2      ; R31 := R31(R32)
552 [-]: GETTABLE  R32 R28 K110 ; R32 := R28["mOffset"]
553 [-]: ADD       R32 R15 R32  ; R32 := R15 + R32
554 [-]: GETTABLE  R33 R28 K111 ; R33 := R28["mRotation"]
555 [-]: CALL      R29 5 2      ; R29 := R29(R30,R31,R32,R33)
556 [-]: SETTABLE  R28 K113 R29 ; R28["mInstance"] := R29
557 [-]: GETGLOBAL R29 K33      ; R29 := 0x400E7765
558 [-]: GETTABLE  R30 R28 K113 ; R30 := R28["mInstance"]
559 [-]: CALL      R29 2 2      ; R29 := R29(R30)
560 [-]: TEST      R29 1        ; if R29 then PC := 595
561 [-]: JMP       595          ; PC := 595
562 [-]: GETTABLE  R29 R28 K112 ; R29 := R28["mScale"]
563 [-]: GETTABLE  R30 R28 K113 ; R30 := R28["mInstance"]
564 [-]: SELF      R30 R30 K117 ; R31 := R30; R30 := R30["0x6A7E5F92"]
565 [-]: GETUPVAL  R32 U12      ; R32 := U12
566 [-]: GETTABLE  R32 R32 K118 ; R32 := R32["DECO_SCALE_MULTIPLIER"]
567 [-]: MUL       R32 R29 R32  ; R32 := R29 * R32
568 [-]: MOVE      R33 R1       ; R33 := R1
569 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
570 [-]: GETTABLE  R30 R28 K113 ; R30 := R28["mInstance"]
571 [-]: SELF      R30 R30 K119 ; R31 := R30; R30 := R30["0xB3733382"]
572 [-]: CALL      R30 2 2      ; R30 := R30(R31)
573 [-]: LOADK     R31 K26      ; R31 := 1
574 [-]: LEN       R32 R30      ; R32 := # R30
575 [-]: LOADK     R33 K26      ; R33 := 1
576 [-]: FORPREP   R31 588      ; R31 -= R33; PC := 588
577 [-]: GETTABLE  R35 R30 R34  ; R35 := R30[R34]
578 [-]: SELF      R35 R35 K117 ; R36 := R35; R35 := R35["0x6A7E5F92"]
579 [-]: LOADK     R37 K26      ; R37 := 1
580 [-]: MOVE      R38 R1       ; R38 := R1
581 [-]: CALL      R35 4 1      ; R35(R36,R37,R38)
582 [-]: GETTABLE  R35 R30 R34  ; R35 := R30[R34]
583 [-]: SELF      R35 R35 K15  ; R36 := R35; R35 := R35["0x8B598ED4"]
584 [-]: GETGLOBAL R37 K120     ; R37 := gLensFlareType
585 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
586 [-]: TEST      R35 0        ; if not R35 then PC := 588
587 [-]: JMP       588          ; PC := 588
588 [-]: FORLOOP   R31 577      ; R31 += R33; if R31 <= R32 then begin PC := 577; R34 := R31 end
589 [-]: TEST      R16 0        ; if not R16 then PC := 595
590 [-]: JMP       595          ; PC := 595
591 [-]: GETTABLE  R35 R28 K113 ; R35 := R28["mInstance"]
592 [-]: SELF      R35 R35 K121 ; R36 := R35; R35 := R35["0x8A42F754"]
593 [-]: MOVE      R37 R16      ; R37 := R16
594 [-]: CALL      R35 3 1      ; R35(R36,R37)
595 [-]: GETGLOBAL R35 K23      ; R35 := _T
596 [-]: GETTABLE  R35 R35 K122 ; R35 := R35["CachedActiveMissions"]
597 [-]: TEST      R35 0        ; if not R35 then PC := 610
598 [-]: JMP       610          ; PC := 610
599 [-]: GETGLOBAL R35 K23      ; R35 := _T
600 [-]: GETTABLE  R35 R35 K122 ; R35 := R35["CachedActiveMissions"]
601 [-]: GETTABLE  R35 R35 R2   ; R35 := R35[R2]
602 [-]: TEST      R35 0        ; if not R35 then PC := 610
603 [-]: JMP       610          ; PC := 610
604 [-]: GETGLOBAL R35 K23      ; R35 := _T
605 [-]: GETTABLE  R35 R35 K122 ; R35 := R35["CachedActiveMissions"]
606 [-]: GETTABLE  R35 R35 R2   ; R35 := R35[R2]
607 [-]: GETTABLE  R35 R35 K123 ; R35 := R35["mVisible"]
608 [-]: TEST      R35 1        ; if R35 then PC := 670
609 [-]: JMP       670          ; PC := 670
610 [-]: GETGLOBAL R35 K21      ; R35 := _G
611 [-]: GETTABLE  R35 R35 K22  ; R35 := R35["CachedGoalInfo"]
612 [-]: GETTABLE  R35 R35 R2   ; R35 := R35[R2]
613 [-]: TEST      R35 1        ; if R35 then PC := 670
614 [-]: JMP       670          ; PC := 670
615 [-]: GETGLOBAL R35 K23      ; R35 := _T
616 [-]: GETTABLE  R35 R35 K124 ; R35 := R35["CachedAlerts"]
617 [-]: GETTABLE  R35 R35 R2   ; R35 := R35[R2]
618 [-]: TEST      R35 0        ; if not R35 then PC := 626
619 [-]: JMP       626          ; PC := 626
620 [-]: GETGLOBAL R35 K23      ; R35 := _T
621 [-]: GETTABLE  R35 R35 K124 ; R35 := R35["CachedAlerts"]
622 [-]: GETTABLE  R35 R35 R2   ; R35 := R35[R2]
623 [-]: GETTABLE  R35 R35 K123 ; R35 := R35["mVisible"]
624 [-]: TEST      R35 1        ; if R35 then PC := 670
625 [-]: JMP       670          ; PC := 670
626 [-]: GETGLOBAL R35 K23      ; R35 := _T
627 [-]: GETTABLE  R35 R35 K125 ; R35 := R35["CachedInvasionInfo"]
628 [-]: GETTABLE  R35 R35 R2   ; R35 := R35[R2]
629 [-]: TEST      R35 1        ; if R35 then PC := 670
630 [-]: JMP       670          ; PC := 670
631 [-]: GETGLOBAL R35 K23      ; R35 := _T
632 [-]: GETTABLE  R35 R35 K126 ; R35 := R35["CachedSyndicateMissions"]
633 [-]: GETTABLE  R35 R35 R2   ; R35 := R35[R2]
634 [-]: TEST      R35 0        ; if not R35 then PC := 642
635 [-]: JMP       642          ; PC := 642
636 [-]: GETGLOBAL R35 K23      ; R35 := _T
637 [-]: GETTABLE  R35 R35 K126 ; R35 := R35["CachedSyndicateMissions"]
638 [-]: GETTABLE  R35 R35 R2   ; R35 := R35[R2]
639 [-]: GETTABLE  R35 R35 K123 ; R35 := R35["mVisible"]
640 [-]: TEST      R35 1        ; if R35 then PC := 670
641 [-]: JMP       670          ; PC := 670
642 [-]: GETTABLE  R35 R0 K1    ; R35 := R0["nodeType"]
643 [-]: GETGLOBAL R36 K2       ; R36 := Lotus_Game
644 [-]: GETTABLE  R36 R36 K127 ; R36 := R36["NT_HUB"]
645 [-]: EQ        1 R35 R36    ; if R35 == R36 then PC := 669
646 [-]: JMP       669          ; PC := 669
647 [-]: GETGLOBAL R35 K33      ; R35 := 0x400E7765
648 [-]: GETTABLE  R36 R0 K18   ; R36 := R0["mission"]
649 [-]: GETTABLE  R36 R36 K128 ; R36 := R36["levelKeyName"]
650 [-]: CALL      R35 2 2      ; R35 := R35(R36)
651 [-]: TEST      R35 0        ; if not R35 then PC := 669
652 [-]: JMP       669          ; PC := 669
653 [-]: GETGLOBAL R35 K33      ; R35 := 0x400E7765
654 [-]: GETTABLE  R36 R0 K129  ; R36 := R0["keyChain"]
655 [-]: CALL      R35 2 2      ; R35 := R35(R36)
656 [-]: TEST      R35 0        ; if not R35 then PC := 669
657 [-]: JMP       669          ; PC := 669
658 [-]: GETTABLE  R35 R0 K1    ; R35 := R0["nodeType"]
659 [-]: GETGLOBAL R36 K2       ; R36 := Lotus_Game
660 [-]: GETTABLE  R36 R36 K17  ; R36 := R36["NT_SHORTCUT"]
661 [-]: EQ        1 R35 R36    ; if R35 == R36 then PC := 669
662 [-]: JMP       669          ; PC := 669
663 [-]: GETTABLE  R35 R0 K1    ; R35 := R0["nodeType"]
664 [-]: GETGLOBAL R36 K2       ; R36 := Lotus_Game
665 [-]: GETTABLE  R36 R36 K130 ; R36 := R36["NT_JUNCTION"]
666 [-]: EQ        1 R35 R36    ; if R35 == R36 then PC := 669
667 [-]: JMP       669          ; PC := 669
668 [-]: MOVE      R35 R0       ; R35 := R0
669 [-]: MOVE      R35 R1       ; R35 := R1
670 [-]: GETGLOBAL R36 K23      ; R36 := _T
671 [-]: GETTABLE  R36 R36 K131 ; R36 := R36["CachedNemesisMissions"]
672 [-]: GETTABLE  R36 R36 R2   ; R36 := R36[R2]
673 [-]: TEST      R36 0        ; if not R36 then PC := 689
674 [-]: JMP       689          ; PC := 689
675 [-]: GETGLOBAL R36 K23      ; R36 := _T
676 [-]: GETTABLE  R36 R36 K131 ; R36 := R36["CachedNemesisMissions"]
677 [-]: GETTABLE  R36 R36 R2   ; R36 := R36[R2]
678 [-]: GETTABLE  R36 R36 K132 ; R36 := R36["attackType"]
679 [-]: TEST      R36 0        ; if not R36 then PC := 689
680 [-]: JMP       689          ; PC := 689
681 [-]: GETGLOBAL R36 K23      ; R36 := _T
682 [-]: GETTABLE  R36 R36 K131 ; R36 := R36["CachedNemesisMissions"]
683 [-]: GETTABLE  R36 R36 R2   ; R36 := R36[R2]
684 [-]: GETTABLE  R36 R36 K132 ; R36 := R36["attackType"]
685 [-]: EQ        1 R36 K133   ; if R36 == "Blockade" then PC := 688
686 [-]: JMP       688          ; PC := 688
687 [-]: MOVE      R36 R0       ; R36 := R0
688 [-]: MOVE      R36 R1       ; R36 := R1
689 [-]: GETGLOBAL R37 K101     ; R37 := mMovie
690 [-]: SELF      R37 R37 K134 ; R38 := R37; R37 := R37["0x5DB0BD4"]
691 [-]: GETTABLE  R39 R0 K4    ; R39 := R0["locTag"]
692 [-]: SELF      R39 R39 K57  ; R40 := R39; R39 := R39["0x5EC7A3D2"]
693 [-]: CALL      R39 2 2      ; R39 := R39(R40)
694 [-]: MOVE      R40 R1       ; R40 := R1
695 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
696 [-]: TEST      R7 0         ; if not R7 then PC := 711
697 [-]: JMP       711          ; PC := 711
698 [-]: LT        0 K45 R7     ; if 0 >= R7 then PC := 711
699 [-]: JMP       711          ; PC := 711
700 [-]: EQ        0 R7 K26     ; if R7 ~= 1 then PC := 731
701 [-]: JMP       731          ; PC := 731
702 [-]: GETGLOBAL R38 K101     ; R38 := mMovie
703 [-]: SELF      R38 R38 K134 ; R39 := R38; R38 := R38["0x5DB0BD4"]
704 [-]: LOADK     R40 K135     ; R40 := "/Lotus/Language/RelayReconstruction/ReconstructionSiteAttack"
705 [-]: MOVE      R41 R0       ; R41 := R0
706 [-]: NEWTABLE  R42 0 1      ; R42 := {}
707 [-]: SETTABLE  R42 K136 R37 ; R42["LOCATION"] := R37
708 [-]: CALL      R38 5 2      ; R38 := R38(R39,R40,R41,R42)
709 [-]: MOVE      R37 R38      ; R37 := R38
710 [-]: JMP       731          ; PC := 731
711 [-]: GETGLOBAL R38 K21      ; R38 := _G
712 [-]: GETTABLE  R38 R38 K22  ; R38 := R38["CachedGoalInfo"]
713 [-]: GETTABLE  R39 R0 K7    ; R39 := R0["name"]
714 [-]: SELF      R39 R39 K57  ; R40 := R39; R39 := R39["0x5EC7A3D2"]
715 [-]: CALL      R39 2 2      ; R39 := R39(R40)
716 [-]: GETTABLE  R38 R38 R39  ; R38 := R38[R39]
717 [-]: TEST      R38 0        ; if not R38 then PC := 731
718 [-]: JMP       731          ; PC := 731
719 [-]: GETGLOBAL R38 K101     ; R38 := mMovie
720 [-]: SELF      R38 R38 K134 ; R39 := R38; R38 := R38["0x5DB0BD4"]
721 [-]: GETGLOBAL R40 K21      ; R40 := _G
722 [-]: GETTABLE  R40 R40 K22  ; R40 := R40["CachedGoalInfo"]
723 [-]: GETTABLE  R41 R0 K7    ; R41 := R0["name"]
724 [-]: SELF      R41 R41 K57  ; R42 := R41; R41 := R41["0x5EC7A3D2"]
725 [-]: CALL      R41 2 2      ; R41 := R41(R42)
726 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
727 [-]: GETTABLE  R40 R40 K137 ; R40 := R40["mDesc"]
728 [-]: MOVE      R41 R1       ; R41 := R1
729 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
730 [-]: MOVE      R37 R38      ; R37 := R38
731 [-]: TEST      R36 0        ; if not R36 then PC := 746
732 [-]: JMP       746          ; PC := 746
733 [-]: MOVE      R38 R37      ; R38 := R37
734 [-]: LOADK     R39 K138     ; R39 := " ("
735 [-]: GETGLOBAL R40 K101     ; R40 := mMovie
736 [-]: SELF      R40 R40 K134 ; R41 := R40; R40 := R40["0x5DB0BD4"]
737 [-]: GETGLOBAL R42 K23      ; R42 := _T
738 [-]: GETTABLE  R42 R42 K131 ; R42 := R42["CachedNemesisMissions"]
739 [-]: GETTABLE  R42 R42 R2   ; R42 := R42[R2]
740 [-]: GETTABLE  R42 R42 K139 ; R42 := R42["mMissionInfo"]
741 [-]: GETTABLE  R42 R42 K140 ; R42 := R42["uniqueName"]
742 [-]: MOVE      R43 R0       ; R43 := R0
743 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
744 [-]: LOADK     R41 K141     ; R41 := ")"
745 [-]: CONCAT    R37 R38 R41  ; R37 := R38 .. R39 .. R40 .. R41
746 [-]: NEWTABLE  R38 0 19     ; R38 := {}
747 [-]: GETTABLE  R39 R0 K7    ; R39 := R0["name"]
748 [-]: SETTABLE  R38 K7 R39   ; R38["name"] := R39
749 [-]: GETGLOBAL R39 K8       ; R39 := string
750 [-]: GETTABLE  R39 R39 K143 ; R39 := R39["0x639C642A"]
751 [-]: MOVE      R40 R37      ; R40 := R37
752 [-]: CALL      R39 2 2      ; R39 := R39(R40)
753 [-]: SETTABLE  R38 K142 R39 ; R38["locName"] := R39
754 [-]: SETTABLE  R38 K144 R26 ; R38["memberIndex"] := R26
755 [-]: GETGLOBAL R39 K101     ; R39 := mMovie
756 [-]: SELF      R39 R39 K102 ; R40 := R39; R39 := R39["0xA7FE5515"]
757 [-]: MOVE      R41 R25      ; R41 := R25
758 [-]: LOADK     R42 K146     ; R42 := ".Name"
759 [-]: CONCAT    R41 R41 R42  ; R41 := R41 .. R42
760 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
761 [-]: SETTABLE  R38 K145 R39 ; R38["labelIndex"] := R39
762 [-]: SETTABLE  R38 K147 R27 ; R38["nodeIndex"] := R27
763 [-]: SETTABLE  R38 K148 R25 ; R38["clipName"] := R25
764 [-]: SETTABLE  R38 K149 R15 ; R38["position"] := R15
765 [-]: SETTABLE  R38 K53 R28  ; R38["deco"] := R28
766 [-]: SETTABLE  R38 K150 R0  ; R38["radialSector"] := R0
767 [-]: GETTABLE  R39 R0 K1    ; R39 := R0["nodeType"]
768 [-]: GETGLOBAL R40 K2       ; R40 := Lotus_Game
769 [-]: GETTABLE  R40 R40 K17  ; R40 := R40["NT_SHORTCUT"]
770 [-]: EQ        1 R39 R40    ; if R39 == R40 then PC := 773
771 [-]: JMP       773          ; PC := 773
772 [-]: MOVE      R39 R0       ; R39 := R0
773 [-]: MOVE      R39 R1       ; R39 := R1
774 [-]: SETTABLE  R38 K151 R39 ; R38["isShortcut"] := R39
775 [-]: GETTABLE  R39 R0 K1    ; R39 := R0["nodeType"]
776 [-]: GETGLOBAL R40 K2       ; R40 := Lotus_Game
777 [-]: GETTABLE  R40 R40 K130 ; R40 := R40["NT_JUNCTION"]
778 [-]: EQ        1 R39 R40    ; if R39 == R40 then PC := 781
779 [-]: JMP       781          ; PC := 781
780 [-]: MOVE      R39 R0       ; R39 := R0
781 [-]: MOVE      R39 R1       ; R39 := R1
782 [-]: SETTABLE  R38 K152 R39 ; R38["isJunction"] := R39
783 [-]: SETTABLE  R38 K153 R7  ; R38["reconstructionProgress"] := R7
784 [-]: GETTABLE  R39 R0 K1    ; R39 := R0["nodeType"]
785 [-]: GETGLOBAL R40 K2       ; R40 := Lotus_Game
786 [-]: GETTABLE  R40 R40 K155 ; R40 := R40["NT_EMPTY"]
787 [-]: EQ        1 R39 R40    ; if R39 == R40 then PC := 790
788 [-]: JMP       790          ; PC := 790
789 [-]: MOVE      R39 R0       ; R39 := R0
790 [-]: MOVE      R39 R1       ; R39 := R1
791 [-]: SETTABLE  R38 K154 R39 ; R38["isEmpty"] := R39
792 [-]: SETTABLE  R38 K156 R35 ; R38["isActiveMission"] := R35
793 [-]: SETTABLE  R38 K157 R36 ; R38["isBlockaded"] := R36
794 [-]: GETTABLE  R39 R0 K158  ; R39 := R0["isCriticalPath"]
795 [-]: SETTABLE  R38 K158 R39 ; R38["isCriticalPath"] := R39
796 [-]: SETTABLE  R38 K159 R6  ; R38["locationEnabled"] := R6
797 [-]: GETTABLE  R39 R0 K160  ; R39 := R0["missionsCompleted"]
798 [-]: SETTABLE  R38 K160 R39 ; R38["missionsCompleted"] := R39
799 [-]: GETTABLE  R39 R1 K161  ; R39 := R1["guildId"]
800 [-]: SETTABLE  R38 K161 R39 ; R38["guildId"] := R39
801 [-]: GETTABLE  R39 R1 K162  ; R39 := R1["clanTier"]
802 [-]: SETTABLE  R38 K162 R39 ; R38["clanTier"] := R39
803 [-]: GETTABLE  R39 R1 K163  ; R39 := R1["overrideIconSize"]
804 [-]: SETTABLE  R38 K163 R39 ; R38["overrideIconSize"] := R39
805 [-]: TEST      R5 0         ; if not R5 then PC := 808
806 [-]: JMP       808          ; PC := 808
807 [-]: SETTABLE  R38 K164 K29 ; R38["edgesLocked"] := "0x1"
808 [-]: GETGLOBAL R39 K165     ; R39 := table
809 [-]: GETTABLE  R39 R39 K166 ; R39 := R39["0xE6450C9D"]
810 [-]: GETUPVAL  R40 U10      ; R40 := U10
811 [-]: MOVE      R41 R38      ; R41 := R38
812 [-]: CALL      R39 3 1      ; R39(R40,R41)
813 [-]: GETUPVAL  R39 U13      ; R39 := U13
814 [-]: GETGLOBAL R40 K6       ; R40 := 0x9FAED6BC
815 [-]: GETTABLE  R41 R38 K7   ; R41 := R38["name"]
816 [-]: CALL      R40 2 2      ; R40 := R40(R41)
817 [-]: GETUPVAL  R41 U10      ; R41 := U10
818 [-]: GETUPVAL  R42 U10      ; R42 := U10
819 [-]: LEN       R42 R42      ; R42 := # R42
820 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
821 [-]: SETTABLE  R39 R40 R41  ; R39[R40] := R41
822 [-]: GETUPVAL  R39 U10      ; R39 := U10
823 [-]: LEN       R39 R39      ; R39 := # R39
824 [-]: SETTABLE  R38 K167 R39 ; R38["id"] := R39
825 [-]: GETUPVAL  R39 U14      ; R39 := U14
826 [-]: MOVE      R40 R38      ; R40 := R38
827 [-]: CALL      R39 2 2      ; R39 := R39(R40)
828 [-]: SETTABLE  R38 K168 R39 ; R38["isSurfaceNode"] := R39
829 [-]: GETGLOBAL R39 K101     ; R39 := mMovie
830 [-]: SELF      R39 R39 K169 ; R40 := R39; R39 := R39["0x1C19D966"]
831 [-]: MOVE      R41 R25      ; R41 := R25
832 [-]: LOADK     R42 K170     ; R42 := "Id"
833 [-]: GETTABLE  R43 R38 K167 ; R43 := R38["id"]
834 [-]: CALL      R39 5 1      ; R39(R40,R41,R42,R43)
835 [-]: GETGLOBAL R39 K101     ; R39 := mMovie
836 [-]: SELF      R39 R39 K169 ; R40 := R39; R39 := R39["0x1C19D966"]
837 [-]: MOVE      R41 R25      ; R41 := R25
838 [-]: LOADK     R42 K171     ; R42 := "RollOverCallback"
839 [-]: LOADK     R43 K172     ; R43 := "NodeRollOver"
840 [-]: CALL      R39 5 1      ; R39(R40,R41,R42,R43)
841 [-]: GETGLOBAL R39 K101     ; R39 := mMovie
842 [-]: SELF      R39 R39 K169 ; R40 := R39; R39 := R39["0x1C19D966"]
843 [-]: MOVE      R41 R25      ; R41 := R25
844 [-]: LOADK     R42 K173     ; R42 := "RollOutCallback"
845 [-]: LOADK     R43 K174     ; R43 := "NodeRollOut"
846 [-]: CALL      R39 5 1      ; R39(R40,R41,R42,R43)
847 [-]: GETGLOBAL R39 K101     ; R39 := mMovie
848 [-]: SELF      R39 R39 K169 ; R40 := R39; R39 := R39["0x1C19D966"]
849 [-]: MOVE      R41 R25      ; R41 := R25
850 [-]: LOADK     R42 K175     ; R42 := "SelectCallback"
851 [-]: LOADK     R43 K176     ; R43 := "NodeSelect"
852 [-]: CALL      R39 5 1      ; R39(R40,R41,R42,R43)
853 [-]: GETGLOBAL R39 K101     ; R39 := mMovie
854 [-]: SELF      R39 R39 K107 ; R40 := R39; R39 := R39["0x880196A7"]
855 [-]: MOVE      R41 R25      ; R41 := R25
856 [-]: LOADK     R42 K177     ; R42 := "Btn"
857 [-]: LOADK     R43 K178     ; R43 := "_width"
858 [-]: LOADK     R44 K179     ; R44 := 48
859 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
860 [-]: GETGLOBAL R39 K101     ; R39 := mMovie
861 [-]: SELF      R39 R39 K107 ; R40 := R39; R39 := R39["0x880196A7"]
862 [-]: MOVE      R41 R25      ; R41 := R25
863 [-]: LOADK     R42 K177     ; R42 := "Btn"
864 [-]: LOADK     R43 K180     ; R43 := "_height"
865 [-]: LOADK     R44 K181     ; R44 := 32
866 [-]: CALL      R39 6 1      ; R39(R40,R41,R42,R43,R44)
867 [-]: GETGLOBAL R39 K101     ; R39 := mMovie
868 [-]: SELF      R39 R39 K182 ; R40 := R39; R39 := R39["0x445651FB"]
869 [-]: GETTABLE  R41 R38 K144 ; R41 := R38["memberIndex"]
870 [-]: LOADK     R42 K183     ; R42 := "_alpha"
871 [-]: LOADK     R43 K45      ; R43 := 0
872 [-]: CALL      R39 5 1      ; R39(R40,R41,R42,R43)
873 [-]: GETGLOBAL R39 K101     ; R39 := mMovie
874 [-]: SELF      R39 R39 K182 ; R40 := R39; R39 := R39["0x445651FB"]
875 [-]: GETTABLE  R41 R38 K145 ; R41 := R38["labelIndex"]
876 [-]: LOADK     R42 K183     ; R42 := "_alpha"
877 [-]: GETUPVAL  R43 U15      ; R43 := U15
878 [-]: MOVE      R44 R38      ; R44 := R38
879 [-]: CALL      R43 2 0      ; R43,... := R43(R44)
880 [-]: CALL      R39 0 1      ; R39(R40,...)
881 [-]: GETGLOBAL R39 K21      ; R39 := _G
882 [-]: GETTABLE  R39 R39 K184 ; R39 := R39["StalkerMode"]
883 [-]: TEST      R39 0        ; if not R39 then PC := 909
884 [-]: JMP       909          ; PC := 909
885 [-]: GETUPVAL  R39 U5       ; R39 := U5
886 [-]: GETTABLE  R39 R39 K185 ; R39 := R39["0xE4E5932F"]
887 [-]: MOVE      R40 R2       ; R40 := R2
888 [-]: GETUPVAL  R41 U8       ; R41 := U8
889 [-]: MOVE      R42 R0       ; R42 := R0
890 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
891 [-]: GETGLOBAL R40 K101     ; R40 := mMovie
892 [-]: SELF      R40 R40 K169 ; R41 := R40; R40 := R40["0x1C19D966"]
893 [-]: MOVE      R42 R25      ; R42 := R25
894 [-]: LOADK     R43 K186     ; R43 := "_visible"
895 [-]: GETUPVAL  R44 U16      ; R44 := U16
896 [-]: EQ        1 R44 K0     ; if R44 == nil then PC := 906
897 [-]: JMP       906          ; PC := 906
898 [-]: GETUPVAL  R44 U16      ; R44 := U16
899 [-]: GETTABLE  R44 R44 R39  ; R44 := R44[R39]
900 [-]: TEST      R44 0        ; if not R44 then PC := 908
901 [-]: JMP       908          ; PC := 908
902 [-]: GETUPVAL  R44 U16      ; R44 := U16
903 [-]: GETTABLE  R44 R44 R39  ; R44 := R44[R39]
904 [-]: LT        1 K45 R44    ; if 0 < R44 then PC := 907
905 [-]: JMP       907          ; PC := 907
906 [-]: MOVE      R44 R0       ; R44 := R0
907 [-]: MOVE      R44 R1       ; R44 := R1
908 [-]: CALL      R40 5 1      ; R40(R41,R42,R43,R44)
909 [-]: RETURN    R38 2        ; return R38
910 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2280
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["radialSector"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: SETTABLE  R0 K0 R1     ; R0["completed"] := R1
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: MOVE      R1 R1        ; R1 := R1
  9 [-]: SETTABLE  R0 K2 R1     ; R0["locked"] := R1
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SETTABLE  R0 K3 R1     ; R0["icon"] := R1
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 15 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["completed"]
 20 [-]: TEST      R1 1         ; if R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["isActiveMission"]
 23 [-]: TEST      R1 0         ; if not R1 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: SETTABLE  R0 K6 K7     ; R0["special"] := "0x1"
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["notificationClip"]
 28 [-]: EQ        1 R1 K9      ; if R1 == nil then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: SETTABLE  R0 K6 K9     ; R0["special"] := nil
 31 [-]: GETGLOBAL R1 K10       ; R1 := nodeLockedTexture
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: LOADK     R3 K11       ; R3 := 56
 34 [-]: GETGLOBAL R4 K12       ; R4 := 0x9FAED6BC
 35 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["name"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: GETGLOBAL R5 K14       ; R5 := _T
 38 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["CachedSkullNodes"]
 39 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 40 [-]: TEST      R5 1         ; if R5 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R5 K14       ; R5 := _T
 43 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["CachedAlerts"]
 44 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 45 [-]: TEST      R5 0         ; if not R5 then PC := 66
 46 [-]: JMP       66           ; PC := 66
 47 [-]: GETGLOBAL R5 K14       ; R5 := _T
 48 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["CachedAlerts"]
 49 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 50 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["mAlertInfo"]
 51 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["mMissionInfo"]
 52 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["nightmare"]
 53 [-]: TEST      R5 0         ; if not R5 then PC := 66
 54 [-]: JMP       66           ; PC := 66
 55 [-]: GETUPVAL  R5 U3        ; R5 := U3
 56 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 57 [-]: TEST      R5 0         ; if not R5 then PC := 65
 58 [-]: JMP       65           ; PC := 65
 59 [-]: GETUPVAL  R5 U3        ; R5 := U3
 60 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 61 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["IsQuest"]
 62 [-]: MOVE      R5 R5        ; R5 := R5
 63 [-]: JMP       66           ; PC := 66
 64 [-]: MOVE      R5 R0        ; R5 := R0
 65 [-]: MOVE      R5 R1        ; R5 := R1
 66 [-]: GETGLOBAL R6 K21       ; R6 := _G
 67 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
 68 [-]: TEST      R6 0         ; if not R6 then PC := 105
 69 [-]: JMP       105          ; PC := 105
 70 [-]: GETGLOBAL R6 K21       ; R6 := _G
 71 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
 72 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 73 [-]: TEST      R6 0         ; if not R6 then PC := 105
 74 [-]: JMP       105          ; PC := 105
 75 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 76 [-]: GETGLOBAL R7 K21       ; R7 := _G
 77 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["CachedGoalInfo"]
 78 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 79 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["mIcon"]
 80 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 81 [-]: TEST      R6 1         ; if R6 then PC := 105
 82 [-]: JMP       105          ; PC := 105
 83 [-]: GETGLOBAL R6 K24       ; R6 := string
 84 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["0xDE44F664"]
 85 [-]: GETGLOBAL R7 K12       ; R7 := 0x9FAED6BC
 86 [-]: GETGLOBAL R8 K21       ; R8 := _G
 87 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["CachedGoalInfo"]
 88 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 89 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["mTag"]
 90 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 91 [-]: LOADK     R8 K27       ; R8 := "Halloween"
 92 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 93 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: GETGLOBAL R1 K28       ; R1 := nodeUnlockedTexture
 96 [-]: LOADK     R3 K29       ; R3 := 0
 97 [-]: JMP       191          ; PC := 191
 98 [-]: GETGLOBAL R1 K30       ; R1 := nodeSpecialTexture
 99 [-]: GETGLOBAL R6 K21       ; R6 := _G
100 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
101 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
102 [-]: GETTABLE  R2 R6 K23    ; R2 := R6["mIcon"]
103 [-]: LOADK     R3 K31       ; R3 := 90
104 [-]: JMP       191          ; PC := 191
105 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
106 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["icon"]
107 [-]: CALL      R6 2 2       ; R6 := R6(R7)
108 [-]: TEST      R6 1         ; if R6 then PC := 132
109 [-]: JMP       132          ; PC := 132
110 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
111 [-]: TEST      R6 0         ; if not R6 then PC := 132
112 [-]: JMP       132          ; PC := 132
113 [-]: GETUPVAL  R6 U4        ; R6 := U4
114 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["0xF81722A2"]
115 [-]: MOVE      R7 R5        ; R7 := R5
116 [-]: GETGLOBAL R8 K33       ; R8 := nodeNightmareTexture
117 [-]: GETGLOBAL R9 K30       ; R9 := nodeSpecialTexture
118 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
119 [-]: MOVE      R1 R6        ; R1 := R6
120 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
121 [-]: LOADK     R3 K34       ; R3 := 84
122 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
123 [-]: TEST      R6 0         ; if not R6 then PC := 191
124 [-]: JMP       191          ; PC := 191
125 [-]: GETGLOBAL R6 K35       ; R6 := table
126 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
127 [-]: GETUPVAL  R7 U5        ; R7 := U5
128 [-]: NEWTABLE  R8 0 1       ; R8 := {}
129 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
130 [-]: CALL      R6 3 1       ; R6(R7,R8)
131 [-]: JMP       191          ; PC := 191
132 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["isJunction"]
133 [-]: TEST      R6 0         ; if not R6 then PC := 156
134 [-]: JMP       156          ; PC := 156
135 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
136 [-]: TEST      R6 0         ; if not R6 then PC := 141
137 [-]: JMP       141          ; PC := 141
138 [-]: GETGLOBAL R1 K39       ; R1 := junctionLockedTexture
139 [-]: LOADK     R3 K40       ; R3 := 70
140 [-]: JMP       154          ; PC := 154
141 [-]: LOADK     R3 K31       ; R3 := 90
142 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
143 [-]: TEST      R6 0         ; if not R6 then PC := 147
144 [-]: JMP       147          ; PC := 147
145 [-]: GETGLOBAL R1 K41       ; R1 := junctionUnlockedTexture
146 [-]: JMP       154          ; PC := 154
147 [-]: GETGLOBAL R1 K42       ; R1 := junctionNextMissionTexture
148 [-]: GETGLOBAL R6 K35       ; R6 := table
149 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
150 [-]: GETUPVAL  R7 U6        ; R7 := U6
151 [-]: NEWTABLE  R8 0 1       ; R8 := {}
152 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
153 [-]: CALL      R6 3 1       ; R6(R7,R8)
154 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
155 [-]: JMP       191          ; PC := 191
156 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
157 [-]: TEST      R6 1         ; if R6 then PC := 187
158 [-]: JMP       187          ; PC := 187
159 [-]: GETTABLE  R6 R0 K43    ; R6 := R0["displayMissionOverride"]
160 [-]: TEST      R6 1         ; if R6 then PC := 187
161 [-]: JMP       187          ; PC := 187
162 [-]: GETUPVAL  R6 U7        ; R6 := U7
163 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 168
164 [-]: JMP       168          ; PC := 168
165 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
166 [-]: TEST      R6 0         ; if not R6 then PC := 187
167 [-]: JMP       187          ; PC := 187
168 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
169 [-]: TEST      R6 1         ; if R6 then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: SETTABLE  R0 K6 K7     ; R0["special"] := "0x1"
172 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
173 [-]: TEST      R6 0         ; if not R6 then PC := 178
174 [-]: JMP       178          ; PC := 178
175 [-]: GETGLOBAL R6 K21       ; R6 := _G
176 [-]: GETTABLE  R1 R6 K44    ; R1 := R6["UITexture_Story"]
177 [-]: JMP       180          ; PC := 180
178 [-]: LOADK     R3 K45       ; R3 := 120
179 [-]: GETGLOBAL R1 K46       ; R1 := nodeNextMissionTexture
180 [-]: GETGLOBAL R6 K35       ; R6 := table
181 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
182 [-]: GETUPVAL  R7 U6        ; R7 := U6
183 [-]: NEWTABLE  R8 0 1       ; R8 := {}
184 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
185 [-]: CALL      R6 3 1       ; R6(R7,R8)
186 [-]: JMP       191          ; PC := 191
187 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
188 [-]: TEST      R6 1         ; if R6 then PC := 191
189 [-]: JMP       191          ; PC := 191
190 [-]: GETGLOBAL R1 K28       ; R1 := nodeUnlockedTexture
191 [-]: GETTABLE  R6 R0 K47    ; R6 := R0["guildId"]
192 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 217
193 [-]: JMP       217          ; PC := 217
194 [-]: GETTABLE  R6 R0 K48    ; R6 := R0["clanTier"]
195 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 217
196 [-]: JMP       217          ; PC := 217
197 [-]: GETGLOBAL R6 K49       ; R6 := clanTierIcons
198 [-]: GETTABLE  R7 R0 K48    ; R7 := R0["clanTier"]
199 [-]: GETTABLE  R2 R6 R7     ; R2 := R6[R7]
200 [-]: GETGLOBAL R6 K21       ; R6 := _G
201 [-]: GETTABLE  R1 R6 K50    ; R1 := R6["UITexture_CircleGradientBacker"]
202 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
203 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
204 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
205 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
206 [-]: LOADK     R10 K55      ; R10 := "_color"
207 [-]: LOADK     R11 K56      ; R11 := 65518
208 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
209 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
210 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
211 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
212 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
213 [-]: LOADK     R10 K57      ; R10 := "_alpha"
214 [-]: LOADK     R11 K29      ; R11 := 0
215 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
216 [-]: JMP       220          ; PC := 220
217 [-]: EQ        0 R4 K58     ; if R4 ~= "SolNode332" then PC := 220
218 [-]: JMP       220          ; PC := 220
219 [-]: LOADK     R3 K45       ; R3 := 120
220 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["isActiveMission"]
221 [-]: SETTABLE  R0 K59 R6    ; R0["visibleLabel"] := R6
222 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
223 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
224 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
225 [-]: LOADK     R9 K60       ; R9 := "Node.Container.Highlight"
226 [-]: LOADK     R10 K61      ; R10 := "_visible"
227 [-]: GETTABLE  R11 R0 K2    ; R11 := R0["locked"]
228 [-]: TEST      R11 1        ; if R11 then PC := 233
229 [-]: JMP       233          ; PC := 233
230 [-]: GETTABLE  R11 R0 K0    ; R11 := R0["completed"]
231 [-]: MOVE      R11 R11      ; R11 := R11
232 [-]: JMP       235          ; PC := 235
233 [-]: MOVE      R11 R0       ; R11 := R0
234 [-]: MOVE      R11 R1       ; R11 := R1
235 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
236 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
237 [-]: SELF      R6 R6 K62    ; R7 := R6; R6 := R6["0x26581636"]
238 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
239 [-]: LOADK     R9 K63       ; R9 := ".Node.Container.Node"
240 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
241 [-]: MOVE      R9 R1        ; R9 := R1
242 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
243 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
244 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
245 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
246 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
247 [-]: LOADK     R10 K64      ; R10 := "_width"
248 [-]: MOVE      R11 R3       ; R11 := R3
249 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
250 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
251 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
252 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
253 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
254 [-]: LOADK     R10 K65      ; R10 := "_height"
255 [-]: MOVE      R11 R3       ; R11 := R3
256 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
257 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
258 [-]: TEST      R6 0         ; if not R6 then PC := 263
259 [-]: JMP       263          ; PC := 263
260 [-]: GETTABLE  R6 R0 K66    ; R6 := R0["forceHover"]
261 [-]: TEST      R6 0         ; if not R6 then PC := 279
262 [-]: JMP       279          ; PC := 279
263 [-]: GETGLOBAL R6 K14       ; R6 := _T
264 [-]: GETTABLE  R6 R6 K67    ; R6 := R6["gPendingMission"]
265 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 278
266 [-]: JMP       278          ; PC := 278
267 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["radialSector"]
268 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 277
269 [-]: JMP       277          ; PC := 277
270 [-]: GETGLOBAL R6 K14       ; R6 := _T
271 [-]: GETTABLE  R6 R6 K67    ; R6 := R6["gPendingMission"]
272 [-]: GETTABLE  R6 R6 K68    ; R6 := R6["baseNodeName"]
273 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["radialSector"]
274 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["name"]
275 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 278
276 [-]: JMP       278          ; PC := 278
277 [-]: MOVE      R6 R0        ; R6 := R0
278 [-]: MOVE      R6 R1        ; R6 := R1
279 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
280 [-]: SELF      R7 R7 K69    ; R8 := R7; R7 := R7["0x1C19D966"]
281 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
282 [-]: LOADK     R10 K70      ; R10 := "enabled"
283 [-]: MOVE      R11 R6       ; R11 := R6
284 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
285 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
286 [-]: SELF      R7 R7 K62    ; R8 := R7; R7 := R7["0x26581636"]
287 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
288 [-]: LOADK     R10 K71      ; R10 := ".Node.Container.Icon"
289 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
290 [-]: MOVE      R10 R2       ; R10 := R2
291 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
292 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
293 [-]: SELF      R7 R7 K52    ; R8 := R7; R7 := R7["0x880196A7"]
294 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
295 [-]: LOADK     R10 K72      ; R10 := "Node.Container.Icon"
296 [-]: LOADK     R11 K61      ; R11 := "_visible"
297 [-]: GETGLOBAL R12 K4       ; R12 := 0x400E7765
298 [-]: MOVE      R13 R2       ; R13 := R2
299 [-]: CALL      R12 2 2      ; R12 := R12(R13)
300 [-]: MOVE      R12 R12      ; R12 := R12
301 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
302 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["special"]
303 [-]: TEST      R7 0         ; if not R7 then PC := 311
304 [-]: JMP       311          ; PC := 311
305 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
306 [-]: SELF      R7 R7 K73    ; R8 := R7; R7 := R7["0x445651FB"]
307 [-]: GETTABLE  R9 R0 K74    ; R9 := R0["nodeIndex"]
308 [-]: LOADK     R10 K57      ; R10 := "_alpha"
309 [-]: LOADK     R11 K75      ; R11 := 100
310 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
311 [-]: GETTABLE  R7 R0 K76    ; R7 := R0["locationEnabled"]
312 [-]: TEST      R7 1         ; if R7 then PC := 321
313 [-]: JMP       321          ; PC := 321
314 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
315 [-]: SELF      R7 R7 K52    ; R8 := R7; R7 := R7["0x880196A7"]
316 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
317 [-]: LOADK     R10 K37      ; R10 := "Node"
318 [-]: LOADK     R11 K61      ; R11 := "_visible"
319 [-]: MOVE      R12 R0       ; R12 := R0
320 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
321 [-]: GETTABLE  R7 R0 K77    ; R7 := R0["isEmpty"]
322 [-]: TEST      R7 1         ; if R7 then PC := 331
323 [-]: JMP       331          ; PC := 331
324 [-]: GETUPVAL  R7 U8        ; R7 := U8
325 [-]: GETTABLE  R7 R7 K78    ; R7 := R7["Active"]
326 [-]: TEST      R7 0         ; if not R7 then PC := 337
327 [-]: JMP       337          ; PC := 337
328 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["locked"]
329 [-]: TEST      R7 0         ; if not R7 then PC := 337
330 [-]: JMP       337          ; PC := 337
331 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
332 [-]: SELF      R7 R7 K69    ; R8 := R7; R7 := R7["0x1C19D966"]
333 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
334 [-]: LOADK     R10 K61      ; R10 := "_visible"
335 [-]: MOVE      R11 R0       ; R11 := R0
336 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
337 [-]: GETUPVAL  R7 U9        ; R7 := U9
338 [-]: MOVE      R8 R0        ; R8 := R0
339 [-]: CALL      R7 2 1       ; R7(R8)
340 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2383
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x52C8784B"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  4 [-]: CALL      R0 2 5       ; R0,R1,R2,R3 := R0(R1)
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: TEST      R4 1         ; if R4 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0["0xFD6CA2ED"]
 11 [-]: SUB       R6 R1 K4     ; R6 := R1 - 1
 12 [-]: MOVE      R7 R2        ; R7 := R2
 13 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 14 [-]: MOVE      R2 R4        ; R2 := R4
 15 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 16 [-]: CLOSURE   R5 0         ; R5 := closure(Function #59.1)
 17 [-]: GETUPVAL  R0 U1        ; R0 := U1
 18 [-]: MOVE      R0 R0        ; R0 := R0
 19 [-]: MOVE      R0 R2        ; R0 := R2
 20 [-]: GETGLOBAL R6 K2        ; R6 := 0x400E7765
 21 [-]: MOVE      R7 R0        ; R7 := R0
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: TEST      R6 1         ; if R6 then PC := 112
 24 [-]: JMP       112          ; PC := 112
 25 [-]: TEST      R3 0         ; if not R3 then PC := 112
 26 [-]: JMP       112          ; PC := 112
 27 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x6C207447"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: LEN       R7 R6        ; R7 := # R6
 30 [-]: LE        0 R1 R7      ; if R1 > R7 then PC := 112
 31 [-]: JMP       112          ; PC := 112
 32 [-]: GETTABLE  R7 R6 R1     ; R7 := R6[R1]
 33 [-]: GETTABLE  R8 R7 K6     ; R8 := R7["mMainMission"]
 34 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["mKey"]
 35 [-]: GETGLOBAL R9 K2        ; R9 := 0x400E7765
 36 [-]: MOVE      R10 R8       ; R10 := R8
 37 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 38 [-]: TEST      R9 1         ; if R9 then PC := 54
 39 [-]: JMP       54           ; PC := 54
 40 [-]: GETGLOBAL R9 K8        ; R9 := 0x9FAED6BC
 41 [-]: SELF      R10 R8 K9    ; R11 := R8; R10 := R8["0x625DA4BB"]
 42 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 43 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 44 [-]: MOVE      R10 R5       ; R10 := R5
 45 [-]: MOVE      R11 R9       ; R11 := R9
 46 [-]: MOVE      R12 R8       ; R12 := R8
 47 [-]: MOVE      R13 R2       ; R13 := R2
 48 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 49 [-]: GETGLOBAL R10 K10      ; R10 := table
 50 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0xE6450C9D"]
 51 [-]: MOVE      R11 R4       ; R11 := R4
 52 [-]: MOVE      R12 R9       ; R12 := R9
 53 [-]: CALL      R10 3 1      ; R10(R11,R12)
 54 [-]: GETTABLE  R10 R7 K12   ; R10 := R7["mMarkedNodes"]
 55 [-]: LEN       R10 R10      ; R10 := # R10
 56 [-]: LT        0 K13 R10    ; if 0 >= R10 then PC := 112
 57 [-]: JMP       112          ; PC := 112
 58 [-]: GETUPVAL  R10 U0       ; R10 := U0
 59 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["0xBB3AACF2"]
 60 [-]: CALL      R10 1 2      ; R10 := R10()
 61 [-]: GETTABLE  R11 R7 K15   ; R11 := R7["mShowFirstExistingMarkedNodeOnly"]
 62 [-]: TEST      R11 0        ; if not R11 then PC := 85
 63 [-]: JMP       85           ; PC := 85
 64 [-]: SELF      R11 R10 K16  ; R12 := R10; R11 := R10["0xCFD8148D"]
 65 [-]: GETTABLE  R13 R7 K12   ; R13 := R7["mMarkedNodes"]
 66 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 67 [-]: GETGLOBAL R12 K17      ; R12 := EMPTY_SYMBOL
 68 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 112
 69 [-]: JMP       112          ; PC := 112
 70 [-]: MOVE      R12 R5       ; R12 := R5
 71 [-]: GETGLOBAL R13 K8       ; R13 := 0x9FAED6BC
 72 [-]: MOVE      R14 R11      ; R14 := R11
 73 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 74 [-]: MOVE      R14 R8       ; R14 := R8
 75 [-]: MOVE      R15 R2       ; R15 := R2
 76 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 77 [-]: GETGLOBAL R12 K10      ; R12 := table
 78 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["0xE6450C9D"]
 79 [-]: MOVE      R13 R4       ; R13 := R4
 80 [-]: GETGLOBAL R14 K8       ; R14 := 0x9FAED6BC
 81 [-]: MOVE      R15 R11      ; R15 := R11
 82 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 83 [-]: CALL      R12 0 1      ; R12(R13,...)
 84 [-]: JMP       112          ; PC := 112
 85 [-]: GETGLOBAL R12 K18      ; R12 := 0x63B09107
 86 [-]: GETTABLE  R13 R7 K12   ; R13 := R7["mMarkedNodes"]
 87 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 88 [-]: JMP       110          ; PC := 110
 89 [-]: SELF      R17 R10 K19  ; R18 := R10; R17 := R10["0xDF213CE1"]
 90 [-]: MOVE      R19 R16      ; R19 := R16
 91 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 92 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["name"]
 93 [-]: GETGLOBAL R18 K17      ; R18 := EMPTY_SYMBOL
 94 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 110
 95 [-]: JMP       110          ; PC := 110
 96 [-]: MOVE      R17 R5       ; R17 := R5
 97 [-]: GETGLOBAL R18 K8       ; R18 := 0x9FAED6BC
 98 [-]: MOVE      R19 R16      ; R19 := R16
 99 [-]: CALL      R18 2 2      ; R18 := R18(R19)
100 [-]: MOVE      R19 R8       ; R19 := R8
101 [-]: MOVE      R20 R2       ; R20 := R2
102 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
103 [-]: GETGLOBAL R17 K10      ; R17 := table
104 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["0xE6450C9D"]
105 [-]: MOVE      R18 R4       ; R18 := R4
106 [-]: GETGLOBAL R19 K8       ; R19 := 0x9FAED6BC
107 [-]: MOVE      R20 R16      ; R20 := R16
108 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
109 [-]: CALL      R17 0 1      ; R17(R18,...)
110 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 89; R14 := R15 end
111 [-]: JMP       89           ; PC := 89
112 [-]: LOADK     R17 K4       ; R17 := 1
113 [-]: GETUPVAL  R18 U2       ; R18 := U2
114 [-]: LEN       R18 R18      ; R18 := # R18
115 [-]: LOADK     R19 K4       ; R19 := 1
116 [-]: FORPREP   R17 211      ; R17 -= R19; PC := 211
117 [-]: MOVE      R21 R1       ; R21 := R1
118 [-]: LOADK     R22 K4       ; R22 := 1
119 [-]: LEN       R23 R4       ; R23 := # R4
120 [-]: LOADK     R24 K4       ; R24 := 1
121 [-]: FORPREP   R22 129      ; R22 -= R24; PC := 129
122 [-]: GETTABLE  R26 R4 R25   ; R26 := R4[R25]
123 [-]: GETUPVAL  R27 U2       ; R27 := U2
124 [-]: GETTABLE  R27 R27 R20  ; R27 := R27[R20]
125 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 129
126 [-]: JMP       129          ; PC := 129
127 [-]: MOVE      R21 R0       ; R21 := R0
128 [-]: JMP       130          ; PC := 130
129 [-]: FORLOOP   R22 122      ; R22 += R24; if R22 <= R23 then begin PC := 122; R25 := R22 end
130 [-]: TEST      R21 0        ; if not R21 then PC := 211
131 [-]: JMP       211          ; PC := 211
132 [-]: GETGLOBAL R26 K2       ; R26 := 0x400E7765
133 [-]: GETUPVAL  R27 U3       ; R27 := U3
134 [-]: CALL      R26 2 2      ; R26 := R26(R27)
135 [-]: TEST      R26 1        ; if R26 then PC := 211
136 [-]: JMP       211          ; PC := 211
137 [-]: GETGLOBAL R26 K2       ; R26 := 0x400E7765
138 [-]: GETUPVAL  R27 U1       ; R27 := U1
139 [-]: GETUPVAL  R28 U2       ; R28 := U2
140 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
141 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
142 [-]: CALL      R26 2 2      ; R26 := R26(R27)
143 [-]: TEST      R26 1        ; if R26 then PC := 211
144 [-]: JMP       211          ; PC := 211
145 [-]: GETUPVAL  R26 U3       ; R26 := U3
146 [-]: SELF      R26 R26 K19  ; R27 := R26; R26 := R26["0xDF213CE1"]
147 [-]: GETGLOBAL R28 K21      ; R28 := 0xEC274B1A
148 [-]: GETUPVAL  R29 U2       ; R29 := U2
149 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
150 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
151 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
152 [-]: GETGLOBAL R27 K2       ; R27 := 0x400E7765
153 [-]: MOVE      R28 R26      ; R28 := R26
154 [-]: CALL      R27 2 2      ; R27 := R27(R28)
155 [-]: TEST      R27 1        ; if R27 then PC := 211
156 [-]: JMP       211          ; PC := 211
157 [-]: GETUPVAL  R27 U1       ; R27 := U1
158 [-]: GETUPVAL  R28 U2       ; R28 := U2
159 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
160 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
161 [-]: SELF      R28 R26 K23  ; R29 := R26; R28 := R26["0xA4269DBC"]
162 [-]: CALL      R28 2 2      ; R28 := R28(R29)
163 [-]: SETTABLE  R27 K22 R28  ; R27["radialSector"] := R28
164 [-]: GETUPVAL  R27 U1       ; R27 := U1
165 [-]: GETUPVAL  R28 U2       ; R28 := U2
166 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
167 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
168 [-]: GETUPVAL  R28 U1       ; R28 := U1
169 [-]: GETUPVAL  R29 U2       ; R29 := U2
170 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
171 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
172 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["radialSector"]
173 [-]: GETTABLE  R28 R28 K20  ; R28 := R28["name"]
174 [-]: SETTABLE  R27 K20 R28  ; R27["name"] := R28
175 [-]: GETUPVAL  R27 U1       ; R27 := U1
176 [-]: GETUPVAL  R28 U2       ; R28 := U2
177 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
178 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
179 [-]: GETUPVAL  R28 U1       ; R28 := U1
180 [-]: GETUPVAL  R29 U2       ; R29 := U2
181 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
182 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
183 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["radialSector"]
184 [-]: GETTABLE  R28 R28 K25  ; R28 := R28["pos"]
185 [-]: SETTABLE  R27 K24 R28  ; R27["position"] := R28
186 [-]: GETUPVAL  R27 U1       ; R27 := U1
187 [-]: GETUPVAL  R28 U2       ; R28 := U2
188 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
189 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
190 [-]: GETGLOBAL R28 K27      ; R28 := string
191 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["0x639C642A"]
192 [-]: GETGLOBAL R29 K29      ; R29 := mMovie
193 [-]: SELF      R29 R29 K30  ; R30 := R29; R29 := R29["0x5DB0BD4"]
194 [-]: GETTABLE  R31 R26 K31  ; R31 := R26["locTag"]
195 [-]: SELF      R31 R31 K32  ; R32 := R31; R31 := R31["0x5EC7A3D2"]
196 [-]: CALL      R31 2 2      ; R31 := R31(R32)
197 [-]: MOVE      R32 R1       ; R32 := R1
198 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
199 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
200 [-]: SETTABLE  R27 K26 R28  ; R27["locName"] := R28
201 [-]: GETUPVAL  R27 U1       ; R27 := U1
202 [-]: GETUPVAL  R28 U2       ; R28 := U2
203 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
204 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
205 [-]: SETTABLE  R27 K33 K34  ; R27["IsQuest"] := "0x0"
206 [-]: GETUPVAL  R27 U1       ; R27 := U1
207 [-]: GETUPVAL  R28 U2       ; R28 := U2
208 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
209 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
210 [-]: SETTABLE  R27 K35 K36  ; R27["KeyType"] := nil
211 [-]: FORLOOP   R17 117      ; R17 += R19; if R17 <= R18 then begin PC := 117; R20 := R17 end
212 [-]: MOVE      R4 R2        ; R4 := R2
213 [-]: GETGLOBAL R27 K37      ; R27 := _G
214 [-]: GETUPVAL  R28 U2       ; R28 := U2
215 [-]: SETTABLE  R27 K38 R28  ; R27["QuestNodeNames"] := R28
216 [-]: RETURN    R0 1         ; return 


; Function #59.1:
;
; Name:            
; Defined at line: 2392
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 10 [-]: SETTABLE  R2 K1 K2     ; R2["IsQuest"] := "0x1"
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 13 [-]: SETTABLE  R2 K3 R1     ; R2["KeyType"] := R1
 14 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 17 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 78
 20 [-]: JMP       78           ; PC := 78
 21 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 1         ; if R2 then PC := 78
 25 [-]: JMP       78           ; PC := 78
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 28 [-]: SELF      R3 R1 K5     ; R4 := R1; R3 := R1["0xA26B0FA3"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: MOVE      R3 R3        ; R3 := R3
 31 [-]: SETTABLE  R2 K1 R3     ; R2["IsQuest"] := R3
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 34 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["radialSector"]
 35 [-]: GETUPVAL  R3 U1        ; R3 := U1
 36 [-]: SETTABLE  R2 K6 R3     ; R2["keyChain"] := R3
 37 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0xA26B0FA3"]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: TEST      R2 1         ; if R2 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETGLOBAL R2 K7        ; R2 := 0xE6DC43B0
 42 [-]: GETGLOBAL R3 K8        ; R3 := 0x9FAED6BC
 43 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1["0x616C74B6"]
 44 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 45 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 46 [-]: MOVE      R4 R0        ; R4 := R0
 47 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 48 [-]: GETUPVAL  R3 U0        ; R3 := U0
 49 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 50 [-]: GETGLOBAL R4 K11       ; R4 := string
 51 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["0x639C642A"]
 52 [-]: MOVE      R5 R2        ; R5 := R2
 53 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 54 [-]: SETTABLE  R3 K10 R4    ; R3["locName"] := R4
 55 [-]: GETUPVAL  R3 U0        ; R3 := U0
 56 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 57 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 58 [-]: SELF      R4 R1 K14    ; R5 := R1; R4 := R1["0xB8637349"]
 59 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 60 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4["0xA4269DBC"]
 61 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 62 [-]: SETTABLE  R3 K13 R4    ; R3["mission"] := R4
 63 [-]: GETUPVAL  R3 U0        ; R3 := U0
 64 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 65 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 66 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mission"]
 67 [-]: GETUPVAL  R4 U2        ; R4 := U2
 68 [-]: SETTABLE  R3 K16 R4    ; R3["difficulty"] := R4
 69 [-]: GETUPVAL  R3 U0        ; R3 := U0
 70 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 71 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 72 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mission"]
 73 [-]: GETGLOBAL R4 K18       ; R4 := 0x2C00D429
 74 [-]: SELF      R5 R1 K19    ; R6 := R1; R5 := R1["0x1B252E3C"]
 75 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 76 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 77 [-]: SETTABLE  R3 K17 R4    ; R3["levelKeyName"] := R4
 78 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2471
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: LOADK     R0 K0        ; R0 := 1
  8 [-]: GETUPVAL  R1 U3        ; R1 := U3
  9 [-]: LEN       R1 R1        ; R1 := # R1
 10 [-]: LOADK     R2 K0        ; R2 := 1
 11 [-]: FORPREP   R0 23        ; R0 -= R2; PC := 23
 12 [-]: GETUPVAL  R4 U3        ; R4 := U3
 13 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 14 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["isShortcut"]
 15 [-]: TEST      R4 1         ; if R4 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R4 U4        ; R4 := U4
 18 [-]: GETUPVAL  R5 U3        ; R5 := U3
 19 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 20 [-]: CALL      R4 2 1       ; R4(R5)
 21 [-]: GETGLOBAL R4 K2        ; R4 := 0x1BF588C6
 22 [-]: CALL      R4 1 1       ; R4()
 23 [-]: FORLOOP   R0 12        ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
 24 [-]: GETUPVAL  R4 U5        ; R4 := U5
 25 [-]: CALL      R4 1 1       ; R4()
 26 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2488
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: SETTABLE  R0 K0 K1     ; R0["visibleLabel"] := "0x1"
  2 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x26581636"]
  4 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
  5 [-]: LOADK     R4 K5        ; R4 := ".Node.Container.Node"
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xF81722A2"]
  9 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["locked"]
 10 [-]: GETGLOBAL R6 K8        ; R6 := shortcutLockedTexture
 11 [-]: GETGLOBAL R7 K9        ; R7 := shortcutUnlockedTexture
 12 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 15 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 16 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 17 [-]: LOADK     R4 K11       ; R4 := "Node.Container.Node"
 18 [-]: LOADK     R5 K12       ; R5 := "_width"
 19 [-]: LOADK     R6 K13       ; R6 := 84
 20 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 21 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 23 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 24 [-]: LOADK     R4 K11       ; R4 := "Node.Container.Node"
 25 [-]: LOADK     R5 K14       ; R5 := "_height"
 26 [-]: LOADK     R6 K13       ; R6 := 84
 27 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 28 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 29 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 30 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 31 [-]: LOADK     R4 K15       ; R4 := "Node.Container.Icon"
 32 [-]: LOADK     R5 K16       ; R5 := "_visible"
 33 [-]: MOVE      R6 R0        ; R6 := R0
 34 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 35 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2497
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 41        ; R0 -= R2; PC := 41
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
  8 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["isShortcut"]
  9 [-]: TEST      R5 0         ; if not R5 then PC := 39
 10 [-]: JMP       39           ; PC := 39
 11 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["locked"]
 12 [-]: EQ        0 R5 K3      ; if R5 ~= nil then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: SETTABLE  R4 K2 K4     ; R4["locked"] := "0x1"
 15 [-]: SETTABLE  R4 K5 K6     ; R4["completed"] := "0x0"
 16 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["locked"]
 17 [-]: TEST      R5 0         ; if not R5 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R5 K7        ; R5 := 0x400E7765
 20 [-]: GETTABLE  R6 R4 K8     ; R6 := R4["targetRegion"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: TEST      R5 1         ; if R5 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["targetRegion"]
 25 [-]: GETUPVAL  R6 U1        ; R6 := U1
 26 [-]: ADD       R7 R5 K0     ; R7 := R5 + 1
 27 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 28 [-]: SELF      R7 R6 K9     ; R8 := R6; R7 := R6["0x80A80EEB"]
 29 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 30 [-]: GETGLOBAL R8 K10       ; R8 := Lotus_Game
 31 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["RadialRegion_RCS_LOCKED"]
 32 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: SETTABLE  R4 K2 K6     ; R4["locked"] := "0x0"
 35 [-]: SETTABLE  R4 K5 K4     ; R4["completed"] := "0x1"
 36 [-]: GETUPVAL  R7 U2        ; R7 := U2
 37 [-]: MOVE      R8 R4        ; R8 := R4
 38 [-]: CALL      R7 2 1       ; R7(R8)
 39 [-]: GETGLOBAL R7 K12       ; R7 := 0x1BF588C6
 40 [-]: CALL      R7 1 1       ; R7()
 41 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 42 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2522
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 72        ; R0 -= R2; PC := 72
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
  8 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["radialSector"]
  9 [-]: GETUPVAL  R6 U1        ; R6 := U1
 10 [-]: GETTABLE  R7 R5 K2     ; R7 := R5["region"]
 11 [-]: ADD       R7 R7 K0     ; R7 := R7 + 1
 12 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 13 [-]: SELF      R7 R6 K3     ; R8 := R6; R7 := R6["0x80A80EEB"]
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 16 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["RadialRegion_RCS_LOCKED"]
 17 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 72
 18 [-]: JMP       72           ; PC := 72
 19 [-]: GETTABLE  R7 R5 K6     ; R7 := R5["nodeType"]
 20 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 21 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["NT_HUB"]
 22 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 39
 23 [-]: JMP       39           ; PC := 39
 24 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 25 [-]: GETUPVAL  R8 U2        ; R8 := U2
 26 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["CETUS_NODE_TAG"]
 27 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 30 [-]: GETUPVAL  R8 U2        ; R8 := U2
 31 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["FORTUNA_NODE_TAG"]
 32 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 35 [-]: GETUPVAL  R7 U3        ; R7 := U3
 36 [-]: MOVE      R8 R4        ; R8 := R4
 37 [-]: CALL      R7 2 1       ; R7(R8)
 38 [-]: JMP       72           ; PC := 72
 39 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 40 [-]: GETUPVAL  R8 U4        ; R8 := U4
 41 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["FIGHT_NODE_TAG"]
 42 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 49
 43 [-]: JMP       49           ; PC := 49
 44 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 45 [-]: GETUPVAL  R7 U3        ; R7 := U3
 46 [-]: MOVE      R8 R4        ; R8 := R4
 47 [-]: CALL      R7 2 1       ; R7(R8)
 48 [-]: JMP       72           ; PC := 72
 49 [-]: GETTABLE  R7 R5 K6     ; R7 := R5["nodeType"]
 50 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 51 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["NT_JUNCTION"]
 52 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 62
 53 [-]: JMP       62           ; PC := 62
 54 [-]: GETTABLE  R7 R4 K15    ; R7 := R4["complete"]
 55 [-]: TEST      R7 1         ; if R7 then PC := 62
 56 [-]: JMP       62           ; PC := 62
 57 [-]: SETTABLE  R4 K16 K12   ; R4["forceHover"] := "0x1"
 58 [-]: GETUPVAL  R7 U3        ; R7 := U3
 59 [-]: MOVE      R8 R4        ; R8 := R4
 60 [-]: CALL      R7 2 1       ; R7(R8)
 61 [-]: JMP       72           ; PC := 72
 62 [-]: GETTABLE  R7 R4 K17    ; R7 := R4["reconstructionProgress"]
 63 [-]: TEST      R7 0         ; if not R7 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETTABLE  R7 R4 K17    ; R7 := R4["reconstructionProgress"]
 66 [-]: LT        0 R7 K18     ; if R7 >= 2 then PC := 72
 67 [-]: JMP       72           ; PC := 72
 68 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 69 [-]: GETUPVAL  R7 U3        ; R7 := U3
 70 [-]: MOVE      R8 R4        ; R8 := R4
 71 [-]: CALL      R7 2 1       ; R7(R8)
 72 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 73 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2546
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: UNM       R1 R0        ; R1 := - R0
  2 [-]: DIV       R1 K0 R1     ; R1 := 100 / R1
  3 [-]: DIV       R0 R1 K1     ; R0 := R1 / 75
  4 [-]: LOADK     R1 K2        ; R1 := 1
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: LEN       R2 R2        ; R2 := # R2
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: FORPREP   R1 63        ; R1 -= R3; PC := 63
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 11 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["overrideIconSize"]
 12 [-]: EQ        1 R6 K4      ; if R6 == nil then PC := 63
 13 [-]: JMP       63           ; PC := 63
 14 [-]: GETTABLE  R6 R5 K5     ; R6 := R5["clipName"]
 15 [-]: LOADK     R7 K6        ; R7 := ".Btn"
 16 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 17 [-]: GETTABLE  R7 R5 K5     ; R7 := R5["clipName"]
 18 [-]: LOADK     R8 K7        ; R8 := ".Node.Container.Icon"
 19 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 20 [-]: GETTABLE  R8 R5 K5     ; R8 := R5["clipName"]
 21 [-]: LOADK     R9 K8        ; R9 := ".Node.Container.Node"
 22 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 23 [-]: GETTABLE  R9 R5 K3     ; R9 := R5["overrideIconSize"]
 24 [-]: MUL       R9 R9 R0     ; R9 := R9 * R0
 25 [-]: MUL       R10 R9 K9    ; R10 := R9 * 2
 26 [-]: MUL       R11 R10 K10  ; R11 := R10 * 1.5
 27 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 28 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 29 [-]: MOVE      R14 R6       ; R14 := R6
 30 [-]: LOADK     R15 K13      ; R15 := "_width"
 31 [-]: MOVE      R16 R9       ; R16 := R9
 32 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 33 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 34 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 35 [-]: MOVE      R14 R6       ; R14 := R6
 36 [-]: LOADK     R15 K14      ; R15 := "_height"
 37 [-]: MOVE      R16 R9       ; R16 := R9
 38 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 39 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 40 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 41 [-]: MOVE      R14 R7       ; R14 := R7
 42 [-]: LOADK     R15 K13      ; R15 := "_width"
 43 [-]: MOVE      R16 R10      ; R16 := R10
 44 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 45 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 46 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 47 [-]: MOVE      R14 R7       ; R14 := R7
 48 [-]: LOADK     R15 K14      ; R15 := "_height"
 49 [-]: MOVE      R16 R10      ; R16 := R10
 50 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 51 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 52 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 53 [-]: MOVE      R14 R8       ; R14 := R8
 54 [-]: LOADK     R15 K13      ; R15 := "_width"
 55 [-]: MOVE      R16 R11      ; R16 := R11
 56 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 57 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 58 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 59 [-]: MOVE      R14 R8       ; R14 := R8
 60 [-]: LOADK     R15 K14      ; R15 := "_height"
 61 [-]: MOVE      R16 R11      ; R16 := R11
 62 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 63 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 64 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2570
; #Upvalues:       16
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  71

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xECFDD17
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  9 [-]: JMP       27           ; PC := 27
 10 [-]: GETUPVAL  R5 U2        ; R5 := U2
 11 [-]: GETTABLE  R6 R4 K2     ; R6 := R4["clipName"]
 12 [-]: CALL      R5 2 1       ; R5(R6)
 13 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["deco"]
 14 [-]: EQ        1 R5 K0      ; if R5 == nil then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
 17 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["deco"]
 18 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mInstance"]
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 1         ; if R5 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R5 K6        ; R5 := gBackgroundRegion
 23 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x9B0A3887"]
 24 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["deco"]
 25 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mInstance"]
 26 [-]: CALL      R5 3 1       ; R5(R6,R7)
 27 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 10; R2 := R3 end
 28 [-]: JMP       10           ; PC := 10
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0x7E6E6726"]
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: MOVE      R5 R3        ; R5 := R3
 33 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 34 [-]: MOVE      R5 R1        ; R5 := R1
 35 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 36 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 37 [-]: GETUPVAL  R7 U5        ; R7 := U5
 38 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0x7B440FBB"]
 39 [-]: MOVE      R8 R5        ; R8 := R5
 40 [-]: LOADNIL   R9 R9        ; R9 := nil
 41 [-]: GETGLOBAL R10 K10      ; R10 := gGameRules
 42 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0xC17093D6"]
 43 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 44 [-]: CALL      R7 0 1       ; R7(R8,...)
 45 [-]: LOADK     R7 K12       ; R7 := 1
 46 [-]: LEN       R8 R5        ; R8 := # R5
 47 [-]: LOADK     R9 K12       ; R9 := 1
 48 [-]: FORPREP   R7 57        ; R7 -= R9; PC := 57
 49 [-]: GETGLOBAL R11 K13      ; R11 := table
 50 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["0xE6450C9D"]
 51 [-]: MOVE      R12 R6       ; R12 := R6
 52 [-]: GETTABLE  R13 R5 R10   ; R13 := R5[R10]
 53 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["Type"]
 54 [-]: SELF      R13 R13 K16  ; R14 := R13; R13 := R13["0x625DA4BB"]
 55 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 56 [-]: CALL      R11 0 1      ; R11(R12,...)
 57 [-]: FORLOOP   R7 49        ; R7 += R9; if R7 <= R8 then begin PC := 49; R10 := R7 end
 58 [-]: GETUPVAL  R11 U5       ; R11 := U5
 59 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["0x52C8784B"]
 60 [-]: GETGLOBAL R12 K18      ; R12 := gGameData
 61 [-]: CALL      R11 2 5      ; R11,R12,R13,R14 := R11(R12)
 62 [-]: GETGLOBAL R15 K4       ; R15 := 0x400E7765
 63 [-]: MOVE      R16 R11      ; R16 := R11
 64 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 65 [-]: TEST      R15 1        ; if R15 then PC := 123
 66 [-]: JMP       123          ; PC := 123
 67 [-]: GETUPVAL  R15 U5       ; R15 := U5
 68 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["0x68C19111"]
 69 [-]: GETGLOBAL R16 K18      ; R16 := gGameData
 70 [-]: MOVE      R17 R11      ; R17 := R11
 71 [-]: MOVE      R18 R1       ; R18 := R1
 72 [-]: CALL      R15 4 5      ; R15,R16,R17,R18 := R15(R16,R17,R18)
 73 [-]: GETGLOBAL R19 K4       ; R19 := 0x400E7765
 74 [-]: MOVE      R20 R18      ; R20 := R18
 75 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 76 [-]: TEST      R19 1        ; if R19 then PC := 123
 77 [-]: JMP       123          ; PC := 123
 78 [-]: NEWTABLE  R19 0 7      ; R19 := {}
 79 [-]: GETGLOBAL R20 K21      ; R20 := Lotus_Game
 80 [-]: GETTABLE  R20 R20 K22  ; R20 := R20["0xB880C02"]
 81 [-]: MOVE      R21 R18      ; R21 := R18
 82 [-]: LOADK     R22 K12      ; R22 := 1
 83 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 84 [-]: SETTABLE  R19 K20 R20  ; R19["Key"] := R20
 85 [-]: SETTABLE  R19 K23 R11  ; R19["KeyChain"] := R11
 86 [-]: SETTABLE  R19 K15 R18  ; R19["Type"] := R18
 87 [-]: GETGLOBAL R20 K25      ; R20 := 0xCAA43ABB
 88 [-]: MOVE      R21 R18      ; R21 := R18
 89 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 90 [-]: SETTABLE  R19 K24 R20  ; R19["Anchor"] := R20
 91 [-]: GETGLOBAL R20 K27      ; R20 := 0xE6DC43B0
 92 [-]: GETGLOBAL R21 K28      ; R21 := 0x9FAED6BC
 93 [-]: SELF      R22 R18 K29  ; R23 := R18; R22 := R18["0x616C74B6"]
 94 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
 95 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
 96 [-]: MOVE      R22 R0       ; R22 := R0
 97 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 98 [-]: SETTABLE  R19 K26 R20  ; R19["Name"] := R20
 99 [-]: GETGLOBAL R20 K27      ; R20 := 0xE6DC43B0
100 [-]: GETGLOBAL R21 K28      ; R21 := 0x9FAED6BC
101 [-]: SELF      R22 R18 K31  ; R23 := R18; R22 := R18["0x42300EB5"]
102 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
103 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
104 [-]: MOVE      R22 R0       ; R22 := R0
105 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
106 [-]: SETTABLE  R19 K30 R20  ; R19["Description"] := R20
107 [-]: SELF      R20 R11 K33  ; R21 := R11; R20 := R11["0xFD6CA2ED"]
108 [-]: SUB       R22 R15 K12  ; R22 := R15 - 1
109 [-]: MOVE      R23 R16      ; R23 := R16
110 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
111 [-]: SETTABLE  R19 K32 R20  ; R19["Difficulty"] := R20
112 [-]: GETUPVAL  R20 U6       ; R20 := U6
113 [-]: EQ        0 R11 R20    ; if R11 ~= R20 then PC := 118
114 [-]: JMP       118          ; PC := 118
115 [-]: SELF      R20 R18 K16  ; R21 := R18; R20 := R18["0x625DA4BB"]
116 [-]: CALL      R20 2 2      ; R20 := R20(R21)
117 [-]: MOVE      R20 R7       ; R20 := R7
118 [-]: GETGLOBAL R20 K13      ; R20 := table
119 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["0xE6450C9D"]
120 [-]: MOVE      R21 R5       ; R21 := R5
121 [-]: MOVE      R22 R19      ; R22 := R19
122 [-]: CALL      R20 3 1      ; R20(R21,R22)
123 [-]: LOADK     R20 K12      ; R20 := 1
124 [-]: GETUPVAL  R21 U3       ; R21 := U3
125 [-]: LEN       R21 R21      ; R21 := # R21
126 [-]: LOADK     R22 K12      ; R22 := 1
127 [-]: FORPREP   R20 170      ; R20 -= R22; PC := 170
128 [-]: MOVE      R24 R0       ; R24 := R0
129 [-]: GETUPVAL  R25 U3       ; R25 := U3
130 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
131 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["name"]
132 [-]: GETGLOBAL R26 K4       ; R26 := 0x400E7765
133 [-]: GETUPVAL  R27 U3       ; R27 := U3
134 [-]: GETTABLE  R27 R27 R23  ; R27 := R27[R23]
135 [-]: GETTABLE  R27 R27 K35  ; R27 := R27["mission"]
136 [-]: GETTABLE  R27 R27 K36  ; R27 := R27["levelKeyName"]
137 [-]: CALL      R26 2 2      ; R26 := R26(R27)
138 [-]: TEST      R26 1        ; if R26 then PC := 150
139 [-]: JMP       150          ; PC := 150
140 [-]: MOVE      R24 R1       ; R24 := R1
141 [-]: LOADK     R26 K12      ; R26 := 1
142 [-]: LEN       R27 R6       ; R27 := # R6
143 [-]: LOADK     R28 K12      ; R28 := 1
144 [-]: FORPREP   R26 149      ; R26 -= R28; PC := 149
145 [-]: GETTABLE  R30 R6 R29   ; R30 := R6[R29]
146 [-]: EQ        0 R30 R25    ; if R30 ~= R25 then PC := 149
147 [-]: JMP       149          ; PC := 149
148 [-]: MOVE      R24 R0       ; R24 := R0
149 [-]: FORLOOP   R26 145      ; R26 += R28; if R26 <= R27 then begin PC := 145; R29 := R26 end
150 [-]: GETGLOBAL R30 K28      ; R30 := 0x9FAED6BC
151 [-]: MOVE      R31 R25      ; R31 := R25
152 [-]: CALL      R30 2 2      ; R30 := R30(R31)
153 [-]: MOVE      R25 R30      ; R25 := R30
154 [-]: GETUPVAL  R30 U8       ; R30 := U8
155 [-]: GETTABLE  R30 R30 K37  ; R30 := R30["Sectors"]
156 [-]: GETTABLE  R30 R30 R25  ; R30 := R30[R25]
157 [-]: GETUPVAL  R31 U3       ; R31 := U3
158 [-]: GETTABLE  R31 R31 R23  ; R31 := R31[R23]
159 [-]: GETTABLE  R31 R31 K38  ; R31 := R31["missionTag"]
160 [-]: EQ        0 R30 K0     ; if R30 ~= nil then PC := 164
161 [-]: JMP       164          ; PC := 164
162 [-]: GETUPVAL  R32 U3       ; R32 := U3
163 [-]: GETTABLE  R30 R32 R23  ; R30 := R32[R23]
164 [-]: TEST      R24 1        ; if R24 then PC := 170
165 [-]: JMP       170          ; PC := 170
166 [-]: GETUPVAL  R32 U9       ; R32 := U9
167 [-]: SELF      R33 R30 K39  ; R34 := R30; R33 := R30["0xA4269DBC"]
168 [-]: CALL      R33 2 0      ; R33,... := R33(R34)
169 [-]: CALL      R32 0 1      ; R32(R33,...)
170 [-]: FORLOOP   R20 128      ; R20 += R22; if R20 <= R21 then begin PC := 128; R23 := R20 end
171 [-]: NEWTABLE  R32 0 0      ; R32 := {}
172 [-]: LOADNIL   R33 R33      ; R33 := nil
173 [-]: LOADK     R34 K12      ; R34 := 1
174 [-]: LEN       R35 R5       ; R35 := # R5
175 [-]: LOADK     R36 K12      ; R36 := 1
176 [-]: FORPREP   R34 545      ; R34 -= R36; PC := 545
177 [-]: GETGLOBAL R38 K40      ; R38 := 0x1BF588C6
178 [-]: LOADK     R39 K41      ; R39 := 0
179 [-]: CALL      R38 2 1      ; R38(R39)
180 [-]: GETTABLE  R38 R5 R37   ; R38 := R5[R37]
181 [-]: GETTABLE  R39 R38 K15  ; R39 := R38["Type"]
182 [-]: SELF      R40 R39 K16  ; R41 := R39; R40 := R39["0x625DA4BB"]
183 [-]: CALL      R40 2 2      ; R40 := R40(R41)
184 [-]: SELF      R41 R39 K42  ; R42 := R39; R41 := R39["0xA26B0FA3"]
185 [-]: CALL      R41 2 2      ; R41 := R41(R42)
186 [-]: GETUPVAL  R42 U1       ; R42 := U1
187 [-]: GETGLOBAL R43 K28      ; R43 := 0x9FAED6BC
188 [-]: MOVE      R44 R40      ; R44 := R40
189 [-]: CALL      R43 2 2      ; R43 := R43(R44)
190 [-]: GETTABLE  R42 R42 R43  ; R42 := R42[R43]
191 [-]: LOADNIL   R43 R43      ; R43 := nil
192 [-]: EQ        1 R42 K0     ; if R42 == nil then PC := 196
193 [-]: JMP       196          ; PC := 196
194 [-]: GETTABLE  R43 R42 K43  ; R43 := R42["radialSector"]
195 [-]: JMP       200          ; PC := 200
196 [-]: GETGLOBAL R44 K21      ; R44 := Lotus_Game
197 [-]: GETTABLE  R44 R44 K44  ; R44 := R44["0xAE448D50"]
198 [-]: CALL      R44 1 2      ; R44 := R44()
199 [-]: MOVE      R43 R44      ; R43 := R44
200 [-]: MOVE      R44 R0       ; R44 := R0
201 [-]: SELF      R45 R39 K45  ; R46 := R39; R45 := R39["0x9B16E6AD"]
202 [-]: CALL      R45 2 2      ; R45 := R45(R46)
203 [-]: GETGLOBAL R46 K46      ; R46 := _T
204 [-]: GETTABLE  R46 R46 K47  ; R46 := R46["REGION_ID_DOJO"]
205 [-]: EQ        0 R45 R46    ; if R45 ~= R46 then PC := 234
206 [-]: JMP       234          ; PC := 234
207 [-]: GETUPVAL  R45 U10      ; R45 := U10
208 [-]: GETTABLE  R45 R45 K48  ; R45 := R45["Active"]
209 [-]: TEST      R45 0        ; if not R45 then PC := 217
210 [-]: JMP       217          ; PC := 217
211 [-]: GETGLOBAL R45 K50      ; R45 := 0xEC274B1A
212 [-]: LOADK     R46 K51      ; R46 := "/Lotus/Language/Dojo/DryDockMapLabel"
213 [-]: CALL      R45 2 2      ; R45 := R45(R46)
214 [-]: SETTABLE  R43 K49 R45  ; R43["locTag"] := R45
215 [-]: MOVE      R44 R1       ; R44 := R1
216 [-]: JMP       273          ; PC := 273
217 [-]: GETGLOBAL R45 K52      ; R45 := gPlayerProfileMgr
218 [-]: SELF      R45 R45 K53  ; R46 := R45; R45 := R45["0x21EF7B1A"]
219 [-]: LOADK     R47 K41      ; R47 := 0
220 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
221 [-]: GETGLOBAL R46 K4       ; R46 := 0x400E7765
222 [-]: MOVE      R47 R45      ; R47 := R45
223 [-]: CALL      R46 2 2      ; R46 := R46(R47)
224 [-]: TEST      R46 1        ; if R46 then PC := 273
225 [-]: JMP       273          ; PC := 273
226 [-]: GETGLOBAL R46 K50      ; R46 := 0xEC274B1A
227 [-]: SELF      R47 R45 K54  ; R48 := R45; R47 := R45["0x654F1092"]
228 [-]: CALL      R47 2 2      ; R47 := R47(R48)
229 [-]: SELF      R47 R47 K55  ; R48 := R47; R47 := R47["0x6D176768"]
230 [-]: CALL      R47 2 0      ; R47,... := R47(R48)
231 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
232 [-]: SETTABLE  R43 K49 R46  ; R43["locTag"] := R46
233 [-]: JMP       273          ; PC := 273
234 [-]: TEST      R41 1        ; if R41 then PC := 273
235 [-]: JMP       273          ; PC := 273
236 [-]: GETGLOBAL R46 K56      ; R46 := mMovie
237 [-]: SELF      R46 R46 K57  ; R47 := R46; R46 := R46["0x5DB0BD4"]
238 [-]: GETTABLE  R48 R38 K26  ; R48 := R38["Name"]
239 [-]: MOVE      R49 R1       ; R49 := R1
240 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
241 [-]: GETTABLE  R47 R38 K15  ; R47 := R38["Type"]
242 [-]: SELF      R47 R47 K58  ; R48 := R47; R47 := R47["0xB8637349"]
243 [-]: CALL      R47 2 2      ; R47 := R47(R48)
244 [-]: GETTABLE  R47 R47 K59  ; R47 := R47["uniqueName"]
245 [-]: EQ        1 R47 K60    ; if R47 == "" then PC := 253
246 [-]: JMP       253          ; PC := 253
247 [-]: GETGLOBAL R48 K56      ; R48 := mMovie
248 [-]: SELF      R48 R48 K57  ; R49 := R48; R48 := R48["0x5DB0BD4"]
249 [-]: MOVE      R50 R47      ; R50 := R47
250 [-]: MOVE      R51 R0       ; R51 := R0
251 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
252 [-]: MOVE      R46 R48      ; R46 := R48
253 [-]: GETTABLE  R48 R38 K61  ; R48 := R38["Count"]
254 [-]: TEST      R48 0        ; if not R48 then PC := 269
255 [-]: JMP       269          ; PC := 269
256 [-]: GETTABLE  R48 R38 K61  ; R48 := R38["Count"]
257 [-]: LT        0 K12 R48    ; if 1 >= R48 then PC := 269
258 [-]: JMP       269          ; PC := 269
259 [-]: GETTABLE  R48 R38 K15  ; R48 := R38["Type"]
260 [-]: SELF      R48 R48 K62  ; R49 := R48; R48 := R48["0x49F6C90A"]
261 [-]: CALL      R48 2 2      ; R48 := R48(R49)
262 [-]: TEST      R48 0        ; if not R48 then PC := 269
263 [-]: JMP       269          ; PC := 269
264 [-]: MOVE      R48 R46      ; R48 := R46
265 [-]: LOADK     R49 K63      ; R49 := " ["
266 [-]: GETTABLE  R50 R38 K61  ; R50 := R38["Count"]
267 [-]: LOADK     R51 K64      ; R51 := "]"
268 [-]: CONCAT    R46 R48 R51  ; R46 := R48 .. R49 .. R50 .. R51
269 [-]: GETGLOBAL R48 K50      ; R48 := 0xEC274B1A
270 [-]: MOVE      R49 R46      ; R49 := R46
271 [-]: CALL      R48 2 2      ; R48 := R48(R49)
272 [-]: SETTABLE  R43 K49 R48  ; R43["locTag"] := R48
273 [-]: LOADNIL   R48 R48      ; R48 := nil
274 [-]: TEST      R41 0        ; if not R41 then PC := 280
275 [-]: JMP       280          ; PC := 280
276 [-]: GETTABLE  R49 R43 K35  ; R49 := R43["mission"]
277 [-]: SELF      R49 R49 K39  ; R50 := R49; R49 := R49["0xA4269DBC"]
278 [-]: CALL      R49 2 2      ; R49 := R49(R50)
279 [-]: MOVE      R48 R49      ; R48 := R49
280 [-]: GETTABLE  R49 R38 K15  ; R49 := R38["Type"]
281 [-]: SELF      R49 R49 K65  ; R50 := R49; R49 := R49["0x1B252E3C"]
282 [-]: CALL      R49 2 2      ; R49 := R49(R50)
283 [-]: GETGLOBAL R50 K66      ; R50 := string
284 [-]: GETTABLE  R50 R50 K67  ; R50 := R50["0xDE44F664"]
285 [-]: MOVE      R51 R49      ; R51 := R49
286 [-]: LOADK     R52 K68      ; R52 := "Hub"
287 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
288 [-]: TEST      R50 0        ; if not R50 then PC := 294
289 [-]: JMP       294          ; PC := 294
290 [-]: GETGLOBAL R50 K21      ; R50 := Lotus_Game
291 [-]: GETTABLE  R50 R50 K70  ; R50 := R50["NT_HUB"]
292 [-]: SETTABLE  R43 K69 R50  ; R43["nodeType"] := R50
293 [-]: JMP       297          ; PC := 297
294 [-]: GETGLOBAL R50 K21      ; R50 := Lotus_Game
295 [-]: GETTABLE  R50 R50 K71  ; R50 := R50["NT_MISSION"]
296 [-]: SETTABLE  R43 K69 R50  ; R43["nodeType"] := R50
297 [-]: SETTABLE  R43 K72 K73  ; R43["unlocked"] := "0x1"
298 [-]: GETTABLE  R50 R38 K15  ; R50 := R38["Type"]
299 [-]: SELF      R50 R50 K58  ; R51 := R50; R50 := R50["0xB8637349"]
300 [-]: CALL      R50 2 2      ; R50 := R50(R51)
301 [-]: SELF      R50 R50 K39  ; R51 := R50; R50 := R50["0xA4269DBC"]
302 [-]: CALL      R50 2 2      ; R50 := R50(R51)
303 [-]: SETTABLE  R43 K35 R50  ; R43["mission"] := R50
304 [-]: GETTABLE  R50 R43 K35  ; R50 := R43["mission"]
305 [-]: GETGLOBAL R51 K74      ; R51 := 0x2C00D429
306 [-]: GETTABLE  R52 R38 K15  ; R52 := R38["Type"]
307 [-]: SELF      R52 R52 K65  ; R53 := R52; R52 := R52["0x1B252E3C"]
308 [-]: CALL      R52 2 0      ; R52,... := R52(R53)
309 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
310 [-]: SETTABLE  R50 K36 R51  ; R50["levelKeyName"] := R51
311 [-]: GETTABLE  R50 R38 K32  ; R50 := R38["Difficulty"]
312 [-]: EQ        1 R50 K0     ; if R50 == nil then PC := 317
313 [-]: JMP       317          ; PC := 317
314 [-]: GETTABLE  R50 R43 K35  ; R50 := R43["mission"]
315 [-]: GETTABLE  R51 R38 K32  ; R51 := R38["Difficulty"]
316 [-]: SETTABLE  R50 K75 R51  ; R50["difficulty"] := R51
317 [-]: GETTABLE  R50 R38 K23  ; R50 := R38["KeyChain"]
318 [-]: SETTABLE  R43 K76 R50  ; R43["keyChain"] := R50
319 [-]: LOADNIL   R50 R50      ; R50 := nil
320 [-]: GETTABLE  R51 R38 K77  ; R51 := R38["RegionOverride"]
321 [-]: EQ        1 R51 K0     ; if R51 == nil then PC := 325
322 [-]: JMP       325          ; PC := 325
323 [-]: GETTABLE  R50 R38 K77  ; R50 := R38["RegionOverride"]
324 [-]: JMP       329          ; PC := 329
325 [-]: GETTABLE  R51 R38 K15  ; R51 := R38["Type"]
326 [-]: SELF      R51 R51 K45  ; R52 := R51; R51 := R51["0x9B16E6AD"]
327 [-]: CALL      R51 2 2      ; R51 := R51(R52)
328 [-]: MOVE      R50 R51      ; R50 := R51
329 [-]: GETUPVAL  R51 U11      ; R51 := U11
330 [-]: LEN       R51 R51      ; R51 := # R51
331 [-]: LE        0 R51 R50    ; if R51 > R50 then PC := 347
332 [-]: JMP       347          ; PC := 347
333 [-]: GETGLOBAL R51 K78      ; R51 := 0x93B1256B
334 [-]: LOADK     R52 K79      ; R52 := "invalid region specified for key="
335 [-]: GETGLOBAL R53 K28      ; R53 := 0x9FAED6BC
336 [-]: GETTABLE  R54 R38 K15  ; R54 := R38["Type"]
337 [-]: SELF      R54 R54 K65  ; R55 := R54; R54 := R54["0x1B252E3C"]
338 [-]: CALL      R54 2 0      ; R54,... := R54(R55)
339 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
340 [-]: CONCAT    R52 R52 R53  ; R52 := R52 .. R53
341 [-]: CALL      R51 2 1      ; R51(R52)
342 [-]: GETUPVAL  R51 U4       ; R51 := U4
343 [-]: SELF      R51 R51 K80  ; R52 := R51; R51 := R51["0xDF213CE1"]
344 [-]: MOVE      R53 R40      ; R53 := R40
345 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
346 [-]: GETTABLE  R50 R51 K81  ; R50 := R51["region"]
347 [-]: GETGLOBAL R51 K4       ; R51 := 0x400E7765
348 [-]: MOVE      R52 R42      ; R52 := R42
349 [-]: CALL      R51 2 2      ; R51 := R51(R52)
350 [-]: TEST      R51 0        ; if not R51 then PC := 458
351 [-]: JMP       458          ; PC := 458
352 [-]: GETTABLE  R51 R38 K15  ; R51 := R38["Type"]
353 [-]: SELF      R51 R51 K82  ; R52 := R51; R51 := R51["0x8B598ED4"]
354 [-]: GETUPVAL  R53 U12      ; R53 := U12
355 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
356 [-]: TEST      R51 1        ; if R51 then PC := 458
357 [-]: JMP       458          ; PC := 458
358 [-]: GETGLOBAL R51 K46      ; R51 := _T
359 [-]: GETTABLE  R51 R51 K83  ; R51 := R51["REGION_ID_MOON"]
360 [-]: EQ        0 R50 R51    ; if R50 ~= R51 then PC := 368
361 [-]: JMP       368          ; PC := 368
362 [-]: GETUPVAL  R51 U13      ; R51 := U13
363 [-]: GETGLOBAL R52 K46      ; R52 := _T
364 [-]: GETTABLE  R52 R52 K83  ; R52 := R52["REGION_ID_MOON"]
365 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
366 [-]: EQ        1 R51 K73    ; if R51 == "0x1" then PC := 458
367 [-]: JMP       458          ; PC := 458
368 [-]: TEST      R44 0        ; if not R44 then PC := 375
369 [-]: JMP       375          ; PC := 375
370 [-]: GETGLOBAL R51 K50      ; R51 := 0xEC274B1A
371 [-]: LOADK     R52 K84      ; R52 := "CrewBattleNodeDojo"
372 [-]: CALL      R51 2 2      ; R51 := R51(R52)
373 [-]: SETTABLE  R43 K34 R51  ; R43["name"] := R51
374 [-]: JMP       384          ; PC := 384
375 [-]: GETGLOBAL R51 K50      ; R51 := 0xEC274B1A
376 [-]: GETTABLE  R52 R38 K15  ; R52 := R38["Type"]
377 [-]: SELF      R52 R52 K65  ; R53 := R52; R52 := R52["0x1B252E3C"]
378 [-]: CALL      R52 2 2      ; R52 := R52(R53)
379 [-]: GETUPVAL  R53 U5       ; R53 := U5
380 [-]: GETTABLE  R53 R53 K85  ; R53 := R53["KEY_TAG"]
381 [-]: CONCAT    R52 R52 R53  ; R52 := R52 .. R53
382 [-]: CALL      R51 2 2      ; R51 := R51(R52)
383 [-]: SETTABLE  R43 K34 R51  ; R43["name"] := R51
384 [-]: GETGLOBAL R51 K66      ; R51 := string
385 [-]: GETTABLE  R51 R51 K67  ; R51 := R51["0xDE44F664"]
386 [-]: MOVE      R52 R49      ; R52 := R49
387 [-]: LOADK     R53 K68      ; R53 := "Hub"
388 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
389 [-]: TEST      R51 0        ; if not R51 then PC := 395
390 [-]: JMP       395          ; PC := 395
391 [-]: GETGLOBAL R51 K21      ; R51 := Lotus_Game
392 [-]: GETTABLE  R51 R51 K70  ; R51 := R51["NT_HUB"]
393 [-]: SETTABLE  R43 K69 R51  ; R43["nodeType"] := R51
394 [-]: JMP       398          ; PC := 398
395 [-]: GETGLOBAL R51 K21      ; R51 := Lotus_Game
396 [-]: GETTABLE  R51 R51 K71  ; R51 := R51["NT_MISSION"]
397 [-]: SETTABLE  R43 K69 R51  ; R43["nodeType"] := R51
398 [-]: SETTABLE  R43 K81 R50  ; R43["region"] := R50
399 [-]: GETTABLE  R51 R43 K81  ; R51 := R43["region"]
400 [-]: GETTABLE  R51 R32 R51  ; R51 := R32[R51]
401 [-]: EQ        0 R51 K0     ; if R51 ~= nil then PC := 405
402 [-]: JMP       405          ; PC := 405
403 [-]: GETTABLE  R51 R43 K81  ; R51 := R43["region"]
404 [-]: SETTABLE  R32 R51 K41  ; R32[R51] := 0
405 [-]: GETTABLE  R51 R38 K15  ; R51 := R38["Type"]
406 [-]: SELF      R51 R51 K86  ; R52 := R51; R51 := R51["0x387DBBEB"]
407 [-]: CALL      R51 2 2      ; R51 := R51(R52)
408 [-]: GETTABLE  R52 R51 K87  ; R52 := R51["x"]
409 [-]: EQ        1 R52 K41    ; if R52 == 0 then PC := 419
410 [-]: JMP       419          ; PC := 419
411 [-]: GETTABLE  R52 R51 K88  ; R52 := R51["y"]
412 [-]: EQ        1 R52 K41    ; if R52 == 0 then PC := 419
413 [-]: JMP       419          ; PC := 419
414 [-]: GETTABLE  R52 R51 K89  ; R52 := R51["z"]
415 [-]: EQ        1 R52 K41    ; if R52 == 0 then PC := 419
416 [-]: JMP       419          ; PC := 419
417 [-]: SETTABLE  R43 K90 R51  ; R43["pos"] := R51
418 [-]: JMP       435          ; PC := 435
419 [-]: GETUPVAL  R52 U11      ; R52 := U11
420 [-]: GETTABLE  R53 R43 K81  ; R53 := R43["region"]
421 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
422 [-]: GETTABLE  R52 R52 K90  ; R52 := R52["pos"]
423 [-]: GETGLOBAL R53 K91      ; R53 := 0x221C9700
424 [-]: GETTABLE  R54 R43 K81  ; R54 := R43["region"]
425 [-]: GETTABLE  R54 R32 R54  ; R54 := R32[R54]
426 [-]: MUL       R54 R54 K92  ; R54 := R54 * 0.019999999552965
427 [-]: GETTABLE  R55 R43 K81  ; R55 := R43["region"]
428 [-]: GETTABLE  R55 R32 R55  ; R55 := R32[R55]
429 [-]: UNM       R55 R55      ; R55 := - R55
430 [-]: MUL       R55 R55 K92  ; R55 := R55 * 0.019999999552965
431 [-]: LOADK     R56 K41      ; R56 := 0
432 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
433 [-]: ADD       R52 R52 R53  ; R52 := R52 + R53
434 [-]: SETTABLE  R43 K90 R52  ; R43["pos"] := R52
435 [-]: GETTABLE  R52 R38 K93  ; R52 := R38["DecoOverride"]
436 [-]: EQ        1 R52 K0     ; if R52 == nil then PC := 442
437 [-]: JMP       442          ; PC := 442
438 [-]: GETTABLE  R52 R38 K93  ; R52 := R38["DecoOverride"]
439 [-]: SETTABLE  R43 K3 R52   ; R43["deco"] := R52
440 [-]: GETTABLE  R52 R38 K95  ; R52 := R38["DecoScale"]
441 [-]: SETTABLE  R43 K94 R52  ; R43["scale"] := R52
442 [-]: GETTABLE  R52 R38 K96  ; R52 := R38["NodeOffset"]
443 [-]: EQ        1 R52 K0     ; if R52 == nil then PC := 449
444 [-]: JMP       449          ; PC := 449
445 [-]: GETTABLE  R52 R43 K90  ; R52 := R43["pos"]
446 [-]: GETTABLE  R53 R38 K96  ; R53 := R38["NodeOffset"]
447 [-]: ADD       R52 R52 R53  ; R52 := R52 + R53
448 [-]: SETTABLE  R43 K90 R52  ; R43["pos"] := R52
449 [-]: GETTABLE  R52 R43 K81  ; R52 := R43["region"]
450 [-]: GETTABLE  R53 R43 K81  ; R53 := R43["region"]
451 [-]: GETTABLE  R53 R32 R53  ; R53 := R32[R53]
452 [-]: ADD       R53 R53 K12  ; R53 := R53 + 1
453 [-]: SETTABLE  R32 R52 R53  ; R32[R52] := R53
454 [-]: GETUPVAL  R52 U9       ; R52 := U9
455 [-]: MOVE      R53 R43      ; R53 := R43
456 [-]: CALL      R52 2 2      ; R52 := R52(R53)
457 [-]: MOVE      R42 R52      ; R42 := R52
458 [-]: GETGLOBAL R52 K4       ; R52 := 0x400E7765
459 [-]: MOVE      R53 R42      ; R53 := R42
460 [-]: CALL      R52 2 2      ; R52 := R52(R53)
461 [-]: TEST      R52 1        ; if R52 then PC := 545
462 [-]: JMP       545          ; PC := 545
463 [-]: TEST      R41 1        ; if R41 then PC := 478
464 [-]: JMP       478          ; PC := 478
465 [-]: GETTABLE  R52 R43 K34  ; R52 := R43["name"]
466 [-]: SETTABLE  R42 K34 R52  ; R42["name"] := R52
467 [-]: GETGLOBAL R52 K66      ; R52 := string
468 [-]: GETTABLE  R52 R52 K98  ; R52 := R52["0x639C642A"]
469 [-]: GETGLOBAL R53 K56      ; R53 := mMovie
470 [-]: SELF      R53 R53 K57  ; R54 := R53; R53 := R53["0x5DB0BD4"]
471 [-]: GETTABLE  R55 R43 K49  ; R55 := R43["locTag"]
472 [-]: SELF      R55 R55 K99  ; R56 := R55; R55 := R55["0x5EC7A3D2"]
473 [-]: CALL      R55 2 2      ; R55 := R55(R56)
474 [-]: MOVE      R56 R0       ; R56 := R0
475 [-]: CALL      R53 4 0      ; R53,... := R53(R54,R55,R56)
476 [-]: CALL      R52 0 2      ; R52 := R52(R53,...)
477 [-]: SETTABLE  R42 K97 R52  ; R42["locName"] := R52
478 [-]: GETGLOBAL R52 K4       ; R52 := 0x400E7765
479 [-]: GETTABLE  R53 R38 K23  ; R53 := R38["KeyChain"]
480 [-]: CALL      R52 2 2      ; R52 := R52(R53)
481 [-]: TEST      R52 1        ; if R52 then PC := 485
482 [-]: JMP       485          ; PC := 485
483 [-]: SETTABLE  R42 K100 K101; R42["completed"] := "0x0"
484 [-]: JMP       525          ; PC := 525
485 [-]: GETTABLE  R52 R42 K100 ; R52 := R42["completed"]
486 [-]: TEST      R52 1        ; if R52 then PC := 525
487 [-]: JMP       525          ; PC := 525
488 [-]: GETTABLE  R52 R38 K15  ; R52 := R38["Type"]
489 [-]: SELF      R52 R52 K16  ; R53 := R52; R52 := R52["0x625DA4BB"]
490 [-]: CALL      R52 2 2      ; R52 := R52(R53)
491 [-]: SELF      R53 R40 K102 ; R54 := R40; R53 := R40["0x315E860F"]
492 [-]: CALL      R53 2 2      ; R53 := R53(R54)
493 [-]: TEST      R53 0        ; if not R53 then PC := 525
494 [-]: JMP       525          ; PC := 525
495 [-]: EQ        0 R33 K0     ; if R33 ~= nil then PC := 506
496 [-]: JMP       506          ; PC := 506
497 [-]: GETGLOBAL R53 K52      ; R53 := gPlayerProfileMgr
498 [-]: SELF      R53 R53 K53  ; R54 := R53; R53 := R53["0x21EF7B1A"]
499 [-]: LOADK     R55 K41      ; R55 := 0
500 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
501 [-]: SELF      R53 R53 K54  ; R54 := R53; R53 := R53["0x654F1092"]
502 [-]: CALL      R53 2 2      ; R53 := R53(R54)
503 [-]: SELF      R53 R53 K103 ; R54 := R53; R53 := R53["0xC92135A6"]
504 [-]: CALL      R53 2 2      ; R53 := R53(R54)
505 [-]: MOVE      R33 R53      ; R33 := R53
506 [-]: GETGLOBAL R53 K1       ; R53 := 0xECFDD17
507 [-]: MOVE      R54 R33      ; R54 := R33
508 [-]: CALL      R53 2 4      ; R53,R54,R55 := R53(R54)
509 [-]: JMP       523          ; PC := 523
510 [-]: GETTABLE  R58 R57 K104 ; R58 := R57["mTag"]
511 [-]: EQ        0 R58 R52    ; if R58 ~= R52 then PC := 523
512 [-]: JMP       523          ; PC := 523
513 [-]: GETTABLE  R58 R57 K105 ; R58 := R57["mCompletes"]
514 [-]: LT        1 K41 R58    ; if 0 < R58 then PC := 517
515 [-]: JMP       517          ; PC := 517
516 [-]: MOVE      R58 R0       ; R58 := R0
517 [-]: MOVE      R58 R1       ; R58 := R1
518 [-]: SETTABLE  R42 K100 R58 ; R42["completed"] := R58
519 [-]: GETTABLE  R58 R42 K43  ; R58 := R42["radialSector"]
520 [-]: GETTABLE  R59 R57 K105 ; R59 := R57["mCompletes"]
521 [-]: SETTABLE  R58 K106 R59 ; R58["missionsCompleted"] := R59
522 [-]: JMP       525          ; PC := 525
523 [-]: TFORLOOP  R53 2        ; R56,R57 :=  R53(R54,R55); if R56 ~= nil then begin PC = 510; R55 := R56 end
524 [-]: JMP       510          ; PC := 510
525 [-]: SETTABLE  R42 K107 K101; R42["locked"] := "0x0"
526 [-]: SETTABLE  R42 K108 K73 ; R42["visibleLabel"] := "0x1"
527 [-]: SETTABLE  R42 K109 K101; R42["isEmpty"] := "0x0"
528 [-]: TEST      R41 0        ; if not R41 then PC := 531
529 [-]: JMP       531          ; PC := 531
530 [-]: SETTABLE  R42 K110 R48 ; R42["displayMissionOverride"] := R48
531 [-]: GETTABLE  R58 R38 K32  ; R58 := R38["Difficulty"]
532 [-]: EQ        1 R58 K0     ; if R58 == nil then PC := 545
533 [-]: JMP       545          ; PC := 545
534 [-]: GETTABLE  R58 R42 K43  ; R58 := R42["radialSector"]
535 [-]: GETTABLE  R58 R58 K35  ; R58 := R58["mission"]
536 [-]: GETTABLE  R59 R38 K32  ; R59 := R38["Difficulty"]
537 [-]: SETTABLE  R58 K75 R59  ; R58["difficulty"] := R59
538 [-]: GETUPVAL  R58 U0       ; R58 := U0
539 [-]: GETTABLE  R59 R42 K111 ; R59 := R42["id"]
540 [-]: GETTABLE  R58 R58 R59  ; R58 := R58[R59]
541 [-]: GETTABLE  R58 R58 K43  ; R58 := R58["radialSector"]
542 [-]: GETTABLE  R58 R58 K35  ; R58 := R58["mission"]
543 [-]: GETTABLE  R59 R38 K32  ; R59 := R38["Difficulty"]
544 [-]: SETTABLE  R58 K75 R59  ; R58["difficulty"] := R59
545 [-]: FORLOOP   R34 177      ; R34 += R36; if R34 <= R35 then begin PC := 177; R37 := R34 end
546 [-]: GETUPVAL  R58 U10      ; R58 := U10
547 [-]: GETTABLE  R58 R58 K48  ; R58 := R58["Active"]
548 [-]: TEST      R58 1        ; if R58 then PC := 625
549 [-]: JMP       625          ; PC := 625
550 [-]: GETGLOBAL R58 K52      ; R58 := gPlayerProfileMgr
551 [-]: SELF      R58 R58 K53  ; R59 := R58; R58 := R58["0x21EF7B1A"]
552 [-]: LOADK     R60 K41      ; R60 := 0
553 [-]: CALL      R58 3 2      ; R58 := R58(R59,R60)
554 [-]: SELF      R58 R58 K54  ; R59 := R58; R58 := R58["0x654F1092"]
555 [-]: CALL      R58 2 2      ; R58 := R58(R59)
556 [-]: SELF      R58 R58 K112 ; R59 := R58; R58 := R58["0x2D0B8A86"]
557 [-]: CALL      R58 2 2      ; R58 := R58(R59)
558 [-]: GETTABLE  R58 R58 K113 ; R58 := R58["mFeaturedGuilds"]
559 [-]: LOADK     R59 K12      ; R59 := 1
560 [-]: LEN       R60 R58      ; R60 := # R58
561 [-]: LOADK     R61 K12      ; R61 := 1
562 [-]: FORPREP   R59 624      ; R59 -= R61; PC := 624
563 [-]: GETGLOBAL R63 K21      ; R63 := Lotus_Game
564 [-]: GETTABLE  R63 R63 K44  ; R63 := R63["0xAE448D50"]
565 [-]: CALL      R63 1 2      ; R63 := R63()
566 [-]: GETUPVAL  R64 U14      ; R64 := U14
567 [-]: GETTABLE  R64 R64 K114 ; R64 := R64["0xF81722A2"]
568 [-]: GETUPVAL  R65 U14      ; R65 := U14
569 [-]: GETTABLE  R65 R65 K115 ; R65 := R65["0x36BA5F48"]
570 [-]: CALL      R65 1 2      ; R65 := R65()
571 [-]: GETGLOBAL R66 K50      ; R66 := 0xEC274B1A
572 [-]: LOADK     R67 K116     ; R67 := "/Lotus/Language/Clan/Clan_DOJO"
573 [-]: CALL      R66 2 2      ; R66 := R66(R67)
574 [-]: GETGLOBAL R67 K50      ; R67 := 0xEC274B1A
575 [-]: GETTABLE  R68 R58 R62  ; R68 := R58[R62]
576 [-]: GETTABLE  R68 R68 K117 ; R68 := R68["mName"]
577 [-]: CALL      R67 2 0      ; R67,... := R67(R68)
578 [-]: CALL      R64 0 2      ; R64 := R64(R65,...)
579 [-]: SETTABLE  R63 K49 R64  ; R63["locTag"] := R64
580 [-]: GETGLOBAL R64 K21      ; R64 := Lotus_Game
581 [-]: GETTABLE  R64 R64 K70  ; R64 := R64["NT_HUB"]
582 [-]: SETTABLE  R63 K69 R64  ; R63["nodeType"] := R64
583 [-]: SETTABLE  R63 K72 K73  ; R63["unlocked"] := "0x1"
584 [-]: GETGLOBAL R64 K50      ; R64 := 0xEC274B1A
585 [-]: LOADK     R65 K118     ; R65 := "FeaturedDojoTier"
586 [-]: MOVE      R66 R62      ; R66 := R62
587 [-]: CONCAT    R65 R65 R66  ; R65 := R65 .. R66
588 [-]: CALL      R64 2 2      ; R64 := R64(R65)
589 [-]: SETTABLE  R63 K34 R64  ; R63["name"] := R64
590 [-]: GETUPVAL  R64 U11      ; R64 := U11
591 [-]: GETTABLE  R64 R64 K119 ; R64 := R64[14]
592 [-]: GETTABLE  R64 R64 K90  ; R64 := R64["pos"]
593 [-]: GETGLOBAL R65 K120     ; R65 := 0x4CBE9A09
594 [-]: GETGLOBAL R66 K91      ; R66 := 0x221C9700
595 [-]: LOADK     R67 K41      ; R67 := 0
596 [-]: LOADK     R68 K121     ; R68 := -0.15999999642372
597 [-]: LOADK     R69 K41      ; R69 := 0
598 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
599 [-]: GETGLOBAL R67 K122     ; R67 := 0x1E4F6281
600 [-]: LOADK     R68 K41      ; R68 := 0
601 [-]: LOADK     R69 K41      ; R69 := 0
602 [-]: LEN       R70 R58      ; R70 := # R58
603 [-]: SUB       R70 R70 K12  ; R70 := R70 - 1
604 [-]: DIV       R70 R70 K123 ; R70 := R70 / 2
605 [-]: SUB       R70 R70 R62  ; R70 := R70 - R62
606 [-]: ADD       R70 R70 K12  ; R70 := R70 + 1
607 [-]: MUL       R70 K124 R70 ; R70 := -30 * R70
608 [-]: CALL      R67 4 0      ; R67,... := R67(R68,R69,R70)
609 [-]: CALL      R65 0 2      ; R65 := R65(R66,...)
610 [-]: ADD       R64 R64 R65  ; R64 := R64 + R65
611 [-]: SETTABLE  R63 K90 R64  ; R63["pos"] := R64
612 [-]: GETUPVAL  R64 U9       ; R64 := U9
613 [-]: MOVE      R65 R63      ; R65 := R63
614 [-]: NEWTABLE  R66 0 3      ; R66 := {}
615 [-]: GETTABLE  R67 R58 R62  ; R67 := R58[R62]
616 [-]: GETTABLE  R67 R67 K126 ; R67 := R67["mId"]
617 [-]: GETTABLE  R67 R67 K126 ; R67 := R67["mId"]
618 [-]: SETTABLE  R66 K125 R67 ; R66["guildId"] := R67
619 [-]: GETTABLE  R67 R58 R62  ; R67 := R58[R62]
620 [-]: GETTABLE  R67 R67 K128 ; R67 := R67["mTier"]
621 [-]: SETTABLE  R66 K127 R67 ; R66["clanTier"] := R67
622 [-]: SETTABLE  R66 K129 K130; R66["overrideIconSize"] := 120
623 [-]: CALL      R64 3 1      ; R64(R65,R66)
624 [-]: FORLOOP   R59 563      ; R59 += R61; if R59 <= R60 then begin PC := 563; R62 := R59 end
625 [-]: GETUPVAL  R64 U15      ; R64 := U15
626 [-]: CALL      R64 1 1      ; R64()
627 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2820
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["NodeA"]
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["position"]
  3 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["NodeA"]
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["position"]
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["controlPointA"]
  6 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["position"]
  7 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["controlPointB"]
  8 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["position"]
  9 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["NodeB"]
 10 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["position"]
 11 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeB"]
 12 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["position"]
 13 [-]: NEWTABLE  R7 6 0       ; R7 := {}
 14 [-]: MOVE      R8 R1        ; R8 := R1
 15 [-]: MOVE      R9 R2        ; R9 := R2
 16 [-]: MOVE      R10 R3       ; R10 := R3
 17 [-]: MOVE      R11 R4       ; R11 := R4
 18 [-]: MOVE      R12 R5       ; R12 := R5
 19 [-]: MOVE      R13 R6       ; R13 := R6
 20 [-]: SETLIST   R7 6 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 6
 21 [-]: RETURN    R7 2         ; return R7
 22 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2830
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x221C9700
  2 [-]: CALL      R5 1 2       ; R5 := R5()
  3 [-]: GETGLOBAL R6 K1        ; R6 := 0x518098BD
  4 [-]: MOVE      R7 R5        ; R7 := R5
  5 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["position"]
  6 [-]: GETTABLE  R9 R1 K2     ; R9 := R1["position"]
  7 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
  8 [-]: GETGLOBAL R6 K3        ; R6 := 0x96BEA6B
  9 [-]: MOVE      R7 R5        ; R7 := R5
 10 [-]: GETTABLE  R8 R1 K2     ; R8 := R1["position"]
 11 [-]: MUL       R9 R5 R0     ; R9 := R5 * R0
 12 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 13 [-]: GETGLOBAL R6 K4        ; R6 := 0xEDD2EBFF
 14 [-]: MOVE      R7 R3        ; R7 := R3
 15 [-]: MOVE      R8 R5        ; R8 := R5
 16 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 17 [-]: SETTABLE  R5 K5 K6     ; R5["x"] := 0
 18 [-]: SETTABLE  R5 K7 K6     ; R5["y"] := 0
 19 [-]: SETTABLE  R5 K8 R4     ; R5["z"] := R4
 20 [-]: GETGLOBAL R7 K3        ; R7 := 0x96BEA6B
 21 [-]: MOVE      R8 R5        ; R8 := R5
 22 [-]: MOVE      R9 R3        ; R9 := R3
 23 [-]: GETGLOBAL R10 K9       ; R10 := 0x4CBE9A09
 24 [-]: MOVE      R11 R5       ; R11 := R5
 25 [-]: MOVE      R12 R6       ; R12 := R6
 26 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 27 [-]: CALL      R7 0 1       ; R7(R8,...)
 28 [-]: RETURN    R5 2         ; return R5
 29 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2842
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x1BF588C6
  2 [-]: LOADK     R3 K1        ; R3 := 0
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: LOADNIL   R2 R2        ; R2 := nil
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["position"]
  6 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["position"]
  7 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
  8 [-]: GETGLOBAL R4 K3        ; R4 := 0x458357BC
  9 [-]: MOVE      R5 R3        ; R5 := R3
 10 [-]: CALL      R4 2 1       ; R4(R5)
 11 [-]: LOADK     R4 K4        ; R4 := 10
 12 [-]: LOADNIL   R5 R5        ; R5 := nil
 13 [-]: LOADK     R6 K5        ; R6 := 1
 14 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["RelatedNodes"]
 15 [-]: LEN       R7 R7        ; R7 := # R7
 16 [-]: LOADK     R8 K5        ; R8 := 1
 17 [-]: FORPREP   R6 44        ; R6 -= R8; PC := 44
 18 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["RelatedNodes"]
 19 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 20 [-]: GETTABLE  R11 R1 K7    ; R11 := R1["name"]
 21 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 44
 22 [-]: JMP       44           ; PC := 44
 23 [-]: GETUPVAL  R11 U0       ; R11 := U0
 24 [-]: GETGLOBAL R12 K8       ; R12 := 0x9FAED6BC
 25 [-]: MOVE      R13 R10      ; R13 := R10
 26 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 27 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
 28 [-]: EQ        1 R11 K9     ; if R11 == nil then PC := 44
 29 [-]: JMP       44           ; PC := 44
 30 [-]: GETTABLE  R12 R0 K2    ; R12 := R0["position"]
 31 [-]: GETTABLE  R13 R11 K2   ; R13 := R11["position"]
 32 [-]: SUB       R5 R12 R13   ; R5 := R12 - R13
 33 [-]: GETGLOBAL R12 K3       ; R12 := 0x458357BC
 34 [-]: MOVE      R13 R5       ; R13 := R5
 35 [-]: CALL      R12 2 1      ; R12(R13)
 36 [-]: GETGLOBAL R12 K10      ; R12 := 0xDBA27FAF
 37 [-]: MOVE      R13 R3       ; R13 := R3
 38 [-]: MOVE      R14 R5       ; R14 := R5
 39 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 40 [-]: LT        0 R12 R4     ; if R12 >= R4 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: MOVE      R4 R12       ; R4 := R12
 43 [-]: MOVE      R2 R11       ; R2 := R11
 44 [-]: FORLOOP   R6 18        ; R6 += R8; if R6 <= R7 then begin PC := 18; R9 := R6 end
 45 [-]: EQ        1 R2 K9      ; if R2 == nil then PC := 64
 46 [-]: JMP       64           ; PC := 64
 47 [-]: GETTABLE  R13 R2 K2    ; R13 := R2["position"]
 48 [-]: GETTABLE  R14 R0 K11   ; R14 := R0["isShortcut"]
 49 [-]: TEST      R14 0        ; if not R14 then PC := 62
 50 [-]: JMP       62           ; PC := 62
 51 [-]: GETTABLE  R14 R2 K11   ; R14 := R2["isShortcut"]
 52 [-]: TEST      R14 0        ; if not R14 then PC := 62
 53 [-]: JMP       62           ; PC := 62
 54 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["position"]
 55 [-]: SUB       R14 R13 R14  ; R14 := R13 - R14
 56 [-]: GETGLOBAL R15 K3       ; R15 := 0x458357BC
 57 [-]: MOVE      R16 R14      ; R16 := R14
 58 [-]: CALL      R15 2 1      ; R15(R16)
 59 [-]: GETTABLE  R15 R0 K2    ; R15 := R0["position"]
 60 [-]: MUL       R16 R14 K12  ; R16 := R14 * 0.050000000745058
 61 [-]: ADD       R13 R15 R16  ; R13 := R15 + R16
 62 [-]: RETURN    R13 2        ; return R13
 63 [-]: JMP       66           ; PC := 66
 64 [-]: LOADNIL   R15 R15      ; R15 := nil
 65 [-]: RETURN    R15 2        ; return R15
 66 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 2879
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Instance"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 105
  5 [-]: JMP       105          ; PC := 105
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x221C9700
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["NodeA"]
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["isSurfaceNode"]
 10 [-]: TEST      R2 0         ; if not R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["NodeB"]
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["isSurfaceNode"]
 14 [-]: SETTABLE  R0 K3 R2     ; R0["IsSurfaceConnection"] := R2
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["NodeA"]
 17 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["radialSector"]
 18 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["region"]
 19 [-]: ADD       R3 R3 K9     ; R3 := R3 + 1
 20 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["NodeA"]
 23 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["radialSector"]
 24 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["region"]
 25 [-]: ADD       R4 R4 K9     ; R4 := R4 + 1
 26 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 27 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2["0x8EEB099D"]
 28 [-]: MOVE      R6 R1        ; R6 := R1
 29 [-]: CALL      R4 3 1       ; R4(R5,R6)
 30 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["IsSurfaceConnection"]
 31 [-]: TEST      R4 0         ; if not R4 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Instance"]
 34 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xDE40B40"]
 35 [-]: GETUPVAL  R6 U2        ; R6 := U2
 36 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["NodeA"]
 37 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["radialSector"]
 38 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["region"]
 39 [-]: ADD       R7 R7 K9     ; R7 := R7 + 1
 40 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 41 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["pos"]
 42 [-]: MOVE      R7 R3        ; R7 := R3
 43 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Instance"]
 46 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xDE40B40"]
 47 [-]: GETGLOBAL R6 K13       ; R6 := ZERO_VECTOR
 48 [-]: LOADK     R7 K14       ; R7 := 0
 49 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 50 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["NodeA"]
 51 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["isShortcut"]
 52 [-]: TEST      R4 0         ; if not R4 then PC := 66
 53 [-]: JMP       66           ; PC := 66
 54 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["NodeB"]
 55 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["isShortcut"]
 56 [-]: TEST      R4 0         ; if not R4 then PC := 66
 57 [-]: JMP       66           ; PC := 66
 58 [-]: GETUPVAL  R4 U3        ; R4 := U3
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 61 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Instance"]
 62 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x5BD03F6B"]
 63 [-]: MOVE      R7 R4        ; R7 := R4
 64 [-]: CALL      R5 3 1       ; R5(R6,R7)
 65 [-]: JMP       105          ; PC := 105
 66 [-]: GETUPVAL  R5 U4        ; R5 := U4
 67 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeA"]
 68 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeB"]
 69 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 70 [-]: EQ        0 R5 K17     ; if R5 ~= nil then PC := 80
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETUPVAL  R6 U5        ; R6 := U5
 73 [-]: LOADK     R7 K18       ; R7 := -1
 74 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["NodeA"]
 75 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["NodeB"]
 76 [-]: MOVE      R10 R1       ; R10 := R1
 77 [-]: MOVE      R11 R3       ; R11 := R3
 78 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
 79 [-]: MOVE      R5 R6        ; R5 := R6
 80 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeA"]
 81 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["position"]
 82 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeB"]
 83 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["position"]
 84 [-]: GETUPVAL  R8 U4        ; R8 := U4
 85 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["NodeB"]
 86 [-]: GETTABLE  R10 R0 K4    ; R10 := R0["NodeA"]
 87 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 88 [-]: EQ        0 R8 K17     ; if R8 ~= nil then PC := 98
 89 [-]: JMP       98           ; PC := 98
 90 [-]: GETUPVAL  R9 U5        ; R9 := U5
 91 [-]: LOADK     R10 K20      ; R10 := 2
 92 [-]: GETTABLE  R11 R0 K4    ; R11 := R0["NodeA"]
 93 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["NodeB"]
 94 [-]: MOVE      R13 R1       ; R13 := R1
 95 [-]: MOVE      R14 R3       ; R14 := R3
 96 [-]: CALL      R9 6 2       ; R9 := R9(R10,R11,R12,R13,R14)
 97 [-]: MOVE      R8 R9        ; R8 := R9
 98 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["Instance"]
 99 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9["0xE18C28D7"]
100 [-]: MOVE      R11 R5       ; R11 := R5
101 [-]: MOVE      R12 R6       ; R12 := R6
102 [-]: MOVE      R13 R7       ; R13 := R7
103 [-]: MOVE      R14 R8       ; R14 := R8
104 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
105 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2913
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x113DAAED"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETGLOBAL R5 K2        ; R5 := gBackgroundRegion
 10 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x9B0A3887"]
 11 [-]: GETTABLE  R7 R4 K4     ; R7 := R4["mInstance"]
 12 [-]: CALL      R5 3 1       ; R5(R6,R7)
 13 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
 14 [-]: JMP       9            ; PC := 9
 15 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: MOVE      R5 R3        ; R5 := R3
 19 [-]: LOADK     R5 K5        ; R5 := 0
 20 [-]: LOADK     R6 K5        ; R6 := 0
 21 [-]: LOADNIL   R7 R8        ; R7 := R8 := nil
 22 [-]: LOADK     R9 K6        ; R9 := 1
 23 [-]: GETUPVAL  R10 U0       ; R10 := U0
 24 [-]: LEN       R10 R10      ; R10 := # R10
 25 [-]: LOADK     R11 K6       ; R11 := 1
 26 [-]: FORPREP   R9 197       ; R9 -= R11; PC := 197
 27 [-]: GETUPVAL  R13 U4       ; R13 := U4
 28 [-]: GETGLOBAL R14 K7       ; R14 := 0x9FAED6BC
 29 [-]: GETUPVAL  R15 U0       ; R15 := U0
 30 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 31 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["locationA"]
 32 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 33 [-]: GETTABLE  R7 R13 R14   ; R7 := R13[R14]
 34 [-]: GETUPVAL  R13 U4       ; R13 := U4
 35 [-]: GETGLOBAL R14 K7       ; R14 := 0x9FAED6BC
 36 [-]: GETUPVAL  R15 U0       ; R15 := U0
 37 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 38 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["locationB"]
 39 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 40 [-]: GETTABLE  R8 R13 R14   ; R8 := R13[R14]
 41 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
 42 [-]: MOVE      R14 R7       ; R14 := R7
 43 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 44 [-]: TEST      R13 1        ; if R13 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
 47 [-]: MOVE      R14 R8       ; R14 := R8
 48 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 49 [-]: TEST      R13 1        ; if R13 then PC := 197
 50 [-]: JMP       197          ; PC := 197
 51 [-]: GETTABLE  R14 R7 K11   ; R14 := R7["locationEnabled"]
 52 [-]: TEST      R14 0        ; if not R14 then PC := 182
 53 [-]: JMP       182          ; PC := 182
 54 [-]: GETTABLE  R14 R8 K11   ; R14 := R8["locationEnabled"]
 55 [-]: TEST      R14 0        ; if not R14 then PC := 182
 56 [-]: JMP       182          ; PC := 182
 57 [-]: ADD       R5 R5 K6     ; R5 := R5 + 1
 58 [-]: GETUPVAL  R14 U5       ; R14 := U5
 59 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["Sectors"]
 60 [-]: GETGLOBAL R15 K7       ; R15 := 0x9FAED6BC
 61 [-]: GETTABLE  R16 R7 K13   ; R16 := R7["name"]
 62 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 63 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 64 [-]: EQ        0 R14 K14    ; if R14 ~= nil then PC := 74
 65 [-]: JMP       74           ; PC := 74
 66 [-]: GETUPVAL  R14 U5       ; R14 := U5
 67 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["Sectors"]
 68 [-]: GETGLOBAL R15 K7       ; R15 := 0x9FAED6BC
 69 [-]: GETTABLE  R16 R8 K13   ; R16 := R8["name"]
 70 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 71 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 72 [-]: EQ        1 R14 K14    ; if R14 == nil then PC := 77
 73 [-]: JMP       77           ; PC := 77
 74 [-]: ADD       R6 R6 K6     ; R6 := R6 + 1
 75 [-]: GETUPVAL  R14 U3       ; R14 := U3
 76 [-]: SETTABLE  R14 R6 R5    ; R14[R6] := R5
 77 [-]: GETUPVAL  R14 U2       ; R14 := U2
 78 [-]: NEWTABLE  R15 0 4      ; R15 := {}
 79 [-]: SETTABLE  R15 K15 R7   ; R15["NodeA"] := R7
 80 [-]: SETTABLE  R15 K16 R8   ; R15["NodeB"] := R8
 81 [-]: GETTABLE  R16 R7 K18   ; R16 := R7["isShortcut"]
 82 [-]: TEST      R16 0        ; if not R16 then PC := 85
 83 [-]: JMP       85           ; PC := 85
 84 [-]: GETTABLE  R16 R8 K18   ; R16 := R8["isShortcut"]
 85 [-]: SETTABLE  R15 K17 R16  ; R15["IsShortcut"] := R16
 86 [-]: GETTABLE  R16 R7 K20   ; R16 := R7["isJunction"]
 87 [-]: TEST      R16 0        ; if not R16 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETTABLE  R16 R8 K18   ; R16 := R8["isShortcut"]
 90 [-]: TEST      R16 1        ; if R16 then PC := 96
 91 [-]: JMP       96           ; PC := 96
 92 [-]: GETTABLE  R16 R7 K18   ; R16 := R7["isShortcut"]
 93 [-]: TEST      R16 0        ; if not R16 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: GETTABLE  R16 R8 K20   ; R16 := R8["isJunction"]
 96 [-]: SETTABLE  R15 K19 R16  ; R15["IsJunction"] := R16
 97 [-]: SETTABLE  R14 R5 R15   ; R14[R5] := R15
 98 [-]: GETTABLE  R14 R7 K21   ; R14 := R7["RelatedNodes"]
 99 [-]: EQ        0 R14 K14    ; if R14 ~= nil then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: NEWTABLE  R14 0 0      ; R14 := {}
102 [-]: SETTABLE  R7 K21 R14   ; R7["RelatedNodes"] := R14
103 [-]: GETTABLE  R14 R8 K21   ; R14 := R8["RelatedNodes"]
104 [-]: EQ        0 R14 K14    ; if R14 ~= nil then PC := 108
105 [-]: JMP       108          ; PC := 108
106 [-]: NEWTABLE  R14 0 0      ; R14 := {}
107 [-]: SETTABLE  R8 K21 R14   ; R8["RelatedNodes"] := R14
108 [-]: GETGLOBAL R14 K22      ; R14 := table
109 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0xE6450C9D"]
110 [-]: GETTABLE  R15 R7 K21   ; R15 := R7["RelatedNodes"]
111 [-]: GETTABLE  R16 R8 K13   ; R16 := R8["name"]
112 [-]: CALL      R14 3 1      ; R14(R15,R16)
113 [-]: GETGLOBAL R14 K22      ; R14 := table
114 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0xE6450C9D"]
115 [-]: GETTABLE  R15 R8 K21   ; R15 := R8["RelatedNodes"]
116 [-]: GETTABLE  R16 R7 K13   ; R16 := R7["name"]
117 [-]: CALL      R14 3 1      ; R14(R15,R16)
118 [-]: GETUPVAL  R14 U2       ; R14 := U2
119 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
120 [-]: GETTABLE  R14 R14 K17  ; R14 := R14["IsShortcut"]
121 [-]: TEST      R14 0        ; if not R14 then PC := 197
122 [-]: JMP       197          ; PC := 197
123 [-]: GETTABLE  R14 R8 K25   ; R14 := R8["radialSector"]
124 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["region"]
125 [-]: SETTABLE  R7 K24 R14   ; R7["targetRegion"] := R14
126 [-]: GETTABLE  R14 R7 K25   ; R14 := R7["radialSector"]
127 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["region"]
128 [-]: SETTABLE  R8 K24 R14   ; R8["targetRegion"] := R14
129 [-]: GETUPVAL  R14 U2       ; R14 := U2
130 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
131 [-]: NEWTABLE  R15 0 1      ; R15 := {}
132 [-]: GETUPVAL  R16 U0       ; R16 := U0
133 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
134 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["controlPointA"]
135 [-]: SETTABLE  R15 K28 R16  ; R15["position"] := R16
136 [-]: SETTABLE  R14 K27 R15  ; R14["controlPointA"] := R15
137 [-]: GETGLOBAL R14 K29      ; R14 := 0x218C5C62
138 [-]: GETUPVAL  R15 U2       ; R15 := U2
139 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
140 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["controlPointA"]
141 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["position"]
142 [-]: CALL      R14 2 2      ; R14 := R14(R15)
143 [-]: LT        0 R14 K30    ; if R14 >= 0.0099999997764826 then PC := 155
144 [-]: JMP       155          ; PC := 155
145 [-]: GETUPVAL  R14 U2       ; R14 := U2
146 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
147 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["controlPointA"]
148 [-]: GETTABLE  R15 R7 K28   ; R15 := R7["position"]
149 [-]: GETTABLE  R16 R8 K28   ; R16 := R8["position"]
150 [-]: GETTABLE  R17 R7 K28   ; R17 := R7["position"]
151 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
152 [-]: MUL       R16 R16 K31  ; R16 := R16 * 0.30000001192093
153 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
154 [-]: SETTABLE  R14 K28 R15  ; R14["position"] := R15
155 [-]: GETUPVAL  R14 U2       ; R14 := U2
156 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
157 [-]: NEWTABLE  R15 0 1      ; R15 := {}
158 [-]: GETUPVAL  R16 U0       ; R16 := U0
159 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
160 [-]: GETTABLE  R16 R16 K32  ; R16 := R16["controlPointB"]
161 [-]: SETTABLE  R15 K28 R16  ; R15["position"] := R16
162 [-]: SETTABLE  R14 K32 R15  ; R14["controlPointB"] := R15
163 [-]: GETGLOBAL R14 K29      ; R14 := 0x218C5C62
164 [-]: GETUPVAL  R15 U2       ; R15 := U2
165 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
166 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["controlPointB"]
167 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["position"]
168 [-]: CALL      R14 2 2      ; R14 := R14(R15)
169 [-]: LT        0 R14 K30    ; if R14 >= 0.0099999997764826 then PC := 197
170 [-]: JMP       197          ; PC := 197
171 [-]: GETUPVAL  R14 U2       ; R14 := U2
172 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
173 [-]: GETTABLE  R14 R14 K32  ; R14 := R14["controlPointB"]
174 [-]: GETTABLE  R15 R7 K28   ; R15 := R7["position"]
175 [-]: GETTABLE  R16 R8 K28   ; R16 := R8["position"]
176 [-]: GETTABLE  R17 R7 K28   ; R17 := R7["position"]
177 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
178 [-]: MUL       R16 R16 K33  ; R16 := R16 * 0.69999998807907
179 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
180 [-]: SETTABLE  R14 K28 R15  ; R14["position"] := R15
181 [-]: JMP       197          ; PC := 197
182 [-]: GETGLOBAL R14 K34      ; R14 := 0x93B1256B
183 [-]: LOADK     R15 K35      ; R15 := "ERROR: Invalid nodes in edge "
184 [-]: GETGLOBAL R16 K7       ; R16 := 0x9FAED6BC
185 [-]: GETUPVAL  R17 U0       ; R17 := U0
186 [-]: GETTABLE  R17 R17 R12  ; R17 := R17[R12]
187 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["locationA"]
188 [-]: CALL      R16 2 2      ; R16 := R16(R17)
189 [-]: LOADK     R17 K36      ; R17 := " to "
190 [-]: GETGLOBAL R18 K7       ; R18 := 0x9FAED6BC
191 [-]: GETUPVAL  R19 U0       ; R19 := U0
192 [-]: GETTABLE  R19 R19 R12  ; R19 := R19[R12]
193 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["locationB"]
194 [-]: CALL      R18 2 2      ; R18 := R18(R19)
195 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
196 [-]: CALL      R14 2 1      ; R14(R15)
197 [-]: FORLOOP   R9 27        ; R9 += R11; if R9 <= R10 then begin PC := 27; R12 := R9 end
198 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 2988
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Active"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: LOADNIL   R0 R1        ; R0 := R1 := nil
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: LOADK     R3 K3        ; R3 := 1
 13 [-]: GETUPVAL  R4 U1        ; R4 := U1
 14 [-]: LEN       R4 R4        ; R4 := # R4
 15 [-]: LOADK     R5 K3        ; R5 := 1
 16 [-]: FORPREP   R3 112       ; R3 -= R5; PC := 112
 17 [-]: GETGLOBAL R7 K4        ; R7 := 0x1BF588C6
 18 [-]: LOADK     R8 K5        ; R8 := 0
 19 [-]: CALL      R7 2 1       ; R7(R8)
 20 [-]: GETUPVAL  R7 U1        ; R7 := U1
 21 [-]: GETTABLE  R0 R7 R6     ; R0 := R7[R6]
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 24 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["isShortcut"]
 25 [-]: TEST      R7 0         ; if not R7 then PC := 44
 26 [-]: JMP       44           ; PC := 44
 27 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 28 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["isShortcut"]
 29 [-]: TEST      R7 0         ; if not R7 then PC := 44
 30 [-]: JMP       44           ; PC := 44
 31 [-]: MOVE      R2 R1        ; R2 := R1
 32 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 33 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 34 [-]: TEST      R7 0         ; if not R7 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 37 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 38 [-]: TEST      R7 0         ; if not R7 then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: GETGLOBAL R1 K10       ; R1 := splineShortcutType
 41 [-]: JMP       82           ; PC := 82
 42 [-]: GETGLOBAL R1 K11       ; R1 := splineDisabledShortcutType
 43 [-]: JMP       82           ; PC := 82
 44 [-]: GETGLOBAL R1 K12       ; R1 := splineNextConnectionType
 45 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 46 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["edgesLocked"]
 47 [-]: TEST      R7 1         ; if R7 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 50 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["edgesLocked"]
 51 [-]: TEST      R7 0         ; if not R7 then PC := 55
 52 [-]: JMP       55           ; PC := 55
 53 [-]: GETGLOBAL R1 K14       ; R1 := splineDisabledConnectionType
 54 [-]: JMP       82           ; PC := 82
 55 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 56 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 57 [-]: TEST      R7 0         ; if not R7 then PC := 65
 58 [-]: JMP       65           ; PC := 65
 59 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 60 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 61 [-]: TEST      R7 0         ; if not R7 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: GETGLOBAL R1 K15       ; R1 := splineConnectionType
 64 [-]: JMP       82           ; PC := 82
 65 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 66 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["locked"]
 67 [-]: TEST      R7 1         ; if R7 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeA"]
 70 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 71 [-]: TEST      R7 1         ; if R7 then PC := 82
 72 [-]: JMP       82           ; PC := 82
 73 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 74 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["locked"]
 75 [-]: TEST      R7 1         ; if R7 then PC := 81
 76 [-]: JMP       81           ; PC := 81
 77 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["NodeB"]
 78 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["completed"]
 79 [-]: TEST      R7 1         ; if R7 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: GETGLOBAL R1 K14       ; R1 := splineDisabledConnectionType
 82 [-]: GETGLOBAL R7 K17       ; R7 := 0x400E7765
 83 [-]: GETTABLE  R8 R0 K18    ; R8 := R0["Instance"]
 84 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 85 [-]: TEST      R7 1         ; if R7 then PC := 91
 86 [-]: JMP       91           ; PC := 91
 87 [-]: GETGLOBAL R7 K19       ; R7 := gBackgroundRegion
 88 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7["0x9B0A3887"]
 89 [-]: GETTABLE  R9 R0 K18    ; R9 := R0["Instance"]
 90 [-]: CALL      R7 3 1       ; R7(R8,R9)
 91 [-]: GETGLOBAL R7 K19       ; R7 := gBackgroundRegion
 92 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0xBDD34CC6"]
 93 [-]: MOVE      R9 R1        ; R9 := R1
 94 [-]: GETGLOBAL R10 K22      ; R10 := ZERO_VECTOR
 95 [-]: GETGLOBAL R11 K23      ; R11 := ZERO_ROTATION
 96 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 97 [-]: SETTABLE  R0 K18 R7    ; R0["Instance"] := R7
 98 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["Instance"]
 99 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0xD63FF2C2"]
100 [-]: GETUPVAL  R9 U2        ; R9 := U2
101 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["0xF81722A2"]
102 [-]: GETTABLE  R10 R0 K26   ; R10 := R0["IsShortcut"]
103 [-]: GETUPVAL  R11 U3       ; R11 := U3
104 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["SHORTCUT_CULL_DISTANCE"]
105 [-]: GETUPVAL  R12 U3       ; R12 := U3
106 [-]: GETTABLE  R12 R12 K28  ; R12 := R12["LINE_CULL_DISTANCE"]
107 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
108 [-]: CALL      R7 0 1       ; R7(R8,...)
109 [-]: GETUPVAL  R7 U4        ; R7 := U4
110 [-]: MOVE      R8 R0        ; R8 := R0
111 [-]: CALL      R7 2 1       ; R7(R8)
112 [-]: FORLOOP   R3 17        ; R3 += R5; if R3 <= R4 then begin PC := 17; R6 := R3 end
113 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 3030
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R0 K2        ; R0 := gPlayerProfileMgr
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  8 [-]: LOADK     R2 K4        ; R2 := 0
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 139
 14 [-]: JMP       139          ; PC := 139
 15 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0["0x654F1092"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 139
 21 [-]: JMP       139          ; PC := 139
 22 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x2D0B8A86"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mVoidTraders"]
 25 [-]: EQ        1 R3 K9      ; if R3 == nil then PC := 139
 26 [-]: JMP       139          ; PC := 139
 27 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mVoidTraders"]
 28 [-]: LEN       R3 R3        ; R3 := # R3
 29 [-]: LT        0 K4 R3      ; if 0 >= R3 then PC := 139
 30 [-]: JMP       139          ; PC := 139
 31 [-]: LOADK     R3 K10       ; R3 := 86400
 32 [-]: GETTABLE  R4 R2 K8     ; R4 := R2["mVoidTraders"]
 33 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[1]
 34 [-]: GETUPVAL  R5 U0        ; R5 := U0
 35 [-]: GETGLOBAL R6 K13       ; R6 := Engine
 36 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["0xD09D7910"]
 37 [-]: GETTABLE  R7 R4 K15    ; R7 := R4["mActivation"]
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: SETTABLE  R5 K12 R6    ; R5["Time"] := R6
 40 [-]: GETUPVAL  R5 U0        ; R5 := U0
 41 [-]: GETTABLE  R6 R4 K17    ; R6 := R4["mExpiry"]
 42 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["sec"]
 43 [-]: SETTABLE  R5 K16 R6    ; R5["Expiry"] := R6
 44 [-]: GETUPVAL  R5 U0        ; R5 := U0
 45 [-]: GETGLOBAL R6 K20       ; R6 := 0xEC274B1A
 46 [-]: GETTABLE  R7 R4 K21    ; R7 := R4["mNode"]
 47 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 48 [-]: SETTABLE  R5 K19 R6    ; R5["Location"] := R6
 49 [-]: GETUPVAL  R5 U0        ; R5 := U0
 50 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Time"]
 51 [-]: LE        0 R5 K4      ; if R5 > 0 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETUPVAL  R5 U0        ; R5 := U0
 54 [-]: SETTABLE  R5 K22 K11   ; R5["Progress"] := 1
 55 [-]: GETUPVAL  R5 U0        ; R5 := U0
 56 [-]: SETTABLE  R5 K23 K24   ; R5["Active"] := "0x1"
 57 [-]: JMP       70           ; PC := 70
 58 [-]: GETUPVAL  R5 U0        ; R5 := U0
 59 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Time"]
 60 [-]: LE        0 R5 R3      ; if R5 > R3 then PC := 70
 61 [-]: JMP       70           ; PC := 70
 62 [-]: GETUPVAL  R5 U0        ; R5 := U0
 63 [-]: GETUPVAL  R6 U0        ; R6 := U0
 64 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Time"]
 65 [-]: DIV       R6 R6 R3     ; R6 := R6 / R3
 66 [-]: SUB       R6 K11 R6    ; R6 := 1 - R6
 67 [-]: SETTABLE  R5 K22 R6    ; R5["Progress"] := R6
 68 [-]: GETUPVAL  R5 U0        ; R5 := U0
 69 [-]: SETTABLE  R5 K23 K24   ; R5["Active"] := "0x1"
 70 [-]: GETUPVAL  R5 U0        ; R5 := U0
 71 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Active"]
 72 [-]: TEST      R5 0         ; if not R5 then PC := 139
 73 [-]: JMP       139          ; PC := 139
 74 [-]: LOADNIL   R5 R5        ; R5 := nil
 75 [-]: MOVE      R6 R0        ; R6 := R0
 76 [-]: LOADK     R7 K11       ; R7 := 1
 77 [-]: GETUPVAL  R8 U1        ; R8 := U1
 78 [-]: LEN       R8 R8        ; R8 := # R8
 79 [-]: LOADK     R9 K11       ; R9 := 1
 80 [-]: FORPREP   R7 110       ; R7 -= R9; PC := 110
 81 [-]: GETUPVAL  R11 U1       ; R11 := U1
 82 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 83 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["NodeA"]
 84 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
 85 [-]: GETUPVAL  R12 U0       ; R12 := U0
 86 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
 87 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 97
 88 [-]: JMP       97           ; PC := 97
 89 [-]: GETUPVAL  R11 U1       ; R11 := U1
 90 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 91 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["NodeB"]
 92 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
 93 [-]: GETUPVAL  R12 U0       ; R12 := U0
 94 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
 95 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 110
 96 [-]: JMP       110          ; PC := 110
 97 [-]: GETUPVAL  R11 U1       ; R11 := U1
 98 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 99 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["NodeA"]
100 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
101 [-]: GETUPVAL  R12 U0       ; R12 := U0
102 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
103 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: MOVE      R6 R0        ; R6 := R0
106 [-]: MOVE      R6 R1        ; R6 := R1
107 [-]: GETUPVAL  R11 U1       ; R11 := U1
108 [-]: GETTABLE  R5 R11 R10   ; R5 := R11[R10]
109 [-]: JMP       111          ; PC := 111
110 [-]: FORLOOP   R7 81        ; R7 += R9; if R7 <= R8 then begin PC := 81; R10 := R7 end
111 [-]: GETGLOBAL R11 K5       ; R11 := 0x400E7765
112 [-]: MOVE      R12 R5       ; R12 := R5
113 [-]: CALL      R11 2 2      ; R11 := R11(R12)
114 [-]: TEST      R11 1        ; if R11 then PC := 137
115 [-]: JMP       137          ; PC := 137
116 [-]: GETUPVAL  R11 U2       ; R11 := U2
117 [-]: GETGLOBAL R12 K28      ; R12 := 0x9FAED6BC
118 [-]: GETUPVAL  R13 U0       ; R13 := U0
119 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["Location"]
120 [-]: CALL      R12 2 2      ; R12 := R12(R13)
121 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
122 [-]: GETUPVAL  R12 U0       ; R12 := U0
123 [-]: GETTABLE  R13 R5 K30   ; R13 := R5["Instance"]
124 [-]: SELF      R13 R13 K31  ; R14 := R13; R13 := R13["0xAC71FD5A"]
125 [-]: GETUPVAL  R15 U3       ; R15 := U3
126 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["0xF81722A2"]
127 [-]: MOVE      R16 R6       ; R16 := R6
128 [-]: GETUPVAL  R17 U0       ; R17 := U0
129 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["Progress"]
130 [-]: GETUPVAL  R18 U0       ; R18 := U0
131 [-]: GETTABLE  R18 R18 K22  ; R18 := R18["Progress"]
132 [-]: SUB       R18 K11 R18  ; R18 := 1 - R18
133 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
134 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
135 [-]: SETTABLE  R12 K29 R13  ; R12["Position"] := R13
136 [-]: JMP       139          ; PC := 139
137 [-]: GETUPVAL  R12 U0       ; R12 := U0
138 [-]: SETTABLE  R12 K23 K33  ; R12["Active"] := "0x0"
139 [-]: GETGLOBAL R12 K34      ; R12 := mMovie
140 [-]: SELF      R12 R12 K35  ; R13 := R12; R12 := R12["0x1C19D966"]
141 [-]: LOADK     R14 K36      ; R14 := "VoidTrader"
142 [-]: LOADK     R15 K37      ; R15 := "_visible"
143 [-]: GETUPVAL  R16 U0       ; R16 := U0
144 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Active"]
145 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
146 [-]: GETUPVAL  R12 U0       ; R12 := U0
147 [-]: GETTABLE  R12 R12 K23  ; R12 := R12["Active"]
148 [-]: TEST      R12 0        ; if not R12 then PC := 155
149 [-]: JMP       155          ; PC := 155
150 [-]: GETGLOBAL R12 K34      ; R12 := mMovie
151 [-]: SELF      R12 R12 K38  ; R13 := R12; R12 := R12["0x26581636"]
152 [-]: LOADK     R14 K39      ; R14 := "VoidTrader.Image"
153 [-]: GETGLOBAL R15 K40      ; R15 := voidTraderIcon
154 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
155 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 3082
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xF81722A2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := Engine
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x9490FE70"]
  5 [-]: CALL      R1 1 2       ; R1 := R1()
  6 [-]: TEST      R1 1         ; if R1 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Active"]
 10 [-]: LOADK     R2 K4        ; R2 := 48
 11 [-]: LOADK     R3 K5        ; R3 := 18
 12 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF81722A2"]
 15 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x9490FE70"]
 17 [-]: CALL      R2 1 2       ; R2 := R2()
 18 [-]: TEST      R2 1         ; if R2 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETUPVAL  R2 U1        ; R2 := U1
 21 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Active"]
 22 [-]: LOADK     R3 K6        ; R3 := 64
 23 [-]: LOADK     R4 K7        ; R4 := 32
 24 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 25 [-]: LOADK     R2 K8        ; R2 := 1
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: LEN       R3 R3        ; R3 := # R3
 28 [-]: LOADK     R4 K8        ; R4 := 1
 29 [-]: FORPREP   R2 57        ; R2 -= R4; PC := 57
 30 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 31 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x880196A7"]
 32 [-]: GETUPVAL  R8 U2        ; R8 := U2
 33 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 34 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["clipName"]
 35 [-]: LOADK     R9 K12       ; R9 := "Btn"
 36 [-]: LOADK     R10 K13      ; R10 := "_width"
 37 [-]: MOVE      R11 R1       ; R11 := R1
 38 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 39 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 40 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x880196A7"]
 41 [-]: GETUPVAL  R8 U2        ; R8 := U2
 42 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 43 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["clipName"]
 44 [-]: LOADK     R9 K12       ; R9 := "Btn"
 45 [-]: LOADK     R10 K14      ; R10 := "_height"
 46 [-]: MOVE      R11 R1       ; R11 := R1
 47 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 48 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 49 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x880196A7"]
 50 [-]: GETUPVAL  R8 U2        ; R8 := U2
 51 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 52 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["clipName"]
 53 [-]: LOADK     R9 K15       ; R9 := "Name.Bg"
 54 [-]: LOADK     R10 K14      ; R10 := "_height"
 55 [-]: MOVE      R11 R0       ; R11 := R0
 56 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 57 [-]: FORLOOP   R2 30        ; R2 += R4; if R2 <= R3 then begin PC := 30; R5 := R2 end
 58 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 3092
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["CachedConstructionProjects"]
  5 [-]: LOADK     R1 K2        ; R1 := 1
  6 [-]: LEN       R2 R0        ; R2 := # R0
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: FORPREP   R1 16        ; R1 -= R3; PC := 16
  9 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 10 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["info"]
 11 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mNode"]
 12 [-]: GETUPVAL  R7 U0        ; R7 := U0
 13 [-]: SELF      R8 R6 K5     ; R9 := R6; R8 := R6["0x5EC7A3D2"]
 14 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 15 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
 16 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 17 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 3102
; #Upvalues:       20
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xDB33ECB2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := 0
  5 [-]: LOADK     R3 K3        ; R3 := 0.20000000298023
  6 [-]: LOADK     R4 K3        ; R4 := 0.20000000298023
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K4        ; R0 := gBackgroundRegion
  9 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x9139A00"]
 10 [-]: GETGLOBAL R2 K6        ; R2 := gCameraSpotType
 11 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R2 R0 K8     ; R2 := R0[1]
 14 [-]: SETTABLE  R1 K7 R2     ; R1["cameraSpot"] := R2
 15 [-]: GETGLOBAL R1 K9        ; R1 := _G
 16 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["StalkerMode"]
 17 [-]: TEST      R1 1         ; if R1 then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["Transitioned"]
 21 [-]: TEST      R1 1         ; if R1 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0x25992394"]
 25 [-]: GETGLOBAL R2 K13       ; R2 := mapLoadedSound
 26 [-]: CALL      R1 2 1       ; R1(R2)
 27 [-]: GETGLOBAL R1 K14       ; R1 := 0x221C9700
 28 [-]: LOADK     R2 K2        ; R2 := 0
 29 [-]: LOADK     R3 K2        ; R3 := 0
 30 [-]: LOADK     R4 K8        ; R4 := 1
 31 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 32 [-]: GETUPVAL  R2 U1        ; R2 := U1
 33 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["cameraSpot"]
 34 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0xEC183DDC"]
 35 [-]: MUL       R4 R1 K16    ; R4 := R1 * -5
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: GETUPVAL  R2 U1        ; R2 := U1
 38 [-]: GETUPVAL  R3 U1        ; R3 := U1
 39 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["cameraSpot"]
 40 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x6DA72501"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: SETTABLE  R2 K17 R3    ; R2["originPos"] := R3
 43 [-]: GETUPVAL  R2 U1        ; R2 := U1
 44 [-]: GETUPVAL  R3 U1        ; R3 := U1
 45 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["cameraSpot"]
 46 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0xF23A7849"]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: SETTABLE  R2 K19 R3    ; R2["origRotation"] := R3
 49 [-]: GETUPVAL  R2 U1        ; R2 := U1
 50 [-]: GETGLOBAL R3 K22       ; R3 := 0xA0DB3B89
 51 [-]: GETUPVAL  R4 U1        ; R4 := U1
 52 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["cameraSpot"]
 53 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0xF23A7849"]
 54 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 55 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 56 [-]: SETTABLE  R2 K21 R3    ; R2["origFacing"] := R3
 57 [-]: GETUPVAL  R2 U1        ; R2 := U1
 58 [-]: GETGLOBAL R3 K14       ; R3 := 0x221C9700
 59 [-]: GETUPVAL  R4 U1        ; R4 := U1
 60 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["originPos"]
 61 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["x"]
 62 [-]: GETUPVAL  R5 U1        ; R5 := U1
 63 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["originPos"]
 64 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["y"]
 65 [-]: GETUPVAL  R6 U1        ; R6 := U1
 66 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["originPos"]
 67 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["z"]
 68 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 69 [-]: SETTABLE  R2 K23 R3    ; R2["pos"] := R3
 70 [-]: GETUPVAL  R2 U1        ; R2 := U1
 71 [-]: GETGLOBAL R3 K28       ; R3 := 0x1E4F6281
 72 [-]: GETUPVAL  R4 U1        ; R4 := U1
 73 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["origRotation"]
 74 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["heading"]
 75 [-]: GETUPVAL  R5 U1        ; R5 := U1
 76 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["origRotation"]
 77 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["pitch"]
 78 [-]: GETUPVAL  R6 U1        ; R6 := U1
 79 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["origRotation"]
 80 [-]: GETTABLE  R6 R6 K31    ; R6 := R6["bank"]
 81 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 82 [-]: SETTABLE  R2 K27 R3    ; R2["rotation"] := R3
 83 [-]: GETUPVAL  R2 U1        ; R2 := U1
 84 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 85 [-]: SETTABLE  R2 K32 R3    ; R2["sky"] := R3
 86 [-]: GETUPVAL  R2 U1        ; R2 := U1
 87 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["sky"]
 88 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
 89 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x9139A00"]
 90 [-]: GETGLOBAL R5 K34       ; R5 := gZoneAttribsType
 91 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 92 [-]: GETTABLE  R3 R3 K8     ; R3 := R3[1]
 93 [-]: SETTABLE  R2 K33 R3    ; R2["Zone"] := R3
 94 [-]: GETUPVAL  R2 U1        ; R2 := U1
 95 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["sky"]
 96 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
 97 [-]: SELF      R3 R3 K36    ; R4 := R3; R3 := R3["0x90391273"]
 98 [-]: GETUPVAL  R5 U3        ; R5 := U3
 99 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["SKY_CUBE"]
100 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
101 [-]: SETTABLE  R2 K35 R3    ; R2["Cube"] := R3
102 [-]: GETUPVAL  R2 U1        ; R2 := U1
103 [-]: GETUPVAL  R3 U1        ; R3 := U1
104 [-]: GETTABLE  R3 R3 K32    ; R3 := R3["sky"]
105 [-]: GETTABLE  R3 R3 K33    ; R3 := R3["Zone"]
106 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x6DA72501"]
107 [-]: CALL      R3 2 2       ; R3 := R3(R4)
108 [-]: SETTABLE  R2 K38 R3    ; R2["skyOrigin"] := R3
109 [-]: GETUPVAL  R2 U1        ; R2 := U1
110 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["cameraSpot"]
111 [-]: SELF      R2 R2 K39    ; R3 := R2; R2 := R2["0xAF85565F"]
112 [-]: LOADK     R4 K8        ; R4 := 1
113 [-]: LOADK     R5 K2        ; R5 := 0
114 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
115 [-]: GETGLOBAL R2 K9        ; R2 := _G
116 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["StalkerMode"]
117 [-]: TEST      R2 0         ; if not R2 then PC := 192
118 [-]: JMP       192          ; PC := 192
119 [-]: GETGLOBAL R2 K40       ; R2 := 0xB5A59043
120 [-]: LOADK     R3 K41       ; R3 := 60
121 [-]: LOADK     R4 K2        ; R4 := 0
122 [-]: LOADK     R5 K2        ; R5 := 0
123 [-]: LOADK     R6 K2        ; R6 := 0
124 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
125 [-]: GETGLOBAL R3 K42       ; R3 := 0x400E7765
126 [-]: GETUPVAL  R4 U1        ; R4 := U1
127 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["sky"]
128 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["Cube"]
129 [-]: CALL      R3 2 2       ; R3 := R3(R4)
130 [-]: TEST      R3 1         ; if R3 then PC := 146
131 [-]: JMP       146          ; PC := 146
132 [-]: GETUPVAL  R3 U1        ; R3 := U1
133 [-]: GETTABLE  R3 R3 K32    ; R3 := R3["sky"]
134 [-]: GETTABLE  R3 R3 K35    ; R3 := R3["Cube"]
135 [-]: SELF      R3 R3 K43    ; R4 := R3; R3 := R3["0xD124E361"]
136 [-]: GETGLOBAL R5 K44       ; R5 := Lotus_Game
137 [-]: GETTABLE  R5 R5 K45    ; R5 := R5["TINT_COLOR"]
138 [-]: GETTABLE  R6 R2 K46    ; R6 := R2["red"]
139 [-]: DIV       R6 R6 K47    ; R6 := R6 / 255
140 [-]: GETTABLE  R7 R2 K48    ; R7 := R2["green"]
141 [-]: DIV       R7 R7 K47    ; R7 := R7 / 255
142 [-]: GETTABLE  R8 R2 K49    ; R8 := R2["blue"]
143 [-]: DIV       R8 R8 K47    ; R8 := R8 / 255
144 [-]: LOADK     R9 K8        ; R9 := 1
145 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
146 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
147 [-]: SELF      R3 R3 K50    ; R4 := R3; R3 := R3["0xA76F0612"]
148 [-]: GETGLOBAL R5 K51       ; R5 := 0xEC274B1A
149 [-]: LOADK     R6 K52       ; R6 := "Cloud"
150 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
151 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
152 [-]: GETGLOBAL R4 K53       ; R4 := 0xECFDD17
153 [-]: MOVE      R5 R3        ; R5 := R3
154 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
155 [-]: JMP       167          ; PC := 167
156 [-]: SELF      R9 R8 K43    ; R10 := R8; R9 := R8["0xD124E361"]
157 [-]: GETGLOBAL R11 K44      ; R11 := Lotus_Game
158 [-]: GETTABLE  R11 R11 K45  ; R11 := R11["TINT_COLOR"]
159 [-]: GETTABLE  R12 R2 K46   ; R12 := R2["red"]
160 [-]: DIV       R12 R12 K47  ; R12 := R12 / 255
161 [-]: GETTABLE  R13 R2 K48   ; R13 := R2["green"]
162 [-]: DIV       R13 R13 K47  ; R13 := R13 / 255
163 [-]: GETTABLE  R14 R2 K49   ; R14 := R2["blue"]
164 [-]: DIV       R14 R14 K47  ; R14 := R14 / 255
165 [-]: LOADK     R15 K8       ; R15 := 1
166 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
167 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 156; R6 := R7 end
168 [-]: JMP       156          ; PC := 156
169 [-]: GETGLOBAL R9 K4        ; R9 := gBackgroundRegion
170 [-]: SELF      R9 R9 K50    ; R10 := R9; R9 := R9["0xA76F0612"]
171 [-]: GETGLOBAL R11 K51      ; R11 := 0xEC274B1A
172 [-]: LOADK     R12 K54      ; R12 := "Water"
173 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
174 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
175 [-]: GETGLOBAL R10 K53      ; R10 := 0xECFDD17
176 [-]: MOVE      R11 R9       ; R11 := R9
177 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
178 [-]: JMP       190          ; PC := 190
179 [-]: SELF      R15 R14 K43  ; R16 := R14; R15 := R14["0xD124E361"]
180 [-]: GETGLOBAL R17 K44      ; R17 := Lotus_Game
181 [-]: GETTABLE  R17 R17 K45  ; R17 := R17["TINT_COLOR"]
182 [-]: GETTABLE  R18 R2 K46   ; R18 := R2["red"]
183 [-]: DIV       R18 R18 K47  ; R18 := R18 / 255
184 [-]: GETTABLE  R19 R2 K48   ; R19 := R2["green"]
185 [-]: DIV       R19 R19 K47  ; R19 := R19 / 255
186 [-]: GETTABLE  R20 R2 K49   ; R20 := R2["blue"]
187 [-]: DIV       R20 R20 K47  ; R20 := R20 / 255
188 [-]: LOADK     R21 K8       ; R21 := 1
189 [-]: CALL      R15 7 1      ; R15(R16,R17,R18,R19,R20,R21)
190 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 179; R12 := R13 end
191 [-]: JMP       179          ; PC := 179
192 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
193 [-]: SELF      R15 R15 K55  ; R16 := R15; R15 := R15["0x7669354A"]
194 [-]: GETGLOBAL R17 K4       ; R17 := gBackgroundRegion
195 [-]: SELF      R17 R17 K56  ; R18 := R17; R17 := R17["0xF7C1BE25"]
196 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
197 [-]: CALL      R15 0 1      ; R15(R16,...)
198 [-]: GETGLOBAL R15 K57      ; R15 := _T
199 [-]: GETTABLE  R15 R15 K58  ; R15 := R15["FortressLocation"]
200 [-]: EQ        0 R15 K59    ; if R15 ~= nil then PC := 212
201 [-]: JMP       212          ; PC := 212
202 [-]: GETGLOBAL R15 K57      ; R15 := _T
203 [-]: NEWTABLE  R16 0 5      ; R16 := {}
204 [-]: SETTABLE  R16 K60 K8   ; R16["SplineIndex"] := 1
205 [-]: SETTABLE  R16 K61 K2   ; R16["Progress"] := 0
206 [-]: SETTABLE  R16 K62 K8   ; R16["MaxSplines"] := 1
207 [-]: GETUPVAL  R17 U4       ; R17 := U4
208 [-]: GETTABLE  R17 R17 K63  ; R17 := R17["Velocity"]
209 [-]: SETTABLE  R16 K63 R17  ; R16["Velocity"] := R17
210 [-]: SETTABLE  R16 K64 K65  ; R16["Initialized"] := "0x0"
211 [-]: SETTABLE  R15 K58 R16  ; R15["FortressLocation"] := R16
212 [-]: GETUPVAL  R15 U5       ; R15 := U5
213 [-]: CALL      R15 1 1      ; R15()
214 [-]: GETUPVAL  R15 U6       ; R15 := U6
215 [-]: CALL      R15 1 1      ; R15()
216 [-]: GETUPVAL  R15 U7       ; R15 := U7
217 [-]: CALL      R15 1 1      ; R15()
218 [-]: GETUPVAL  R15 U8       ; R15 := U8
219 [-]: CALL      R15 1 1      ; R15()
220 [-]: GETUPVAL  R15 U9       ; R15 := U9
221 [-]: CALL      R15 1 1      ; R15()
222 [-]: GETUPVAL  R15 U10      ; R15 := U10
223 [-]: CALL      R15 1 1      ; R15()
224 [-]: GETGLOBAL R15 K53      ; R15 := 0xECFDD17
225 [-]: GETUPVAL  R16 U4       ; R16 := U4
226 [-]: GETTABLE  R16 R16 K66  ; R16 := R16["Sectors"]
227 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
228 [-]: JMP       234          ; PC := 234
229 [-]: GETUPVAL  R20 U4       ; R20 := U4
230 [-]: GETTABLE  R20 R20 K67  ; R20 := R20["Nodes"]
231 [-]: GETUPVAL  R21 U11      ; R21 := U11
232 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
233 [-]: SETTABLE  R20 R18 R21  ; R20[R18] := R21
234 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 229; R17 := R18 end
235 [-]: JMP       229          ; PC := 229
236 [-]: GETUPVAL  R20 U12      ; R20 := U12
237 [-]: CALL      R20 1 1      ; R20()
238 [-]: GETUPVAL  R20 U13      ; R20 := U13
239 [-]: CALL      R20 1 1      ; R20()
240 [-]: GETUPVAL  R20 U14      ; R20 := U14
241 [-]: CALL      R20 1 1      ; R20()
242 [-]: GETUPVAL  R20 U15      ; R20 := U15
243 [-]: CALL      R20 1 1      ; R20()
244 [-]: GETUPVAL  R20 U16      ; R20 := U16
245 [-]: CALL      R20 1 1      ; R20()
246 [-]: GETUPVAL  R20 U17      ; R20 := U17
247 [-]: CALL      R20 1 1      ; R20()
248 [-]: GETUPVAL  R20 U18      ; R20 := U18
249 [-]: CALL      R20 1 1      ; R20()
250 [-]: GETUPVAL  R20 U19      ; R20 := U19
251 [-]: CALL      R20 1 2      ; R20 := R20()
252 [-]: TEST      R20 1        ; if R20 then PC := 277
253 [-]: JMP       277          ; PC := 277
254 [-]: GETGLOBAL R20 K9       ; R20 := _G
255 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["StalkerMode"]
256 [-]: TEST      R20 1        ; if R20 then PC := 277
257 [-]: JMP       277          ; PC := 277
258 [-]: GETGLOBAL R20 K42      ; R20 := 0x400E7765
259 [-]: GETGLOBAL R21 K68      ; R21 := mapSoundMusic
260 [-]: CALL      R20 2 2      ; R20 := R20(R21)
261 [-]: TEST      R20 1        ; if R20 then PC := 277
262 [-]: JMP       277          ; PC := 277
263 [-]: GETGLOBAL R20 K42      ; R20 := 0x400E7765
264 [-]: GETGLOBAL R21 K9       ; R21 := _G
265 [-]: GETTABLE  R21 R21 K69  ; R21 := R21["MapSoundInst"]
266 [-]: CALL      R20 2 2      ; R20 := R20(R21)
267 [-]: TEST      R20 0        ; if not R20 then PC := 277
268 [-]: JMP       277          ; PC := 277
269 [-]: GETGLOBAL R20 K9       ; R20 := _G
270 [-]: GETGLOBAL R21 K4       ; R21 := gBackgroundRegion
271 [-]: SELF      R21 R21 K12  ; R22 := R21; R21 := R21["0x25992394"]
272 [-]: GETGLOBAL R23 K68      ; R23 := mapSoundMusic
273 [-]: GETGLOBAL R24 K70      ; R24 := ZERO_VECTOR
274 [-]: MOVE      R25 R0       ; R25 := R0
275 [-]: CALL      R21 5 2      ; R21 := R21(R22,R23,R24,R25)
276 [-]: SETTABLE  R20 K69 R21  ; R20["MapSoundInst"] := R21
277 [-]: GETGLOBAL R20 K57      ; R20 := _T
278 [-]: SETTABLE  R20 K71 K72  ; R20["InStarChart"] := "0x1"
279 [-]: GETUPVAL  R20 U2       ; R20 := U2
280 [-]: GETGLOBAL R21 K4       ; R21 := gBackgroundRegion
281 [-]: SELF      R21 R21 K50  ; R22 := R21; R21 := R21["0xA76F0612"]
282 [-]: GETGLOBAL R23 K51      ; R23 := 0xEC274B1A
283 [-]: LOADK     R24 K74      ; R24 := "Void"
284 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
285 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
286 [-]: SETTABLE  R20 K73 R21  ; R20["voidDecos"] := R21
287 [-]: GETGLOBAL R20 K42      ; R20 := 0x400E7765
288 [-]: GETUPVAL  R21 U2       ; R21 := U2
289 [-]: GETTABLE  R21 R21 K73  ; R21 := R21["voidDecos"]
290 [-]: CALL      R20 2 2      ; R20 := R20(R21)
291 [-]: TEST      R20 1        ; if R20 then PC := 384
292 [-]: JMP       384          ; PC := 384
293 [-]: GETUPVAL  R20 U2       ; R20 := U2
294 [-]: GETTABLE  R20 R20 K73  ; R20 := R20["voidDecos"]
295 [-]: LEN       R20 R20      ; R20 := # R20
296 [-]: LT        0 K2 R20     ; if 0 >= R20 then PC := 384
297 [-]: JMP       384          ; PC := 384
298 [-]: GETUPVAL  R20 U2       ; R20 := U2
299 [-]: NEWTABLE  R21 0 0      ; R21 := {}
300 [-]: SETTABLE  R20 K75 R21  ; R20["voidDecoData"] := R21
301 [-]: LOADK     R20 K8       ; R20 := 1
302 [-]: GETUPVAL  R21 U2       ; R21 := U2
303 [-]: GETTABLE  R21 R21 K73  ; R21 := R21["voidDecos"]
304 [-]: LEN       R21 R21      ; R21 := # R21
305 [-]: LOADK     R22 K8       ; R22 := 1
306 [-]: FORPREP   R20 367      ; R20 -= R22; PC := 367
307 [-]: GETUPVAL  R24 U2       ; R24 := U2
308 [-]: GETTABLE  R24 R24 K73  ; R24 := R24["voidDecos"]
309 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
310 [-]: GETUPVAL  R25 U2       ; R25 := U2
311 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
312 [-]: NEWTABLE  R26 0 0      ; R26 := {}
313 [-]: SETTABLE  R25 R23 R26  ; R25[R23] := R26
314 [-]: GETUPVAL  R25 U2       ; R25 := U2
315 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
316 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
317 [-]: SELF      R26 R24 K18  ; R27 := R24; R26 := R24["0x6DA72501"]
318 [-]: CALL      R26 2 2      ; R26 := R26(R27)
319 [-]: SETTABLE  R25 K23 R26  ; R25["pos"] := R26
320 [-]: GETUPVAL  R25 U2       ; R25 := U2
321 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
322 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
323 [-]: SELF      R26 R24 K77  ; R27 := R24; R26 := R24["0xEFE96608"]
324 [-]: CALL      R26 2 2      ; R26 := R26(R27)
325 [-]: SETTABLE  R25 K76 R26  ; R25["BMin"] := R26
326 [-]: GETUPVAL  R25 U2       ; R25 := U2
327 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
328 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
329 [-]: SELF      R26 R24 K79  ; R27 := R24; R26 := R24["0x3D6ED718"]
330 [-]: CALL      R26 2 2      ; R26 := R26(R27)
331 [-]: SETTABLE  R25 K78 R26  ; R25["BMax"] := R26
332 [-]: GETUPVAL  R25 U2       ; R25 := U2
333 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
334 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
335 [-]: GETUPVAL  R26 U2       ; R26 := U2
336 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["voidDecoData"]
337 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
338 [-]: GETTABLE  R26 R26 K78  ; R26 := R26["BMax"]
339 [-]: GETUPVAL  R27 U2       ; R27 := U2
340 [-]: GETTABLE  R27 R27 K75  ; R27 := R27["voidDecoData"]
341 [-]: GETTABLE  R27 R27 R23  ; R27 := R27[R23]
342 [-]: GETTABLE  R27 R27 K76  ; R27 := R27["BMin"]
343 [-]: SUB       R26 R26 R27  ; R26 := R26 - R27
344 [-]: SETTABLE  R25 K80 R26  ; R25["BScale"] := R26
345 [-]: GETUPVAL  R25 U2       ; R25 := U2
346 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
347 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
348 [-]: GETTABLE  R25 R25 K80  ; R25 := R25["BScale"]
349 [-]: GETUPVAL  R26 U2       ; R26 := U2
350 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["voidDecoData"]
351 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
352 [-]: GETTABLE  R26 R26 K80  ; R26 := R26["BScale"]
353 [-]: GETTABLE  R26 R26 K24  ; R26 := R26["x"]
354 [-]: DIV       R26 K8 R26   ; R26 := 1 / R26
355 [-]: SETTABLE  R25 K24 R26  ; R25["x"] := R26
356 [-]: GETUPVAL  R25 U2       ; R25 := U2
357 [-]: GETTABLE  R25 R25 K75  ; R25 := R25["voidDecoData"]
358 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
359 [-]: GETTABLE  R25 R25 K80  ; R25 := R25["BScale"]
360 [-]: GETUPVAL  R26 U2       ; R26 := U2
361 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["voidDecoData"]
362 [-]: GETTABLE  R26 R26 R23  ; R26 := R26[R23]
363 [-]: GETTABLE  R26 R26 K80  ; R26 := R26["BScale"]
364 [-]: GETTABLE  R26 R26 K25  ; R26 := R26["y"]
365 [-]: DIV       R26 K8 R26   ; R26 := 1 / R26
366 [-]: SETTABLE  R25 K25 R26  ; R25["y"] := R26
367 [-]: FORLOOP   R20 307      ; R20 += R22; if R20 <= R21 then begin PC := 307; R23 := R20 end
368 [-]: GETUPVAL  R25 U2       ; R25 := U2
369 [-]: NEWTABLE  R26 0 0      ; R26 := {}
370 [-]: SETTABLE  R25 K81 R26  ; R25["uvHoles"] := R26
371 [-]: LOADK     R25 K8       ; R25 := 1
372 [-]: LOADK     R26 K82      ; R26 := 20
373 [-]: LOADK     R27 K8       ; R27 := 1
374 [-]: FORPREP   R25 383      ; R25 -= R27; PC := 383
375 [-]: GETUPVAL  R29 U2       ; R29 := U2
376 [-]: GETTABLE  R29 R29 K81  ; R29 := R29["uvHoles"]
377 [-]: GETGLOBAL R30 K51      ; R30 := 0xEC274B1A
378 [-]: LOADK     R31 K83      ; R31 := "UvHole"
379 [-]: SUB       R32 R28 K8   ; R32 := R28 - 1
380 [-]: CONCAT    R31 R31 R32  ; R31 := R31 .. R32
381 [-]: CALL      R30 2 2      ; R30 := R30(R31)
382 [-]: SETTABLE  R29 R28 R30  ; R29[R28] := R30
383 [-]: FORLOOP   R25 375      ; R25 += R27; if R25 <= R26 then begin PC := 375; R28 := R25 end
384 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 3205
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x2C15B55B"]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x2B788BAB"]
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 30
 14 [-]: JMP       30           ; PC := 30
 15 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: TEST      R0 1         ; if R0 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xAFDDC504"]
 22 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 23 [-]: TEST      R0 0         ; if not R0 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETUPVAL  R0 U0        ; R0 := U0
 26 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x2E31258"]
 27 [-]: CALL      R0 2 1       ; R0(R1)
 28 [-]: GETUPVAL  R0 U2        ; R0 := U2
 29 [-]: CALL      R0 1 1       ; R0()
 30 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 3216
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xC042262A"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K2 K3     ; R0["mSyncAvatars"] := "0x1"
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K4 K3     ; R0["mUseOperatorForLocal"] := "0x1"
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SETTABLE  R0 K5 K6     ; R0["mPortrait"] := "0x0"
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["Active"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 27
 16 [-]: JMP       27           ; PC := 27
 17 [-]: GETGLOBAL R0 K8        ; R0 := 0x400E7765
 18 [-]: GETGLOBAL R1 K9        ; R1 := mapDioramaRJ
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: TEST      R0 1         ; if R0 then PC := 36
 21 [-]: JMP       36           ; PC := 36
 22 [-]: GETUPVAL  R0 U0        ; R0 := U0
 23 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xF0BB6DD"]
 24 [-]: GETGLOBAL R2 K9        ; R2 := mapDioramaRJ
 25 [-]: CALL      R0 3 1       ; R0(R1,R2)
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETGLOBAL R0 K8        ; R0 := 0x400E7765
 28 [-]: GETGLOBAL R1 K11       ; R1 := mapDiorama
 29 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 30 [-]: TEST      R0 1         ; if R0 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETUPVAL  R0 U0        ; R0 := U0
 33 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0xF0BB6DD"]
 34 [-]: GETGLOBAL R2 K11       ; R2 := mapDiorama
 35 [-]: CALL      R0 3 1       ; R0(R1,R2)
 36 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 3233
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K2        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 34
 10 [-]: JMP       34           ; PC := 34
 11 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 34
 17 [-]: JMP       34           ; PC := 34
 18 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x30BDE7F"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 21 [-]: GETTABLE  R5 R3 K6     ; R5 := R3["mShip"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R4 K7        ; R4 := table
 26 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xE6450C9D"]
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: GETGLOBAL R6 K9        ; R6 := 0x9FAED6BC
 29 [-]: GETTABLE  R7 R3 K6     ; R7 := R3["mShip"]
 30 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7["0x1B252E3C"]
 31 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 32 [-]: CALL      R6 0 0       ; R6,... := R6(R7,...)
 33 [-]: CALL      R4 0 1       ; R4(R5,...)
 34 [-]: GETUPVAL  R4 U0        ; R4 := U0
 35 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xBB3AACF2"]
 36 [-]: CALL      R4 1 2       ; R4 := R4()
 37 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x5B0E7439"]
 38 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 39 [-]: GETGLOBAL R5 K13       ; R5 := 0xECFDD17
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 42 [-]: JMP       57           ; PC := 57
 43 [-]: GETGLOBAL R10 K3       ; R10 := 0x400E7765
 44 [-]: GETTABLE  R11 R9 K14   ; R11 := R9["zoomedInEffects"]
 45 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 46 [-]: TEST      R10 1        ; if R10 then PC := 57
 47 [-]: JMP       57           ; PC := 57
 48 [-]: GETGLOBAL R10 K7       ; R10 := table
 49 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["0xE6450C9D"]
 50 [-]: MOVE      R11 R0       ; R11 := R0
 51 [-]: GETGLOBAL R12 K9       ; R12 := 0x9FAED6BC
 52 [-]: GETTABLE  R13 R9 K14   ; R13 := R9["zoomedInEffects"]
 53 [-]: SELF      R13 R13 K10  ; R14 := R13; R13 := R13["0x1B252E3C"]
 54 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 55 [-]: CALL      R12 0 0      ; R12,... := R12(R13,...)
 56 [-]: CALL      R10 0 1      ; R10(R11,...)
 57 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 43; R7 := R8 end
 58 [-]: JMP       43           ; PC := 43
 59 [-]: LEN       R10 R0       ; R10 := # R0
 60 [-]: LT        0 K2 R10     ; if 0 >= R10 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: GETGLOBAL R10 K15      ; R10 := UISys
 63 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["0x449B53E0"]
 64 [-]: MOVE      R11 R0       ; R11 := R0
 65 [-]: MOVE      R12 R1       ; R12 := R1
 66 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 67 [-]: MOVE      R10 R1       ; R10 := R1
 68 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 3259
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 3266
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADK     R0 K0        ; R0 := 3000
  2 [-]: UNM       R1 R0        ; R1 := - R0
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: UNM       R3 R0        ; R3 := - R0
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: GETGLOBAL R5 K1        ; R5 := 0x329BDC44
  7 [-]: LOADK     R6 K2        ; R6 := "EE.Interface.Components.DragScroll"
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["0x46FF1A3C"]
 10 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
 11 [-]: LOADK     R8 K5        ; R8 := "Board"
 12 [-]: MOVE      R9 R1        ; R9 := R1
 13 [-]: MOVE      R10 R3       ; R10 := R3
 14 [-]: MOVE      R11 R2       ; R11 := R2
 15 [-]: MOVE      R12 R4       ; R12 := R4
 16 [-]: CALL      R6 7 2       ; R6 := R6(R7,R8,R9,R10,R11,R12)
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: CLOSURE   R7 0         ; R7 := closure(Function #80.1)
 20 [-]: SETTABLE  R6 K6 R7     ; R6["OnScroll"] := R7
 21 [-]: GETUPVAL  R6 U0        ; R6 := U0
 22 [-]: CLOSURE   R7 1         ; R7 := closure(Function #80.2)
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: SETTABLE  R6 K7 R7     ; R6["mOnStopDrag"] := R7
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: CLOSURE   R7 2         ; R7 := closure(Function #80.3)
 27 [-]: GETUPVAL  R0 U1        ; R0 := U1
 28 [-]: SETTABLE  R6 K8 R7     ; R6["mOnDeselectCallback"] := R7
 29 [-]: GETUPVAL  R6 U0        ; R6 := U0
 30 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0xCE468565"]
 31 [-]: LOADK     R8 K10       ; R8 := "x"
 32 [-]: LOADK     R9 K11       ; R9 := 0.5
 33 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 34 [-]: GETUPVAL  R6 U0        ; R6 := U0
 35 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0xCE468565"]
 36 [-]: LOADK     R8 K12       ; R8 := "y"
 37 [-]: LOADK     R9 K11       ; R9 := 0.5
 38 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 39 [-]: RETURN    R0 1         ; return 


; Function #80.1:
;
; Name:            
; Defined at line: 3276
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: RETURN    R0 1         ; return 


; Function #80.2:
;
; Name:            
; Defined at line: 3280
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Deselected"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: SETTABLE  R0 K0 K1     ; R0["Deselected"] := nil
  7 [-]: RETURN    R0 1         ; return 


; Function #80.3:
;
; Name:            
; Defined at line: 3286
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 3293
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: SETTABLE  R0 K0 K1     ; R0["mMovingRegion"] := nil
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: SETTABLE  R0 K2 K1     ; R0["mMovingNode"] := nil
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K3 K1     ; R0["mEdgeNode1"] := nil
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K4 K1     ; R0["mEdgeNode2"] := nil
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SETTABLE  R0 K5 K1     ; R0["mInitialPosition"] := nil
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: SETTABLE  R0 K6 K1     ; R0["mInitialWorldCursor"] := nil
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: SETTABLE  R0 K7 K8     ; R0["mRotationAxis"] := "heading"
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: SETTABLE  R0 K9 K10    ; R0["mFramingRegion"] := 0
 19 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 3307
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mShiftDown"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mControlDown"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: SETTABLE  R0 K2 K3     ; R0["mRotationAxis"] := "bank"
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mControlDown"]
 14 [-]: TEST      R0 0         ; if not R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R0 U1        ; R0 := U1
 17 [-]: SETTABLE  R0 K2 K4     ; R0["mRotationAxis"] := "pitch"
 18 [-]: JMP       21           ; PC := 21
 19 [-]: GETUPVAL  R0 U1        ; R0 := U1
 20 [-]: SETTABLE  R0 K2 K5     ; R0["mRotationAxis"] := "heading"
 21 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 3317
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K3        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 65
 10 [-]: JMP       65           ; PC := 65
 11 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0x52C8784B"]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 5       ; R3,R4,R5,R6 := R3(R4)
 17 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 18 [-]: MOVE      R8 R3        ; R8 := R3
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: TEST      R7 1         ; if R7 then PC := 65
 21 [-]: JMP       65           ; PC := 65
 22 [-]: TEST      R6 0         ; if not R6 then PC := 65
 23 [-]: JMP       65           ; PC := 65
 24 [-]: SELF      R7 R3 K7     ; R8 := R3; R7 := R3["0x6C207447"]
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: LEN       R8 R7        ; R8 := # R7
 27 [-]: LE        0 R4 R8      ; if R4 > R8 then PC := 65
 28 [-]: JMP       65           ; PC := 65
 29 [-]: GETTABLE  R8 R7 R4     ; R8 := R7[R4]
 30 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mMainMission"]
 31 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mKey"]
 32 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
 33 [-]: MOVE      R10 R8       ; R10 := R8
 34 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 35 [-]: TEST      R9 1         ; if R9 then PC := 51
 36 [-]: JMP       51           ; PC := 51
 37 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8["0xA26B0FA3"]
 38 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 39 [-]: TEST      R9 1         ; if R9 then PC := 51
 40 [-]: JMP       51           ; PC := 51
 41 [-]: GETGLOBAL R9 K11       ; R9 := mMovie
 42 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 43 [-]: SELF      R11 R8 K13   ; R12 := R8; R11 := R8["0x616C74B6"]
 44 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 45 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5EC7A3D2"]
 46 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 47 [-]: MOVE      R12 R0       ; R12 := R0
 48 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 49 [-]: MOVE      R0 R9        ; R0 := R9
 50 [-]: JMP       65           ; PC := 65
 51 [-]: GETTABLE  R9 R7 R4     ; R9 := R7[R4]
 52 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["mLocTag"]
 53 [-]: GETGLOBAL R10 K16      ; R10 := EMPTY_SYMBOL
 54 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 65
 55 [-]: JMP       65           ; PC := 65
 56 [-]: GETGLOBAL R9 K11       ; R9 := mMovie
 57 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 58 [-]: GETTABLE  R11 R7 R4    ; R11 := R7[R4]
 59 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["mLocTag"]
 60 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5EC7A3D2"]
 61 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 62 [-]: MOVE      R12 R0       ; R12 := R0
 63 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 64 [-]: MOVE      R0 R9        ; R0 := R9
 65 [-]: RETURN    R0 2         ; return R0
 66 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 3340
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := cjson
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x8DC1075B"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K2        ; R2 := gMatchingService
  6 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x3016115E"]
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R2 3 1       ; R2(R3,R4)
  9 [-]: GETGLOBAL R2 K4        ; R2 := gGameRules
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x8B598ED4"]
 11 [-]: GETGLOBAL R4 K6        ; R4 := gLotusHubGameRulesType
 12 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 54
 14 [-]: JMP       54           ; PC := 54
 15 [-]: GETGLOBAL R2 K7        ; R2 := gPlayerProfileMgr
 16 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 17 [-]: LOADK     R4 K9        ; R4 := 0
 18 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 19 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x654F1092"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: GETGLOBAL R3 K11       ; R3 := string
 22 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xDE44F664"]
 23 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["name"]
 24 [-]: GETUPVAL  R5 U0        ; R5 := U0
 25 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["HUB_TAG"]
 26 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 27 [-]: EQ        1 R3 K15     ; if R3 == nil then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 30 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 31 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["HUB_SPAWN_DEFAULT"]
 32 [-]: CALL      R3 3 1       ; R3(R4,R5)
 33 [-]: JMP       54           ; PC := 54
 34 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 35 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x81645750"]
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: TEST      R3 0         ; if not R3 then PC := 50
 38 [-]: JMP       50           ; PC := 50
 39 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 40 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x8B598ED4"]
 41 [-]: GETGLOBAL R5 K20       ; R5 := gLotusDojoGameRulesType
 42 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 43 [-]: TEST      R3 1         ; if R3 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 46 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 47 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["HUB_SPAWN_TRADE"]
 48 [-]: CALL      R3 3 1       ; R3(R4,R5)
 49 [-]: JMP       54           ; PC := 54
 50 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 51 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 52 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["HUB_SPAWN_NAVIGATION"]
 53 [-]: CALL      R3 3 1       ; R3(R4,R5)
 54 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 3356
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 18
  7 [-]: JMP       18           ; PC := 18
  8 [-]: GETGLOBAL R1 K3        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["sectorInfo"]
 10 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETGLOBAL R2 K3        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["sectorInfo"]
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K3        ; R1 := _T
 17 [-]: SETTABLE  R1 K4 K5     ; R1["sectorInfo"] := nil
 18 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 3365
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x1C988750"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K1        ; R3 := "AbortConfirm"
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 3369
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := gGameRules
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1106FFC3"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: RETURN    R3 2         ; return R3
 11 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0xE67B2EA2"]
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: TAILCALL  R3 3 0       ; R3,... := R3(R4,R5)
 14 [-]: RETURN    R3 0         ; return R3,...
 15 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 3377
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 3383
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 20
  4 [-]: JMP       20           ; PC := 20
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETGLOBAL R1 K1        ; R1 := gMatchingService
 11 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1FEAD306"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K3        ; R2 := gRegion
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xA559F558"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R1 R0        ; R1 := R0
 19 [-]: MOVE      R1 R1        ; R1 := R1
 20 [-]: RETURN    R1 2         ; return R1
 21 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 3387
; #Upvalues:       9
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETUPVAL  R6 U0        ; R6 := U0
  2 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["0x8ECD61A2"]
  3 [-]: GETGLOBAL R7 K1        ; R7 := 0xEC274B1A
  4 [-]: MOVE      R8 R0        ; R8 := R0
  5 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  6 [-]: MOVE      R8 R1        ; R8 := R1
  7 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  8 [-]: EQ        1 R6 K2      ; if R6 == nil then PC := 32
  9 [-]: JMP       32           ; PC := 32
 10 [-]: GETGLOBAL R7 K3        ; R7 := mMovie
 11 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7["0x5DB0BD4"]
 12 [-]: GETTABLE  R9 R6 K5     ; R9 := R6["text"]
 13 [-]: MOVE      R10 R0       ; R10 := R0
 14 [-]: NEWTABLE  R11 0 5      ; R11 := {}
 15 [-]: GETTABLE  R12 R6 K7    ; R12 := R6["player"]
 16 [-]: SETTABLE  R11 K6 R12   ; R11["PLAYER_NAME"] := R12
 17 [-]: GETTABLE  R12 R6 K9    ; R12 := R6["value"]
 18 [-]: SETTABLE  R11 K8 R12   ; R11["VALUE"] := R12
 19 [-]: GETTABLE  R12 R6 K10   ; R12 := R6["MIN"]
 20 [-]: SETTABLE  R11 K10 R12  ; R11["MIN"] := R12
 21 [-]: GETTABLE  R12 R6 K11   ; R12 := R6["MAX"]
 22 [-]: SETTABLE  R11 K11 R12  ; R11["MAX"] := R12
 23 [-]: GETTABLE  R12 R6 K12   ; R12 := R6["ITEM"]
 24 [-]: SETTABLE  R11 K12 R12  ; R11["ITEM"] := R12
 25 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 26 [-]: GETUPVAL  R8 U1        ; R8 := U1
 27 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["0xB11F032"]
 28 [-]: MOVE      R9 R7        ; R9 := R7
 29 [-]: CALL      R8 2 1       ; R8(R9)
 30 [-]: MOVE      R8 R0        ; R8 := R0
 31 [-]: RETURN    R8 2         ; return R8
 32 [-]: GETUPVAL  R8 U2        ; R8 := U2
 33 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["0xBB3AACF2"]
 34 [-]: CALL      R8 1 2       ; R8 := R8()
 35 [-]: SELF      R9 R8 K15    ; R10 := R8; R9 := R8["0x4B93F65B"]
 36 [-]: GETGLOBAL R11 K1       ; R11 := 0xEC274B1A
 37 [-]: MOVE      R12 R0       ; R12 := R0
 38 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 39 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 40 [-]: TEST      R9 0         ; if not R9 then PC := 133
 41 [-]: JMP       133          ; PC := 133
 42 [-]: GETTABLE  R10 R9 K16   ; R10 := R9["skillReqs"]
 43 [-]: LEN       R10 R10      ; R10 := # R10
 44 [-]: LT        0 K17 R10    ; if 0 >= R10 then PC := 133
 45 [-]: JMP       133          ; PC := 133
 46 [-]: NEWTABLE  R10 6 0      ; R10 := {}
 47 [-]: LOADK     R11 K18      ; R11 := "Intrinsics"
 48 [-]: LOADK     R12 K19      ; R12 := "RailjackIntrinsicPilot"
 49 [-]: LOADK     R13 K20      ; R13 := "RailjackIntrinsicGunner"
 50 [-]: LOADK     R14 K21      ; R14 := "RailjackIntrinsicTactic"
 51 [-]: LOADK     R15 K22      ; R15 := "RailjackIntrinsicEngineer"
 52 [-]: LOADK     R16 K23      ; R16 := "RailjackIntrinsicCommand"
 53 [-]: SETLIST   R10 6 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 6
 54 [-]: GETGLOBAL R11 K24      ; R11 := 0xECFDD17
 55 [-]: GETTABLE  R12 R9 K16   ; R12 := R9["skillReqs"]
 56 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
 57 [-]: JMP       131          ; PC := 131
 58 [-]: LOADK     R16 K17      ; R16 := 0
 59 [-]: GETTABLE  R17 R15 K25  ; R17 := R15["skill"]
 60 [-]: GETGLOBAL R18 K26      ; R18 := Lotus_Game
 61 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["LPS_NONE"]
 62 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 81
 63 [-]: JMP       81           ; PC := 81
 64 [-]: GETGLOBAL R17 K26      ; R17 := Lotus_Game
 65 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["LPS_NONE"]
 66 [-]: GETGLOBAL R18 K26      ; R18 := Lotus_Game
 67 [-]: GETTABLE  R18 R18 K28  ; R18 := R18["LPS_COMMAND"]
 68 [-]: LOADK     R19 K29      ; R19 := 1
 69 [-]: FORPREP   R17 79       ; R17 -= R19; PC := 79
 70 [-]: GETGLOBAL R21 K30      ; R21 := math
 71 [-]: GETTABLE  R21 R21 K31  ; R21 := R21["0x8B011038"]
 72 [-]: MOVE      R22 R16      ; R22 := R16
 73 [-]: GETGLOBAL R23 K32      ; R23 := gGameData
 74 [-]: SELF      R23 R23 K33  ; R24 := R23; R23 := R23["0x8B666D8D"]
 75 [-]: MOVE      R25 R20      ; R25 := R20
 76 [-]: CALL      R23 3 0      ; R23,... := R23(R24,R25)
 77 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
 78 [-]: MOVE      R16 R21      ; R16 := R21
 79 [-]: FORLOOP   R17 70       ; R17 += R19; if R17 <= R18 then begin PC := 70; R20 := R17 end
 80 [-]: JMP       86           ; PC := 86
 81 [-]: GETGLOBAL R21 K32      ; R21 := gGameData
 82 [-]: SELF      R21 R21 K33  ; R22 := R21; R21 := R21["0x8B666D8D"]
 83 [-]: GETTABLE  R23 R15 K25  ; R23 := R15["skill"]
 84 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
 85 [-]: MOVE      R16 R21      ; R16 := R21
 86 [-]: GETTABLE  R21 R15 K34  ; R21 := R15["req"]
 87 [-]: LT        0 R16 R21    ; if R16 >= R21 then PC := 131
 88 [-]: JMP       131          ; PC := 131
 89 [-]: GETTABLE  R21 R15 K25  ; R21 := R15["skill"]
 90 [-]: ADD       R21 R21 K29  ; R21 := R21 + 1
 91 [-]: GETTABLE  R21 R10 R21  ; R21 := R10[R21]
 92 [-]: GETGLOBAL R22 K35      ; R22 := string
 93 [-]: GETTABLE  R22 R22 K36  ; R22 := R22["0x639C642A"]
 94 [-]: GETGLOBAL R23 K37      ; R23 := 0xE6DC43B0
 95 [-]: LOADK     R24 K38      ; R24 := "/Lotus/Language/Intrinsics/"
 96 [-]: MOVE      R25 R21      ; R25 := R21
 97 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
 98 [-]: LOADNIL   R25 R25      ; R25 := nil
 99 [-]: CALL      R23 3 0      ; R23,... := R23(R24,R25)
100 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
101 [-]: NEWTABLE  R23 0 1      ; R23 := {}
102 [-]: GETGLOBAL R24 K37      ; R24 := 0xE6DC43B0
103 [-]: LOADK     R25 K39      ; R25 := "/Lotus/Language/Menu/InsufficientSkill"
104 [-]: NEWTABLE  R26 0 2      ; R26 := {}
105 [-]: SETTABLE  R26 K40 R22  ; R26["SKILL"] := R22
106 [-]: GETTABLE  R27 R15 K34  ; R27 := R15["req"]
107 [-]: SETTABLE  R26 K41 R27  ; R26["RANK"] := R27
108 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
109 [-]: SETTABLE  R23 K5 R24   ; R23["text"] := R24
110 [-]: GETGLOBAL R24 K3       ; R24 := mMovie
111 [-]: SELF      R24 R24 K4   ; R25 := R24; R24 := R24["0x5DB0BD4"]
112 [-]: GETTABLE  R26 R23 K5   ; R26 := R23["text"]
113 [-]: MOVE      R27 R0       ; R27 := R0
114 [-]: NEWTABLE  R28 0 5      ; R28 := {}
115 [-]: GETTABLE  R29 R23 K7   ; R29 := R23["player"]
116 [-]: SETTABLE  R28 K6 R29   ; R28["PLAYER_NAME"] := R29
117 [-]: GETTABLE  R29 R23 K9   ; R29 := R23["value"]
118 [-]: SETTABLE  R28 K8 R29   ; R28["VALUE"] := R29
119 [-]: GETTABLE  R29 R23 K10  ; R29 := R23["MIN"]
120 [-]: SETTABLE  R28 K10 R29  ; R28["MIN"] := R29
121 [-]: GETTABLE  R29 R23 K11  ; R29 := R23["MAX"]
122 [-]: SETTABLE  R28 K11 R29  ; R28["MAX"] := R29
123 [-]: GETTABLE  R29 R23 K12  ; R29 := R23["ITEM"]
124 [-]: SETTABLE  R28 K12 R29  ; R28["ITEM"] := R29
125 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
126 [-]: GETUPVAL  R25 U1       ; R25 := U1
127 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["0xB11F032"]
128 [-]: MOVE      R26 R24      ; R26 := R24
129 [-]: CALL      R25 2 1      ; R25(R26)
130 [-]: RETURN    R0 1         ; return 
131 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 58; R13 := R14 end
132 [-]: JMP       58           ; PC := 58
133 [-]: GETGLOBAL R25 K42      ; R25 := gRegion
134 [-]: SELF      R25 R25 K43  ; R26 := R25; R25 := R25["0x3E2F6BF"]
135 [-]: CALL      R25 2 2      ; R25 := R25(R26)
136 [-]: GETUPVAL  R26 U3       ; R26 := U3
137 [-]: MOVE      R27 R25      ; R27 := R25
138 [-]: CALL      R26 2 2      ; R26 := R26(R27)
139 [-]: TEST      R26 0        ; if not R26 then PC := 228
140 [-]: JMP       228          ; PC := 228
141 [-]: GETGLOBAL R26 K42      ; R26 := gRegion
142 [-]: SELF      R26 R26 K43  ; R27 := R26; R26 := R26["0x3E2F6BF"]
143 [-]: CALL      R26 2 2      ; R26 := R26(R27)
144 [-]: GETGLOBAL R27 K44      ; R27 := gGameRules
145 [-]: SELF      R27 R27 K45  ; R28 := R27; R27 := R27["0x1106FFC3"]
146 [-]: CALL      R27 2 2      ; R27 := R27(R28)
147 [-]: GETGLOBAL R28 K46      ; R28 := 0x400E7765
148 [-]: MOVE      R29 R8       ; R29 := R8
149 [-]: CALL      R28 2 2      ; R28 := R28(R29)
150 [-]: TEST      R28 1        ; if R28 then PC := 167
151 [-]: JMP       167          ; PC := 167
152 [-]: GETGLOBAL R28 K46      ; R28 := 0x400E7765
153 [-]: MOVE      R29 R26      ; R29 := R26
154 [-]: CALL      R28 2 2      ; R28 := R28(R29)
155 [-]: TEST      R28 1        ; if R28 then PC := 167
156 [-]: JMP       167          ; PC := 167
157 [-]: GETGLOBAL R28 K46      ; R28 := 0x400E7765
158 [-]: MOVE      R29 R27      ; R29 := R27
159 [-]: CALL      R28 2 2      ; R28 := R28(R29)
160 [-]: TEST      R28 1        ; if R28 then PC := 167
161 [-]: JMP       167          ; PC := 167
162 [-]: SELF      R28 R27 K47  ; R29 := R27; R28 := R27["0xE67B2EA2"]
163 [-]: MOVE      R30 R26      ; R30 := R26
164 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
165 [-]: TEST      R28 1        ; if R28 then PC := 168
166 [-]: JMP       168          ; PC := 168
167 [-]: RETURN    R0 1         ; return 
168 [-]: GETGLOBAL R28 K48      ; R28 := 0x93B1256B
169 [-]: LOADK     R29 K49      ; R29 := "RJ GoToMission - "
170 [-]: GETGLOBAL R30 K50      ; R30 := 0x9FAED6BC
171 [-]: MOVE      R31 R0       ; R31 := R0
172 [-]: CALL      R30 2 2      ; R30 := R30(R31)
173 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
174 [-]: CALL      R28 2 1      ; R28(R29)
175 [-]: GETGLOBAL R28 K51      ; R28 := _T
176 [-]: GETGLOBAL R29 K1       ; R29 := 0xEC274B1A
177 [-]: MOVE      R30 R0       ; R30 := R0
178 [-]: CALL      R29 2 2      ; R29 := R29(R30)
179 [-]: SETTABLE  R28 K52 R29  ; R28["RailJackNextMissionNode"] := R29
180 [-]: GETGLOBAL R28 K51      ; R28 := _T
181 [-]: GETGLOBAL R29 K44      ; R29 := gGameRules
182 [-]: SELF      R29 R29 K54  ; R30 := R29; R29 := R29["0x8B598ED4"]
183 [-]: GETGLOBAL R31 K55      ; R31 := gLotusAttractModeGameRulesType
184 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
185 [-]: SETTABLE  R28 K53 R29  ; R28["SeamlessRailJackTransition"] := R29
186 [-]: NEWTABLE  R28 0 2      ; R28 := {}
187 [-]: SETTABLE  R28 K56 R0   ; R28["name"] := R0
188 [-]: SETTABLE  R28 K57 K17  ; R28["difficulty"] := 0
189 [-]: GETGLOBAL R29 K58      ; R29 := cjson
190 [-]: GETTABLE  R29 R29 K59  ; R29 := R29["0x8DC1075B"]
191 [-]: MOVE      R30 R28      ; R30 := R28
192 [-]: CALL      R29 2 2      ; R29 := R29(R30)
193 [-]: GETGLOBAL R30 K60      ; R30 := gMatchingService
194 [-]: SELF      R30 R30 K61  ; R31 := R30; R30 := R30["0x3016115E"]
195 [-]: MOVE      R32 R29      ; R32 := R29
196 [-]: CALL      R30 3 1      ; R30(R31,R32)
197 [-]: SELF      R30 R8 K62   ; R31 := R8; R30 := R8["0xDF213CE1"]
198 [-]: GETGLOBAL R32 K1       ; R32 := 0xEC274B1A
199 [-]: LOADK     R33 K63      ; R33 := "CrewShipGenericTunnel"
200 [-]: CALL      R32 2 0      ; R32,... := R32(R33)
201 [-]: CALL      R30 0 2      ; R30 := R30(R31,...)
202 [-]: SELF      R31 R27 K64  ; R32 := R27; R31 := R27["0xD93C7568"]
203 [-]: GETTABLE  R33 R30 K65  ; R33 := R30["mission"]
204 [-]: CALL      R31 3 1      ; R31(R32,R33)
205 [-]: GETUPVAL  R31 U4       ; R31 := U4
206 [-]: SETTABLE  R31 K66 K2   ; R31["mSelectedRegion"] := nil
207 [-]: GETGLOBAL R31 K60      ; R31 := gMatchingService
208 [-]: SELF      R31 R31 K67  ; R32 := R31; R31 := R31["0x1FEAD306"]
209 [-]: CALL      R31 2 2      ; R31 := R31(R32)
210 [-]: TEST      R31 0        ; if not R31 then PC := 221
211 [-]: JMP       221          ; PC := 221
212 [-]: MOVE      R31 R1       ; R31 := R1
213 [-]: MOVE      R32 R0       ; R32 := R0
214 [-]: GETUPVAL  R33 U5       ; R33 := U5
215 [-]: GETTABLE  R33 R33 K68  ; R33 := R33["0xAD27E97A"]
216 [-]: MOVE      R34 R0       ; R34 := R0
217 [-]: MOVE      R35 R31      ; R35 := R31
218 [-]: MOVE      R36 R32      ; R36 := R32
219 [-]: LOADK     R37 K69      ; R37 := "OnUpdateSessionSettings"
220 [-]: CALL      R33 5 1      ; R33(R34,R35,R36,R37)
221 [-]: GETUPVAL  R33 U6       ; R33 := U6
222 [-]: MOVE      R34 R1       ; R34 := R1
223 [-]: CALL      R33 2 1      ; R33(R34)
224 [-]: GETUPVAL  R33 U7       ; R33 := U7
225 [-]: SETTABLE  R33 K70 K2   ; R33["SelectionNode"] := nil
226 [-]: MOVE      R33 R1       ; R33 := R1
227 [-]: RETURN    R33 2        ; return R33
228 [-]: NEWTABLE  R33 0 4      ; R33 := {}
229 [-]: SETTABLE  R33 K56 R0   ; R33["name"] := R0
230 [-]: SETTABLE  R33 K71 R1   ; R33["quest"] := R1
231 [-]: SETTABLE  R33 K57 R3   ; R33["difficulty"] := R3
232 [-]: SETTABLE  R33 K72 R5   ; R33["wager"] := R5
233 [-]: TEST      R2 0         ; if not R2 then PC := 238
234 [-]: JMP       238          ; PC := 238
235 [-]: EQ        1 R2 K73     ; if R2 == "" then PC := 238
236 [-]: JMP       238          ; PC := 238
237 [-]: SETTABLE  R33 K74 R2   ; R33["raid"] := R2
238 [-]: TEST      R4 0         ; if not R4 then PC := 243
239 [-]: JMP       243          ; PC := 243
240 [-]: EQ        1 R4 K73     ; if R4 == "" then PC := 243
241 [-]: JMP       243          ; PC := 243
242 [-]: SETTABLE  R33 K75 R4   ; R33["voidTier"] := R4
243 [-]: GETGLOBAL R34 K46      ; R34 := 0x400E7765
244 [-]: MOVE      R35 R1       ; R35 := R1
245 [-]: CALL      R34 2 2      ; R34 := R34(R35)
246 [-]: TEST      R34 1        ; if R34 then PC := 294
247 [-]: JMP       294          ; PC := 294
248 [-]: GETGLOBAL R34 K35      ; R34 := string
249 [-]: GETTABLE  R34 R34 K76  ; R34 := R34["0xDE44F664"]
250 [-]: MOVE      R35 R0       ; R35 := R0
251 [-]: GETUPVAL  R36 U2       ; R36 := U2
252 [-]: GETTABLE  R36 R36 K77  ; R36 := R36["KEY_TAG"]
253 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
254 [-]: TEST      R34 0        ; if not R34 then PC := 294
255 [-]: JMP       294          ; PC := 294
256 [-]: GETGLOBAL R34 K35      ; R34 := string
257 [-]: GETTABLE  R34 R34 K76  ; R34 := R34["0xDE44F664"]
258 [-]: MOVE      R35 R0       ; R35 := R0
259 [-]: GETUPVAL  R36 U2       ; R36 := U2
260 [-]: GETTABLE  R36 R36 K77  ; R36 := R36["KEY_TAG"]
261 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
262 [-]: EQ        1 R34 K2     ; if R34 == nil then PC := 294
263 [-]: JMP       294          ; PC := 294
264 [-]: GETGLOBAL R35 K35      ; R35 := string
265 [-]: GETTABLE  R35 R35 K78  ; R35 := R35["0x7B782033"]
266 [-]: MOVE      R36 R0       ; R36 := R0
267 [-]: LOADK     R37 K29      ; R37 := 1
268 [-]: SUB       R38 R34 K29  ; R38 := R34 - 1
269 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
270 [-]: GETGLOBAL R36 K79      ; R36 := 0x7C282057
271 [-]: MOVE      R37 R35      ; R37 := R35
272 [-]: CALL      R36 2 2      ; R36 := R36(R37)
273 [-]: GETGLOBAL R37 K46      ; R37 := 0x400E7765
274 [-]: MOVE      R38 R36      ; R38 := R36
275 [-]: CALL      R37 2 2      ; R37 := R37(R38)
276 [-]: TEST      R37 1        ; if R37 then PC := 294
277 [-]: JMP       294          ; PC := 294
278 [-]: SELF      R37 R36 K80  ; R38 := R36; R37 := R36["0x9BC3049C"]
279 [-]: CALL      R37 2 2      ; R37 := R37(R38)
280 [-]: TEST      R37 0        ; if not R37 then PC := 294
281 [-]: JMP       294          ; PC := 294
282 [-]: GETGLOBAL R37 K51      ; R37 := _T
283 [-]: SETTABLE  R37 K81 R33  ; R37["sectorInfo"] := R33
284 [-]: GETGLOBAL R37 K3       ; R37 := mMovie
285 [-]: SELF      R37 R37 K82  ; R38 := R37; R37 := R37["0x458F27A9"]
286 [-]: LOADK     R39 K83      ; R39 := "ShowQuestConfirm"
287 [-]: GETGLOBAL R40 K50      ; R40 := 0x9FAED6BC
288 [-]: SELF      R41 R36 K84  ; R42 := R36; R41 := R36["0x5F68C582"]
289 [-]: CALL      R41 2 0      ; R41,... := R41(R42)
290 [-]: CALL      R40 0 0      ; R40,... := R40(R41,...)
291 [-]: CALL      R37 0 1      ; R37(R38,...)
292 [-]: MOVE      R37 R1       ; R37 := R1
293 [-]: RETURN    R37 2        ; return R37
294 [-]: GETUPVAL  R37 U8       ; R37 := U8
295 [-]: MOVE      R38 R33      ; R38 := R33
296 [-]: CALL      R37 2 1      ; R37(R38)
297 [-]: MOVE      R37 R1       ; R37 := R1
298 [-]: RETURN    R37 2        ; return R37
299 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 3508
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R1 K0        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedInvasionInfo"]
  6 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  7 [-]: TEST      R1 1         ; if R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K0        ; R1 := _T
 11 [-]: GETGLOBAL R2 K0        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["CachedInvasionInfo"]
 13 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 14 [-]: SETTABLE  R1 K2 R2     ; R1["gInvasionInfo"] := R2
 15 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 16 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x5FF274BB"]
 17 [-]: GETGLOBAL R3 K5        ; R3 := invasionMovie
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: MOVE      R1 R0        ; R1 := R0
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xD692CA7B"]
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R1 3 1       ; R1(R2,R3)
 24 [-]: MOVE      R1 R1        ; R1 := R1
 25 [-]: MOVE      R1 R1        ; R1 := R1
 26 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 27 [-]: GETGLOBAL R2 K0        ; R2 := _T
 28 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SquadOverlay"]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: TEST      R1 1         ; if R1 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETGLOBAL R1 K0        ; R1 := _T
 33 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["SquadOverlay"]
 34 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x458F27A9"]
 35 [-]: LOADK     R3 K10       ; R3 := "OnRadialSolarMapOpenChildMovie"
 36 [-]: LOADK     R4 K11       ; R4 := ""
 37 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 38 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 3523
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETGLOBAL R2 K1        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SquadOverlay"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R1 K1        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x458F27A9"]
 13 [-]: LOADK     R3 K4        ; R3 := "OnRadialSolarMapCloseChildMovie"
 14 [-]: LOADK     R4 K5        ; R4 := ""
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: TEST      R0 0         ; if not R0 then PC := 26
 17 [-]: JMP       26           ; PC := 26
 18 [-]: EQ        1 R0 K5      ; if R0 == "" then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: LOADK     R3 K5        ; R3 := ""
 23 [-]: LOADK     R4 K5        ; R4 := ""
 24 [-]: LOADK     R5 K5        ; R5 := ""
 25 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 26 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 3536
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K1        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CachedActiveMissions"]
  8 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  9 [-]: TEST      R1 1         ; if R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x5FF274BB"]
 14 [-]: GETGLOBAL R3 K5        ; R3 := projectionMovie
 15 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 16 [-]: MOVE      R1 R0        ; R1 := R0
 17 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 71
 21 [-]: JMP       71           ; PC := 71
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["VOID_PROJECTION_ITEMS"]
 24 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["VoidT1"]
 25 [-]: GETGLOBAL R2 K1        ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedActiveMissions"]
 27 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 28 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mMissionInfo"]
 29 [-]: GETUPVAL  R3 U2        ; R3 := U2
 30 [-]: GETGLOBAL R4 K10       ; R4 := 0x9FAED6BC
 31 [-]: GETTABLE  R5 R2 K11    ; R5 := R2["activeMissionTag"]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: SETTABLE  R3 K9 R4     ; R3["MissionTier"] := R4
 34 [-]: GETUPVAL  R3 U1        ; R3 := U1
 35 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["VOID_PROJECTION_ITEMS"]
 36 [-]: GETUPVAL  R4 U2        ; R4 := U2
 37 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["MissionTier"]
 38 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 39 [-]: TEST      R3 0         ; if not R3 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETUPVAL  R3 U1        ; R3 := U1
 42 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["VOID_PROJECTION_ITEMS"]
 43 [-]: GETUPVAL  R4 U2        ; R4 := U2
 44 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["MissionTier"]
 45 [-]: GETTABLE  R1 R3 R4     ; R1 := R3[R4]
 46 [-]: GETUPVAL  R3 U2        ; R3 := U2
 47 [-]: SETTABLE  R3 K12 R0    ; R3["SectorName"] := R0
 48 [-]: GETUPVAL  R3 U0        ; R3 := U0
 49 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0xB9C96BA0"]
 50 [-]: LOADK     R5 K14       ; R5 := "SetExclusiveTier"
 51 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 52 [-]: SELF      R7 R1 K15    ; R8 := R1; R7 := R1["0x1B252E3C"]
 53 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 54 [-]: LOADK     R8 K16       ; R8 := "OnVoidProjectionChosen"
 55 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 56 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 57 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 58 [-]: GETUPVAL  R4 U3        ; R4 := U3
 59 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["Movie"]
 60 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 61 [-]: TEST      R3 1         ; if R3 then PC := 69
 62 [-]: JMP       69           ; PC := 69
 63 [-]: GETUPVAL  R3 U3        ; R3 := U3
 64 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["Movie"]
 65 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x458F27A9"]
 66 [-]: LOADK     R5 K19       ; R5 := "ItemBrowsing"
 67 [-]: LOADK     R6 K20       ; R6 := "true"
 68 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 69 [-]: MOVE      R3 R1        ; R3 := R1
 70 [-]: MOVE      R3 R4        ; R3 := R4
 71 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 72 [-]: GETGLOBAL R4 K1        ; R4 := _T
 73 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["SquadOverlay"]
 74 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 75 [-]: TEST      R3 1         ; if R3 then PC := 83
 76 [-]: JMP       83           ; PC := 83
 77 [-]: GETGLOBAL R3 K1        ; R3 := _T
 78 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["SquadOverlay"]
 79 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x458F27A9"]
 80 [-]: LOADK     R5 K22       ; R5 := "OnRadialSolarMapOpenChildMovie"
 81 [-]: LOADK     R6 K23       ; R6 := ""
 82 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 83 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 3566
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U2        ; R2 := U2
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Movie"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Movie"]
 12 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
 13 [-]: LOADK     R3 K3        ; R3 := "ItemBrowsing"
 14 [-]: LOADK     R4 K4        ; R4 := "false"
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 17 [-]: GETGLOBAL R2 K5        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["SquadOverlay"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R1 K5        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["SquadOverlay"]
 24 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
 25 [-]: LOADK     R3 K7        ; R3 := "OnRadialSolarMapCloseChildMovie"
 26 [-]: LOADK     R4 K8        ; R4 := ""
 27 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 28 [-]: EQ        0 R0 K9      ; if R0 ~= "true" then PC := 42
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETUPVAL  R1 U3        ; R1 := U3
 31 [-]: GETUPVAL  R2 U4        ; R2 := U4
 32 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["SectorName"]
 33 [-]: GETUPVAL  R3 U5        ; R3 := U5
 34 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["ACTIVE_MISSION_TAG"]
 35 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 36 [-]: LOADK     R3 K8        ; R3 := ""
 37 [-]: LOADK     R4 K8        ; R4 := ""
 38 [-]: LOADK     R5 K8        ; R5 := ""
 39 [-]: GETUPVAL  R6 U4        ; R6 := U4
 40 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["MissionTier"]
 41 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 42 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 3583
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 3586
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R1 K0        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedSkullNodes"]
  6 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K0        ; R1 := _T
 11 [-]: SETTABLE  R1 K3 R0     ; R1["gNightmareNodeName"] := R0
 12 [-]: GETGLOBAL R1 K4        ; R1 := Engine
 13 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xF271473D"]
 14 [-]: CALL      R1 1 2       ; R1 := R1()
 15 [-]: GETGLOBAL R2 K4        ; R2 := Engine
 16 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["ThreeOptions"]
 17 [-]: SETTABLE  R1 K6 R2     ; R1["dialogType"] := R2
 18 [-]: SETTABLE  R1 K8 K9     ; R1["locString"] := "/Lotus/Language/Menu/ConfirmNightmare"
 19 [-]: SETTABLE  R1 K10 K11   ; R1["firstString"] := "/Lotus/Language/Menu/ConfirmNightmareYes"
 20 [-]: SETTABLE  R1 K12 K13   ; R1["secondString"] := "/Lotus/Language/Menu/ConfirmNightmareNo"
 21 [-]: SETTABLE  R1 K14 K15   ; R1["thirdString"] := "/Menu/Confirm_Item_Cancel"
 22 [-]: SELF      R2 R1 K16    ; R3 := R1; R2 := R1["0x69A4A158"]
 23 [-]: LOADK     R4 K17       ; R4 := "ConfirmNightmare"
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: GETUPVAL  R2 U1        ; R2 := U1
 26 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0x82F0B112"]
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: MOVE      R2 R0        ; R2 := R0
 30 [-]: MOVE      R2 R1        ; R2 := R1
 31 [-]: MOVE      R2 R2        ; R2 := R2
 32 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 3605
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CI_CANCEL"]
  6 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R1 K2        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["gNightmareNodeName"]
 11 [-]: GETGLOBAL R2 K0        ; R2 := Engine
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["CI_GENERIC_1"]
 13 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETGLOBAL R2 K5        ; R2 := _G
 16 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["CachedGoalInfo"]
 17 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 18 [-]: TEST      R2 0         ; if not R2 then PC := 33
 19 [-]: JMP       33           ; PC := 33
 20 [-]: MOVE      R2 R1        ; R2 := R1
 21 [-]: GETUPVAL  R3 U2        ; R3 := U2
 22 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["EVENT_TAG"]
 23 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 24 [-]: JMP       33           ; PC := 33
 25 [-]: GETGLOBAL R2 K0        ; R2 := Engine
 26 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["CI_SELECT"]
 27 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: MOVE      R2 R1        ; R2 := R1
 30 [-]: GETUPVAL  R3 U2        ; R3 := U2
 31 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["NIGHTMARE_TAG"]
 32 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 33 [-]: GETUPVAL  R2 U3        ; R2 := U3
 34 [-]: MOVE      R3 R1        ; R3 := R1
 35 [-]: LOADK     R4 K10       ; R4 := ""
 36 [-]: LOADK     R5 K10       ; R5 := ""
 37 [-]: LOADK     R6 K10       ; R6 := ""
 38 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 39 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 3626
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 3629
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: GETUPVAL  R5 U0        ; R5 := U0
  3 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["MovieInst"]
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: TEST      R4 1         ; if R4 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  9 [-]: GETUPVAL  R5 U1        ; R5 := U1
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Movie"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 1         ; if R4 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETUPVAL  R4 U1        ; R4 := U1
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Movie"]
 16 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x458F27A9"]
 17 [-]: LOADK     R6 K4        ; R6 := "ItemBrowsing"
 18 [-]: LOADK     R7 K5        ; R7 := "true"
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: SETTABLE  R4 K6 R0     ; R4["SectorName"] := R0
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: SETTABLE  R4 K7 R2     ; R4["Quest"] := R2
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: SETTABLE  R4 K8 R3     ; R4["Difficulty"] := R3
 26 [-]: GETUPVAL  R4 U0        ; R4 := U0
 27 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 28 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x5FF274BB"]
 29 [-]: GETGLOBAL R7 K11       ; R7 := wagerMovie
 30 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 31 [-]: SETTABLE  R4 K1 R5     ; R4["MovieInst"] := R5
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: GETUPVAL  R4 U0        ; R4 := U0
 35 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["MovieInst"]
 36 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0xB9C96BA0"]
 37 [-]: LOADK     R6 K13       ; R6 := "SetSectorNameAndCloseCallback"
 38 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 39 [-]: MOVE      R8 R1        ; R8 := R1
 40 [-]: LOADK     R9 K14       ; R9 := "ConfirmWagerSelection"
 41 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 42 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 43 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 44 [-]: GETGLOBAL R5 K15       ; R5 := _T
 45 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["SquadOverlay"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 1         ; if R4 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: GETGLOBAL R4 K15       ; R4 := _T
 50 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["SquadOverlay"]
 51 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x458F27A9"]
 52 [-]: LOADK     R6 K17       ; R6 := "OnRadialSolarMapOpenChildMovie"
 53 [-]: LOADK     R7 K18       ; R7 := ""
 54 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 55 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 3652
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SETTABLE  R2 K0 K1     ; R2["MovieInst"] := nil
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  6 [-]: GETUPVAL  R3 U2        ; R3 := U2
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Movie"]
 13 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 14 [-]: LOADK     R4 K5        ; R4 := "ItemBrowsing"
 15 [-]: LOADK     R5 K6        ; R5 := "false"
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 18 [-]: GETGLOBAL R3 K7        ; R3 := _T
 19 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["SquadOverlay"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R2 K7        ; R2 := _T
 24 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SquadOverlay"]
 25 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 26 [-]: LOADK     R4 K9        ; R4 := "OnRadialSolarMapCloseChildMovie"
 27 [-]: LOADK     R5 K10       ; R5 := ""
 28 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 29 [-]: TEST      R0 0         ; if not R0 then PC := 55
 30 [-]: JMP       55           ; PC := 55
 31 [-]: EQ        1 R0 K6      ; if R0 == "false" then PC := 55
 32 [-]: JMP       55           ; PC := 55
 33 [-]: GETUPVAL  R2 U3        ; R2 := U3
 34 [-]: GETUPVAL  R3 U0        ; R3 := U0
 35 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Quest"]
 36 [-]: TEST      R3 0         ; if not R3 then PC := 42
 37 [-]: JMP       42           ; PC := 42
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SectorName"]
 40 [-]: TEST      R3 1         ; if R3 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R3 R0        ; R3 := R0
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["Quest"]
 45 [-]: LOADNIL   R5 R5        ; R5 := nil
 46 [-]: GETUPVAL  R6 U0        ; R6 := U0
 47 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["Difficulty"]
 48 [-]: LOADNIL   R7 R7        ; R7 := nil
 49 [-]: MOVE      R8 R1        ; R8 := R1
 50 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 51 [-]: TEST      R2 1         ; if R2 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: RETURN    R0 1         ; return 
 54 [-]: JMP       57           ; PC := 57
 55 [-]: GETGLOBAL R2 K7        ; R2 := _T
 56 [-]: SETTABLE  R2 K14 K15   ; R2["MadeWagerChoice"] := "0x0"
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: SETTABLE  R2 K12 K10   ; R2["SectorName"] := ""
 59 [-]: GETUPVAL  R2 U0        ; R2 := U0
 60 [-]: SETTABLE  R2 K11 K1    ; R2["Quest"] := nil
 61 [-]: GETUPVAL  R2 U0        ; R2 := U0
 62 [-]: SETTABLE  R2 K13 K16   ; R2["Difficulty"] := 0
 63 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 3677
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  5 [-]: TEST      R0 1         ; if R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x48FBE19F"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: LOADK     R1 K3        ; R1 := 1
 12 [-]: LEN       R2 R0        ; R2 := # R0
 13 [-]: LOADK     R3 K3        ; R3 := 1
 14 [-]: FORPREP   R1 25        ; R1 -= R3; PC := 25
 15 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 16 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x8F6EA7B6"]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: TEST      R5 1         ; if R5 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R5 K5        ; R5 := gMatchingService
 21 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0xFE13353B"]
 22 [-]: GETTABLE  R7 R0 R4     ; R7 := R0[R4]
 23 [-]: MOVE      R8 R0        ; R8 := R0
 24 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 25 [-]: FORLOOP   R1 15        ; R1 += R3; if R1 <= R2 then begin PC := 15; R4 := R1 end
 26 [-]: GETUPVAL  R5 U1        ; R5 := U1
 27 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["Node"]
 28 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["radialSector"]
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mission"]
 30 [-]: GETGLOBAL R6 K9        ; R6 := 0x9FAED6BC
 31 [-]: GETUPVAL  R7 U1        ; R7 := U1
 32 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["SectorName"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: GETGLOBAL R7 K11       ; R7 := string
 35 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["0xDE44F664"]
 36 [-]: MOVE      R8 R6        ; R8 := R6
 37 [-]: GETUPVAL  R9 U2        ; R9 := U2
 38 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["KEY_TAG"]
 39 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 40 [-]: EQ        1 R7 K14     ; if R7 == nil then PC := 71
 41 [-]: JMP       71           ; PC := 71
 42 [-]: GETGLOBAL R8 K11       ; R8 := string
 43 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["0x7B782033"]
 44 [-]: MOVE      R9 R6        ; R9 := R6
 45 [-]: LOADK     R10 K3       ; R10 := 1
 46 [-]: SUB       R11 R7 K3    ; R11 := R7 - 1
 47 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 48 [-]: GETGLOBAL R9 K16       ; R9 := 0x7C282057
 49 [-]: MOVE      R10 R8       ; R10 := R8
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: GETGLOBAL R10 K17      ; R10 := 0x400E7765
 52 [-]: MOVE      R11 R9       ; R11 := R9
 53 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 54 [-]: TEST      R10 1        ; if R10 then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: GETGLOBAL R10 K19      ; R10 := 0x2C00D429
 57 [-]: MOVE      R11 R8       ; R11 := R8
 58 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 59 [-]: SETTABLE  R5 K18 R10   ; R5["levelKeyName"] := R10
 60 [-]: GETUPVAL  R10 U1       ; R10 := U1
 61 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 62 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 63 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["keyChain"]
 64 [-]: TEST      R10 0        ; if not R10 then PC := 71
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETUPVAL  R10 U1       ; R10 := U1
 67 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 68 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 69 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["keyChain"]
 70 [-]: SETTABLE  R5 K21 R10   ; R5["keyChainName"] := R10
 71 [-]: GETUPVAL  R10 U1       ; R10 := U1
 72 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 73 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 74 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["name"]
 75 [-]: GETUPVAL  R11 U1       ; R11 := U1
 76 [-]: SETTABLE  R11 K0 K14   ; R11["Node"] := nil
 77 [-]: GETGLOBAL R11 K23      ; R11 := _T
 78 [-]: SETTABLE  R11 K24 K25  ; R11["StartingSoloMission"] := "0x1"
 79 [-]: GETUPVAL  R11 U3       ; R11 := U3
 80 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["0xCFE73DF8"]
 81 [-]: MOVE      R12 R10      ; R12 := R10
 82 [-]: MOVE      R13 R5       ; R13 := R5
 83 [-]: GETUPVAL  R14 U4       ; R14 := U4
 84 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["0xF81722A2"]
 85 [-]: GETGLOBAL R15 K17      ; R15 := 0x400E7765
 86 [-]: GETTABLE  R16 R5 K18   ; R16 := R5["levelKeyName"]
 87 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 88 [-]: MOVE      R15 R15      ; R15 := R15
 89 [-]: GETTABLE  R16 R5 K18   ; R16 := R5["levelKeyName"]
 90 [-]: LOADNIL   R17 R17      ; R17 := nil
 91 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
 92 [-]: CALL      R11 0 1      ; R11(R12,...)
 93 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 3713
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CI_CANCEL"]
  6 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: SETTABLE  R1 K2 K3     ; R1["Node"] := nil
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
 13 [-]: TEST      R1 1         ; if R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: MOVE      R1 R1        ; R1 := R1
 17 [-]: MOVE      R1 R1        ; R1 := R1
 18 [-]: GETGLOBAL R1 K4        ; R1 := 0x93B1256B
 19 [-]: LOADK     R2 K5        ; R2 := "ConfirmSoloMission"
 20 [-]: CALL      R1 2 1       ; R1(R2)
 21 [-]: GETGLOBAL R1 K6        ; R1 := gMatchingService
 22 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x1E13A326"]
 23 [-]: LOADK     R3 K8        ; R3 := "OpenSoloMission"
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 3731
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["BackgroundMovie"]
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
  6 [-]: LOADK     R3 K3        ; R3 := "ShowBlockingMessage"
  7 [-]: LOADK     R4 K4        ; R4 := "0"
  8 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  9 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xB7E9C2EF"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: GETTABLE  R2 R1 K7     ; R2 := R1["playerCount"]
 19 [-]: GETGLOBAL R3 K0        ; R3 := _T
 20 [-]: CLOSURE   R4 0         ; R4 := closure(Function #103.1)
 21 [-]: GETUPVAL  R0 U2        ; R0 := U2
 22 [-]: GETUPVAL  R0 U3        ; R0 := U3
 23 [-]: GETUPVAL  R0 U4        ; R0 := U4
 24 [-]: GETUPVAL  R0 U5        ; R0 := U5
 25 [-]: GETUPVAL  R0 U6        ; R0 := U6
 26 [-]: SETTABLE  R3 K8 R4     ; R3["MenuSelectionDone"] := R4
 27 [-]: TEST      R0 0         ; if not R0 then PC := 74
 28 [-]: JMP       74           ; PC := 74
 29 [-]: GETUPVAL  R3 U5        ; R3 := U5
 30 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mAutoJoinIfNotBusy"]
 31 [-]: TEST      R3 0         ; if not R3 then PC := 74
 32 [-]: JMP       74           ; PC := 74
 33 [-]: GETUPVAL  R3 U5        ; R3 := U5
 34 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mBusyPlayerLoad"]
 35 [-]: LT        0 K11 R3     ; if 0 >= R3 then PC := 74
 36 [-]: JMP       74           ; PC := 74
 37 [-]: MOVE      R3 R1        ; R3 := R1
 38 [-]: LOADK     R4 K12       ; R4 := 2
 39 [-]: LEN       R5 R2        ; R5 := # R2
 40 [-]: LOADK     R6 K13       ; R6 := 1
 41 [-]: FORPREP   R4 47        ; R4 -= R6; PC := 47
 42 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 43 [-]: LT        0 K11 R8     ; if 0 >= R8 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: MOVE      R3 R0        ; R3 := R0
 46 [-]: JMP       48           ; PC := 48
 47 [-]: FORLOOP   R4 42        ; R4 += R6; if R4 <= R5 then begin PC := 42; R7 := R4 end
 48 [-]: TEST      R3 0         ; if not R3 then PC := 74
 49 [-]: JMP       74           ; PC := 74
 50 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[1]
 51 [-]: GETTABLE  R9 R1 K14    ; R9 := R1["hubCapacity"]
 52 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 53 [-]: GETUPVAL  R9 U5        ; R9 := U5
 54 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mBusyPlayerLoad"]
 55 [-]: LE        0 R8 R9      ; if R8 > R9 then PC := 74
 56 [-]: JMP       74           ; PC := 74
 57 [-]: GETGLOBAL R9 K5        ; R9 := 0x400E7765
 58 [-]: GETUPVAL  R10 U2       ; R10 := U2
 59 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 60 [-]: TEST      R9 1         ; if R9 then PC := 65
 61 [-]: JMP       65           ; PC := 65
 62 [-]: GETUPVAL  R9 U2        ; R9 := U2
 63 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0xA58BB96C"]
 64 [-]: CALL      R9 2 1       ; R9(R10)
 65 [-]: GETGLOBAL R9 K0        ; R9 := _T
 66 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["0x968C0654"]
 67 [-]: NEWTABLE  R10 1 0      ; R10 := {}
 68 [-]: NEWTABLE  R11 0 2      ; R11 := {}
 69 [-]: SETTABLE  R11 K17 K11  ; R11["Instance"] := 0
 70 [-]: SETTABLE  R11 K18 K19  ; R11["IsFull"] := "0x0"
 71 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
 72 [-]: CALL      R9 2 1       ; R9(R10)
 73 [-]: RETURN    R0 1         ; return 
 74 [-]: CLOSURE   R9 1         ; R9 := closure(Function #103.2)
 75 [-]: GETUPVAL  R0 U5        ; R0 := U5
 76 [-]: GETGLOBAL R10 K20      ; R10 := mMovie
 77 [-]: SELF      R10 R10 K21  ; R11 := R10; R10 := R10["0x5FF274BB"]
 78 [-]: GETGLOBAL R12 K22      ; R12 := genericMenuMovie
 79 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 80 [-]: MOVE      R10 R2       ; R10 := R2
 81 [-]: GETUPVAL  R10 U2       ; R10 := U2
 82 [-]: SELF      R10 R10 K2   ; R11 := R10; R10 := R10["0x458F27A9"]
 83 [-]: LOADK     R12 K23      ; R12 := "SetTitle"
 84 [-]: LOADK     R13 K24      ; R13 := "/Lotus/Language/Menu/ConfirmMultiHubInstance"
 85 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 86 [-]: GETUPVAL  R10 U2       ; R10 := U2
 87 [-]: SELF      R10 R10 K2   ; R11 := R10; R10 := R10["0x458F27A9"]
 88 [-]: LOADK     R12 K25      ; R12 := "SetCallBack"
 89 [-]: LOADK     R13 K8       ; R13 := "MenuSelectionDone"
 90 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 91 [-]: TEST      R0 0         ; if not R0 then PC := 101
 92 [-]: JMP       101          ; PC := 101
 93 [-]: GETGLOBAL R10 K0       ; R10 := _T
 94 [-]: CLOSURE   R11 2        ; R11 := closure(Function #103.3)
 95 [-]: MOVE      R0 R2        ; R0 := R2
 96 [-]: MOVE      R0 R1        ; R0 := R1
 97 [-]: MOVE      R0 R9        ; R0 := R9
 98 [-]: GETUPVAL  R0 U5        ; R0 := U5
 99 [-]: SETTABLE  R10 K26 R11  ; R10["GetMenuEntries"] := R11
100 [-]: JMP       105          ; PC := 105
101 [-]: GETGLOBAL R10 K0       ; R10 := _T
102 [-]: CLOSURE   R11 3        ; R11 := closure(Function #103.4)
103 [-]: GETUPVAL  R0 U5        ; R0 := U5
104 [-]: SETTABLE  R10 K26 R11  ; R10["GetMenuEntries"] := R11
105 [-]: GETUPVAL  R10 U2       ; R10 := U2
106 [-]: SELF      R10 R10 K2   ; R11 := R10; R10 := R10["0x458F27A9"]
107 [-]: LOADK     R12 K27      ; R12 := "SetElementsFunction"
108 [-]: LOADK     R13 K26      ; R13 := "GetMenuEntries"
109 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
110 [-]: RETURN    R0 1         ; return 


; Function #103.1:
;
; Name:            
; Defined at line: 3763
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetComponents"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["ResetSelectionDone"] := nil
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
  8 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 69
  9 [-]: JMP       69           ; PC := 69
 10 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
 11 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Instance"]
 12 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 69
 13 [-]: JMP       69           ; PC := 69
 14 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["IsFull"]
 16 [-]: EQ        0 R1 K7      ; if R1 ~= "0x1" then PC := 28
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETGLOBAL R1 K8        ; R1 := mMovie
 19 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 20 [-]: LOADK     R3 K10       ; R3 := "/Lotus/Language/Menu/MissionInstanceIsFull"
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 23 [-]: GETUPVAL  R2 U1        ; R2 := U1
 24 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["0xB11F032"]
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: CALL      R2 2 1       ; R2(R3)
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R2 K12       ; R2 := gMatchingService
 29 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x35DDC67D"]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: LT        0 K4 R2      ; if 1 >= R2 then PC := 46
 32 [-]: JMP       46           ; PC := 46
 33 [-]: GETUPVAL  R2 U2        ; R2 := U2
 34 [-]: GETUPVAL  R3 U3        ; R3 := U3
 35 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["sectorName"]
 36 [-]: GETUPVAL  R4 U4        ; R4 := U4
 37 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["HUB_TAG"]
 38 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 39 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 40 [-]: LOADK     R6 K16       ; R6 := 0.5
 41 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 42 [-]: TEST      R2 1         ; if R2 then PC := 64
 43 [-]: JMP       64           ; PC := 64
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: JMP       64           ; PC := 64
 46 [-]: GETUPVAL  R2 U2        ; R2 := U2
 47 [-]: GETUPVAL  R3 U3        ; R3 := U3
 48 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["sectorName"]
 49 [-]: GETUPVAL  R4 U4        ; R4 := U4
 50 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["HUB_TAG"]
 51 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 52 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 53 [-]: LOADK     R6 K16       ; R6 := 0.5
 54 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 55 [-]: TEST      R2 1         ; if R2 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: RETURN    R0 1         ; return 
 58 [-]: GETGLOBAL R2 K0        ; R2 := _T
 59 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["SquadOverlay"]
 60 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x458F27A9"]
 61 [-]: LOADK     R4 K19       ; R4 := "NotifyForceLoadSoloMission"
 62 [-]: LOADK     R5 K20       ; R5 := "dontLockSession"
 63 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 64 [-]: GETGLOBAL R2 K12       ; R2 := gMatchingService
 65 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0xEDAA4B70"]
 66 [-]: GETTABLE  R4 R0 K4     ; R4 := R0[1]
 67 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["Instance"]
 68 [-]: CALL      R2 3 1       ; R2(R3,R4)
 69 [-]: RETURN    R0 1         ; return 


; Function #103.2:
;
; Name:            
; Defined at line: 3819
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: DIV       R2 R0 R1     ; R2 := R0 / R1
  2 [-]: LOADNIL   R3 R3        ; R3 := nil
  3 [-]: EQ        0 R2 K0      ; if R2 ~= 0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADK     R3 K1        ; R3 := "HubInstanceEmpty"
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mBusyPlayerLoad"]
  9 [-]: LT        0 R2 R4      ; if R2 >= R4 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADK     R3 K3        ; R3 := "HubInstanceCalm"
 12 [-]: JMP       18           ; PC := 18
 13 [-]: LT        0 R2 K4      ; if R2 >= 1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADK     R3 K5        ; R3 := "HubInstanceBusy"
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADK     R3 K6        ; R3 := "HubInstanceFull"
 18 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
 19 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 20 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/"
 21 [-]: MOVE      R7 R3        ; R7 := R3
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: RETURN    R4 2         ; return R4
 26 [-]: RETURN    R0 1         ; return 


; Function #103.3:
;
; Name:            
; Defined at line: 3843
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: LOADK     R2 K0        ; R2 := 1
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: LEN       R3 R3        ; R3 := # R3
  6 [-]: LOADK     R4 K0        ; R4 := 1
  7 [-]: FORPREP   R2 64        ; R2 -= R4; PC := 64
  8 [-]: GETUPVAL  R6 U0        ; R6 := U0
  9 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 10 [-]: GETUPVAL  R7 U1        ; R7 := U1
 11 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["hubCapacity"]
 12 [-]: LE        1 R7 R6      ; if R7 <= R6 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: GETUPVAL  R7 U2        ; R7 := U2
 17 [-]: GETUPVAL  R8 U0        ; R8 := U0
 18 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 19 [-]: GETUPVAL  R9 U1        ; R9 := U1
 20 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["hubCapacity"]
 21 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 22 [-]: GETUPVAL  R8 U0        ; R8 := U0
 23 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 24 [-]: GETUPVAL  R9 U1        ; R9 := U1
 25 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["hubCapacity"]
 26 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 27 [-]: GETUPVAL  R9 U3        ; R9 := U3
 28 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["mBusyPlayerLoad"]
 29 [-]: LE        1 R9 R8      ; if R9 <= R8 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: MOVE      R8 R0        ; R8 := R0
 32 [-]: MOVE      R8 R1        ; R8 := R1
 33 [-]: TEST      R6 1         ; if R6 then PC := 61
 34 [-]: JMP       61           ; PC := 61
 35 [-]: GETUPVAL  R9 U0        ; R9 := U0
 36 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 37 [-]: LT        1 K3 R9      ; if 0 < R9 then PC := 42
 38 [-]: JMP       42           ; PC := 42
 39 [-]: LEN       R9 R0        ; R9 := # R0
 40 [-]: EQ        0 R9 K3      ; if R9 ~= 0 then PC := 61
 41 [-]: JMP       61           ; PC := 61
 42 [-]: GETGLOBAL R9 K4        ; R9 := table
 43 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["0xE6450C9D"]
 44 [-]: MOVE      R10 R0       ; R10 := R0
 45 [-]: NEWTABLE  R11 0 3      ; R11 := {}
 46 [-]: GETGLOBAL R12 K7       ; R12 := string
 47 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["0x639C642A"]
 48 [-]: GETUPVAL  R13 U3       ; R13 := U3
 49 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["sectorLoc"]
 50 [-]: LOADK     R14 K10      ; R14 := " "
 51 [-]: MOVE      R15 R5       ; R15 := R5
 52 [-]: LOADK     R16 K11      ; R16 := ": "
 53 [-]: MOVE      R17 R7       ; R17 := R7
 54 [-]: CONCAT    R13 R13 R17  ; R13 := R13 .. R14 .. R15 .. R16 .. R17
 55 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 56 [-]: SETTABLE  R11 K6 R12   ; R11["mName"] := R12
 57 [-]: SUB       R12 R5 K0    ; R12 := R5 - 1
 58 [-]: SETTABLE  R11 K12 R12  ; R11["Instance"] := R12
 59 [-]: SETTABLE  R11 K13 R6   ; R11["IsFull"] := R6
 60 [-]: CALL      R9 3 1       ; R9(R10,R11)
 61 [-]: TEST      R8 1         ; if R8 then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: MOVE      R1 R0        ; R1 := R0
 64 [-]: FORLOOP   R2 8         ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
 65 [-]: TEST      R1 1         ; if R1 then PC := 70
 66 [-]: JMP       70           ; PC := 70
 67 [-]: LEN       R9 R0        ; R9 := # R0
 68 [-]: EQ        0 R9 K3      ; if R9 ~= 0 then PC := 97
 69 [-]: JMP       97           ; PC := 97
 70 [-]: GETUPVAL  R9 U0        ; R9 := U0
 71 [-]: LEN       R9 R9        ; R9 := # R9
 72 [-]: ADD       R9 R9 K0     ; R9 := R9 + 1
 73 [-]: GETUPVAL  R10 U2       ; R10 := U2
 74 [-]: LOADK     R11 K3       ; R11 := 0
 75 [-]: GETUPVAL  R12 U1       ; R12 := U1
 76 [-]: GETTABLE  R12 R12 K1   ; R12 := R12["hubCapacity"]
 77 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 78 [-]: GETGLOBAL R11 K4       ; R11 := table
 79 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["0xE6450C9D"]
 80 [-]: MOVE      R12 R0       ; R12 := R0
 81 [-]: NEWTABLE  R13 0 3      ; R13 := {}
 82 [-]: GETGLOBAL R14 K7       ; R14 := string
 83 [-]: GETTABLE  R14 R14 K8   ; R14 := R14["0x639C642A"]
 84 [-]: GETUPVAL  R15 U3       ; R15 := U3
 85 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["sectorLoc"]
 86 [-]: LOADK     R16 K10      ; R16 := " "
 87 [-]: MOVE      R17 R9       ; R17 := R9
 88 [-]: LOADK     R18 K11      ; R18 := ": "
 89 [-]: MOVE      R19 R10      ; R19 := R10
 90 [-]: CONCAT    R15 R15 R19  ; R15 := R15 .. R16 .. R17 .. R18 .. R19
 91 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 92 [-]: SETTABLE  R13 K6 R14   ; R13["mName"] := R14
 93 [-]: SUB       R14 R9 K0    ; R14 := R9 - 1
 94 [-]: SETTABLE  R13 K12 R14  ; R13["Instance"] := R14
 95 [-]: SETTABLE  R13 K13 K14  ; R13["IsFull"] := "0x0"
 96 [-]: CALL      R11 3 1      ; R11(R12,R13)
 97 [-]: RETURN    R0 2         ; return R0
 98 [-]: RETURN    R0 1         ; return 


; Function #103.4:
;
; Name:            
; Defined at line: 3874
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := string
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x639C642A"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["sectorLoc"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K3        ; R2 := table
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xE6450C9D"]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: LOADK     R6 K6        ; R6 := " 1"
 13 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 14 [-]: SETTABLE  R4 K5 R5     ; R4["mName"] := R5
 15 [-]: SETTABLE  R4 K7 K8     ; R4["Instance"] := 0
 16 [-]: SETTABLE  R4 K9 K10    ; R4["IsFull"] := "0x0"
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 3886
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["name"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: SETTABLE  R2 K2 R1     ; R2["sectorName"] := R1
  6 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  7 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x5DB0BD4"]
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x9FAED6BC
  9 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["locTag"]
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 13 [-]: GETGLOBAL R3 K6        ; R3 := string
 14 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x633C4246"]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: LOADK     R5 K8        ; R5 := "Relay"
 17 [-]: LOADK     R6 K9        ; R6 := ""
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: MOVE      R2 R3        ; R2 := R3
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: SETTABLE  R3 K10 R2    ; R3["sectorLoc"] := R2
 22 [-]: GETGLOBAL R3 K11       ; R3 := 0x400E7765
 23 [-]: GETUPVAL  R4 U1        ; R4 := U1
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: TEST      R3 0         ; if not R3 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: MOVE      R3 R1        ; R3 := R1
 29 [-]: MOVE      R3 R2        ; R3 := R2
 30 [-]: GETGLOBAL R3 K12       ; R3 := _T
 31 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["BackgroundMovie"]
 32 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x458F27A9"]
 33 [-]: LOADK     R5 K15       ; R5 := "ShowBlockingMessage"
 34 [-]: LOADK     R6 K16       ; R6 := "2"
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0xF2773BCF"]
 38 [-]: LOADK     R5 K18       ; R5 := "GotHubInstances"
 39 [-]: CALL      R3 3 1       ; R3(R4,R5)
 40 [-]: GETUPVAL  R3 U1        ; R3 := U1
 41 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x1F59D76E"]
 42 [-]: MOVE      R5 R1        ; R5 := R1
 43 [-]: CALL      R3 3 1       ; R3(R4,R5)
 44 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 3907
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x87B2D555"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["FactionNames"]
  7 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["faction"]
  8 [-]: ADD       R3 R3 K3     ; R3 := R3 + 1
  9 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0xE6DC43B0
 11 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Game/MissionName_"
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: LOADK     R4 K6        ; R4 := " - "
 17 [-]: GETGLOBAL R5 K4        ; R5 := 0xE6DC43B0
 18 [-]: MOVE      R6 R2        ; R6 := R2
 19 [-]: MOVE      R7 R0        ; R7 := R0
 20 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 21 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 22 [-]: RETURN    R3 2         ; return R3
 23 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 3913
; #Upvalues:       16
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x9FAED6BC
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["name"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
  5 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["difficulty"]
  6 [-]: MOVE      R5 R3        ; R5 := R3
  7 [-]: LOADK     R6 K4        ; R6 := "QUEST"
  8 [-]: LOADK     R7 K5        ; R7 := "RAID"
  9 [-]: GETGLOBAL R8 K6        ; R8 := string
 10 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xDE44F664"]
 11 [-]: MOVE      R9 R5        ; R9 := R5
 12 [-]: GETUPVAL  R10 U0       ; R10 := U0
 13 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["KEY_TAG"]
 14 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 15 [-]: TEST      R8 0         ; if not R8 then PC := 50
 16 [-]: JMP       50           ; PC := 50
 17 [-]: LOADNIL   R8 R8        ; R8 := nil
 18 [-]: GETGLOBAL R9 K6        ; R9 := string
 19 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["0xDE44F664"]
 20 [-]: MOVE      R10 R5       ; R10 := R5
 21 [-]: GETUPVAL  R11 U0       ; R11 := U0
 22 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["KEY_TAG"]
 23 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 24 [-]: EQ        1 R9 K9      ; if R9 == nil then PC := 50
 25 [-]: JMP       50           ; PC := 50
 26 [-]: GETGLOBAL R10 K6       ; R10 := string
 27 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["0x7B782033"]
 28 [-]: MOVE      R11 R5       ; R11 := R5
 29 [-]: LOADK     R12 K11      ; R12 := 1
 30 [-]: SUB       R13 R9 K11   ; R13 := R9 - 1
 31 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 32 [-]: GETGLOBAL R11 K12      ; R11 := 0x7C282057
 33 [-]: MOVE      R12 R10      ; R12 := R10
 34 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 35 [-]: MOVE      R8 R11       ; R8 := R11
 36 [-]: GETGLOBAL R11 K13      ; R11 := 0x400E7765
 37 [-]: MOVE      R12 R8       ; R12 := R8
 38 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 39 [-]: TEST      R11 1        ; if R11 then PC := 50
 40 [-]: JMP       50           ; PC := 50
 41 [-]: SELF      R11 R8 K14   ; R12 := R8; R11 := R8["0x625DA4BB"]
 42 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 43 [-]: GETGLOBAL R12 K15      ; R12 := EMPTY_SYMBOL
 44 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: GETGLOBAL R12 K0       ; R12 := 0x9FAED6BC
 47 [-]: MOVE      R13 R11      ; R13 := R11
 48 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 49 [-]: MOVE      R5 R12       ; R5 := R12
 50 [-]: MOVE      R12 R1       ; R12 := R1
 51 [-]: MOVE      R12 R1       ; R12 := R1
 52 [-]: GETGLOBAL R12 K16      ; R12 := mMovie
 53 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12["0x5FF274BB"]
 54 [-]: GETGLOBAL R14 K18      ; R14 := genericMenuMovie
 55 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 56 [-]: MOVE      R12 R2       ; R12 := R2
 57 [-]: GETUPVAL  R12 U2       ; R12 := U2
 58 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x458F27A9"]
 59 [-]: LOADK     R14 K20      ; R14 := "SetTitle"
 60 [-]: LOADK     R15 K21      ; R15 := "/Lotus/Language/Menu/ConfirmMultiMission"
 61 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 62 [-]: GETGLOBAL R12 K22      ; R12 := _T
 63 [-]: CLOSURE   R13 0        ; R13 := closure(Function #106.1)
 64 [-]: GETUPVAL  R0 U1        ; R0 := U1
 65 [-]: GETUPVAL  R0 U2        ; R0 := U2
 66 [-]: MOVE      R0 R0        ; R0 := R0
 67 [-]: GETUPVAL  R0 U0        ; R0 := U0
 68 [-]: GETUPVAL  R0 U3        ; R0 := U3
 69 [-]: MOVE      R0 R5        ; R0 := R5
 70 [-]: GETUPVAL  R0 U4        ; R0 := U4
 71 [-]: MOVE      R0 R1        ; R0 := R1
 72 [-]: MOVE      R0 R2        ; R0 := R2
 73 [-]: MOVE      R0 R3        ; R0 := R3
 74 [-]: MOVE      R0 R6        ; R0 := R6
 75 [-]: GETUPVAL  R0 U5        ; R0 := U5
 76 [-]: MOVE      R0 R7        ; R0 := R7
 77 [-]: MOVE      R0 R4        ; R0 := R4
 78 [-]: GETUPVAL  R0 U6        ; R0 := U6
 79 [-]: GETUPVAL  R0 U7        ; R0 := U7
 80 [-]: GETUPVAL  R0 U8        ; R0 := U8
 81 [-]: GETUPVAL  R0 U9        ; R0 := U9
 82 [-]: GETUPVAL  R0 U10       ; R0 := U10
 83 [-]: GETUPVAL  R0 U11       ; R0 := U11
 84 [-]: GETUPVAL  R0 U12       ; R0 := U12
 85 [-]: SETTABLE  R12 K23 R13  ; R12["MenuSelectionDone"] := R13
 86 [-]: GETUPVAL  R12 U2       ; R12 := U2
 87 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x458F27A9"]
 88 [-]: LOADK     R14 K24      ; R14 := "SetCallBack"
 89 [-]: LOADK     R15 K23      ; R15 := "MenuSelectionDone"
 90 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 91 [-]: GETGLOBAL R12 K22      ; R12 := _T
 92 [-]: CLOSURE   R13 1        ; R13 := closure(Function #106.2)
 93 [-]: MOVE      R0 R0        ; R0 := R0
 94 [-]: GETUPVAL  R0 U13       ; R0 := U13
 95 [-]: MOVE      R0 R6        ; R0 := R6
 96 [-]: MOVE      R0 R5        ; R0 := R5
 97 [-]: GETUPVAL  R0 U14       ; R0 := U14
 98 [-]: GETUPVAL  R0 U0        ; R0 := U0
 99 [-]: GETUPVAL  R0 U8        ; R0 := U8
100 [-]: GETUPVAL  R0 U6        ; R0 := U6
101 [-]: GETUPVAL  R0 U15       ; R0 := U15
102 [-]: SETTABLE  R12 K25 R13  ; R12["GetMenuEntries"] := R13
103 [-]: GETUPVAL  R12 U2       ; R12 := U2
104 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x458F27A9"]
105 [-]: LOADK     R14 K26      ; R14 := "SetElementsFunction"
106 [-]: LOADK     R15 K25      ; R15 := "GetMenuEntries"
107 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
108 [-]: GETUPVAL  R12 U2       ; R12 := U2
109 [-]: SELF      R12 R12 K27  ; R13 := R12; R12 := R12["0xD692CA7B"]
110 [-]: MOVE      R14 R1       ; R14 := R1
111 [-]: CALL      R12 3 1      ; R12(R13,R14)
112 [-]: RETURN    R0 1         ; return 


; Function #106.1:
;
; Name:            
; Defined at line: 3942
; #Upvalues:       21
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetComponents"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["ResetSelectionDone"] := nil
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: LOADNIL   R1 R1        ; R1 := nil
  8 [-]: MOVE      R1 R1        ; R1 := R1
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mission"]
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xA4269DBC"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 14 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 214
 15 [-]: JMP       214          ; PC := 214
 16 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 18 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 214
 19 [-]: JMP       214          ; PC := 214
 20 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 21 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 22 [-]: GETUPVAL  R3 U3        ; R3 := U3
 23 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["INVASION_ATTACKER_TAG"]
 24 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETUPVAL  R2 U4        ; R2 := U4
 27 [-]: GETUPVAL  R3 U5        ; R3 := U5
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: JMP       214          ; PC := 214
 30 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 31 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 32 [-]: GETUPVAL  R3 U3        ; R3 := U3
 33 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["ACTIVE_MISSION_TAG"]
 34 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 57
 35 [-]: JMP       57           ; PC := 57
 36 [-]: GETGLOBAL R2 K0        ; R2 := _T
 37 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedActiveMissions"]
 38 [-]: TEST      R2 0         ; if not R2 then PC := 57
 39 [-]: JMP       57           ; PC := 57
 40 [-]: GETGLOBAL R2 K0        ; R2 := _T
 41 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedActiveMissions"]
 42 [-]: GETUPVAL  R3 U5        ; R3 := U5
 43 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 44 [-]: TEST      R2 0         ; if not R2 then PC := 57
 45 [-]: JMP       57           ; PC := 57
 46 [-]: GETGLOBAL R2 K0        ; R2 := _T
 47 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedActiveMissions"]
 48 [-]: GETUPVAL  R3 U5        ; R3 := U5
 49 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 50 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
 51 [-]: TEST      R2 0         ; if not R2 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETUPVAL  R2 U6        ; R2 := U6
 54 [-]: GETUPVAL  R3 U5        ; R3 := U5
 55 [-]: CALL      R2 2 1       ; R2(R3)
 56 [-]: JMP       214          ; PC := 214
 57 [-]: GETGLOBAL R2 K12       ; R2 := 0x400E7765
 58 [-]: GETUPVAL  R3 U7        ; R3 := U7
 59 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 60 [-]: TEST      R2 0         ; if not R2 then PC := 73
 61 [-]: JMP       73           ; PC := 73
 62 [-]: GETGLOBAL R2 K12       ; R2 := 0x400E7765
 63 [-]: GETUPVAL  R3 U8        ; R3 := U8
 64 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 65 [-]: TEST      R2 0         ; if not R2 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETUPVAL  R2 U5        ; R2 := U5
 68 [-]: GETTABLE  R3 R0 K6     ; R3 := R0[1]
 69 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MissionTypeTag"]
 70 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 71 [-]: MOVE      R2 R9        ; R2 := R9
 72 [-]: JMP       138          ; PC := 138
 73 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 74 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 75 [-]: GETUPVAL  R3 U10       ; R3 := U10
 76 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 108
 77 [-]: JMP       108          ; PC := 108
 78 [-]: GETUPVAL  R2 U7        ; R2 := U7
 79 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x1B252E3C"]
 80 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 81 [-]: MOVE      R2 R7        ; R2 := R7
 82 [-]: GETUPVAL  R2 U11       ; R2 := U11
 83 [-]: GETUPVAL  R3 U9        ; R3 := U9
 84 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 85 [-]: TEST      R2 0         ; if not R2 then PC := 105
 86 [-]: JMP       105          ; PC := 105
 87 [-]: GETUPVAL  R2 U11       ; R2 := U11
 88 [-]: GETUPVAL  R3 U9        ; R3 := U9
 89 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 90 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["KeyType"]
 91 [-]: TEST      R2 0         ; if not R2 then PC := 105
 92 [-]: JMP       105          ; PC := 105
 93 [-]: GETGLOBAL R2 K15       ; R2 := 0x9FAED6BC
 94 [-]: GETUPVAL  R3 U11       ; R3 := U11
 95 [-]: GETUPVAL  R4 U9        ; R4 := U9
 96 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 97 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["KeyType"]
 98 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1B252E3C"]
 99 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
100 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
101 [-]: GETUPVAL  R3 U3        ; R3 := U3
102 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["KEY_TAG"]
103 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
104 [-]: MOVE      R2 R9        ; R2 := R9
105 [-]: LOADNIL   R2 R2        ; R2 := nil
106 [-]: MOVE      R2 R8        ; R2 := R8
107 [-]: JMP       138          ; PC := 138
108 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
109 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
110 [-]: GETUPVAL  R3 U12       ; R3 := U12
111 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 120
112 [-]: JMP       120          ; PC := 120
113 [-]: GETUPVAL  R2 U8        ; R2 := U8
114 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x1B252E3C"]
115 [-]: CALL      R2 2 2       ; R2 := R2(R3)
116 [-]: MOVE      R2 R8        ; R2 := R8
117 [-]: LOADNIL   R2 R2        ; R2 := nil
118 [-]: MOVE      R2 R7        ; R2 := R7
119 [-]: JMP       138          ; PC := 138
120 [-]: GETUPVAL  R2 U5        ; R2 := U5
121 [-]: GETTABLE  R3 R0 K6     ; R3 := R0[1]
122 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MissionTypeTag"]
123 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
124 [-]: MOVE      R2 R9        ; R2 := R9
125 [-]: LOADNIL   R2 R2        ; R2 := nil
126 [-]: MOVE      R2 R7        ; R2 := R7
127 [-]: LOADNIL   R2 R2        ; R2 := nil
128 [-]: MOVE      R2 R8        ; R2 := R8
129 [-]: LOADNIL   R2 R2        ; R2 := nil
130 [-]: MOVE      R2 R13       ; R2 := R13
131 [-]: GETUPVAL  R2 U14       ; R2 := U14
132 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x4B93F65B"]
133 [-]: GETGLOBAL R4 K18       ; R4 := 0xEC274B1A
134 [-]: GETUPVAL  R5 U5        ; R5 := U5
135 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
136 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
137 [-]: MOVE      R1 R2        ; R1 := R2
138 [-]: GETTABLE  R2 R1 K19    ; R2 := R1["soloMode"]
139 [-]: TEST      R2 0         ; if not R2 then PC := 208
140 [-]: JMP       208          ; PC := 208
141 [-]: GETGLOBAL R2 K20       ; R2 := gMatchingService
142 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x35DDC67D"]
143 [-]: CALL      R2 2 2       ; R2 := R2(R3)
144 [-]: LT        0 K6 R2      ; if 1 >= R2 then PC := 193
145 [-]: JMP       193          ; PC := 193
146 [-]: GETUPVAL  R2 U15       ; R2 := U15
147 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["0x8ECD61A2"]
148 [-]: GETGLOBAL R3 K18       ; R3 := 0xEC274B1A
149 [-]: GETUPVAL  R4 U9        ; R4 := U9
150 [-]: CALL      R3 2 2       ; R3 := R3(R4)
151 [-]: MOVE      R4 R1        ; R4 := R1
152 [-]: MOVE      R5 R1        ; R5 := R1
153 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
154 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 177
155 [-]: JMP       177          ; PC := 177
156 [-]: GETGLOBAL R3 K23       ; R3 := mMovie
157 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3["0x5DB0BD4"]
158 [-]: GETTABLE  R5 R2 K25    ; R5 := R2["text"]
159 [-]: MOVE      R6 R0        ; R6 := R0
160 [-]: NEWTABLE  R7 0 5       ; R7 := {}
161 [-]: GETTABLE  R8 R2 K27    ; R8 := R2["player"]
162 [-]: SETTABLE  R7 K26 R8    ; R7["PLAYER_NAME"] := R8
163 [-]: GETTABLE  R8 R2 K29    ; R8 := R2["value"]
164 [-]: SETTABLE  R7 K28 R8    ; R7["VALUE"] := R8
165 [-]: GETTABLE  R8 R2 K30    ; R8 := R2["MIN"]
166 [-]: SETTABLE  R7 K30 R8    ; R7["MIN"] := R8
167 [-]: GETTABLE  R8 R2 K31    ; R8 := R2["MAX"]
168 [-]: SETTABLE  R7 K31 R8    ; R7["MAX"] := R8
169 [-]: GETTABLE  R8 R2 K32    ; R8 := R2["ITEM"]
170 [-]: SETTABLE  R7 K32 R8    ; R7["ITEM"] := R8
171 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
172 [-]: GETUPVAL  R4 U16       ; R4 := U16
173 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["0xB11F032"]
174 [-]: MOVE      R5 R3        ; R5 := R3
175 [-]: CALL      R4 2 1       ; R4(R5)
176 [-]: JMP       214          ; PC := 214
177 [-]: GETGLOBAL R4 K12       ; R4 := 0x400E7765
178 [-]: GETUPVAL  R5 U17       ; R5 := U17
179 [-]: CALL      R4 2 2       ; R4 := R4(R5)
180 [-]: TEST      R4 0         ; if not R4 then PC := 214
181 [-]: JMP       214          ; PC := 214
182 [-]: GETUPVAL  R4 U18       ; R4 := U18
183 [-]: GETUPVAL  R5 U11       ; R5 := U11
184 [-]: GETUPVAL  R6 U5        ; R6 := U5
185 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
186 [-]: SETTABLE  R4 K34 R5    ; R4["Node"] := R5
187 [-]: GETUPVAL  R4 U18       ; R4 := U18
188 [-]: GETUPVAL  R5 U9        ; R5 := U9
189 [-]: SETTABLE  R4 K35 R5    ; R4["SectorName"] := R5
190 [-]: MOVE      R4 R1        ; R4 := R1
191 [-]: MOVE      R4 R19       ; R4 := R19
192 [-]: JMP       214          ; PC := 214
193 [-]: GETUPVAL  R4 U20       ; R4 := U20
194 [-]: GETUPVAL  R5 U9        ; R5 := U9
195 [-]: GETUPVAL  R6 U7        ; R6 := U7
196 [-]: GETUPVAL  R7 U8        ; R7 := U8
197 [-]: GETUPVAL  R8 U13       ; R8 := U13
198 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
199 [-]: TEST      R4 0         ; if not R4 then PC := 214
200 [-]: JMP       214          ; PC := 214
201 [-]: GETGLOBAL R4 K0        ; R4 := _T
202 [-]: GETTABLE  R4 R4 K36    ; R4 := R4["SquadOverlay"]
203 [-]: SELF      R4 R4 K37    ; R5 := R4; R4 := R4["0x458F27A9"]
204 [-]: LOADK     R6 K38       ; R6 := "NotifyForceLoadSoloMission"
205 [-]: LOADK     R7 K39       ; R7 := ""
206 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
207 [-]: JMP       214          ; PC := 214
208 [-]: GETUPVAL  R4 U20       ; R4 := U20
209 [-]: GETUPVAL  R5 U9        ; R5 := U9
210 [-]: GETUPVAL  R6 U7        ; R6 := U7
211 [-]: GETUPVAL  R7 U8        ; R7 := U8
212 [-]: GETUPVAL  R8 U13       ; R8 := U13
213 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
214 [-]: RETURN    R0 1         ; return 


; Function #106.2:
;
; Name:            
; Defined at line: 4006
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  41

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["keyChain"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 44
  7 [-]: JMP       44           ; PC := 44
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x7C282057
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["keyChain"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 44
 16 [-]: JMP       44           ; PC := 44
 17 [-]: GETGLOBAL R2 K3        ; R2 := 0xE6DC43B0
 18 [-]: GETGLOBAL R3 K4        ; R3 := 0x9FAED6BC
 19 [-]: SELF      R4 R1 K5     ; R5 := R1; R4 := R1["0x616C74B6"]
 20 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 21 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: LOADK     R3 K6        ; R3 := ": "
 25 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 26 [-]: GETGLOBAL R3 K7        ; R3 := table
 27 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0xE6450C9D"]
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 30 [-]: GETGLOBAL R6 K10       ; R6 := string
 31 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["0x639C642A"]
 32 [-]: MOVE      R7 R2        ; R7 := R2
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: GETGLOBAL R7 K10       ; R7 := string
 35 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0x639C642A"]
 36 [-]: GETUPVAL  R8 U1        ; R8 := U1
 37 [-]: CALL      R8 1 0       ; R8,... := R8()
 38 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 39 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 40 [-]: SETTABLE  R5 K9 R6     ; R5["mName"] := R6
 41 [-]: GETUPVAL  R6 U2        ; R6 := U2
 42 [-]: SETTABLE  R5 K12 R6    ; R5["MissionTypeTag"] := R6
 43 [-]: CALL      R3 3 1       ; R3(R4,R5)
 44 [-]: GETGLOBAL R3 K13       ; R3 := _T
 45 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["CachedAlerts"]
 46 [-]: GETUPVAL  R4 U3        ; R4 := U3
 47 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 48 [-]: TEST      R3 0         ; if not R3 then PC := 123
 49 [-]: JMP       123          ; PC := 123
 50 [-]: GETGLOBAL R3 K13       ; R3 := _T
 51 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["CachedAlerts"]
 52 [-]: GETUPVAL  R4 U3        ; R4 := U3
 53 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 54 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mVisible"]
 55 [-]: TEST      R3 0         ; if not R3 then PC := 123
 56 [-]: JMP       123          ; PC := 123
 57 [-]: LOADNIL   R3 R3        ; R3 := nil
 58 [-]: GETGLOBAL R4 K13       ; R4 := _T
 59 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["CachedAlerts"]
 60 [-]: GETUPVAL  R5 U3        ; R5 := U3
 61 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 62 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mAlertInfo"]
 63 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["mTag"]
 64 [-]: GETGLOBAL R5 K18       ; R5 := EMPTY_SYMBOL
 65 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 94
 66 [-]: JMP       94           ; PC := 94
 67 [-]: GETGLOBAL R4 K13       ; R4 := _T
 68 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["CachedAlerts"]
 69 [-]: GETUPVAL  R5 U3        ; R5 := U3
 70 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 71 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mAlertInfo"]
 72 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["mMissionInfo"]
 73 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["descText"]
 74 [-]: GETGLOBAL R5 K18       ; R5 := EMPTY_SYMBOL
 75 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 94
 76 [-]: JMP       94           ; PC := 94
 77 [-]: GETGLOBAL R4 K10       ; R4 := string
 78 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0x639C642A"]
 79 [-]: GETGLOBAL R5 K3        ; R5 := 0xE6DC43B0
 80 [-]: GETGLOBAL R6 K4        ; R6 := 0x9FAED6BC
 81 [-]: GETGLOBAL R7 K13       ; R7 := _T
 82 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["CachedAlerts"]
 83 [-]: GETUPVAL  R8 U3        ; R8 := U3
 84 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 85 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["mAlertInfo"]
 86 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mMissionInfo"]
 87 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["descText"]
 88 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 89 [-]: MOVE      R7 R0        ; R7 := R0
 90 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 91 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 92 [-]: MOVE      R3 R4        ; R3 := R4
 93 [-]: JMP       99           ; PC := 99
 94 [-]: GETGLOBAL R4 K3        ; R4 := 0xE6DC43B0
 95 [-]: LOADK     R5 K21       ; R5 := "/Lotus/Language/Menu/Notification_Alert"
 96 [-]: MOVE      R6 R0        ; R6 := R0
 97 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 98 [-]: MOVE      R3 R4        ; R3 := R4
 99 [-]: MOVE      R4 R3        ; R4 := R3
100 [-]: LOADK     R5 K6        ; R5 := ": "
101 [-]: GETUPVAL  R6 U4        ; R6 := U4
102 [-]: GETGLOBAL R7 K13       ; R7 := _T
103 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["CachedAlerts"]
104 [-]: GETUPVAL  R8 U3        ; R8 := U3
105 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
106 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["mAlertInfo"]
107 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mMissionInfo"]
108 [-]: CALL      R6 2 2       ; R6 := R6(R7)
109 [-]: CONCAT    R3 R4 R6     ; R3 := R4 .. R5 .. R6
110 [-]: GETGLOBAL R4 K7        ; R4 := table
111 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xE6450C9D"]
112 [-]: MOVE      R5 R0        ; R5 := R0
113 [-]: NEWTABLE  R6 0 2       ; R6 := {}
114 [-]: GETGLOBAL R7 K10       ; R7 := string
115 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0x639C642A"]
116 [-]: MOVE      R8 R3        ; R8 := R3
117 [-]: CALL      R7 2 2       ; R7 := R7(R8)
118 [-]: SETTABLE  R6 K9 R7     ; R6["mName"] := R7
119 [-]: GETUPVAL  R7 U5        ; R7 := U5
120 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["ALERT_TAG"]
121 [-]: SETTABLE  R6 K12 R7    ; R6["MissionTypeTag"] := R7
122 [-]: CALL      R4 3 1       ; R4(R5,R6)
123 [-]: GETGLOBAL R4 K23       ; R4 := _G
124 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["CachedGoalInfo"]
125 [-]: GETUPVAL  R5 U3        ; R5 := U3
126 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
127 [-]: TEST      R4 1         ; if R4 then PC := 139
128 [-]: JMP       139          ; PC := 139
129 [-]: GETGLOBAL R4 K23       ; R4 := _G
130 [-]: GETTABLE  R4 R4 K25    ; R4 := R4["MergedGoalNodes"]
131 [-]: TEST      R4 0         ; if not R4 then PC := 236
132 [-]: JMP       236          ; PC := 236
133 [-]: GETGLOBAL R4 K23       ; R4 := _G
134 [-]: GETTABLE  R4 R4 K25    ; R4 := R4["MergedGoalNodes"]
135 [-]: GETUPVAL  R5 U3        ; R5 := U3
136 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
137 [-]: TEST      R4 0         ; if not R4 then PC := 236
138 [-]: JMP       236          ; PC := 236
139 [-]: GETGLOBAL R4 K23       ; R4 := _G
140 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["CachedGoalInfo"]
141 [-]: GETUPVAL  R5 U3        ; R5 := U3
142 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
143 [-]: LOADK     R5 K26       ; R5 := ""
144 [-]: GETTABLE  R6 R4 K27    ; R6 := R4["mDesc"]
145 [-]: GETTABLE  R7 R4 K28    ; R7 := R4["mTypes"]
146 [-]: LEN       R7 R7        ; R7 := # R7
147 [-]: LT        1 K29 R7     ; if 0 < R7 then PC := 157
148 [-]: JMP       157          ; PC := 157
149 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
150 [-]: GETTABLE  R8 R4 K30    ; R8 := R4["mItemType"]
151 [-]: CALL      R7 2 2       ; R7 := R7(R8)
152 [-]: TEST      R7 0         ; if not R7 then PC := 157
153 [-]: JMP       157          ; PC := 157
154 [-]: GETTABLE  R7 R4 K31    ; R7 := R4["mBounty"]
155 [-]: TEST      R7 0         ; if not R7 then PC := 182
156 [-]: JMP       182          ; PC := 182
157 [-]: GETTABLE  R7 R4 K31    ; R7 := R4["mBounty"]
158 [-]: TEST      R7 1         ; if R7 then PC := 163
159 [-]: JMP       163          ; PC := 163
160 [-]: GETTABLE  R7 R4 K32    ; R7 := R4["mMaxConclave"]
161 [-]: LT        0 K29 R7     ; if 0 >= R7 then PC := 177
162 [-]: JMP       177          ; PC := 177
163 [-]: GETUPVAL  R7 U6        ; R7 := U6
164 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["0xF81722A2"]
165 [-]: GETGLOBAL R8 K10       ; R8 := string
166 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["0xDE44F664"]
167 [-]: GETGLOBAL R9 K4        ; R9 := 0x9FAED6BC
168 [-]: GETTABLE  R10 R4 K35   ; R10 := R4["mNode"]
169 [-]: CALL      R9 2 2       ; R9 := R9(R10)
170 [-]: LOADK     R10 K36      ; R10 := "Pvp"
171 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
172 [-]: LOADK     R9 K37       ; R9 := "/Lotus/Language/Menu/Notification_Conclave"
173 [-]: LOADK     R10 K38      ; R10 := "/Lotus/Language/Menu/Notification_Bounty"
174 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
175 [-]: MOVE      R5 R7        ; R5 := R7
176 [-]: JMP       178          ; PC := 178
177 [-]: LOADK     R5 K39       ; R5 := "/Lotus/Language/Menu/Notification_EnemyBounty"
178 [-]: MOVE      R7 R5        ; R7 := R5
179 [-]: LOADK     R8 K6        ; R8 := ": "
180 [-]: CONCAT    R5 R7 R8     ; R5 := R7 .. R8
181 [-]: JMP       214          ; PC := 214
182 [-]: GETTABLE  R7 R4 K40    ; R7 := R4["mFomorian"]
183 [-]: TEST      R7 0         ; if not R7 then PC := 214
184 [-]: JMP       214          ; PC := 214
185 [-]: GETUPVAL  R7 U6        ; R7 := U6
186 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["0xF81722A2"]
187 [-]: GETTABLE  R8 R4 K41    ; R8 := R4["Faction"]
188 [-]: GETGLOBAL R9 K42       ; R9 := Lotus_Game
189 [-]: GETTABLE  R9 R9 K43    ; R9 := R9["FC_GRINEER"]
190 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 193
191 [-]: JMP       193          ; PC := 193
192 [-]: MOVE      R8 R0        ; R8 := R0
193 [-]: MOVE      R8 R1        ; R8 := R1
194 [-]: LOADK     R9 K44       ; R9 := "/Lotus/Language/Menu/Notification_Fomorian"
195 [-]: LOADK     R10 K45      ; R10 := "/Lotus/Language/Menu/CorpusRazorbackProject"
196 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
197 [-]: GETGLOBAL R8 K3        ; R8 := 0xE6DC43B0
198 [-]: MOVE      R9 R7        ; R9 := R7
199 [-]: MOVE      R10 R0       ; R10 := R0
200 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
201 [-]: LOADK     R9 K6        ; R9 := ": "
202 [-]: CONCAT    R5 R8 R9     ; R5 := R8 .. R9
203 [-]: GETUPVAL  R8 U7        ; R8 := U7
204 [-]: SELF      R8 R8 K46    ; R9 := R8; R8 := R8["0xDF213CE1"]
205 [-]: GETTABLE  R10 R4 K47   ; R10 := R4["mVictimNode"]
206 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
207 [-]: GETGLOBAL R9 K3        ; R9 := 0xE6DC43B0
208 [-]: GETGLOBAL R10 K4       ; R10 := 0x9FAED6BC
209 [-]: GETTABLE  R11 R8 K48   ; R11 := R8["locTag"]
210 [-]: CALL      R10 2 2      ; R10 := R10(R11)
211 [-]: MOVE      R11 R0       ; R11 := R0
212 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
213 [-]: MOVE      R6 R9        ; R6 := R9
214 [-]: GETGLOBAL R9 K3        ; R9 := 0xE6DC43B0
215 [-]: MOVE      R10 R5       ; R10 := R5
216 [-]: LOADNIL   R11 R11      ; R11 := nil
217 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
218 [-]: GETGLOBAL R10 K3       ; R10 := 0xE6DC43B0
219 [-]: MOVE      R11 R6       ; R11 := R6
220 [-]: LOADNIL   R12 R12      ; R12 := nil
221 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
222 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
223 [-]: GETGLOBAL R10 K7       ; R10 := table
224 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["0xE6450C9D"]
225 [-]: MOVE      R11 R0       ; R11 := R0
226 [-]: NEWTABLE  R12 0 2      ; R12 := {}
227 [-]: GETGLOBAL R13 K10      ; R13 := string
228 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["0x639C642A"]
229 [-]: MOVE      R14 R9       ; R14 := R9
230 [-]: CALL      R13 2 2      ; R13 := R13(R14)
231 [-]: SETTABLE  R12 K9 R13   ; R12["mName"] := R13
232 [-]: GETUPVAL  R13 U5       ; R13 := U5
233 [-]: GETTABLE  R13 R13 K49  ; R13 := R13["EVENT_TAG"]
234 [-]: SETTABLE  R12 K12 R13  ; R12["MissionTypeTag"] := R13
235 [-]: CALL      R10 3 1      ; R10(R11,R12)
236 [-]: GETGLOBAL R10 K13      ; R10 := _T
237 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["CachedSyndicateMissions"]
238 [-]: GETUPVAL  R11 U3       ; R11 := U3
239 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
240 [-]: TEST      R10 0        ; if not R10 then PC := 279
241 [-]: JMP       279          ; PC := 279
242 [-]: GETGLOBAL R10 K13      ; R10 := _T
243 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["CachedSyndicateMissions"]
244 [-]: GETUPVAL  R11 U3       ; R11 := U3
245 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
246 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["mVisible"]
247 [-]: TEST      R10 0        ; if not R10 then PC := 279
248 [-]: JMP       279          ; PC := 279
249 [-]: GETGLOBAL R10 K3       ; R10 := 0xE6DC43B0
250 [-]: GETGLOBAL R11 K13      ; R11 := _T
251 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["CachedSyndicateMissions"]
252 [-]: GETUPVAL  R12 U3       ; R12 := U3
253 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
254 [-]: GETTABLE  R11 R11 K51  ; R11 := R11["mSyndicateName"]
255 [-]: MOVE      R12 R0       ; R12 := R0
256 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
257 [-]: LOADK     R11 K6       ; R11 := ": "
258 [-]: GETUPVAL  R12 U4       ; R12 := U4
259 [-]: GETGLOBAL R13 K13      ; R13 := _T
260 [-]: GETTABLE  R13 R13 K50  ; R13 := R13["CachedSyndicateMissions"]
261 [-]: GETUPVAL  R14 U3       ; R14 := U3
262 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
263 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["mMissionInfo"]
264 [-]: CALL      R12 2 2      ; R12 := R12(R13)
265 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
266 [-]: GETGLOBAL R11 K7       ; R11 := table
267 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["0xE6450C9D"]
268 [-]: MOVE      R12 R0       ; R12 := R0
269 [-]: NEWTABLE  R13 0 2      ; R13 := {}
270 [-]: GETGLOBAL R14 K10      ; R14 := string
271 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["0x639C642A"]
272 [-]: MOVE      R15 R10      ; R15 := R10
273 [-]: CALL      R14 2 2      ; R14 := R14(R15)
274 [-]: SETTABLE  R13 K9 R14   ; R13["mName"] := R14
275 [-]: GETUPVAL  R14 U5       ; R14 := U5
276 [-]: GETTABLE  R14 R14 K52  ; R14 := R14["SYNDICATE_MISSION_TAG"]
277 [-]: SETTABLE  R13 K12 R14  ; R13["MissionTypeTag"] := R14
278 [-]: CALL      R11 3 1      ; R11(R12,R13)
279 [-]: GETGLOBAL R11 K13      ; R11 := _T
280 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["CachedSortieMissions"]
281 [-]: GETUPVAL  R12 U3       ; R12 := U3
282 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
283 [-]: TEST      R11 0        ; if not R11 then PC := 319
284 [-]: JMP       319          ; PC := 319
285 [-]: GETGLOBAL R11 K13      ; R11 := _T
286 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["CachedSortieMissions"]
287 [-]: GETUPVAL  R12 U3       ; R12 := U3
288 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
289 [-]: GETTABLE  R11 R11 K54  ; R11 := R11["mShowInStarChart"]
290 [-]: TEST      R11 0        ; if not R11 then PC := 319
291 [-]: JMP       319          ; PC := 319
292 [-]: GETGLOBAL R11 K13      ; R11 := _T
293 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["CachedSortieMissions"]
294 [-]: GETUPVAL  R12 U3       ; R12 := U3
295 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
296 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["mMissionInfo"]
297 [-]: GETGLOBAL R12 K3       ; R12 := 0xE6DC43B0
298 [-]: LOADK     R13 K55      ; R13 := "/Lotus/Language/Menu/SortieMissionName"
299 [-]: LOADNIL   R14 R14      ; R14 := nil
300 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
301 [-]: LOADK     R13 K6       ; R13 := ": "
302 [-]: GETUPVAL  R14 U4       ; R14 := U4
303 [-]: MOVE      R15 R11      ; R15 := R11
304 [-]: CALL      R14 2 2      ; R14 := R14(R15)
305 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
306 [-]: GETGLOBAL R13 K7       ; R13 := table
307 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["0xE6450C9D"]
308 [-]: MOVE      R14 R0       ; R14 := R0
309 [-]: NEWTABLE  R15 0 2      ; R15 := {}
310 [-]: GETGLOBAL R16 K10      ; R16 := string
311 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["0x639C642A"]
312 [-]: MOVE      R17 R12      ; R17 := R12
313 [-]: CALL      R16 2 2      ; R16 := R16(R17)
314 [-]: SETTABLE  R15 K9 R16   ; R15["mName"] := R16
315 [-]: GETUPVAL  R16 U5       ; R16 := U5
316 [-]: GETTABLE  R16 R16 K56  ; R16 := R16["SORTIE_MISSION_TAG"]
317 [-]: SETTABLE  R15 K12 R16  ; R15["MissionTypeTag"] := R16
318 [-]: CALL      R13 3 1      ; R13(R14,R15)
319 [-]: GETGLOBAL R13 K13      ; R13 := _T
320 [-]: GETTABLE  R13 R13 K57  ; R13 := R13["CachedInvasionInfo"]
321 [-]: GETUPVAL  R14 U3       ; R14 := U3
322 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
323 [-]: TEST      R13 0        ; if not R13 then PC := 353
324 [-]: JMP       353          ; PC := 353
325 [-]: NEWTABLE  R13 3 0      ; R13 := {}
326 [-]: LOADK     R14 K58      ; R14 := "/Lotus/Language/Menu/GrineerInvasionGeneric"
327 [-]: LOADK     R15 K59      ; R15 := "/Lotus/Language/Menu/CorpusInvasionGeneric"
328 [-]: LOADK     R16 K60      ; R16 := "/Lotus/Language/Menu/InfestedInvasionGeneric"
329 [-]: SETLIST   R13 3 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
330 [-]: GETGLOBAL R14 K3       ; R14 := 0xE6DC43B0
331 [-]: GETGLOBAL R15 K13      ; R15 := _T
332 [-]: GETTABLE  R15 R15 K57  ; R15 := R15["CachedInvasionInfo"]
333 [-]: GETUPVAL  R16 U3       ; R16 := U3
334 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
335 [-]: GETTABLE  R15 R15 K61  ; R15 := R15["mFaction"]
336 [-]: ADD       R15 R15 K62  ; R15 := R15 + 1
337 [-]: GETTABLE  R15 R13 R15  ; R15 := R13[R15]
338 [-]: LOADNIL   R16 R16      ; R16 := nil
339 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
340 [-]: GETGLOBAL R15 K7       ; R15 := table
341 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["0xE6450C9D"]
342 [-]: MOVE      R16 R0       ; R16 := R0
343 [-]: NEWTABLE  R17 0 2      ; R17 := {}
344 [-]: GETGLOBAL R18 K10      ; R18 := string
345 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["0x639C642A"]
346 [-]: MOVE      R19 R14      ; R19 := R14
347 [-]: CALL      R18 2 2      ; R18 := R18(R19)
348 [-]: SETTABLE  R17 K9 R18   ; R17["mName"] := R18
349 [-]: GETUPVAL  R18 U5       ; R18 := U5
350 [-]: GETTABLE  R18 R18 K63  ; R18 := R18["INVASION_ATTACKER_TAG"]
351 [-]: SETTABLE  R17 K12 R18  ; R17["MissionTypeTag"] := R18
352 [-]: CALL      R15 3 1      ; R15(R16,R17)
353 [-]: GETGLOBAL R15 K13      ; R15 := _T
354 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
355 [-]: TEST      R15 0        ; if not R15 then PC := 432
356 [-]: JMP       432          ; PC := 432
357 [-]: GETGLOBAL R15 K13      ; R15 := _T
358 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
359 [-]: GETUPVAL  R16 U3       ; R16 := U3
360 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
361 [-]: TEST      R15 0        ; if not R15 then PC := 432
362 [-]: JMP       432          ; PC := 432
363 [-]: GETGLOBAL R15 K13      ; R15 := _T
364 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
365 [-]: GETUPVAL  R16 U3       ; R16 := U3
366 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
367 [-]: GETTABLE  R15 R15 K15  ; R15 := R15["mVisible"]
368 [-]: TEST      R15 0        ; if not R15 then PC := 432
369 [-]: JMP       432          ; PC := 432
370 [-]: GETGLOBAL R15 K13      ; R15 := _T
371 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
372 [-]: GETUPVAL  R16 U3       ; R16 := U3
373 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
374 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["mMissionInfo"]
375 [-]: LOADK     R16 K65      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc1"
376 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
377 [-]: GETUPVAL  R18 U8       ; R18 := U8
378 [-]: GETTABLE  R18 R18 K67  ; R18 := R18["VOIDT2"]
379 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 383
380 [-]: JMP       383          ; PC := 383
381 [-]: LOADK     R16 K68      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc2"
382 [-]: JMP       403          ; PC := 403
383 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
384 [-]: GETUPVAL  R18 U8       ; R18 := U8
385 [-]: GETTABLE  R18 R18 K69  ; R18 := R18["VOIDT3"]
386 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 390
387 [-]: JMP       390          ; PC := 390
388 [-]: LOADK     R16 K70      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc3"
389 [-]: JMP       403          ; PC := 403
390 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
391 [-]: GETUPVAL  R18 U8       ; R18 := U8
392 [-]: GETTABLE  R18 R18 K71  ; R18 := R18["VOIDT4"]
393 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 397
394 [-]: JMP       397          ; PC := 397
395 [-]: LOADK     R16 K72      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc4"
396 [-]: JMP       403          ; PC := 403
397 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
398 [-]: GETUPVAL  R18 U8       ; R18 := U8
399 [-]: GETTABLE  R18 R18 K73  ; R18 := R18["VOIDT5"]
400 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 403
401 [-]: JMP       403          ; PC := 403
402 [-]: LOADK     R16 K74      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc5"
403 [-]: GETGLOBAL R17 K75      ; R17 := mMovie
404 [-]: SELF      R17 R17 K76  ; R18 := R17; R17 := R17["0x5DB0BD4"]
405 [-]: MOVE      R19 R16      ; R19 := R16
406 [-]: MOVE      R20 R0       ; R20 := R0
407 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
408 [-]: MOVE      R16 R17      ; R16 := R17
409 [-]: GETGLOBAL R17 K3       ; R17 := 0xE6DC43B0
410 [-]: LOADK     R18 K77      ; R18 := "/Lotus/Language/Menu/VoidTearMissionName"
411 [-]: NEWTABLE  R19 0 1      ; R19 := {}
412 [-]: SETTABLE  R19 K78 R16  ; R19["TIER"] := R16
413 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
414 [-]: LOADK     R18 K6       ; R18 := ": "
415 [-]: GETUPVAL  R19 U4       ; R19 := U4
416 [-]: MOVE      R20 R15      ; R20 := R15
417 [-]: CALL      R19 2 2      ; R19 := R19(R20)
418 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
419 [-]: GETGLOBAL R18 K7       ; R18 := table
420 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["0xE6450C9D"]
421 [-]: MOVE      R19 R0       ; R19 := R0
422 [-]: NEWTABLE  R20 0 2      ; R20 := {}
423 [-]: GETGLOBAL R21 K10      ; R21 := string
424 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["0x639C642A"]
425 [-]: MOVE      R22 R17      ; R22 := R17
426 [-]: CALL      R21 2 2      ; R21 := R21(R22)
427 [-]: SETTABLE  R20 K9 R21   ; R20["mName"] := R21
428 [-]: GETUPVAL  R21 U5       ; R21 := U5
429 [-]: GETTABLE  R21 R21 K79  ; R21 := R21["ACTIVE_MISSION_TAG"]
430 [-]: SETTABLE  R20 K12 R21  ; R20["MissionTypeTag"] := R21
431 [-]: CALL      R18 3 1      ; R18(R19,R20)
432 [-]: GETUPVAL  R18 U7       ; R18 := U7
433 [-]: SELF      R18 R18 K80  ; R19 := R18; R18 := R18["0x4B93F65B"]
434 [-]: GETGLOBAL R20 K81      ; R20 := 0xEC274B1A
435 [-]: GETUPVAL  R21 U3       ; R21 := U3
436 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
437 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
438 [-]: GETGLOBAL R19 K75      ; R19 := mMovie
439 [-]: SELF      R19 R19 K76  ; R20 := R19; R19 := R19["0x5DB0BD4"]
440 [-]: GETUPVAL  R21 U5       ; R21 := U5
441 [-]: GETTABLE  R21 R21 K82  ; R21 := R21["FactionNames"]
442 [-]: GETTABLE  R22 R18 K83  ; R22 := R18["faction"]
443 [-]: ADD       R22 R22 K62  ; R22 := R22 + 1
444 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
445 [-]: MOVE      R22 R0       ; R22 := R0
446 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
447 [-]: GETTABLE  R20 R18 K84  ; R20 := R18["forceAllyFaction"]
448 [-]: TEST      R20 0        ; if not R20 then PC := 462
449 [-]: JMP       462          ; PC := 462
450 [-]: GETGLOBAL R20 K75      ; R20 := mMovie
451 [-]: SELF      R20 R20 K76  ; R21 := R20; R20 := R20["0x5DB0BD4"]
452 [-]: LOADK     R22 K85      ; R22 := "/Lotus/Language/Game/Faction_GrineerUC"
453 [-]: MOVE      R23 R0       ; R23 := R0
454 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
455 [-]: LOADK     R21 K86      ; R21 := " / "
456 [-]: GETGLOBAL R22 K75      ; R22 := mMovie
457 [-]: SELF      R22 R22 K76  ; R23 := R22; R22 := R22["0x5DB0BD4"]
458 [-]: LOADK     R24 K87      ; R24 := "/Lotus/Language/Game/Faction_CorpusUC"
459 [-]: MOVE      R25 R0       ; R25 := R0
460 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
461 [-]: CONCAT    R19 R20 R22  ; R19 := R20 .. R21 .. R22
462 [-]: GETGLOBAL R20 K10      ; R20 := string
463 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["0x639C642A"]
464 [-]: GETGLOBAL R21 K75      ; R21 := mMovie
465 [-]: SELF      R21 R21 K76  ; R22 := R21; R21 := R21["0x5DB0BD4"]
466 [-]: LOADK     R23 K88      ; R23 := "/Lotus/Language/Game/MissionName_"
467 [-]: GETUPVAL  R24 U5       ; R24 := U5
468 [-]: GETTABLE  R24 R24 K89  ; R24 := R24["0x87B2D555"]
469 [-]: MOVE      R25 R18      ; R25 := R18
470 [-]: CALL      R24 2 2      ; R24 := R24(R25)
471 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
472 [-]: MOVE      R24 R0       ; R24 := R0
473 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
474 [-]: LOADK     R22 K90      ; R22 := " - "
475 [-]: MOVE      R23 R19      ; R23 := R19
476 [-]: CONCAT    R21 R21 R23  ; R21 := R21 .. R22 .. R23
477 [-]: CALL      R20 2 2      ; R20 := R20(R21)
478 [-]: GETGLOBAL R21 K13      ; R21 := _T
479 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
480 [-]: TEST      R21 0        ; if not R21 then PC := 539
481 [-]: JMP       539          ; PC := 539
482 [-]: GETGLOBAL R21 K13      ; R21 := _T
483 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
484 [-]: GETUPVAL  R22 U3       ; R22 := U3
485 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
486 [-]: EQ        1 R21 K92    ; if R21 == nil then PC := 539
487 [-]: JMP       539          ; PC := 539
488 [-]: GETGLOBAL R21 K13      ; R21 := _T
489 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
490 [-]: GETUPVAL  R22 U3       ; R22 := U3
491 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
492 [-]: GETTABLE  R21 R21 K93  ; R21 := R21["mUnlocked"]
493 [-]: TEST      R21 0        ; if not R21 then PC := 539
494 [-]: JMP       539          ; PC := 539
495 [-]: GETGLOBAL R21 K13      ; R21 := _T
496 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
497 [-]: GETUPVAL  R22 U3       ; R22 := U3
498 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
499 [-]: GETTABLE  R21 R21 K54  ; R21 := R21["mShowInStarChart"]
500 [-]: TEST      R21 0        ; if not R21 then PC := 539
501 [-]: JMP       539          ; PC := 539
502 [-]: GETGLOBAL R21 K13      ; R21 := _T
503 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
504 [-]: GETUPVAL  R22 U3       ; R22 := U3
505 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
506 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["mMissionInfo"]
507 [-]: GETUPVAL  R22 U6       ; R22 := U6
508 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["0xF81722A2"]
509 [-]: GETTABLE  R23 R21 K94  ; R23 := R21["minEnemyLevel"]
510 [-]: LE        1 K95 R23    ; if 80 <= R23 then PC := 513
511 [-]: JMP       513          ; PC := 513
512 [-]: MOVE      R23 R0       ; R23 := R0
513 [-]: MOVE      R23 R1       ; R23 := R1
514 [-]: LOADK     R24 K96      ; R24 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
515 [-]: LOADK     R25 K97      ; R25 := "/Lotus/Language/Menu/GhostTowerMissionName"
516 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
517 [-]: GETGLOBAL R23 K3       ; R23 := 0xE6DC43B0
518 [-]: MOVE      R24 R22      ; R24 := R22
519 [-]: MOVE      R25 R0       ; R25 := R0
520 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
521 [-]: LOADK     R24 K6       ; R24 := ": "
522 [-]: GETUPVAL  R25 U4       ; R25 := U4
523 [-]: MOVE      R26 R21      ; R26 := R21
524 [-]: CALL      R25 2 2      ; R25 := R25(R26)
525 [-]: CONCAT    R23 R23 R25  ; R23 := R23 .. R24 .. R25
526 [-]: GETGLOBAL R24 K7       ; R24 := table
527 [-]: GETTABLE  R24 R24 K8   ; R24 := R24["0xE6450C9D"]
528 [-]: MOVE      R25 R0       ; R25 := R0
529 [-]: NEWTABLE  R26 0 2      ; R26 := {}
530 [-]: GETGLOBAL R27 K10      ; R27 := string
531 [-]: GETTABLE  R27 R27 K11  ; R27 := R27["0x639C642A"]
532 [-]: MOVE      R28 R23      ; R28 := R23
533 [-]: CALL      R27 2 2      ; R27 := R27(R28)
534 [-]: SETTABLE  R26 K9 R27   ; R26["mName"] := R27
535 [-]: GETUPVAL  R27 U5       ; R27 := U5
536 [-]: GETTABLE  R27 R27 K98  ; R27 := R27["KUVA_TOWER_MISSION_TAG"]
537 [-]: SETTABLE  R26 K12 R27  ; R26["MissionTypeTag"] := R27
538 [-]: CALL      R24 3 1      ; R24(R25,R26)
539 [-]: GETGLOBAL R24 K13      ; R24 := _T
540 [-]: GETTABLE  R24 R24 K99  ; R24 := R24["CachedSkullNodes"]
541 [-]: TEST      R24 0        ; if not R24 then PC := 618
542 [-]: JMP       618          ; PC := 618
543 [-]: GETGLOBAL R24 K13      ; R24 := _T
544 [-]: GETTABLE  R24 R24 K99  ; R24 := R24["CachedSkullNodes"]
545 [-]: GETUPVAL  R25 U3       ; R25 := U3
546 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
547 [-]: EQ        1 R24 K92    ; if R24 == nil then PC := 618
548 [-]: JMP       618          ; PC := 618
549 [-]: GETGLOBAL R24 K3       ; R24 := 0xE6DC43B0
550 [-]: LOADK     R25 K100     ; R25 := "/Lotus/Language/Menu/NightmareModeName"
551 [-]: LOADNIL   R26 R26      ; R26 := nil
552 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
553 [-]: LOADK     R25 K6       ; R25 := ": "
554 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
555 [-]: MOVE      R25 R24      ; R25 := R24
556 [-]: MOVE      R26 R20      ; R26 := R20
557 [-]: CONCAT    R24 R25 R26  ; R24 := R25 .. R26
558 [-]: MOVE      R25 R24      ; R25 := R24
559 [-]: LOADK     R26 K101     ; R26 := " ("
560 [-]: GETGLOBAL R27 K10      ; R27 := string
561 [-]: GETTABLE  R27 R27 K11  ; R27 := R27["0x639C642A"]
562 [-]: GETGLOBAL R28 K75      ; R28 := mMovie
563 [-]: SELF      R28 R28 K76  ; R29 := R28; R28 := R28["0x5DB0BD4"]
564 [-]: GETGLOBAL R30 K13      ; R30 := _T
565 [-]: GETTABLE  R30 R30 K99  ; R30 := R30["CachedSkullNodes"]
566 [-]: GETUPVAL  R31 U3       ; R31 := U3
567 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
568 [-]: GETTABLE  R30 R30 K62  ; R30 := R30[1]
569 [-]: GETTABLE  R30 R30 K102 ; R30 := R30[2]
570 [-]: MOVE      R31 R0       ; R31 := R0
571 [-]: CALL      R28 4 0      ; R28,... := R28(R29,R30,R31)
572 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
573 [-]: CONCAT    R24 R25 R27  ; R24 := R25 .. R26 .. R27
574 [-]: GETGLOBAL R25 K13      ; R25 := _T
575 [-]: GETTABLE  R25 R25 K99  ; R25 := R25["CachedSkullNodes"]
576 [-]: GETUPVAL  R26 U3       ; R26 := U3
577 [-]: GETTABLE  R25 R25 R26  ; R25 := R25[R26]
578 [-]: LEN       R25 R25      ; R25 := # R25
579 [-]: LT        0 K62 R25    ; if 1 >= R25 then PC := 606
580 [-]: JMP       606          ; PC := 606
581 [-]: LOADK     R25 K102     ; R25 := 2
582 [-]: GETGLOBAL R26 K13      ; R26 := _T
583 [-]: GETTABLE  R26 R26 K99  ; R26 := R26["CachedSkullNodes"]
584 [-]: GETUPVAL  R27 U3       ; R27 := U3
585 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
586 [-]: LEN       R26 R26      ; R26 := # R26
587 [-]: LOADK     R27 K62      ; R27 := 1
588 [-]: FORPREP   R25 605      ; R25 -= R27; PC := 605
589 [-]: MOVE      R29 R24      ; R29 := R24
590 [-]: LOADK     R30 K103     ; R30 := ", "
591 [-]: GETGLOBAL R31 K10      ; R31 := string
592 [-]: GETTABLE  R31 R31 K11  ; R31 := R31["0x639C642A"]
593 [-]: GETGLOBAL R32 K75      ; R32 := mMovie
594 [-]: SELF      R32 R32 K76  ; R33 := R32; R32 := R32["0x5DB0BD4"]
595 [-]: GETGLOBAL R34 K13      ; R34 := _T
596 [-]: GETTABLE  R34 R34 K99  ; R34 := R34["CachedSkullNodes"]
597 [-]: GETUPVAL  R35 U3       ; R35 := U3
598 [-]: GETTABLE  R34 R34 R35  ; R34 := R34[R35]
599 [-]: GETTABLE  R34 R34 R28  ; R34 := R34[R28]
600 [-]: GETTABLE  R34 R34 K102 ; R34 := R34[2]
601 [-]: MOVE      R35 R0       ; R35 := R0
602 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
603 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
604 [-]: CONCAT    R24 R29 R31  ; R24 := R29 .. R30 .. R31
605 [-]: FORLOOP   R25 589      ; R25 += R27; if R25 <= R26 then begin PC := 589; R28 := R25 end
606 [-]: MOVE      R29 R24      ; R29 := R24
607 [-]: LOADK     R30 K104     ; R30 := ")"
608 [-]: CONCAT    R24 R29 R30  ; R24 := R29 .. R30
609 [-]: GETGLOBAL R29 K7       ; R29 := table
610 [-]: GETTABLE  R29 R29 K8   ; R29 := R29["0xE6450C9D"]
611 [-]: MOVE      R30 R0       ; R30 := R0
612 [-]: NEWTABLE  R31 0 2      ; R31 := {}
613 [-]: SETTABLE  R31 K9 R24   ; R31["mName"] := R24
614 [-]: GETUPVAL  R32 U5       ; R32 := U5
615 [-]: GETTABLE  R32 R32 K105 ; R32 := R32["NIGHTMARE_TAG"]
616 [-]: SETTABLE  R31 K12 R32  ; R31["MissionTypeTag"] := R32
617 [-]: CALL      R29 3 1      ; R29(R30,R31)
618 [-]: GETGLOBAL R29 K13      ; R29 := _T
619 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["CachedNemesisMissions"]
620 [-]: TEST      R29 0        ; if not R29 then PC := 669
621 [-]: JMP       669          ; PC := 669
622 [-]: GETGLOBAL R29 K13      ; R29 := _T
623 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["CachedNemesisMissions"]
624 [-]: GETUPVAL  R30 U3       ; R30 := U3
625 [-]: GETTABLE  R29 R29 R30  ; R29 := R29[R30]
626 [-]: TEST      R29 0        ; if not R29 then PC := 669
627 [-]: JMP       669          ; PC := 669
628 [-]: GETGLOBAL R29 K13      ; R29 := _T
629 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["CachedNemesisMissions"]
630 [-]: GETUPVAL  R30 U3       ; R30 := U3
631 [-]: GETTABLE  R29 R29 R30  ; R29 := R29[R30]
632 [-]: GETGLOBAL R30 K3       ; R30 := 0xE6DC43B0
633 [-]: LOADK     R31 K85      ; R31 := "/Lotus/Language/Game/Faction_GrineerUC"
634 [-]: MOVE      R32 R0       ; R32 := R0
635 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
636 [-]: GETGLOBAL R31 K10      ; R31 := string
637 [-]: GETTABLE  R31 R31 K11  ; R31 := R31["0x639C642A"]
638 [-]: GETGLOBAL R32 K75      ; R32 := mMovie
639 [-]: SELF      R32 R32 K76  ; R33 := R32; R32 := R32["0x5DB0BD4"]
640 [-]: LOADK     R34 K88      ; R34 := "/Lotus/Language/Game/MissionName_"
641 [-]: GETUPVAL  R35 U5       ; R35 := U5
642 [-]: GETTABLE  R35 R35 K89  ; R35 := R35["0x87B2D555"]
643 [-]: GETTABLE  R36 R29 K19  ; R36 := R29["mMissionInfo"]
644 [-]: CALL      R35 2 2      ; R35 := R35(R36)
645 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
646 [-]: MOVE      R35 R0       ; R35 := R0
647 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
648 [-]: LOADK     R33 K90      ; R33 := " - "
649 [-]: MOVE      R34 R30      ; R34 := R30
650 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
651 [-]: CALL      R31 2 2      ; R31 := R31(R32)
652 [-]: GETGLOBAL R32 K75      ; R32 := mMovie
653 [-]: SELF      R32 R32 K76  ; R33 := R32; R32 := R32["0x5DB0BD4"]
654 [-]: GETTABLE  R34 R29 K107 ; R34 := R29["missionName"]
655 [-]: MOVE      R35 R0       ; R35 := R0
656 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
657 [-]: LOADK     R33 K6       ; R33 := ": "
658 [-]: MOVE      R34 R31      ; R34 := R31
659 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
660 [-]: GETGLOBAL R33 K7       ; R33 := table
661 [-]: GETTABLE  R33 R33 K8   ; R33 := R33["0xE6450C9D"]
662 [-]: MOVE      R34 R0       ; R34 := R0
663 [-]: NEWTABLE  R35 0 2      ; R35 := {}
664 [-]: SETTABLE  R35 K9 R32   ; R35["mName"] := R32
665 [-]: GETUPVAL  R36 U5       ; R36 := U5
666 [-]: GETTABLE  R36 R36 K108 ; R36 := R36["NEMESIS_MISSION_TAG"]
667 [-]: SETTABLE  R35 K12 R36  ; R35["MissionTypeTag"] := R36
668 [-]: CALL      R33 3 1      ; R33(R34,R35)
669 [-]: GETGLOBAL R33 K13      ; R33 := _T
670 [-]: GETTABLE  R33 R33 K109 ; R33 := R33["CachedEliteAlertMissions"]
671 [-]: TEST      R33 0        ; if not R33 then PC := 695
672 [-]: JMP       695          ; PC := 695
673 [-]: GETGLOBAL R33 K13      ; R33 := _T
674 [-]: GETTABLE  R33 R33 K109 ; R33 := R33["CachedEliteAlertMissions"]
675 [-]: GETUPVAL  R34 U3       ; R34 := U3
676 [-]: GETTABLE  R33 R33 R34  ; R33 := R33[R34]
677 [-]: EQ        1 R33 K92    ; if R33 == nil then PC := 695
678 [-]: JMP       695          ; PC := 695
679 [-]: GETGLOBAL R33 K3       ; R33 := 0xE6DC43B0
680 [-]: LOADK     R34 K110     ; R34 := "/Lotus/Language/Menu/AlertHardMode"
681 [-]: LOADNIL   R35 R35      ; R35 := nil
682 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
683 [-]: LOADK     R34 K6       ; R34 := ": "
684 [-]: MOVE      R35 R20      ; R35 := R20
685 [-]: CONCAT    R33 R33 R35  ; R33 := R33 .. R34 .. R35
686 [-]: GETGLOBAL R34 K7       ; R34 := table
687 [-]: GETTABLE  R34 R34 K8   ; R34 := R34["0xE6450C9D"]
688 [-]: MOVE      R35 R0       ; R35 := R0
689 [-]: NEWTABLE  R36 0 2      ; R36 := {}
690 [-]: SETTABLE  R36 K9 R33   ; R36["mName"] := R33
691 [-]: GETUPVAL  R37 U5       ; R37 := U5
692 [-]: GETTABLE  R37 R37 K111 ; R37 := R37["ELITE_ALERT_TAG"]
693 [-]: SETTABLE  R36 K12 R37  ; R36["MissionTypeTag"] := R37
694 [-]: CALL      R34 3 1      ; R34(R35,R36)
695 [-]: GETGLOBAL R34 K0       ; R34 := 0x400E7765
696 [-]: GETTABLE  R35 R18 K112 ; R35 := R18["levelOverride"]
697 [-]: CALL      R34 2 2      ; R34 := R34(R35)
698 [-]: TEST      R34 1        ; if R34 then PC := 717
699 [-]: JMP       717          ; PC := 717
700 [-]: GETGLOBAL R34 K7       ; R34 := table
701 [-]: GETTABLE  R34 R34 K8   ; R34 := R34["0xE6450C9D"]
702 [-]: MOVE      R35 R0       ; R35 := R0
703 [-]: NEWTABLE  R36 0 2      ; R36 := {}
704 [-]: GETGLOBAL R37 K10      ; R37 := string
705 [-]: GETTABLE  R37 R37 K11  ; R37 := R37["0x639C642A"]
706 [-]: GETGLOBAL R38 K3       ; R38 := 0xE6DC43B0
707 [-]: LOADK     R39 K113     ; R39 := "/Lotus/Language/Menu/ConfirmNightmareNo"
708 [-]: MOVE      R40 R0       ; R40 := R0
709 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
710 [-]: LOADK     R39 K6       ; R39 := ": "
711 [-]: MOVE      R40 R20      ; R40 := R20
712 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
713 [-]: CALL      R37 2 2      ; R37 := R37(R38)
714 [-]: SETTABLE  R36 K9 R37   ; R36["mName"] := R37
715 [-]: SETTABLE  R36 K12 K26  ; R36["MissionTypeTag"] := ""
716 [-]: CALL      R34 3 1      ; R34(R35,R36)
717 [-]: RETURN    R0 2         ; return R0
718 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 4141
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameData
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xB451D706"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SF_CLAN"]
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: TEST      R0 1         ; if R0 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xB11F032"]
 10 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Menu/SolarMap_NoClanShipFeature"
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 14 [-]: GETGLOBAL R1 K6        ; R1 := _T
 15 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["SquadOverlay"]
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: TEST      R0 1         ; if R0 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R0 K6        ; R0 := _T
 20 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["SquadOverlay"]
 21 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x458F27A9"]
 22 [-]: LOADK     R2 K9        ; R2 := "InitiateDojoVisit"
 23 [-]: LOADK     R3 K10       ; R3 := ""
 24 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 25 [-]: NEWTABLE  R0 0 3       ; R0 := {}
 26 [-]: SETTABLE  R0 K11 K12   ; R0["name"] := "DojoHUB_HUB"
 27 [-]: SETTABLE  R0 K13 K10   ; R0["quest"] := ""
 28 [-]: SETTABLE  R0 K14 K10   ; R0["difficulty"] := ""
 29 [-]: GETGLOBAL R1 K15       ; R1 := gMatchingService
 30 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x3016115E"]
 31 [-]: GETGLOBAL R3 K17       ; R3 := cjson
 32 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["0x8DC1075B"]
 33 [-]: MOVE      R4 R0        ; R4 := R0
 34 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 35 [-]: CALL      R1 0 1       ; R1(R2,...)
 36 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 4162
; #Upvalues:       17
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["locked"]
  8 [-]: TEST      R0 1         ; if R0 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 12 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["locationEnabled"]
 13 [-]: TEST      R0 1         ; if R0 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R0 K3        ; R0 := _T
 17 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["gPendingMission"]
 18 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 34
 19 [-]: JMP       34           ; PC := 34
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 22 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["radialSector"]
 23 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R0 K3        ; R0 := _T
 26 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["gPendingMission"]
 27 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["baseNodeName"]
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 30 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["radialSector"]
 31 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["name"]
 32 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R0 R0        ; R0 := R0
 35 [-]: MOVE      R0 R1        ; R0 := R1
 36 [-]: GETGLOBAL R1 K9        ; R1 := 0x400E7765
 37 [-]: GETGLOBAL R2 K3        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["SquadOverlay"]
 39 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 40 [-]: TEST      R1 1         ; if R1 then PC := 51
 41 [-]: JMP       51           ; PC := 51
 42 [-]: TEST      R0 0         ; if not R0 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R1 K3        ; R1 := _T
 45 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["SquadOverlay"]
 46 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x458F27A9"]
 47 [-]: LOADK     R3 K12       ; R3 := "Accept"
 48 [-]: LOADK     R4 K13       ; R4 := ""
 49 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETGLOBAL R1 K14       ; R1 := 0x9FAED6BC
 52 [-]: GETUPVAL  R2 U0        ; R2 := U0
 53 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 54 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["radialSector"]
 55 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["name"]
 56 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 59 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["radialSector"]
 60 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["keyChain"]
 61 [-]: LOADNIL   R3 R3        ; R3 := nil
 62 [-]: GETUPVAL  R4 U0        ; R4 := U0
 63 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Node"]
 64 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["radialSector"]
 65 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mission"]
 66 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["difficulty"]
 67 [-]: GETUPVAL  R5 U1        ; R5 := U1
 68 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["Active"]
 69 [-]: TEST      R5 1         ; if R5 then PC := 104
 70 [-]: JMP       104          ; PC := 104
 71 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
 72 [-]: GETUPVAL  R6 U0        ; R6 := U0
 73 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Node"]
 74 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["radialSector"]
 75 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mission"]
 76 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["levelKeyName"]
 77 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 78 [-]: TEST      R5 1         ; if R5 then PC := 104
 79 [-]: JMP       104          ; PC := 104
 80 [-]: GETGLOBAL R5 K20       ; R5 := string
 81 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["0xDE44F664"]
 82 [-]: MOVE      R6 R1        ; R6 := R1
 83 [-]: GETUPVAL  R7 U2        ; R7 := U2
 84 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["KEY_TAG"]
 85 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 86 [-]: TEST      R5 1         ; if R5 then PC := 104
 87 [-]: JMP       104          ; PC := 104
 88 [-]: GETGLOBAL R5 K3        ; R5 := _T
 89 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["DesiredGoToNodeTag"]
 90 [-]: TEST      R5 1         ; if R5 then PC := 104
 91 [-]: JMP       104          ; PC := 104
 92 [-]: GETGLOBAL R5 K14       ; R5 := 0x9FAED6BC
 93 [-]: GETUPVAL  R6 U0        ; R6 := U0
 94 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Node"]
 95 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["radialSector"]
 96 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mission"]
 97 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["levelKeyName"]
 98 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6["0x1B252E3C"]
 99 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
100 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
101 [-]: GETUPVAL  R6 U2        ; R6 := U2
102 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["KEY_TAG"]
103 [-]: CONCAT    R1 R5 R6     ; R1 := R5 .. R6
104 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
105 [-]: MOVE      R6 R2        ; R6 := R2
106 [-]: CALL      R5 2 2       ; R5 := R5(R6)
107 [-]: TEST      R5 1         ; if R5 then PC := 133
108 [-]: JMP       133          ; PC := 133
109 [-]: LOADNIL   R5 R5        ; R5 := nil
110 [-]: GETGLOBAL R6 K20       ; R6 := string
111 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["0xDE44F664"]
112 [-]: MOVE      R7 R1        ; R7 := R1
113 [-]: GETUPVAL  R8 U2        ; R8 := U2
114 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["KEY_TAG"]
115 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
116 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 128
117 [-]: JMP       128          ; PC := 128
118 [-]: GETGLOBAL R7 K20       ; R7 := string
119 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["0x7B782033"]
120 [-]: MOVE      R8 R1        ; R8 := R1
121 [-]: LOADK     R9 K26       ; R9 := 1
122 [-]: SUB       R10 R6 K26   ; R10 := R6 - 1
123 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
124 [-]: GETGLOBAL R8 K27       ; R8 := 0x7C282057
125 [-]: MOVE      R9 R7        ; R9 := R7
126 [-]: CALL      R8 2 2       ; R8 := R8(R9)
127 [-]: MOVE      R5 R8        ; R5 := R8
128 [-]: GETGLOBAL R8 K28       ; R8 := gGameRules
129 [-]: SELF      R8 R8 K29    ; R9 := R8; R8 := R8["0x8DD31239"]
130 [-]: MOVE      R10 R2       ; R10 := R2
131 [-]: MOVE      R11 R5       ; R11 := R5
132 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
133 [-]: GETGLOBAL R8 K20       ; R8 := string
134 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["0xDE44F664"]
135 [-]: MOVE      R9 R1        ; R9 := R1
136 [-]: LOADK     R10 K30      ; R10 := "FeaturedDojo"
137 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
138 [-]: TEST      R8 0         ; if not R8 then PC := 196
139 [-]: JMP       196          ; PC := 196
140 [-]: GETUPVAL  R8 U3        ; R8 := U3
141 [-]: GETTABLE  R8 R8 K31    ; R8 := R8["0x36BA5F48"]
142 [-]: CALL      R8 1 2       ; R8 := R8()
143 [-]: TEST      R8 1         ; if R8 then PC := 187
144 [-]: JMP       187          ; PC := 187
145 [-]: GETGLOBAL R8 K32       ; R8 := 0xF595ADDE
146 [-]: GETGLOBAL R9 K20       ; R9 := string
147 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["0xAF449107"]
148 [-]: MOVE      R10 R1       ; R10 := R1
149 [-]: LOADK     R11 K34      ; R11 := "%d+"
150 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
151 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
152 [-]: GETGLOBAL R9 K35       ; R9 := gPlayerProfileMgr
153 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x21EF7B1A"]
154 [-]: LOADK     R11 K37      ; R11 := 0
155 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
156 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9["0x654F1092"]
157 [-]: CALL      R9 2 2       ; R9 := R9(R10)
158 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9["0x2D0B8A86"]
159 [-]: CALL      R9 2 2       ; R9 := R9(R10)
160 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["mFeaturedGuilds"]
161 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
162 [-]: GETTABLE  R9 R9 K41    ; R9 := R9["mId"]
163 [-]: GETGLOBAL R10 K9       ; R10 := 0x400E7765
164 [-]: GETGLOBAL R11 K3       ; R11 := _T
165 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["SquadOverlay"]
166 [-]: CALL      R10 2 2      ; R10 := R10(R11)
167 [-]: TEST      R10 1        ; if R10 then PC := 195
168 [-]: JMP       195          ; PC := 195
169 [-]: GETGLOBAL R10 K3       ; R10 := _T
170 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["SquadOverlay"]
171 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0x458F27A9"]
172 [-]: LOADK     R12 K42      ; R12 := "InitiateDojoVisit"
173 [-]: GETTABLE  R13 R9 K41   ; R13 := R9["mId"]
174 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
175 [-]: NEWTABLE  R10 0 3      ; R10 := {}
176 [-]: SETTABLE  R10 K8 K43   ; R10["name"] := "DojoHUB_HUB"
177 [-]: SETTABLE  R10 K44 K13  ; R10["quest"] := ""
178 [-]: SETTABLE  R10 K17 K13  ; R10["difficulty"] := ""
179 [-]: GETGLOBAL R11 K45      ; R11 := gMatchingService
180 [-]: SELF      R11 R11 K46  ; R12 := R11; R11 := R11["0x3016115E"]
181 [-]: GETGLOBAL R13 K47      ; R13 := cjson
182 [-]: GETTABLE  R13 R13 K48  ; R13 := R13["0x8DC1075B"]
183 [-]: MOVE      R14 R10      ; R14 := R10
184 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
185 [-]: CALL      R11 0 1      ; R11(R12,...)
186 [-]: JMP       195          ; PC := 195
187 [-]: GETUPVAL  R11 U3       ; R11 := U3
188 [-]: GETTABLE  R11 R11 K49  ; R11 := R11["0xB11F032"]
189 [-]: GETGLOBAL R12 K50      ; R12 := mMovie
190 [-]: SELF      R12 R12 K51  ; R13 := R12; R12 := R12["0x5DB0BD4"]
191 [-]: LOADK     R14 K52      ; R14 := "/Lotus/Language/Clan/RestrictedUGCWarning"
192 [-]: MOVE      R15 R0       ; R15 := R0
193 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
194 [-]: CALL      R11 0 1      ; R11(R12,...)
195 [-]: RETURN    R0 1         ; return 
196 [-]: GETUPVAL  R11 U1       ; R11 := U1
197 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["Active"]
198 [-]: TEST      R11 1        ; if R11 then PC := 211
199 [-]: JMP       211          ; PC := 211
200 [-]: GETGLOBAL R11 K20      ; R11 := string
201 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xDE44F664"]
202 [-]: MOVE      R12 R1       ; R12 := R1
203 [-]: LOADK     R13 K53      ; R13 := "Dojo"
204 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
205 [-]: TEST      R11 0        ; if not R11 then PC := 211
206 [-]: JMP       211          ; PC := 211
207 [-]: GETUPVAL  R11 U4       ; R11 := U4
208 [-]: CALL      R11 1 1      ; R11()
209 [-]: RETURN    R0 1         ; return 
210 [-]: JMP       276          ; PC := 276
211 [-]: GETGLOBAL R11 K20      ; R11 := string
212 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xDE44F664"]
213 [-]: MOVE      R12 R1       ; R12 := R1
214 [-]: LOADK     R13 K54      ; R13 := "StalkerHideout"
215 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
216 [-]: TEST      R11 0        ; if not R11 then PC := 276
217 [-]: JMP       276          ; PC := 276
218 [-]: LOADNIL   R11 R11      ; R11 := nil
219 [-]: GETGLOBAL R12 K20      ; R12 := string
220 [-]: GETTABLE  R12 R12 K21  ; R12 := R12["0xDE44F664"]
221 [-]: MOVE      R13 R1       ; R13 := R1
222 [-]: GETUPVAL  R14 U2       ; R14 := U2
223 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["KEY_TAG"]
224 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
225 [-]: EQ        1 R12 K5     ; if R12 == nil then PC := 275
226 [-]: JMP       275          ; PC := 275
227 [-]: GETGLOBAL R13 K20      ; R13 := string
228 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["0x7B782033"]
229 [-]: MOVE      R14 R1       ; R14 := R1
230 [-]: LOADK     R15 K26      ; R15 := 1
231 [-]: SUB       R16 R12 K26  ; R16 := R12 - 1
232 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
233 [-]: GETGLOBAL R14 K27      ; R14 := 0x7C282057
234 [-]: MOVE      R15 R13      ; R15 := R13
235 [-]: CALL      R14 2 2      ; R14 := R14(R15)
236 [-]: MOVE      R11 R14      ; R11 := R14
237 [-]: GETGLOBAL R14 K9       ; R14 := 0x400E7765
238 [-]: MOVE      R15 R11      ; R15 := R11
239 [-]: CALL      R14 2 2      ; R14 := R14(R15)
240 [-]: TEST      R14 1        ; if R14 then PC := 275
241 [-]: JMP       275          ; PC := 275
242 [-]: SELF      R14 R11 K55  ; R15 := R11; R14 := R11["0xB8637349"]
243 [-]: CALL      R14 2 2      ; R14 := R14(R15)
244 [-]: GETGLOBAL R15 K9       ; R15 := 0x400E7765
245 [-]: GETTABLE  R16 R14 K56  ; R16 := R14["levelOverride"]
246 [-]: CALL      R15 2 2      ; R15 := R15(R16)
247 [-]: TEST      R15 1        ; if R15 then PC := 275
248 [-]: JMP       275          ; PC := 275
249 [-]: GETGLOBAL R15 K57      ; R15 := _G
250 [-]: SETTABLE  R15 K58 K59  ; R15["StalkerMode"] := "0x1"
251 [-]: GETGLOBAL R15 K60      ; R15 := gGameConfig
252 [-]: SELF      R15 R15 K61  ; R16 := R15; R15 := R15["0x92CE9D7D"]
253 [-]: GETTABLE  R17 R14 K56  ; R17 := R14["levelOverride"]
254 [-]: CALL      R15 3 1      ; R15(R16,R17)
255 [-]: GETGLOBAL R15 K62      ; R15 := gRegion
256 [-]: SELF      R15 R15 K63  ; R16 := R15; R15 := R15["0xD2075696"]
257 [-]: CALL      R15 2 2      ; R15 := R15(R16)
258 [-]: GETTABLE  R16 R14 K56  ; R16 := R14["levelOverride"]
259 [-]: SETTABLE  R15 K64 R16  ; R15["level"] := R16
260 [-]: GETTABLE  R16 R14 K65  ; R16 := R14["gameRules"]
261 [-]: SETTABLE  R15 K65 R16  ; R15["gameRules"] := R16
262 [-]: GETGLOBAL R16 K66      ; R16 := gGameData
263 [-]: SELF      R16 R16 K67  ; R17 := R16; R16 := R16["0x33ABF5D"]
264 [-]: MOVE      R18 R15      ; R18 := R15
265 [-]: MOVE      R19 R1       ; R19 := R1
266 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
267 [-]: GETGLOBAL R16 K66      ; R16 := gGameData
268 [-]: SELF      R16 R16 K68  ; R17 := R16; R16 := R16["0x19F7DE8"]
269 [-]: MOVE      R18 R1       ; R18 := R1
270 [-]: CALL      R16 3 1      ; R16(R17,R18)
271 [-]: GETGLOBAL R16 K69      ; R16 := Engine
272 [-]: GETTABLE  R16 R16 K70  ; R16 := R16["0xC53FF352"]
273 [-]: MOVE      R17 R0       ; R17 := R0
274 [-]: CALL      R16 2 1      ; R16(R17)
275 [-]: RETURN    R0 1         ; return 
276 [-]: GETGLOBAL R16 K57      ; R16 := _G
277 [-]: GETTABLE  R16 R16 K58  ; R16 := R16["StalkerMode"]
278 [-]: TEST      R16 0        ; if not R16 then PC := 305
279 [-]: JMP       305          ; PC := 305
280 [-]: GETUPVAL  R16 U0       ; R16 := U0
281 [-]: GETTABLE  R16 R16 K0   ; R16 := R16["Node"]
282 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["radialSector"]
283 [-]: GETTABLE  R16 R16 K71  ; R16 := R16["nodeType"]
284 [-]: GETGLOBAL R17 K72      ; R17 := Lotus_Game
285 [-]: GETTABLE  R17 R17 K73  ; R17 := R17["NT_CLAN"]
286 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 298
287 [-]: JMP       298          ; PC := 298
288 [-]: GETUPVAL  R16 U5       ; R16 := U5
289 [-]: MOVE      R17 R1       ; R17 := R1
290 [-]: GETUPVAL  R18 U2       ; R18 := U2
291 [-]: GETTABLE  R18 R18 K74  ; R18 := R18["BADLAND_MISSION_TAG"]
292 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
293 [-]: MOVE      R18 R2       ; R18 := R2
294 [-]: MOVE      R19 R3       ; R19 := R3
295 [-]: MOVE      R20 R4       ; R20 := R4
296 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
297 [-]: JMP       304          ; PC := 304
298 [-]: GETUPVAL  R16 U5       ; R16 := U5
299 [-]: MOVE      R17 R1       ; R17 := R1
300 [-]: MOVE      R18 R2       ; R18 := R2
301 [-]: MOVE      R19 R3       ; R19 := R3
302 [-]: MOVE      R20 R4       ; R20 := R4
303 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
304 [-]: RETURN    R0 1         ; return 
305 [-]: GETGLOBAL R16 K9       ; R16 := 0x400E7765
306 [-]: MOVE      R17 R2       ; R17 := R2
307 [-]: CALL      R16 2 2      ; R16 := R16(R17)
308 [-]: TEST      R16 1        ; if R16 then PC := 313
309 [-]: JMP       313          ; PC := 313
310 [-]: GETUPVAL  R16 U6       ; R16 := U6
311 [-]: EQ        1 R2 R16     ; if R2 == R16 then PC := 314
312 [-]: JMP       314          ; PC := 314
313 [-]: MOVE      R16 R0       ; R16 := R0
314 [-]: MOVE      R16 R1       ; R16 := R1
315 [-]: TEST      R16 1        ; if R16 then PC := 602
316 [-]: JMP       602          ; PC := 602
317 [-]: GETUPVAL  R17 U0       ; R17 := U0
318 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
319 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
320 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["nodeType"]
321 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
322 [-]: GETTABLE  R18 R18 K75  ; R18 := R18["NT_MISSION"]
323 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 343
324 [-]: JMP       343          ; PC := 343
325 [-]: GETUPVAL  R17 U0       ; R17 := U0
326 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
327 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
328 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["nodeType"]
329 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
330 [-]: GETTABLE  R18 R18 K73  ; R18 := R18["NT_CLAN"]
331 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 602
332 [-]: JMP       602          ; PC := 602
333 [-]: GETGLOBAL R17 K3       ; R17 := _T
334 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["CachedEliteAlertMissions"]
335 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
336 [-]: TEST      R17 1        ; if R17 then PC := 343
337 [-]: JMP       343          ; PC := 343
338 [-]: GETGLOBAL R17 K3       ; R17 := _T
339 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedNemesisMissions"]
340 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
341 [-]: TEST      R17 0        ; if not R17 then PC := 602
342 [-]: JMP       602          ; PC := 602
343 [-]: GETUPVAL  R17 U7       ; R17 := U7
344 [-]: GETUPVAL  R18 U0       ; R18 := U0
345 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
346 [-]: MOVE      R19 R1       ; R19 := R1
347 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
348 [-]: TEST      R17 0        ; if not R17 then PC := 602
349 [-]: JMP       602          ; PC := 602
350 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
351 [-]: GETUPVAL  R18 U0       ; R18 := U0
352 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
353 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
354 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["keyChain"]
355 [-]: CALL      R17 2 2      ; R17 := R17(R18)
356 [-]: TEST      R17 0        ; if not R17 then PC := 459
357 [-]: JMP       459          ; PC := 459
358 [-]: GETGLOBAL R17 K3       ; R17 := _T
359 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["CachedAlerts"]
360 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
361 [-]: TEST      R17 0        ; if not R17 then PC := 369
362 [-]: JMP       369          ; PC := 369
363 [-]: GETGLOBAL R17 K3       ; R17 := _T
364 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["CachedAlerts"]
365 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
366 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["mVisible"]
367 [-]: TEST      R17 1        ; if R17 then PC := 459
368 [-]: JMP       459          ; PC := 459
369 [-]: GETGLOBAL R17 K57      ; R17 := _G
370 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["CachedGoalInfo"]
371 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
372 [-]: TEST      R17 1        ; if R17 then PC := 459
373 [-]: JMP       459          ; PC := 459
374 [-]: GETGLOBAL R17 K57      ; R17 := _G
375 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["MergedGoalNodes"]
376 [-]: TEST      R17 0        ; if not R17 then PC := 383
377 [-]: JMP       383          ; PC := 383
378 [-]: GETGLOBAL R17 K57      ; R17 := _G
379 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["MergedGoalNodes"]
380 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
381 [-]: TEST      R17 1        ; if R17 then PC := 459
382 [-]: JMP       459          ; PC := 459
383 [-]: GETGLOBAL R17 K3       ; R17 := _T
384 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedSyndicateMissions"]
385 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
386 [-]: TEST      R17 0        ; if not R17 then PC := 394
387 [-]: JMP       394          ; PC := 394
388 [-]: GETGLOBAL R17 K3       ; R17 := _T
389 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedSyndicateMissions"]
390 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
391 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["mVisible"]
392 [-]: TEST      R17 1        ; if R17 then PC := 459
393 [-]: JMP       459          ; PC := 459
394 [-]: GETGLOBAL R17 K3       ; R17 := _T
395 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedSortieMissions"]
396 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
397 [-]: TEST      R17 0        ; if not R17 then PC := 405
398 [-]: JMP       405          ; PC := 405
399 [-]: GETGLOBAL R17 K3       ; R17 := _T
400 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedSortieMissions"]
401 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
402 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["mShowInStarChart"]
403 [-]: TEST      R17 1        ; if R17 then PC := 459
404 [-]: JMP       459          ; PC := 459
405 [-]: GETGLOBAL R17 K3       ; R17 := _T
406 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["CachedActiveMissions"]
407 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
408 [-]: TEST      R17 0        ; if not R17 then PC := 422
409 [-]: JMP       422          ; PC := 422
410 [-]: GETGLOBAL R17 K3       ; R17 := _T
411 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["CachedActiveMissions"]
412 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
413 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["mVisible"]
414 [-]: TEST      R17 0        ; if not R17 then PC := 422
415 [-]: JMP       422          ; PC := 422
416 [-]: GETGLOBAL R17 K3       ; R17 := _T
417 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["CachedActiveMissions"]
418 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
419 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["mUnlocked"]
420 [-]: TEST      R17 1        ; if R17 then PC := 459
421 [-]: JMP       459          ; PC := 459
422 [-]: GETGLOBAL R17 K3       ; R17 := _T
423 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedInvasionInfo"]
424 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
425 [-]: TEST      R17 1        ; if R17 then PC := 459
426 [-]: JMP       459          ; PC := 459
427 [-]: GETGLOBAL R17 K3       ; R17 := _T
428 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedSkullNodes"]
429 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
430 [-]: EQ        0 R17 K5     ; if R17 ~= nil then PC := 459
431 [-]: JMP       459          ; PC := 459
432 [-]: GETGLOBAL R17 K3       ; R17 := _T
433 [-]: GETTABLE  R17 R17 K89  ; R17 := R17["CachedGhostTowerMissions"]
434 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
435 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 443
436 [-]: JMP       443          ; PC := 443
437 [-]: GETGLOBAL R17 K3       ; R17 := _T
438 [-]: GETTABLE  R17 R17 K89  ; R17 := R17["CachedGhostTowerMissions"]
439 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
440 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["mUnlocked"]
441 [-]: TEST      R17 1        ; if R17 then PC := 459
442 [-]: JMP       459          ; PC := 459
443 [-]: GETGLOBAL R17 K3       ; R17 := _T
444 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["CachedEliteAlertMissions"]
445 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
446 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 454
447 [-]: JMP       454          ; PC := 454
448 [-]: GETGLOBAL R17 K3       ; R17 := _T
449 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["CachedEliteAlertMissions"]
450 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
451 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["mUnlocked"]
452 [-]: TEST      R17 1        ; if R17 then PC := 459
453 [-]: JMP       459          ; PC := 459
454 [-]: GETGLOBAL R17 K3       ; R17 := _T
455 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedNemesisMissions"]
456 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
457 [-]: TEST      R17 0        ; if not R17 then PC := 602
458 [-]: JMP       602          ; PC := 602
459 [-]: GETGLOBAL R17 K3       ; R17 := _T
460 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["DesiredGoToNodeTag"]
461 [-]: TEST      R17 0        ; if not R17 then PC := 504
462 [-]: JMP       504          ; PC := 504
463 [-]: GETGLOBAL R17 K3       ; R17 := _T
464 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["DesiredGoToNodeTag"]
465 [-]: GETUPVAL  R18 U2       ; R18 := U2
466 [-]: GETTABLE  R18 R18 K90  ; R18 := R18["ACTIVE_MISSION_TAG"]
467 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 475
468 [-]: JMP       475          ; PC := 475
469 [-]: GETGLOBAL R17 K3       ; R17 := _T
470 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
471 [-]: GETUPVAL  R17 U8       ; R17 := U8
472 [-]: MOVE      R18 R1       ; R18 := R1
473 [-]: CALL      R17 2 1      ; R17(R18)
474 [-]: JMP       502          ; PC := 502
475 [-]: GETGLOBAL R17 K3       ; R17 := _T
476 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["DesiredGoToNodeTag"]
477 [-]: GETUPVAL  R18 U2       ; R18 := U2
478 [-]: GETTABLE  R18 R18 K91  ; R18 := R18["INVASION_ATTACKER_TAG"]
479 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 487
480 [-]: JMP       487          ; PC := 487
481 [-]: GETGLOBAL R17 K3       ; R17 := _T
482 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
483 [-]: GETUPVAL  R17 U9       ; R17 := U9
484 [-]: MOVE      R18 R1       ; R18 := R1
485 [-]: CALL      R17 2 1      ; R17(R18)
486 [-]: JMP       502          ; PC := 502
487 [-]: GETGLOBAL R17 K14      ; R17 := 0x9FAED6BC
488 [-]: GETUPVAL  R18 U0       ; R18 := U0
489 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
490 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
491 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["name"]
492 [-]: CALL      R17 2 2      ; R17 := R17(R18)
493 [-]: GETGLOBAL R18 K3       ; R18 := _T
494 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["DesiredGoToNodeTag"]
495 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
496 [-]: GETGLOBAL R17 K3       ; R17 := _T
497 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
498 [-]: GETUPVAL  R17 U5       ; R17 := U5
499 [-]: MOVE      R18 R1       ; R18 := R1
500 [-]: LOADNIL   R19 R21      ; R19 := R20 := R21 := nil
501 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
502 [-]: RETURN    R0 1         ; return 
503 [-]: JMP       602          ; PC := 602
504 [-]: GETUPVAL  R17 U0       ; R17 := U0
505 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
506 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
507 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
508 [-]: GETTABLE  R17 R17 K92  ; R17 := R17["missionType"]
509 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
510 [-]: GETTABLE  R18 R18 K93  ; R18 := R18["MT_ARENA"]
511 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 552
512 [-]: JMP       552          ; PC := 552
513 [-]: GETUPVAL  R17 U0       ; R17 := U0
514 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
515 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
516 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
517 [-]: GETTABLE  R17 R17 K94  ; R17 := R17["faction"]
518 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
519 [-]: GETTABLE  R18 R18 K95  ; R18 := R18["FC_CORPUS"]
520 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 552
521 [-]: JMP       552          ; PC := 552
522 [-]: GETUPVAL  R17 U0       ; R17 := U0
523 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
524 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["name"]
525 [-]: TEST      R17 0        ; if not R17 then PC := 552
526 [-]: JMP       552          ; PC := 552
527 [-]: GETGLOBAL R17 K3       ; R17 := _T
528 [-]: GETTABLE  R17 R17 K96  ; R17 := R17["DesiredGoToQuest"]
529 [-]: TEST      R17 0        ; if not R17 then PC := 536
530 [-]: JMP       536          ; PC := 536
531 [-]: GETGLOBAL R17 K3       ; R17 := _T
532 [-]: GETTABLE  R2 R17 K96   ; R2 := R17["DesiredGoToQuest"]
533 [-]: GETGLOBAL R17 K3       ; R17 := _T
534 [-]: SETTABLE  R17 K96 K5   ; R17["DesiredGoToQuest"] := nil
535 [-]: JMP       544          ; PC := 544
536 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
537 [-]: MOVE      R18 R2       ; R18 := R2
538 [-]: CALL      R17 2 2      ; R17 := R17(R18)
539 [-]: TEST      R17 1        ; if R17 then PC := 544
540 [-]: JMP       544          ; PC := 544
541 [-]: SELF      R17 R2 K24   ; R18 := R2; R17 := R2["0x1B252E3C"]
542 [-]: CALL      R17 2 2      ; R17 := R17(R18)
543 [-]: MOVE      R2 R17       ; R2 := R17
544 [-]: GETUPVAL  R17 U10      ; R17 := U10
545 [-]: MOVE      R18 R1       ; R18 := R1
546 [-]: MOVE      R19 R1       ; R19 := R1
547 [-]: MOVE      R20 R2       ; R20 := R2
548 [-]: MOVE      R21 R4       ; R21 := R4
549 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
550 [-]: RETURN    R0 1         ; return 
551 [-]: JMP       602          ; PC := 602
552 [-]: GETGLOBAL R17 K3       ; R17 := _T
553 [-]: GETTABLE  R17 R17 K96  ; R17 := R17["DesiredGoToQuest"]
554 [-]: TEST      R17 0        ; if not R17 then PC := 561
555 [-]: JMP       561          ; PC := 561
556 [-]: GETGLOBAL R17 K3       ; R17 := _T
557 [-]: GETTABLE  R2 R17 K96   ; R2 := R17["DesiredGoToQuest"]
558 [-]: GETGLOBAL R17 K3       ; R17 := _T
559 [-]: SETTABLE  R17 K96 K5   ; R17["DesiredGoToQuest"] := nil
560 [-]: JMP       602          ; PC := 602
561 [-]: GETUPVAL  R17 U0       ; R17 := U0
562 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
563 [-]: GETTABLE  R17 R17 K97  ; R17 := R17["isBlockaded"]
564 [-]: TEST      R17 0        ; if not R17 then PC := 580
565 [-]: JMP       580          ; PC := 580
566 [-]: GETGLOBAL R17 K14      ; R17 := 0x9FAED6BC
567 [-]: GETUPVAL  R18 U0       ; R18 := U0
568 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
569 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
570 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["name"]
571 [-]: CALL      R17 2 2      ; R17 := R17(R18)
572 [-]: GETUPVAL  R18 U2       ; R18 := U2
573 [-]: GETTABLE  R18 R18 K98  ; R18 := R18["NEMESIS_MISSION_TAG"]
574 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
575 [-]: GETUPVAL  R17 U5       ; R17 := U5
576 [-]: MOVE      R18 R1       ; R18 := R1
577 [-]: CALL      R17 2 1      ; R17(R18)
578 [-]: RETURN    R0 1         ; return 
579 [-]: JMP       602          ; PC := 602
580 [-]: GETGLOBAL R17 K57      ; R17 := _G
581 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["CachedGoalInfo"]
582 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
583 [-]: TEST      R17 0        ; if not R17 then PC := 594
584 [-]: JMP       594          ; PC := 594
585 [-]: GETGLOBAL R17 K3       ; R17 := _T
586 [-]: GETTABLE  R17 R17 K99  ; R17 := R17["LockedGoalMissionInfo"]
587 [-]: TEST      R17 0        ; if not R17 then PC := 602
588 [-]: JMP       602          ; PC := 602
589 [-]: GETGLOBAL R17 K3       ; R17 := _T
590 [-]: GETTABLE  R17 R17 K99  ; R17 := R17["LockedGoalMissionInfo"]
591 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
592 [-]: TEST      R17 0        ; if not R17 then PC := 602
593 [-]: JMP       602          ; PC := 602
594 [-]: GETUPVAL  R17 U11      ; R17 := U11
595 [-]: GETUPVAL  R18 U0       ; R18 := U0
596 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
597 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
598 [-]: MOVE      R19 R2       ; R19 := R2
599 [-]: MOVE      R20 R3       ; R20 := R3
600 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
601 [-]: RETURN    R0 1         ; return 
602 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
603 [-]: GETUPVAL  R18 U0       ; R18 := U0
604 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
605 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
606 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["keyChain"]
607 [-]: CALL      R17 2 2      ; R17 := R17(R18)
608 [-]: TEST      R17 1        ; if R17 then PC := 618
609 [-]: JMP       618          ; PC := 618
610 [-]: GETUPVAL  R17 U0       ; R17 := U0
611 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
612 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
613 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["keyChain"]
614 [-]: SELF      R17 R17 K24  ; R18 := R17; R17 := R17["0x1B252E3C"]
615 [-]: CALL      R17 2 2      ; R17 := R17(R18)
616 [-]: MOVE      R2 R17       ; R2 := R17
617 [-]: JMP       797          ; PC := 797
618 [-]: TEST      R2 1         ; if R2 then PC := 797
619 [-]: JMP       797          ; PC := 797
620 [-]: GETGLOBAL R17 K3       ; R17 := _T
621 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["CachedAlerts"]
622 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
623 [-]: TEST      R17 0        ; if not R17 then PC := 642
624 [-]: JMP       642          ; PC := 642
625 [-]: GETGLOBAL R17 K3       ; R17 := _T
626 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["CachedAlerts"]
627 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
628 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["mVisible"]
629 [-]: TEST      R17 0        ; if not R17 then PC := 642
630 [-]: JMP       642          ; PC := 642
631 [-]: GETGLOBAL R17 K3       ; R17 := _T
632 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["CachedAlerts"]
633 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
634 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["mUnlocked"]
635 [-]: TEST      R17 0        ; if not R17 then PC := 642
636 [-]: JMP       642          ; PC := 642
637 [-]: MOVE      R17 R1       ; R17 := R1
638 [-]: GETUPVAL  R18 U2       ; R18 := U2
639 [-]: GETTABLE  R18 R18 K100 ; R18 := R18["ALERT_TAG"]
640 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
641 [-]: JMP       797          ; PC := 797
642 [-]: GETGLOBAL R17 K57      ; R17 := _G
643 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["CachedGoalInfo"]
644 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
645 [-]: TEST      R17 0        ; if not R17 then PC := 671
646 [-]: JMP       671          ; PC := 671
647 [-]: GETUPVAL  R17 U0       ; R17 := U0
648 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
649 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
650 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["nodeType"]
651 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
652 [-]: GETTABLE  R18 R18 K101 ; R18 := R18["NT_HUB"]
653 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 671
654 [-]: JMP       671          ; PC := 671
655 [-]: GETGLOBAL R17 K3       ; R17 := _T
656 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedInvasionInfo"]
657 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
658 [-]: TEST      R17 0        ; if not R17 then PC := 666
659 [-]: JMP       666          ; PC := 666
660 [-]: GETGLOBAL R17 K3       ; R17 := _T
661 [-]: SETTABLE  R17 K23 K5   ; R17["DesiredGoToNodeTag"] := nil
662 [-]: GETUPVAL  R17 U9       ; R17 := U9
663 [-]: MOVE      R18 R1       ; R18 := R1
664 [-]: CALL      R17 2 1      ; R17(R18)
665 [-]: RETURN    R0 1         ; return 
666 [-]: MOVE      R17 R1       ; R17 := R1
667 [-]: GETUPVAL  R18 U2       ; R18 := U2
668 [-]: GETTABLE  R18 R18 K102 ; R18 := R18["EVENT_TAG"]
669 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
670 [-]: JMP       797          ; PC := 797
671 [-]: GETGLOBAL R17 K3       ; R17 := _T
672 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedSyndicateMissions"]
673 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
674 [-]: TEST      R17 0        ; if not R17 then PC := 693
675 [-]: JMP       693          ; PC := 693
676 [-]: GETGLOBAL R17 K3       ; R17 := _T
677 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedSyndicateMissions"]
678 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
679 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["mVisible"]
680 [-]: TEST      R17 0        ; if not R17 then PC := 693
681 [-]: JMP       693          ; PC := 693
682 [-]: GETGLOBAL R17 K3       ; R17 := _T
683 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedSyndicateMissions"]
684 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
685 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["mUnlocked"]
686 [-]: TEST      R17 0        ; if not R17 then PC := 693
687 [-]: JMP       693          ; PC := 693
688 [-]: MOVE      R17 R1       ; R17 := R1
689 [-]: GETUPVAL  R18 U2       ; R18 := U2
690 [-]: GETTABLE  R18 R18 K103 ; R18 := R18["SYNDICATE_MISSION_TAG"]
691 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
692 [-]: JMP       797          ; PC := 797
693 [-]: GETGLOBAL R17 K3       ; R17 := _T
694 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedSortieMissions"]
695 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
696 [-]: TEST      R17 0        ; if not R17 then PC := 709
697 [-]: JMP       709          ; PC := 709
698 [-]: GETGLOBAL R17 K3       ; R17 := _T
699 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["CachedSortieMissions"]
700 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
701 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["mShowInStarChart"]
702 [-]: TEST      R17 0        ; if not R17 then PC := 709
703 [-]: JMP       709          ; PC := 709
704 [-]: MOVE      R17 R1       ; R17 := R1
705 [-]: GETUPVAL  R18 U2       ; R18 := U2
706 [-]: GETTABLE  R18 R18 K104 ; R18 := R18["SORTIE_MISSION_TAG"]
707 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
708 [-]: JMP       797          ; PC := 797
709 [-]: GETGLOBAL R17 K3       ; R17 := _T
710 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["CachedActiveMissions"]
711 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
712 [-]: TEST      R17 0        ; if not R17 then PC := 731
713 [-]: JMP       731          ; PC := 731
714 [-]: GETGLOBAL R17 K3       ; R17 := _T
715 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["CachedActiveMissions"]
716 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
717 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["mVisible"]
718 [-]: TEST      R17 0        ; if not R17 then PC := 731
719 [-]: JMP       731          ; PC := 731
720 [-]: GETGLOBAL R17 K3       ; R17 := _T
721 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["CachedActiveMissions"]
722 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
723 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["mUnlocked"]
724 [-]: TEST      R17 0        ; if not R17 then PC := 731
725 [-]: JMP       731          ; PC := 731
726 [-]: GETUPVAL  R17 U8       ; R17 := U8
727 [-]: MOVE      R18 R1       ; R18 := R1
728 [-]: CALL      R17 2 1      ; R17(R18)
729 [-]: RETURN    R0 1         ; return 
730 [-]: JMP       797          ; PC := 797
731 [-]: GETGLOBAL R17 K3       ; R17 := _T
732 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedInvasionInfo"]
733 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
734 [-]: TEST      R17 0        ; if not R17 then PC := 741
735 [-]: JMP       741          ; PC := 741
736 [-]: GETUPVAL  R17 U9       ; R17 := U9
737 [-]: MOVE      R18 R1       ; R18 := R1
738 [-]: CALL      R17 2 1      ; R17(R18)
739 [-]: RETURN    R0 1         ; return 
740 [-]: JMP       797          ; PC := 797
741 [-]: GETGLOBAL R17 K3       ; R17 := _T
742 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedSkullNodes"]
743 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
744 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 751
745 [-]: JMP       751          ; PC := 751
746 [-]: GETUPVAL  R17 U12      ; R17 := U12
747 [-]: MOVE      R18 R1       ; R18 := R1
748 [-]: CALL      R17 2 1      ; R17(R18)
749 [-]: RETURN    R0 1         ; return 
750 [-]: JMP       797          ; PC := 797
751 [-]: GETUPVAL  R17 U0       ; R17 := U0
752 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
753 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
754 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["nodeType"]
755 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
756 [-]: GETTABLE  R18 R18 K73  ; R18 := R18["NT_CLAN"]
757 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 770
758 [-]: JMP       770          ; PC := 770
759 [-]: GETUPVAL  R17 U5       ; R17 := U5
760 [-]: MOVE      R18 R1       ; R18 := R1
761 [-]: GETUPVAL  R19 U2       ; R19 := U2
762 [-]: GETTABLE  R19 R19 K74  ; R19 := R19["BADLAND_MISSION_TAG"]
763 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
764 [-]: LOADK     R19 K13      ; R19 := ""
765 [-]: LOADK     R20 K13      ; R20 := ""
766 [-]: LOADK     R21 K13      ; R21 := ""
767 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
768 [-]: RETURN    R0 1         ; return 
769 [-]: JMP       797          ; PC := 797
770 [-]: GETUPVAL  R17 U0       ; R17 := U0
771 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
772 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
773 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["nodeType"]
774 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
775 [-]: GETTABLE  R18 R18 K105 ; R18 := R18["NT_PVP"]
776 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 783
777 [-]: JMP       783          ; PC := 783
778 [-]: MOVE      R17 R1       ; R17 := R1
779 [-]: GETUPVAL  R18 U2       ; R18 := U2
780 [-]: GETTABLE  R18 R18 K106 ; R18 := R18["PVP_TAG"]
781 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
782 [-]: JMP       797          ; PC := 797
783 [-]: GETUPVAL  R17 U0       ; R17 := U0
784 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
785 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
786 [-]: GETTABLE  R17 R17 K71  ; R17 := R17["nodeType"]
787 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
788 [-]: GETTABLE  R18 R18 K101 ; R18 := R18["NT_HUB"]
789 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 797
790 [-]: JMP       797          ; PC := 797
791 [-]: GETUPVAL  R17 U13      ; R17 := U13
792 [-]: GETUPVAL  R18 U0       ; R18 := U0
793 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
794 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
795 [-]: CALL      R17 2 1      ; R17(R18)
796 [-]: RETURN    R0 1         ; return 
797 [-]: GETUPVAL  R17 U0       ; R17 := U0
798 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
799 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
800 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
801 [-]: GETTABLE  R17 R17 K92  ; R17 := R17["missionType"]
802 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
803 [-]: GETTABLE  R18 R18 K93  ; R18 := R18["MT_ARENA"]
804 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 827
805 [-]: JMP       827          ; PC := 827
806 [-]: GETUPVAL  R17 U0       ; R17 := U0
807 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
808 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
809 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
810 [-]: GETTABLE  R17 R17 K94  ; R17 := R17["faction"]
811 [-]: GETGLOBAL R18 K72      ; R18 := Lotus_Game
812 [-]: GETTABLE  R18 R18 K95  ; R18 := R18["FC_CORPUS"]
813 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 827
814 [-]: JMP       827          ; PC := 827
815 [-]: GETUPVAL  R17 U0       ; R17 := U0
816 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
817 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["name"]
818 [-]: TEST      R17 0        ; if not R17 then PC := 827
819 [-]: JMP       827          ; PC := 827
820 [-]: GETUPVAL  R17 U10      ; R17 := U10
821 [-]: MOVE      R18 R1       ; R18 := R1
822 [-]: MOVE      R19 R1       ; R19 := R1
823 [-]: MOVE      R20 R2       ; R20 := R2
824 [-]: MOVE      R21 R4       ; R21 := R4
825 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
826 [-]: RETURN    R0 1         ; return 
827 [-]: GETUPVAL  R17 U0       ; R17 := U0
828 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
829 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
830 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
831 [-]: GETTABLE  R17 R17 K107 ; R17 := R17["soloMode"]
832 [-]: TEST      R17 0        ; if not R17 then PC := 911
833 [-]: JMP       911          ; PC := 911
834 [-]: GETGLOBAL R17 K45      ; R17 := gMatchingService
835 [-]: SELF      R17 R17 K108 ; R18 := R17; R17 := R17["0x35DDC67D"]
836 [-]: CALL      R17 2 2      ; R17 := R17(R18)
837 [-]: LT        0 K26 R17    ; if 1 >= R17 then PC := 887
838 [-]: JMP       887          ; PC := 887
839 [-]: GETUPVAL  R17 U14      ; R17 := U14
840 [-]: GETTABLE  R17 R17 K109 ; R17 := R17["0x8ECD61A2"]
841 [-]: GETGLOBAL R18 K110     ; R18 := 0xEC274B1A
842 [-]: MOVE      R19 R1       ; R19 := R1
843 [-]: CALL      R18 2 2      ; R18 := R18(R19)
844 [-]: MOVE      R19 R1       ; R19 := R1
845 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
846 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 869
847 [-]: JMP       869          ; PC := 869
848 [-]: GETGLOBAL R18 K50      ; R18 := mMovie
849 [-]: SELF      R18 R18 K51  ; R19 := R18; R18 := R18["0x5DB0BD4"]
850 [-]: GETTABLE  R20 R17 K111 ; R20 := R17["text"]
851 [-]: MOVE      R21 R0       ; R21 := R0
852 [-]: NEWTABLE  R22 0 5      ; R22 := {}
853 [-]: GETTABLE  R23 R17 K113 ; R23 := R17["player"]
854 [-]: SETTABLE  R22 K112 R23 ; R22["PLAYER_NAME"] := R23
855 [-]: GETTABLE  R23 R17 K115 ; R23 := R17["value"]
856 [-]: SETTABLE  R22 K114 R23 ; R22["VALUE"] := R23
857 [-]: GETTABLE  R23 R17 K116 ; R23 := R17["MIN"]
858 [-]: SETTABLE  R22 K116 R23 ; R22["MIN"] := R23
859 [-]: GETTABLE  R23 R17 K117 ; R23 := R17["MAX"]
860 [-]: SETTABLE  R22 K117 R23 ; R22["MAX"] := R23
861 [-]: GETTABLE  R23 R17 K118 ; R23 := R17["ITEM"]
862 [-]: SETTABLE  R22 K118 R23 ; R22["ITEM"] := R23
863 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
864 [-]: GETUPVAL  R19 U3       ; R19 := U3
865 [-]: GETTABLE  R19 R19 K49  ; R19 := R19["0xB11F032"]
866 [-]: MOVE      R20 R18      ; R20 := R18
867 [-]: CALL      R19 2 1      ; R19(R20)
868 [-]: JMP       910          ; PC := 910
869 [-]: GETGLOBAL R19 K9       ; R19 := 0x400E7765
870 [-]: GETUPVAL  R20 U15      ; R20 := U15
871 [-]: CALL      R19 2 2      ; R19 := R19(R20)
872 [-]: TEST      R19 0        ; if not R19 then PC := 910
873 [-]: JMP       910          ; PC := 910
874 [-]: GETUPVAL  R19 U16      ; R19 := U16
875 [-]: GETUPVAL  R20 U0       ; R20 := U0
876 [-]: GETTABLE  R20 R20 K0   ; R20 := R20["Node"]
877 [-]: SETTABLE  R19 K0 R20   ; R19["Node"] := R20
878 [-]: GETUPVAL  R19 U16      ; R19 := U16
879 [-]: SETTABLE  R19 K119 R1  ; R19["SectorName"] := R1
880 [-]: GETUPVAL  R19 U3       ; R19 := U3
881 [-]: GETTABLE  R19 R19 K120 ; R19 := R19["0x1C988750"]
882 [-]: LOADK     R20 K121     ; R20 := "/Lotus/Language/Menu/SoloModeRequired"
883 [-]: LOADK     R21 K122     ; R21 := "ConfirmSoloMission"
884 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
885 [-]: MOVE      R19 R15      ; R19 := R15
886 [-]: JMP       910          ; PC := 910
887 [-]: GETUPVAL  R19 U0       ; R19 := U0
888 [-]: GETTABLE  R19 R19 K0   ; R19 := R19["Node"]
889 [-]: TEST      R19 0        ; if not R19 then PC := 910
890 [-]: JMP       910          ; PC := 910
891 [-]: GETUPVAL  R19 U0       ; R19 := U0
892 [-]: GETTABLE  R19 R19 K0   ; R19 := R19["Node"]
893 [-]: GETTABLE  R19 R19 K6   ; R19 := R19["radialSector"]
894 [-]: TEST      R19 0        ; if not R19 then PC := 910
895 [-]: JMP       910          ; PC := 910
896 [-]: GETUPVAL  R19 U5       ; R19 := U5
897 [-]: MOVE      R20 R1       ; R20 := R1
898 [-]: MOVE      R21 R2       ; R21 := R2
899 [-]: MOVE      R22 R3       ; R22 := R3
900 [-]: MOVE      R23 R4       ; R23 := R4
901 [-]: CALL      R19 5 2      ; R19 := R19(R20,R21,R22,R23)
902 [-]: TEST      R19 0        ; if not R19 then PC := 910
903 [-]: JMP       910          ; PC := 910
904 [-]: GETGLOBAL R19 K3       ; R19 := _T
905 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["SquadOverlay"]
906 [-]: SELF      R19 R19 K11  ; R20 := R19; R19 := R19["0x458F27A9"]
907 [-]: LOADK     R21 K123     ; R21 := "NotifyForceLoadSoloMission"
908 [-]: LOADK     R22 K13      ; R22 := ""
909 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
910 [-]: RETURN    R0 1         ; return 
911 [-]: GETUPVAL  R19 U1       ; R19 := U1
912 [-]: GETTABLE  R19 R19 K18  ; R19 := R19["Active"]
913 [-]: TEST      R19 0        ; if not R19 then PC := 919
914 [-]: JMP       919          ; PC := 919
915 [-]: GETUPVAL  R19 U1       ; R19 := U1
916 [-]: GETUPVAL  R20 U0       ; R20 := U0
917 [-]: GETTABLE  R20 R20 K0   ; R20 := R20["Node"]
918 [-]: SETTABLE  R19 K124 R20 ; R19["SelectionNode"] := R20
919 [-]: GETUPVAL  R19 U5       ; R19 := U5
920 [-]: MOVE      R20 R1       ; R20 := R1
921 [-]: MOVE      R21 R2       ; R21 := R2
922 [-]: MOVE      R22 R3       ; R22 := R3
923 [-]: MOVE      R23 R4       ; R23 := R4
924 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
925 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 4369
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SETTABLE  R0 K1 R1     ; R0["InRailJackMode"] := R1
  5 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 4373
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xDB33ECB2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := 1
  5 [-]: LOADK     R3 K3        ; R3 := 0.20000000298023
  6 [-]: LOADK     R4 K4        ; R4 := 0
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 4377
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETGLOBAL R0 K2        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["WareframeChallenge"]
  7 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
  8 [-]: GETGLOBAL R2 K2        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SquadOverlay"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 41
 12 [-]: JMP       41           ; PC := 41
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 14 [-]: GETGLOBAL R2 K6        ; R2 := gMatchingService
 15 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xD5E03646"]
 16 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 41
 19 [-]: JMP       41           ; PC := 41
 20 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 21 [-]: GETGLOBAL R2 K8        ; R2 := gClient
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 41
 24 [-]: JMP       41           ; PC := 41
 25 [-]: GETGLOBAL R1 K8        ; R1 := gClient
 26 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0xC6E8F98F"]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: TEST      R1 1         ; if R1 then PC := 41
 29 [-]: JMP       41           ; PC := 41
 30 [-]: TEST      R0 1         ; if R0 then PC := 41
 31 [-]: JMP       41           ; PC := 41
 32 [-]: GETGLOBAL R1 K10       ; R1 := 0x93B1256B
 33 [-]: LOADK     R2 K11       ; R2 := "Hosting lobby from MapRedux.lua (InitializeMore)"
 34 [-]: CALL      R1 2 1       ; R1(R2)
 35 [-]: GETGLOBAL R1 K2        ; R1 := _T
 36 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SquadOverlay"]
 37 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x458F27A9"]
 38 [-]: LOADK     R3 K13       ; R3 := "HostLobby"
 39 [-]: LOADK     R4 K14       ; R4 := ""
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 42 [-]: GETGLOBAL R2 K15       ; R2 := worldStateMovie
 43 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 44 [-]: TEST      R1 1         ; if R1 then PC := 77
 45 [-]: JMP       77           ; PC := 77
 46 [-]: TEST      R0 1         ; if R0 then PC := 77
 47 [-]: JMP       77           ; PC := 77
 48 [-]: GETUPVAL  R1 U0        ; R1 := U0
 49 [-]: GETGLOBAL R2 K17       ; R2 := gFlashMgr
 50 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x616DD092"]
 51 [-]: GETGLOBAL R4 K15       ; R4 := worldStateMovie
 52 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 53 [-]: SETTABLE  R1 K16 R2    ; R1["Movie"] := R2
 54 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 55 [-]: GETUPVAL  R2 U0        ; R2 := U0
 56 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["Movie"]
 57 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 58 [-]: TEST      R1 0         ; if not R1 then PC := 66
 59 [-]: JMP       66           ; PC := 66
 60 [-]: GETUPVAL  R1 U0        ; R1 := U0
 61 [-]: GETGLOBAL R2 K17       ; R2 := gFlashMgr
 62 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2["0x24FF386"]
 63 [-]: GETGLOBAL R4 K15       ; R4 := worldStateMovie
 64 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 65 [-]: SETTABLE  R1 K16 R2    ; R1["Movie"] := R2
 66 [-]: GETGLOBAL R1 K2        ; R1 := _T
 67 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["MAP_HideExtraUI"]
 68 [-]: TEST      R1 0         ; if not R1 then PC := 77
 69 [-]: JMP       77           ; PC := 77
 70 [-]: GETUPVAL  R1 U0        ; R1 := U0
 71 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["Movie"]
 72 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x1C19D966"]
 73 [-]: LOADK     R3 K22       ; R3 := "_root"
 74 [-]: LOADK     R4 K23       ; R4 := "_visible"
 75 [-]: MOVE      R5 R0        ; R5 := R0
 76 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 77 [-]: GETUPVAL  R1 U1        ; R1 := U1
 78 [-]: GETTABLE  R1 R1 K24    ; R1 := R1["0x5B8EB241"]
 79 [-]: CALL      R1 1 2       ; R1 := R1()
 80 [-]: TEST      R1 0         ; if not R1 then PC := 96
 81 [-]: JMP       96           ; PC := 96
 82 [-]: GETGLOBAL R2 K25       ; R2 := gPlayerProfileMgr
 83 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2["0x21EF7B1A"]
 84 [-]: LOADK     R4 K27       ; R4 := 0
 85 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 86 [-]: SELF      R3 R2 K28    ; R4 := R2; R3 := R2["0x3EEB612E"]
 87 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 88 [-]: SELF      R4 R3 K29    ; R5 := R3; R4 := R3["0xDEFFE28B"]
 89 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 90 [-]: MOVE      R1 R4        ; R1 := R4
 91 [-]: GETGLOBAL R4 K30       ; R4 := mMovie
 92 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0x5FF274BB"]
 93 [-]: GETGLOBAL R6 K32       ; R6 := episodeStatusMovie
 94 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 95 [-]: MOVE      R4 R2        ; R4 := R2
 96 [-]: GETGLOBAL R4 K2        ; R4 := _T
 97 [-]: MOVE      R5 R1        ; R5 := R1
 98 [-]: SETTABLE  R4 K33 R5    ; R4["ResourceDroneVisible"] := R5
 99 [-]: GETGLOBAL R4 K30       ; R4 := mMovie
100 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0x5FF274BB"]
101 [-]: GETGLOBAL R6 K34       ; R6 := resourceDroneMovie
102 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
103 [-]: MOVE      R4 R3        ; R4 := R3
104 [-]: GETUPVAL  R4 U3        ; R4 := U3
105 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x458F27A9"]
106 [-]: LOADK     R6 K35       ; R6 := "OnRegionZoomOut"
107 [-]: LOADK     R7 K14       ; R7 := ""
108 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
109 [-]: GETGLOBAL R4 K17       ; R4 := gFlashMgr
110 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4["0xC4E70543"]
111 [-]: CALL      R4 2 1       ; R4(R5)
112 [-]: GETUPVAL  R4 U4        ; R4 := U4
113 [-]: CALL      R4 1 1       ; R4()
114 [-]: GETUPVAL  R4 U5        ; R4 := U5
115 [-]: CALL      R4 1 1       ; R4()
116 [-]: GETUPVAL  R4 U6        ; R4 := U6
117 [-]: CALL      R4 1 1       ; R4()
118 [-]: GETUPVAL  R4 U7        ; R4 := U7
119 [-]: CALL      R4 1 1       ; R4()
120 [-]: GETUPVAL  R4 U8        ; R4 := U8
121 [-]: CALL      R4 1 1       ; R4()
122 [-]: GETUPVAL  R4 U9        ; R4 := U9
123 [-]: CALL      R4 1 1       ; R4()
124 [-]: GETUPVAL  R4 U10       ; R4 := U10
125 [-]: CALL      R4 1 1       ; R4()
126 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 4422
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 4426
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["cameraSpot"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["cameraSpot"]
 10 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xEC183DDC"]
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["pos"]
 13 [-]: CALL      R0 3 1       ; R0(R1,R2)
 14 [-]: GETUPVAL  R0 U0        ; R0 := U0
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["cameraSpot"]
 16 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x5097FD8C"]
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["rotation"]
 19 [-]: CALL      R0 3 1       ; R0(R1,R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 4440
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7C1F5A97"]
  4 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  5 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETGLOBAL R0 K3        ; R0 := 0x221C9700
  9 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 10 [-]: RETURN    R0 0         ; return R0,...
 11 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 12 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x7F595CA7"]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETGLOBAL R1 K5        ; R1 := 0x458357BC
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 18 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7C1F5A97"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x6DA72501"]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: GETGLOBAL R5 K3        ; R5 := 0x221C9700
 26 [-]: LOADK     R6 K7        ; R6 := 0
 27 [-]: LOADK     R7 K7        ; R7 := 0
 28 [-]: LOADK     R8 K8        ; R8 := 1
 29 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 30 [-]: LOADK     R6 K7        ; R6 := 0
 31 [-]: TAILCALL  R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
 32 [-]: RETURN    R2 0         ; return R2,...
 33 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 4450
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  40

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7F595CA7"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x458357BC
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 1       ; R2(R3)
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Region"]
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: SETTABLE  R3 K4 K5     ; R3["Region"] := nil
 13 [-]: LOADK     R3 K6        ; R3 := 500
 14 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 15 [-]: GETGLOBAL R6 K0        ; R6 := 0x221C9700
 16 [-]: CALL      R6 1 2       ; R6 := R6()
 17 [-]: GETGLOBAL R7 K0        ; R7 := 0x221C9700
 18 [-]: CALL      R7 1 2       ; R7 := R7()
 19 [-]: LOADK     R8 K7        ; R8 := 0
 20 [-]: LOADK     R9 K7        ; R9 := 0
 21 [-]: MOVE      R10 R0       ; R10 := R0
 22 [-]: GETGLOBAL R11 K0       ; R11 := 0x221C9700
 23 [-]: CALL      R11 1 2      ; R11 := R11()
 24 [-]: GETGLOBAL R12 K0       ; R12 := 0x221C9700
 25 [-]: CALL      R12 1 2      ; R12 := R12()
 26 [-]: LOADNIL   R13 R13      ; R13 := nil
 27 [-]: MOVE      R14 R0       ; R14 := R0
 28 [-]: LOADK     R15 K6       ; R15 := 500
 29 [-]: GETGLOBAL R16 K0       ; R16 := 0x221C9700
 30 [-]: CALL      R16 1 2      ; R16 := R16()
 31 [-]: GETGLOBAL R17 K8       ; R17 := 0x400E7765
 32 [-]: GETGLOBAL R18 K9       ; R18 := gBackgroundRegion
 33 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 34 [-]: TEST      R17 1        ; if R17 then PC := 168
 35 [-]: JMP       168          ; PC := 168
 36 [-]: GETGLOBAL R17 K10      ; R17 := _T
 37 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["MouseInWorldStateWindow"]
 38 [-]: TEST      R17 1        ; if R17 then PC := 168
 39 [-]: JMP       168          ; PC := 168
 40 [-]: GETGLOBAL R17 K10      ; R17 := _T
 41 [-]: GETTABLE  R17 R17 K12  ; R17 := R17["MouseInChatArea"]
 42 [-]: TEST      R17 1        ; if R17 then PC := 168
 43 [-]: JMP       168          ; PC := 168
 44 [-]: GETGLOBAL R17 K9       ; R17 := gBackgroundRegion
 45 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17["0xF7C1BE25"]
 46 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 47 [-]: SELF      R17 R17 K14  ; R18 := R17; R17 := R17["0x8EEB099D"]
 48 [-]: MOVE      R19 R11      ; R19 := R11
 49 [-]: CALL      R17 3 1      ; R17(R18,R19)
 50 [-]: LOADK     R17 K15      ; R17 := 1
 51 [-]: GETUPVAL  R18 U1       ; R18 := U1
 52 [-]: LEN       R18 R18      ; R18 := # R18
 53 [-]: LOADK     R19 K15      ; R19 := 1
 54 [-]: FORPREP   R17 167      ; R17 -= R19; PC := 167
 55 [-]: GETUPVAL  R21 U1       ; R21 := U1
 56 [-]: GETTABLE  R5 R21 R20   ; R5 := R21[R20]
 57 [-]: GETUPVAL  R21 U2       ; R21 := U2
 58 [-]: GETTABLE  R13 R21 R20  ; R13 := R21[R20]
 59 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
 60 [-]: MOVE      R22 R13      ; R22 := R13
 61 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 62 [-]: TEST      R21 1        ; if R21 then PC := 167
 63 [-]: JMP       167          ; PC := 167
 64 [-]: GETUPVAL  R21 U3       ; R21 := U3
 65 [-]: GETTABLE  R21 R21 K16  ; R21 := R21["Active"]
 66 [-]: TEST      R21 0        ; if not R21 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: GETUPVAL  R21 U3       ; R21 := U3
 69 [-]: GETTABLE  R21 R21 K17  ; R21 := R21["Regions"]
 70 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
 71 [-]: TEST      R21 0        ; if not R21 then PC := 167
 72 [-]: JMP       167          ; PC := 167
 73 [-]: SELF      R21 R13 K14  ; R22 := R13; R21 := R13["0x8EEB099D"]
 74 [-]: MOVE      R23 R12      ; R23 := R12
 75 [-]: CALL      R21 3 1      ; R21(R22,R23)
 76 [-]: GETGLOBAL R21 K18      ; R21 := 0x518098BD
 77 [-]: MOVE      R22 R6       ; R22 := R6
 78 [-]: MOVE      R23 R12      ; R23 := R12
 79 [-]: MOVE      R24 R11      ; R24 := R11
 80 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
 81 [-]: GETUPVAL  R21 U4       ; R21 := U4
 82 [-]: GETTABLE  R9 R21 R20   ; R9 := R21[R20]
 83 [-]: GETUPVAL  R21 U5       ; R21 := U5
 84 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["IsVisible"]
 85 [-]: TEST      R21 0        ; if not R21 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: ADD       R9 R9 K20    ; R9 := R9 + 0.20000000298023
 88 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
 89 [-]: SELF      R21 R21 K21  ; R22 := R21; R21 := R21["0xECAA969E"]
 90 [-]: MOVE      R23 R7       ; R23 := R7
 91 [-]: MOVE      R24 R0       ; R24 := R0
 92 [-]: MOVE      R25 R1       ; R25 := R1
 93 [-]: MOVE      R26 R6       ; R26 := R6
 94 [-]: MOVE      R27 R9       ; R27 := R9
 95 [-]: CALL      R21 7 2      ; R21 := R21(R22,R23,R24,R25,R26,R27)
 96 [-]: MOVE      R10 R21      ; R10 := R21
 97 [-]: TEST      R10 0        ; if not R10 then PC := 108
 98 [-]: JMP       108          ; PC := 108
 99 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
100 [-]: MOVE      R22 R7       ; R22 := R7
101 [-]: CALL      R21 2 2      ; R21 := R21(R22)
102 [-]: LT        0 R21 R3     ; if R21 >= R3 then PC := 108
103 [-]: JMP       108          ; PC := 108
104 [-]: GETUPVAL  R21 U6       ; R21 := U6
105 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
106 [-]: TEST      R21 0        ; if not R21 then PC := 112
107 [-]: JMP       112          ; PC := 112
108 [-]: GETUPVAL  R21 U0       ; R21 := U0
109 [-]: GETTABLE  R21 R21 K23  ; R21 := R21["RegionLabel"]
110 [-]: EQ        0 R21 R20    ; if R21 ~= R20 then PC := 128
111 [-]: JMP       128          ; PC := 128
112 [-]: MOVE      R4 R7        ; R4 := R7
113 [-]: GETUPVAL  R21 U0       ; R21 := U0
114 [-]: GETTABLE  R21 R21 K23  ; R21 := R21["RegionLabel"]
115 [-]: EQ        0 R21 R20    ; if R21 ~= R20 then PC := 119
116 [-]: JMP       119          ; PC := 119
117 [-]: LOADK     R3 K7        ; R3 := 0
118 [-]: JMP       123          ; PC := 123
119 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
120 [-]: MOVE      R22 R7       ; R22 := R7
121 [-]: CALL      R21 2 2      ; R21 := R21(R22)
122 [-]: MOVE      R3 R21       ; R3 := R21
123 [-]: GETUPVAL  R21 U0       ; R21 := U0
124 [-]: GETUPVAL  R22 U1       ; R22 := U1
125 [-]: GETTABLE  R22 R22 R20  ; R22 := R22[R20]
126 [-]: SETTABLE  R21 K4 R22   ; R21["Region"] := R22
127 [-]: MOVE      R8 R20       ; R8 := R20
128 [-]: GETUPVAL  R21 U7       ; R21 := U7
129 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["mTargetVal"]
130 [-]: GETUPVAL  R22 U8       ; R22 := U8
131 [-]: GETTABLE  R22 R22 K25  ; R22 := R22["ZOOM_OUT_THRESHOLD"]
132 [-]: LT        0 R22 R21    ; if R22 >= R21 then PC := 167
133 [-]: JMP       167          ; PC := 167
134 [-]: GETUPVAL  R21 U5       ; R21 := U5
135 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["IsVisible"]
136 [-]: TEST      R21 1        ; if R21 then PC := 139
137 [-]: JMP       139          ; PC := 139
138 [-]: ADD       R9 R9 K20    ; R9 := R9 + 0.20000000298023
139 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
140 [-]: SELF      R21 R21 K21  ; R22 := R21; R21 := R21["0xECAA969E"]
141 [-]: MOVE      R23 R16      ; R23 := R16
142 [-]: MOVE      R24 R0       ; R24 := R0
143 [-]: GETUPVAL  R25 U9       ; R25 := U9
144 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["CAMERA_FOCUS_DIR"]
145 [-]: MOVE      R26 R6       ; R26 := R6
146 [-]: MOVE      R27 R9       ; R27 := R9
147 [-]: CALL      R21 7 2      ; R21 := R21(R22,R23,R24,R25,R26,R27)
148 [-]: MOVE      R14 R21      ; R14 := R21
149 [-]: TEST      R14 0        ; if not R14 then PC := 167
150 [-]: JMP       167          ; PC := 167
151 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
152 [-]: MOVE      R22 R16      ; R22 := R16
153 [-]: CALL      R21 2 2      ; R21 := R21(R22)
154 [-]: LT        0 R21 R15    ; if R21 >= R15 then PC := 167
155 [-]: JMP       167          ; PC := 167
156 [-]: GETUPVAL  R21 U6       ; R21 := U6
157 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
158 [-]: TEST      R21 1        ; if R21 then PC := 167
159 [-]: JMP       167          ; PC := 167
160 [-]: GETGLOBAL R21 K22      ; R21 := 0x218C5C62
161 [-]: MOVE      R22 R16      ; R22 := R16
162 [-]: CALL      R21 2 2      ; R21 := R21(R22)
163 [-]: MOVE      R15 R21      ; R15 := R21
164 [-]: GETUPVAL  R21 U1       ; R21 := U1
165 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
166 [-]: MOVE      R21 R10      ; R21 := R10
167 [-]: FORLOOP   R17 55       ; R17 += R19; if R17 <= R18 then begin PC := 55; R20 := R17 end
168 [-]: GETUPVAL  R21 U7       ; R21 := U7
169 [-]: GETTABLE  R21 R21 K27  ; R21 := R21["mCurVal"]
170 [-]: LT        0 K28 R21    ; if -2 >= R21 then PC := 174
171 [-]: JMP       174          ; PC := 174
172 [-]: GETUPVAL  R21 U0       ; R21 := U0
173 [-]: SETTABLE  R21 K4 K5    ; R21["Region"] := nil
174 [-]: GETUPVAL  R21 U0       ; R21 := U0
175 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["Region"]
176 [-]: EQ        1 R2 R21     ; if R2 == R21 then PC := 333
177 [-]: JMP       333          ; PC := 333
178 [-]: GETUPVAL  R21 U0       ; R21 := U0
179 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["Region"]
180 [-]: EQ        1 R21 K5     ; if R21 == nil then PC := 275
181 [-]: JMP       275          ; PC := 275
182 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
183 [-]: GETUPVAL  R22 U0       ; R22 := U0
184 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["Region"]
185 [-]: GETTABLE  R22 R22 K29  ; R22 := R22["instance"]
186 [-]: CALL      R21 2 2      ; R21 := R21(R22)
187 [-]: TEST      R21 1        ; if R21 then PC := 275
188 [-]: JMP       275          ; PC := 275
189 [-]: GETUPVAL  R21 U11      ; R21 := U11
190 [-]: TEST      R21 1        ; if R21 then PC := 196
191 [-]: JMP       196          ; PC := 196
192 [-]: GETUPVAL  R21 U12      ; R21 := U12
193 [-]: GETTABLE  R21 R21 K30  ; R21 := R21["0x25992394"]
194 [-]: GETGLOBAL R22 K31      ; R22 := rollOverRegionSound
195 [-]: CALL      R21 2 1      ; R21(R22)
196 [-]: GETUPVAL  R21 U4       ; R21 := U4
197 [-]: GETTABLE  R21 R21 R8   ; R21 := R21[R8]
198 [-]: GETUPVAL  R22 U13      ; R22 := U13
199 [-]: GETTABLE  R22 R22 R8   ; R22 := R22[R8]
200 [-]: EQ        0 R22 K5     ; if R22 ~= nil then PC := 205
201 [-]: JMP       205          ; PC := 205
202 [-]: GETUPVAL  R22 U13      ; R22 := U13
203 [-]: NEWTABLE  R23 0 0      ; R23 := {}
204 [-]: SETTABLE  R22 R8 R23   ; R22[R8] := R23
205 [-]: EQ        1 R21 K5     ; if R21 == nil then PC := 274
206 [-]: JMP       274          ; PC := 274
207 [-]: GETUPVAL  R22 U13      ; R22 := U13
208 [-]: GETTABLE  R22 R22 R8   ; R22 := R22[R8]
209 [-]: GETGLOBAL R23 K8       ; R23 := 0x400E7765
210 [-]: GETTABLE  R24 R22 K15  ; R24 := R22[1]
211 [-]: CALL      R23 2 2      ; R23 := R23(R24)
212 [-]: TEST      R23 0        ; if not R23 then PC := 226
213 [-]: JMP       226          ; PC := 226
214 [-]: GETGLOBAL R23 K9       ; R23 := gBackgroundRegion
215 [-]: SELF      R23 R23 K32  ; R24 := R23; R23 := R23["0xBDD34CC6"]
216 [-]: GETGLOBAL R25 K33      ; R25 := hoverRing
217 [-]: GETUPVAL  R26 U0       ; R26 := U0
218 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["Region"]
219 [-]: GETTABLE  R26 R26 K29  ; R26 := R26["instance"]
220 [-]: SELF      R26 R26 K34  ; R27 := R26; R26 := R26["0x6DA72501"]
221 [-]: CALL      R26 2 2      ; R26 := R26(R27)
222 [-]: GETUPVAL  R27 U9       ; R27 := U9
223 [-]: GETTABLE  R27 R27 K35  ; R27 := R27["RING_ROTATION"]
224 [-]: CALL      R23 5 2      ; R23 := R23(R24,R25,R26,R27)
225 [-]: SETTABLE  R22 K15 R23  ; R22[1] := R23
226 [-]: GETGLOBAL R23 K8       ; R23 := 0x400E7765
227 [-]: GETTABLE  R24 R22 K36  ; R24 := R22[2]
228 [-]: CALL      R23 2 2      ; R23 := R23(R24)
229 [-]: TEST      R23 0        ; if not R23 then PC := 252
230 [-]: JMP       252          ; PC := 252
231 [-]: GETGLOBAL R23 K9       ; R23 := gBackgroundRegion
232 [-]: SELF      R23 R23 K32  ; R24 := R23; R23 := R23["0xBDD34CC6"]
233 [-]: GETGLOBAL R25 K33      ; R25 := hoverRing
234 [-]: GETUPVAL  R26 U0       ; R26 := U0
235 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["Region"]
236 [-]: GETTABLE  R26 R26 K29  ; R26 := R26["instance"]
237 [-]: SELF      R26 R26 K34  ; R27 := R26; R26 := R26["0x6DA72501"]
238 [-]: CALL      R26 2 2      ; R26 := R26(R27)
239 [-]: GETUPVAL  R27 U9       ; R27 := U9
240 [-]: GETTABLE  R27 R27 K35  ; R27 := R27["RING_ROTATION"]
241 [-]: CALL      R23 5 2      ; R23 := R23(R24,R25,R26,R27)
242 [-]: SETTABLE  R22 K36 R23  ; R22[2] := R23
243 [-]: GETTABLE  R23 R22 K36  ; R23 := R22[2]
244 [-]: SELF      R23 R23 K37  ; R24 := R23; R23 := R23["0xA20F64C0"]
245 [-]: GETGLOBAL R25 K38      ; R25 := 0xB5A59043
246 [-]: LOADK     R26 K39      ; R26 := 255
247 [-]: LOADK     R27 K39      ; R27 := 255
248 [-]: LOADK     R28 K39      ; R28 := 255
249 [-]: LOADK     R29 K40      ; R29 := 150
250 [-]: CALL      R25 5 0      ; R25,... := R25(R26,R27,R28,R29)
251 [-]: CALL      R23 0 1      ; R23(R24,...)
252 [-]: GETTABLE  R23 R22 K15  ; R23 := R22[1]
253 [-]: GETTABLE  R24 R22 K36  ; R24 := R22[2]
254 [-]: CLOSURE   R25 0        ; R25 := closure(Function #115.1)
255 [-]: MOVE      R0 R23       ; R0 := R23
256 [-]: MOVE      R0 R21       ; R0 := R21
257 [-]: MOVE      R0 R24       ; R0 := R24
258 [-]: GETGLOBAL R26 K41      ; R26 := 0x52E17A90
259 [-]: GETGLOBAL R27 K1       ; R27 := mMovie
260 [-]: GETUPVAL  R28 U14      ; R28 := U14
261 [-]: GETTABLE  R28 R28 R8   ; R28 := R28[R8]
262 [-]: GETTABLE  R28 R28 K42  ; R28 := R28["clipName"]
263 [-]: GETGLOBAL R29 K43      ; R29 := UISys
264 [-]: GETTABLE  R29 R29 K44  ; R29 := R29["FlashInstance_EASE_OUT"]
265 [-]: NEWTABLE  R30 1 0      ; R30 := {}
266 [-]: MOVE      R31 R25      ; R31 := R25
267 [-]: SETLIST   R30 1 1      ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
268 [-]: NEWTABLE  R31 1 0      ; R31 := {}
269 [-]: LOADK     R32 K15      ; R32 := 1
270 [-]: SETLIST   R31 1 1      ; R31[(1-1)*FPF+i] := R(31+i), 1 <= i <= 1
271 [-]: LOADK     R32 K45      ; R32 := 0.25
272 [-]: CALL      R26 7 1      ; R26(R27,R28,R29,R30,R31,R32)
273 [-]: CLOSE     R22          ; SAVE R22,...
274 [-]: CLOSE     R21          ; SAVE R21,...
275 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 333
276 [-]: JMP       333          ; PC := 333
277 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
278 [-]: GETTABLE  R22 R2 K29   ; R22 := R2["instance"]
279 [-]: CALL      R21 2 2      ; R21 := R21(R22)
280 [-]: TEST      R21 1        ; if R21 then PC := 333
281 [-]: JMP       333          ; PC := 333
282 [-]: LOADK     R21 K7       ; R21 := 0
283 [-]: LOADK     R22 K15      ; R22 := 1
284 [-]: GETUPVAL  R23 U1       ; R23 := U1
285 [-]: LEN       R23 R23      ; R23 := # R23
286 [-]: LOADK     R24 K15      ; R24 := 1
287 [-]: FORPREP   R22 294      ; R22 -= R24; PC := 294
288 [-]: GETUPVAL  R26 U1       ; R26 := U1
289 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
290 [-]: EQ        0 R26 R2     ; if R26 ~= R2 then PC := 294
291 [-]: JMP       294          ; PC := 294
292 [-]: MOVE      R21 R25      ; R21 := R25
293 [-]: JMP       295          ; PC := 295
294 [-]: FORLOOP   R22 288      ; R22 += R24; if R22 <= R23 then begin PC := 288; R25 := R22 end
295 [-]: GETUPVAL  R26 U4       ; R26 := U4
296 [-]: GETTABLE  R26 R26 R21  ; R26 := R26[R21]
297 [-]: EQ        1 R26 K5     ; if R26 == nil then PC := 332
298 [-]: JMP       332          ; PC := 332
299 [-]: GETGLOBAL R27 K8       ; R27 := 0x400E7765
300 [-]: GETTABLE  R28 R2 K29   ; R28 := R2["instance"]
301 [-]: CALL      R27 2 2      ; R27 := R27(R28)
302 [-]: TEST      R27 1        ; if R27 then PC := 332
303 [-]: JMP       332          ; PC := 332
304 [-]: GETUPVAL  R27 U13      ; R27 := U13
305 [-]: GETTABLE  R27 R27 R21  ; R27 := R27[R21]
306 [-]: GETTABLE  R28 R27 K15  ; R28 := R27[1]
307 [-]: GETTABLE  R29 R27 K36  ; R29 := R27[2]
308 [-]: CLOSURE   R30 1        ; R30 := closure(Function #115.2)
309 [-]: MOVE      R0 R28       ; R0 := R28
310 [-]: MOVE      R0 R26       ; R0 := R26
311 [-]: MOVE      R0 R29       ; R0 := R29
312 [-]: GETGLOBAL R31 K41      ; R31 := 0x52E17A90
313 [-]: GETGLOBAL R32 K1       ; R32 := mMovie
314 [-]: GETUPVAL  R33 U14      ; R33 := U14
315 [-]: GETTABLE  R33 R33 R21  ; R33 := R33[R21]
316 [-]: GETTABLE  R33 R33 K42  ; R33 := R33["clipName"]
317 [-]: GETGLOBAL R34 K43      ; R34 := UISys
318 [-]: GETTABLE  R34 R34 K46  ; R34 := R34["FlashInstance_EASE_IN"]
319 [-]: NEWTABLE  R35 1 0      ; R35 := {}
320 [-]: MOVE      R36 R30      ; R36 := R30
321 [-]: SETLIST   R35 1 1      ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
322 [-]: NEWTABLE  R36 1 0      ; R36 := {}
323 [-]: LOADK     R37 K15      ; R37 := 1
324 [-]: SETLIST   R36 1 1      ; R36[(1-1)*FPF+i] := R(36+i), 1 <= i <= 1
325 [-]: LOADK     R37 K47      ; R37 := 0.15000000596046
326 [-]: LOADK     R38 K7       ; R38 := 0
327 [-]: CLOSURE   R39 2        ; R39 := closure(Function #115.3)
328 [-]: MOVE      R0 R28       ; R0 := R28
329 [-]: MOVE      R0 R29       ; R0 := R29
330 [-]: CALL      R31 9 1      ; R31(R32,R33,R34,R35,R36,R37,R38,R39)
331 [-]: CLOSE     R27          ; SAVE R27,...
332 [-]: CLOSE     R21          ; SAVE R21,...
333 [-]: RETURN    R4 2         ; return R4
334 [-]: RETURN    R0 1         ; return 


; Function #115.1:
;
; Name:            
; Defined at line: 4548
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R1 K1        ; R1 := math
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x8B011038"]
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: ADD       R2 R2 K3     ; R2 := R2 + 0.15000000596046
 10 [-]: MUL       R2 R2 R0     ; R2 := R2 * R0
 11 [-]: LOADK     R3 K4        ; R3 := 0.0099999997764826
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x9F133E77"]
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: GETUPVAL  R3 U2        ; R3 := U2
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 35
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETGLOBAL R2 K1        ; R2 := math
 24 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x8B011038"]
 25 [-]: GETUPVAL  R3 U1        ; R3 := U1
 26 [-]: ADD       R3 R3 K6     ; R3 := R3 + 0.34999999403954
 27 [-]: MUL       R3 R3 R0     ; R3 := R3 * R0
 28 [-]: LOADK     R4 K4        ; R4 := 0.0099999997764826
 29 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 30 [-]: GETUPVAL  R3 U2        ; R3 := U2
 31 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x9F133E77"]
 32 [-]: MOVE      R5 R2        ; R5 := R2
 33 [-]: MOVE      R6 R2        ; R6 := R2
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: RETURN    R0 1         ; return 


; Function #115.2:
;
; Name:            
; Defined at line: 4580
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SUB       R0 K0 R0     ; R0 := 1 - R0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R1 K2        ; R1 := math
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x8B011038"]
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: ADD       R2 R2 K4     ; R2 := R2 + 0.15000000596046
 11 [-]: MUL       R2 R2 R0     ; R2 := R2 * R0
 12 [-]: LOADK     R3 K5        ; R3 := 0.0099999997764826
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x9F133E77"]
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: TEST      R2 1         ; if R2 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R2 K2        ; R2 := math
 25 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x8B011038"]
 26 [-]: GETUPVAL  R3 U1        ; R3 := U1
 27 [-]: ADD       R3 R3 K7     ; R3 := R3 + 0.34999999403954
 28 [-]: MUL       R3 R3 R0     ; R3 := R3 * R0
 29 [-]: LOADK     R4 K5        ; R4 := 0.0099999997764826
 30 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x9F133E77"]
 33 [-]: MOVE      R5 R2        ; R5 := R2
 34 [-]: MOVE      R6 R2        ; R6 := R2
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: RETURN    R0 1         ; return 


; Function #115.3:
;
; Name:            
; Defined at line: 4593
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R0 K1        ; R0 := gBackgroundRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x9B0A3887"]
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 1         ; if R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R0 K1        ; R0 := gBackgroundRegion
 16 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x9B0A3887"]
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: CALL      R0 3 1       ; R0(R1,R2)
 19 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 4608
; #Upvalues:       38
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  91

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["EDIT_REGIONS"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 83
  5 [-]: JMP       83           ; PC := 83
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mMovingRegion"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 83
 11 [-]: JMP       83           ; PC := 83
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: GETUPVAL  R1 U2        ; R1 := U2
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInitialWorldCursor"]
 16 [-]: SUB       R1 R0 R1     ; R1 := R0 - R1
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mInitialPosition"]
 19 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 20 [-]: SETTABLE  R2 K5 K6     ; R2["z"] := 0
 21 [-]: GETUPVAL  R3 U2        ; R3 := U2
 22 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mMovingRegion"]
 23 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["instance"]
 24 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xEC183DDC"]
 25 [-]: MOVE      R5 R2        ; R5 := R2
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: GETUPVAL  R3 U4        ; R3 := U4
 28 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x2F74E23B"]
 29 [-]: GETUPVAL  R5 U2        ; R5 := U2
 30 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mMovingRegion"]
 31 [-]: MOVE      R6 R2        ; R6 := R2
 32 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 33 [-]: LOADNIL   R3 R3        ; R3 := nil
 34 [-]: GETGLOBAL R4 K10       ; R4 := 0x63B09107
 35 [-]: GETUPVAL  R5 U2        ; R5 := U2
 36 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mChildNodes"]
 37 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 38 [-]: JMP       70           ; PC := 70
 39 [-]: GETUPVAL  R9 U5        ; R9 := U5
 40 [-]: GETTABLE  R10 R8 K12   ; R10 := R8["NodeIndex"]
 41 [-]: GETTABLE  R3 R9 R10    ; R3 := R9[R10]
 42 [-]: GETTABLE  R9 R8 K13    ; R9 := R8["InitialPosition"]
 43 [-]: ADD       R2 R9 R1     ; R2 := R9 + R1
 44 [-]: SETTABLE  R3 K14 R2    ; R3["position"] := R2
 45 [-]: GETUPVAL  R9 U6        ; R9 := U6
 46 [-]: MOVE      R10 R3       ; R10 := R3
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: SETTABLE  R3 K15 R9    ; R3["isSurfaceNode"] := R9
 49 [-]: GETUPVAL  R9 U4        ; R9 := U4
 50 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9["0xDD4FB1D0"]
 51 [-]: GETTABLE  R11 R3 K17   ; R11 := R3["radialSector"]
 52 [-]: MOVE      R12 R2       ; R12 := R2
 53 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 54 [-]: GETTABLE  R9 R3 K18    ; R9 := R3["deco"]
 55 [-]: EQ        1 R9 K19     ; if R9 == nil then PC := 70
 56 [-]: JMP       70           ; PC := 70
 57 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
 58 [-]: GETTABLE  R10 R3 K18   ; R10 := R3["deco"]
 59 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["mInstance"]
 60 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 61 [-]: TEST      R9 1         ; if R9 then PC := 70
 62 [-]: JMP       70           ; PC := 70
 63 [-]: GETTABLE  R9 R3 K18    ; R9 := R3["deco"]
 64 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["mInstance"]
 65 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0xEC183DDC"]
 66 [-]: GETTABLE  R11 R3 K18   ; R11 := R3["deco"]
 67 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["mOffset"]
 68 [-]: ADD       R11 R2 R11   ; R11 := R2 + R11
 69 [-]: CALL      R9 3 1       ; R9(R10,R11)
 70 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 39; R6 := R7 end
 71 [-]: JMP       39           ; PC := 39
 72 [-]: LOADK     R9 K22       ; R9 := 1
 73 [-]: GETUPVAL  R10 U7       ; R10 := U7
 74 [-]: LEN       R10 R10      ; R10 := # R10
 75 [-]: LOADK     R11 K22      ; R11 := 1
 76 [-]: FORPREP   R9 81        ; R9 -= R11; PC := 81
 77 [-]: GETUPVAL  R13 U8       ; R13 := U8
 78 [-]: GETUPVAL  R14 U7       ; R14 := U7
 79 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
 80 [-]: CALL      R13 2 1      ; R13(R14)
 81 [-]: FORLOOP   R9 77        ; R9 += R11; if R9 <= R10 then begin PC := 77; R12 := R9 end
 82 [-]: RETURN    R0 1         ; return 
 83 [-]: GETUPVAL  R13 U0       ; R13 := U0
 84 [-]: GETUPVAL  R14 U1       ; R14 := U1
 85 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["EDIT_NODES"]
 86 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 184
 87 [-]: JMP       184          ; PC := 184
 88 [-]: GETGLOBAL R13 K1       ; R13 := 0x400E7765
 89 [-]: GETUPVAL  R14 U2       ; R14 := U2
 90 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mMovingNode"]
 91 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 92 [-]: TEST      R13 1        ; if R13 then PC := 184
 93 [-]: JMP       184          ; PC := 184
 94 [-]: GETUPVAL  R13 U9       ; R13 := U9
 95 [-]: CALL      R13 1 2      ; R13 := R13()
 96 [-]: EQ        1 R13 K19    ; if R13 == nil then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: EQ        0 R13 K25    ; if R13 ~= "0x0" then PC := 129
 99 [-]: JMP       129          ; PC := 129
100 [-]: GETUPVAL  R14 U3       ; R14 := U3
101 [-]: CALL      R14 1 2      ; R14 := R14()
102 [-]: LOADNIL   R15 R15      ; R15 := nil
103 [-]: GETUPVAL  R16 U10      ; R16 := U10
104 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["mShiftDown"]
105 [-]: TEST      R16 0        ; if not R16 then PC := 122
106 [-]: JMP       122          ; PC := 122
107 [-]: GETUPVAL  R16 U11      ; R16 := U11
108 [-]: CALL      R16 1 2      ; R16 := R16()
109 [-]: GETTABLE  R17 R16 K27  ; R17 := R16["y"]
110 [-]: GETUPVAL  R18 U2       ; R18 := U2
111 [-]: GETTABLE  R18 R18 K28  ; R18 := R18["mInitialMousePosition"]
112 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["y"]
113 [-]: SUB       R17 R17 R18  ; R17 := R17 - R18
114 [-]: GETGLOBAL R18 K29      ; R18 := 0x221C9700
115 [-]: LOADK     R19 K6       ; R19 := 0
116 [-]: LOADK     R20 K6       ; R20 := 0
117 [-]: UNM       R21 R17      ; R21 := - R17
118 [-]: DIV       R21 R21 K30  ; R21 := R21 / 500
119 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
120 [-]: MOVE      R15 R18      ; R15 := R18
121 [-]: JMP       125          ; PC := 125
122 [-]: GETUPVAL  R18 U2       ; R18 := U2
123 [-]: GETTABLE  R18 R18 K3   ; R18 := R18["mInitialWorldCursor"]
124 [-]: SUB       R15 R14 R18  ; R15 := R14 - R18
125 [-]: GETUPVAL  R18 U2       ; R18 := U2
126 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["mInitialPosition"]
127 [-]: ADD       R13 R18 R15  ; R13 := R18 + R15
128 [-]: JMP       135          ; PC := 135
129 [-]: GETGLOBAL R18 K31      ; R18 := gBackgroundRegion
130 [-]: SELF      R18 R18 K32  ; R19 := R18; R18 := R18["0xF7C1BE25"]
131 [-]: CALL      R18 2 2      ; R18 := R18(R19)
132 [-]: SELF      R18 R18 K33  ; R19 := R18; R18 := R18["0x6DA72501"]
133 [-]: CALL      R18 2 2      ; R18 := R18(R19)
134 [-]: ADD       R13 R13 R18  ; R13 := R13 + R18
135 [-]: GETUPVAL  R19 U2       ; R19 := U2
136 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
137 [-]: SETTABLE  R19 K14 R13  ; R19["position"] := R13
138 [-]: GETUPVAL  R19 U2       ; R19 := U2
139 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
140 [-]: GETUPVAL  R20 U6       ; R20 := U6
141 [-]: GETUPVAL  R21 U2       ; R21 := U2
142 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["mMovingNode"]
143 [-]: CALL      R20 2 2      ; R20 := R20(R21)
144 [-]: SETTABLE  R19 K15 R20  ; R19["isSurfaceNode"] := R20
145 [-]: GETUPVAL  R19 U2       ; R19 := U2
146 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
147 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["radialSector"]
148 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["region"]
149 [-]: LOADK     R20 K22      ; R20 := 1
150 [-]: GETUPVAL  R21 U7       ; R21 := U7
151 [-]: LEN       R21 R21      ; R21 := # R21
152 [-]: LOADK     R22 K22      ; R22 := 1
153 [-]: FORPREP   R20 172      ; R20 -= R22; PC := 172
154 [-]: GETUPVAL  R24 U7       ; R24 := U7
155 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
156 [-]: GETTABLE  R24 R24 K35  ; R24 := R24["NodeA"]
157 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["radialSector"]
158 [-]: GETTABLE  R24 R24 K34  ; R24 := R24["region"]
159 [-]: EQ        1 R24 R19    ; if R24 == R19 then PC := 168
160 [-]: JMP       168          ; PC := 168
161 [-]: GETUPVAL  R24 U7       ; R24 := U7
162 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
163 [-]: GETTABLE  R24 R24 K36  ; R24 := R24["NodeB"]
164 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["radialSector"]
165 [-]: GETTABLE  R24 R24 K34  ; R24 := R24["region"]
166 [-]: EQ        0 R24 R19    ; if R24 ~= R19 then PC := 172
167 [-]: JMP       172          ; PC := 172
168 [-]: GETUPVAL  R24 U8       ; R24 := U8
169 [-]: GETUPVAL  R25 U7       ; R25 := U7
170 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
171 [-]: CALL      R24 2 1      ; R24(R25)
172 [-]: FORLOOP   R20 154      ; R20 += R22; if R20 <= R21 then begin PC := 154; R23 := R20 end
173 [-]: GETUPVAL  R24 U4       ; R24 := U4
174 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24["0xDD4FB1D0"]
175 [-]: GETUPVAL  R26 U2       ; R26 := U2
176 [-]: GETTABLE  R26 R26 K24  ; R26 := R26["mMovingNode"]
177 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["radialSector"]
178 [-]: MOVE      R27 R13      ; R27 := R13
179 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
180 [-]: GETUPVAL  R24 U12      ; R24 := U12
181 [-]: GETUPVAL  R25 U2       ; R25 := U2
182 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["mMovingNode"]
183 [-]: CALL      R24 2 1      ; R24(R25)
184 [-]: GETUPVAL  R24 U0       ; R24 := U0
185 [-]: GETUPVAL  R25 U1       ; R25 := U1
186 [-]: GETTABLE  R25 R25 K37  ; R25 := R25["EDIT_SHORTCUT_CONTROL_POINTS"]
187 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 332
188 [-]: JMP       332          ; PC := 332
189 [-]: GETUPVAL  R24 U3       ; R24 := U3
190 [-]: CALL      R24 1 2      ; R24 := R24()
191 [-]: GETUPVAL  R25 U2       ; R25 := U2
192 [-]: GETTABLE  R25 R25 K38  ; R25 := R25["mControlPointHeld"]
193 [-]: TEST      R25 1        ; if R25 then PC := 273
194 [-]: JMP       273          ; PC := 273
195 [-]: GETUPVAL  R25 U2       ; R25 := U2
196 [-]: GETTABLE  R25 R25 K39  ; R25 := R25["mMovingControlPoint"]
197 [-]: LOADNIL   R26 R28      ; R26 := R27 := R28 := nil
198 [-]: LOADK     R29 K22      ; R29 := 1
199 [-]: GETUPVAL  R30 U7       ; R30 := U7
200 [-]: LEN       R30 R30      ; R30 := # R30
201 [-]: LOADK     R31 K22      ; R31 := 1
202 [-]: FORPREP   R29 238      ; R29 -= R31; PC := 238
203 [-]: GETUPVAL  R33 U7       ; R33 := U7
204 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
205 [-]: GETTABLE  R33 R33 K40  ; R33 := R33["IsShortcut"]
206 [-]: TEST      R33 0        ; if not R33 then PC := 238
207 [-]: JMP       238          ; PC := 238
208 [-]: GETGLOBAL R33 K10      ; R33 := 0x63B09107
209 [-]: NEWTABLE  R34 2 0      ; R34 := {}
210 [-]: GETUPVAL  R35 U7       ; R35 := U7
211 [-]: GETTABLE  R35 R35 R32  ; R35 := R35[R32]
212 [-]: GETTABLE  R35 R35 K41  ; R35 := R35["controlPointA"]
213 [-]: GETUPVAL  R36 U7       ; R36 := U7
214 [-]: GETTABLE  R36 R36 R32  ; R36 := R36[R32]
215 [-]: GETTABLE  R36 R36 K42  ; R36 := R36["controlPointB"]
216 [-]: SETLIST   R34 2 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 2
217 [-]: CALL      R33 2 4      ; R33,R34,R35 := R33(R34)
218 [-]: JMP       236          ; PC := 236
219 [-]: GETGLOBAL R38 K29      ; R38 := 0x221C9700
220 [-]: GETTABLE  R39 R37 K14  ; R39 := R37["position"]
221 [-]: GETTABLE  R39 R39 K43  ; R39 := R39["x"]
222 [-]: GETTABLE  R40 R37 K14  ; R40 := R37["position"]
223 [-]: GETTABLE  R40 R40 K27  ; R40 := R40["y"]
224 [-]: LOADK     R41 K6       ; R41 := 0
225 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
226 [-]: MOVE      R26 R38      ; R26 := R38
227 [-]: GETGLOBAL R38 K44      ; R38 := 0x218C5C62
228 [-]: SUB       R39 R26 R24  ; R39 := R26 - R24
229 [-]: CALL      R38 2 2      ; R38 := R38(R39)
230 [-]: LT        0 R38 K45    ; if R38 >= 0.10000000149012 then PC := 236
231 [-]: JMP       236          ; PC := 236
232 [-]: MOVE      R27 R37      ; R27 := R37
233 [-]: GETUPVAL  R38 U7       ; R38 := U7
234 [-]: GETTABLE  R28 R38 R32  ; R28 := R38[R32]
235 [-]: JMP       238          ; PC := 238
236 [-]: TFORLOOP  R33 2        ; R36,R37 :=  R33(R34,R35); if R36 ~= nil then begin PC = 219; R35 := R36 end
237 [-]: JMP       219          ; PC := 219
238 [-]: FORLOOP   R29 203      ; R29 += R31; if R29 <= R30 then begin PC := 203; R32 := R29 end
239 [-]: EQ        1 R25 R27    ; if R25 == R27 then PC := 273
240 [-]: JMP       273          ; PC := 273
241 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
242 [-]: MOVE      R39 R25      ; R39 := R25
243 [-]: CALL      R38 2 2      ; R38 := R38(R39)
244 [-]: TEST      R38 1        ; if R38 then PC := 255
245 [-]: JMP       255          ; PC := 255
246 [-]: GETTABLE  R38 R25 K46  ; R38 := R25["ringInstance"]
247 [-]: SELF      R38 R38 K47  ; R39 := R38; R38 := R38["0xA20F64C0"]
248 [-]: GETGLOBAL R40 K48      ; R40 := 0xB5A59043
249 [-]: LOADK     R41 K6       ; R41 := 0
250 [-]: LOADK     R42 K49      ; R42 := 255
251 [-]: LOADK     R43 K6       ; R43 := 0
252 [-]: LOADK     R44 K49      ; R44 := 255
253 [-]: CALL      R40 5 0      ; R40,... := R40(R41,R42,R43,R44)
254 [-]: CALL      R38 0 1      ; R38(R39,...)
255 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
256 [-]: MOVE      R39 R27      ; R39 := R27
257 [-]: CALL      R38 2 2      ; R38 := R38(R39)
258 [-]: TEST      R38 1        ; if R38 then PC := 269
259 [-]: JMP       269          ; PC := 269
260 [-]: GETTABLE  R38 R27 K46  ; R38 := R27["ringInstance"]
261 [-]: SELF      R38 R38 K47  ; R39 := R38; R38 := R38["0xA20F64C0"]
262 [-]: GETGLOBAL R40 K48      ; R40 := 0xB5A59043
263 [-]: LOADK     R41 K6       ; R41 := 0
264 [-]: LOADK     R42 K6       ; R42 := 0
265 [-]: LOADK     R43 K49      ; R43 := 255
266 [-]: LOADK     R44 K49      ; R44 := 255
267 [-]: CALL      R40 5 0      ; R40,... := R40(R41,R42,R43,R44)
268 [-]: CALL      R38 0 1      ; R38(R39,...)
269 [-]: GETUPVAL  R38 U2       ; R38 := U2
270 [-]: SETTABLE  R38 K39 R27  ; R38["mMovingControlPoint"] := R27
271 [-]: GETUPVAL  R38 U2       ; R38 := U2
272 [-]: SETTABLE  R38 K50 R28  ; R38["mEditingEdge"] := R28
273 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
274 [-]: GETUPVAL  R39 U2       ; R39 := U2
275 [-]: GETTABLE  R39 R39 K39  ; R39 := R39["mMovingControlPoint"]
276 [-]: CALL      R38 2 2      ; R38 := R38(R39)
277 [-]: TEST      R38 1        ; if R38 then PC := 332
278 [-]: JMP       332          ; PC := 332
279 [-]: GETUPVAL  R38 U2       ; R38 := U2
280 [-]: GETTABLE  R38 R38 K38  ; R38 := R38["mControlPointHeld"]
281 [-]: TEST      R38 0        ; if not R38 then PC := 332
282 [-]: JMP       332          ; PC := 332
283 [-]: GETUPVAL  R38 U2       ; R38 := U2
284 [-]: GETTABLE  R38 R38 K39  ; R38 := R38["mMovingControlPoint"]
285 [-]: GETTABLE  R38 R38 K14  ; R38 := R38["position"]
286 [-]: GETTABLE  R38 R38 K5   ; R38 := R38["z"]
287 [-]: GETUPVAL  R39 U2       ; R39 := U2
288 [-]: GETTABLE  R39 R39 K3   ; R39 := R39["mInitialWorldCursor"]
289 [-]: SUB       R39 R24 R39  ; R39 := R24 - R39
290 [-]: GETUPVAL  R40 U2       ; R40 := U2
291 [-]: GETTABLE  R40 R40 K4   ; R40 := R40["mInitialPosition"]
292 [-]: ADD       R40 R40 R39  ; R40 := R40 + R39
293 [-]: SETTABLE  R40 K5 R38   ; R40["z"] := R38
294 [-]: GETUPVAL  R41 U2       ; R41 := U2
295 [-]: GETTABLE  R41 R41 K39  ; R41 := R41["mMovingControlPoint"]
296 [-]: SETTABLE  R41 K14 R40  ; R41["position"] := R40
297 [-]: GETUPVAL  R41 U13      ; R41 := U13
298 [-]: GETUPVAL  R42 U2       ; R42 := U2
299 [-]: GETTABLE  R42 R42 K50  ; R42 := R42["mEditingEdge"]
300 [-]: CALL      R41 2 2      ; R41 := R41(R42)
301 [-]: GETUPVAL  R42 U2       ; R42 := U2
302 [-]: GETTABLE  R42 R42 K50  ; R42 := R42["mEditingEdge"]
303 [-]: GETTABLE  R42 R42 K51  ; R42 := R42["Instance"]
304 [-]: SELF      R42 R42 K52  ; R43 := R42; R42 := R42["0x5BD03F6B"]
305 [-]: MOVE      R44 R41      ; R44 := R41
306 [-]: CALL      R42 3 1      ; R42(R43,R44)
307 [-]: GETUPVAL  R42 U2       ; R42 := U2
308 [-]: GETTABLE  R42 R42 K39  ; R42 := R42["mMovingControlPoint"]
309 [-]: GETTABLE  R42 R42 K46  ; R42 := R42["ringInstance"]
310 [-]: SELF      R42 R42 K8   ; R43 := R42; R42 := R42["0xEC183DDC"]
311 [-]: MOVE      R44 R40      ; R44 := R40
312 [-]: CALL      R42 3 1      ; R42(R43,R44)
313 [-]: GETUPVAL  R42 U4       ; R42 := U4
314 [-]: SELF      R42 R42 K53  ; R43 := R42; R42 := R42["0x3D2B1A67"]
315 [-]: GETUPVAL  R44 U2       ; R44 := U2
316 [-]: GETTABLE  R44 R44 K50  ; R44 := R44["mEditingEdge"]
317 [-]: GETTABLE  R44 R44 K35  ; R44 := R44["NodeA"]
318 [-]: GETTABLE  R44 R44 K17  ; R44 := R44["radialSector"]
319 [-]: GETUPVAL  R45 U2       ; R45 := U2
320 [-]: GETTABLE  R45 R45 K50  ; R45 := R45["mEditingEdge"]
321 [-]: GETTABLE  R45 R45 K36  ; R45 := R45["NodeB"]
322 [-]: GETTABLE  R45 R45 K17  ; R45 := R45["radialSector"]
323 [-]: GETUPVAL  R46 U2       ; R46 := U2
324 [-]: GETTABLE  R46 R46 K50  ; R46 := R46["mEditingEdge"]
325 [-]: GETTABLE  R46 R46 K41  ; R46 := R46["controlPointA"]
326 [-]: GETTABLE  R46 R46 K14  ; R46 := R46["position"]
327 [-]: GETUPVAL  R47 U2       ; R47 := U2
328 [-]: GETTABLE  R47 R47 K50  ; R47 := R47["mEditingEdge"]
329 [-]: GETTABLE  R47 R47 K42  ; R47 := R47["controlPointB"]
330 [-]: GETTABLE  R47 R47 K14  ; R47 := R47["position"]
331 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
332 [-]: GETUPVAL  R42 U0       ; R42 := U0
333 [-]: GETUPVAL  R43 U1       ; R43 := U1
334 [-]: GETTABLE  R43 R43 K54  ; R43 := R43["EDIT_NODE_DECOS"]
335 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 542
336 [-]: JMP       542          ; PC := 542
337 [-]: GETGLOBAL R42 K1       ; R42 := 0x400E7765
338 [-]: GETUPVAL  R43 U2       ; R43 := U2
339 [-]: GETTABLE  R43 R43 K24  ; R43 := R43["mMovingNode"]
340 [-]: CALL      R42 2 2      ; R42 := R42(R43)
341 [-]: TEST      R42 1        ; if R42 then PC := 542
342 [-]: JMP       542          ; PC := 542
343 [-]: GETUPVAL  R42 U2       ; R42 := U2
344 [-]: GETTABLE  R42 R42 K55  ; R42 := R42["mEditingOffset"]
345 [-]: TEST      R42 0        ; if not R42 then PC := 377
346 [-]: JMP       377          ; PC := 377
347 [-]: GETUPVAL  R42 U3       ; R42 := U3
348 [-]: CALL      R42 1 2      ; R42 := R42()
349 [-]: GETUPVAL  R43 U2       ; R43 := U2
350 [-]: GETTABLE  R43 R43 K3   ; R43 := R43["mInitialWorldCursor"]
351 [-]: SUB       R43 R42 R43  ; R43 := R42 - R43
352 [-]: GETUPVAL  R44 U2       ; R44 := U2
353 [-]: GETTABLE  R44 R44 K4   ; R44 := R44["mInitialPosition"]
354 [-]: ADD       R44 R44 R43  ; R44 := R44 + R43
355 [-]: GETUPVAL  R45 U2       ; R45 := U2
356 [-]: GETTABLE  R45 R45 K24  ; R45 := R45["mMovingNode"]
357 [-]: GETTABLE  R45 R45 K18  ; R45 := R45["deco"]
358 [-]: SETTABLE  R45 K21 R44  ; R45["mOffset"] := R44
359 [-]: GETUPVAL  R45 U2       ; R45 := U2
360 [-]: GETTABLE  R45 R45 K24  ; R45 := R45["mMovingNode"]
361 [-]: GETTABLE  R45 R45 K18  ; R45 := R45["deco"]
362 [-]: GETTABLE  R45 R45 K20  ; R45 := R45["mInstance"]
363 [-]: SELF      R45 R45 K8   ; R46 := R45; R45 := R45["0xEC183DDC"]
364 [-]: GETUPVAL  R47 U2       ; R47 := U2
365 [-]: GETTABLE  R47 R47 K24  ; R47 := R47["mMovingNode"]
366 [-]: GETTABLE  R47 R47 K14  ; R47 := R47["position"]
367 [-]: ADD       R47 R47 R44  ; R47 := R47 + R44
368 [-]: CALL      R45 3 1      ; R45(R46,R47)
369 [-]: GETUPVAL  R45 U4       ; R45 := U4
370 [-]: SELF      R45 R45 K56  ; R46 := R45; R45 := R45["0xEDBA7E36"]
371 [-]: GETUPVAL  R47 U2       ; R47 := U2
372 [-]: GETTABLE  R47 R47 K24  ; R47 := R47["mMovingNode"]
373 [-]: GETTABLE  R47 R47 K17  ; R47 := R47["radialSector"]
374 [-]: MOVE      R48 R44      ; R48 := R44
375 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
376 [-]: JMP       538          ; PC := 538
377 [-]: GETUPVAL  R45 U2       ; R45 := U2
378 [-]: GETTABLE  R45 R45 K57  ; R45 := R45["mEditingRotation"]
379 [-]: TEST      R45 0        ; if not R45 then PC := 466
380 [-]: JMP       466          ; PC := 466
381 [-]: GETUPVAL  R45 U11      ; R45 := U11
382 [-]: CALL      R45 1 2      ; R45 := R45()
383 [-]: GETTABLE  R46 R45 K43  ; R46 := R45["x"]
384 [-]: GETUPVAL  R47 U2       ; R47 := U2
385 [-]: GETTABLE  R47 R47 K28  ; R47 := R47["mInitialMousePosition"]
386 [-]: GETTABLE  R47 R47 K43  ; R47 := R47["x"]
387 [-]: SUB       R46 R46 R47  ; R46 := R46 - R47
388 [-]: GETTABLE  R47 R45 K27  ; R47 := R45["y"]
389 [-]: GETUPVAL  R48 U2       ; R48 := U2
390 [-]: GETTABLE  R48 R48 K28  ; R48 := R48["mInitialMousePosition"]
391 [-]: GETTABLE  R48 R48 K27  ; R48 := R48["y"]
392 [-]: SUB       R47 R47 R48  ; R47 := R47 - R48
393 [-]: LOADNIL   R48 R48      ; R48 := nil
394 [-]: GETUPVAL  R49 U2       ; R49 := U2
395 [-]: GETTABLE  R49 R49 K58  ; R49 := R49["mRotationAxis"]
396 [-]: EQ        0 R49 K59    ; if R49 ~= "heading" then PC := 412
397 [-]: JMP       412          ; PC := 412
398 [-]: GETGLOBAL R49 K60      ; R49 := 0x1E4F6281
399 [-]: GETUPVAL  R50 U2       ; R50 := U2
400 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["mInitialRotation"]
401 [-]: GETTABLE  R50 R50 K59  ; R50 := R50["heading"]
402 [-]: ADD       R50 R50 R46  ; R50 := R50 + R46
403 [-]: GETUPVAL  R51 U2       ; R51 := U2
404 [-]: GETTABLE  R51 R51 K61  ; R51 := R51["mInitialRotation"]
405 [-]: GETTABLE  R51 R51 K62  ; R51 := R51["pitch"]
406 [-]: GETUPVAL  R52 U2       ; R52 := U2
407 [-]: GETTABLE  R52 R52 K61  ; R52 := R52["mInitialRotation"]
408 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["bank"]
409 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
410 [-]: MOVE      R48 R49      ; R48 := R49
411 [-]: JMP       447          ; PC := 447
412 [-]: GETUPVAL  R49 U2       ; R49 := U2
413 [-]: GETTABLE  R49 R49 K58  ; R49 := R49["mRotationAxis"]
414 [-]: EQ        0 R49 K62    ; if R49 ~= "pitch" then PC := 430
415 [-]: JMP       430          ; PC := 430
416 [-]: GETGLOBAL R49 K60      ; R49 := 0x1E4F6281
417 [-]: GETUPVAL  R50 U2       ; R50 := U2
418 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["mInitialRotation"]
419 [-]: GETTABLE  R50 R50 K59  ; R50 := R50["heading"]
420 [-]: GETUPVAL  R51 U2       ; R51 := U2
421 [-]: GETTABLE  R51 R51 K61  ; R51 := R51["mInitialRotation"]
422 [-]: GETTABLE  R51 R51 K62  ; R51 := R51["pitch"]
423 [-]: ADD       R51 R51 R47  ; R51 := R51 + R47
424 [-]: GETUPVAL  R52 U2       ; R52 := U2
425 [-]: GETTABLE  R52 R52 K61  ; R52 := R52["mInitialRotation"]
426 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["bank"]
427 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
428 [-]: MOVE      R48 R49      ; R48 := R49
429 [-]: JMP       447          ; PC := 447
430 [-]: GETUPVAL  R49 U2       ; R49 := U2
431 [-]: GETTABLE  R49 R49 K58  ; R49 := R49["mRotationAxis"]
432 [-]: EQ        0 R49 K63    ; if R49 ~= "bank" then PC := 447
433 [-]: JMP       447          ; PC := 447
434 [-]: GETGLOBAL R49 K60      ; R49 := 0x1E4F6281
435 [-]: GETUPVAL  R50 U2       ; R50 := U2
436 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["mInitialRotation"]
437 [-]: GETTABLE  R50 R50 K59  ; R50 := R50["heading"]
438 [-]: GETUPVAL  R51 U2       ; R51 := U2
439 [-]: GETTABLE  R51 R51 K61  ; R51 := R51["mInitialRotation"]
440 [-]: GETTABLE  R51 R51 K62  ; R51 := R51["pitch"]
441 [-]: GETUPVAL  R52 U2       ; R52 := U2
442 [-]: GETTABLE  R52 R52 K61  ; R52 := R52["mInitialRotation"]
443 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["bank"]
444 [-]: ADD       R52 R52 R46  ; R52 := R52 + R46
445 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
446 [-]: MOVE      R48 R49      ; R48 := R49
447 [-]: GETUPVAL  R49 U2       ; R49 := U2
448 [-]: GETTABLE  R49 R49 K24  ; R49 := R49["mMovingNode"]
449 [-]: GETTABLE  R49 R49 K18  ; R49 := R49["deco"]
450 [-]: SETTABLE  R49 K64 R48  ; R49["mRotation"] := R48
451 [-]: GETUPVAL  R49 U2       ; R49 := U2
452 [-]: GETTABLE  R49 R49 K24  ; R49 := R49["mMovingNode"]
453 [-]: GETTABLE  R49 R49 K18  ; R49 := R49["deco"]
454 [-]: GETTABLE  R49 R49 K20  ; R49 := R49["mInstance"]
455 [-]: SELF      R49 R49 K65  ; R50 := R49; R49 := R49["0x5097FD8C"]
456 [-]: MOVE      R51 R48      ; R51 := R48
457 [-]: CALL      R49 3 1      ; R49(R50,R51)
458 [-]: GETUPVAL  R49 U4       ; R49 := U4
459 [-]: SELF      R49 R49 K66  ; R50 := R49; R49 := R49["0xCDECE0C5"]
460 [-]: GETUPVAL  R51 U2       ; R51 := U2
461 [-]: GETTABLE  R51 R51 K24  ; R51 := R51["mMovingNode"]
462 [-]: GETTABLE  R51 R51 K17  ; R51 := R51["radialSector"]
463 [-]: MOVE      R52 R48      ; R52 := R48
464 [-]: CALL      R49 4 1      ; R49(R50,R51,R52)
465 [-]: JMP       538          ; PC := 538
466 [-]: GETUPVAL  R49 U2       ; R49 := U2
467 [-]: GETTABLE  R49 R49 K67  ; R49 := R49["mEditingScale"]
468 [-]: TEST      R49 0        ; if not R49 then PC := 538
469 [-]: JMP       538          ; PC := 538
470 [-]: GETUPVAL  R49 U11      ; R49 := U11
471 [-]: CALL      R49 1 2      ; R49 := R49()
472 [-]: GETGLOBAL R50 K68      ; R50 := 0xB09F286F
473 [-]: MOVE      R51 R49      ; R51 := R49
474 [-]: GETUPVAL  R52 U2       ; R52 := U2
475 [-]: GETTABLE  R52 R52 K28  ; R52 := R52["mInitialMousePosition"]
476 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
477 [-]: GETTABLE  R51 R49 K27  ; R51 := R49["y"]
478 [-]: GETUPVAL  R52 U2       ; R52 := U2
479 [-]: GETTABLE  R52 R52 K28  ; R52 := R52["mInitialMousePosition"]
480 [-]: GETTABLE  R52 R52 K27  ; R52 := R52["y"]
481 [-]: LT        1 R52 R51    ; if R52 < R51 then PC := 484
482 [-]: JMP       484          ; PC := 484
483 [-]: MOVE      R51 R0       ; R51 := R0
484 [-]: MOVE      R51 R1       ; R51 := R1
485 [-]: DIV       R52 R50 K69  ; R52 := R50 / 200
486 [-]: GETUPVAL  R53 U14      ; R53 := U14
487 [-]: GETTABLE  R53 R53 K70  ; R53 := R53["0xF81722A2"]
488 [-]: MOVE      R54 R51      ; R54 := R51
489 [-]: LOADK     R55 K22      ; R55 := 1
490 [-]: LOADK     R56 K71      ; R56 := -1
491 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
492 [-]: MUL       R52 R52 R53  ; R52 := R52 * R53
493 [-]: GETGLOBAL R53 K72      ; R53 := 0x6374FD98
494 [-]: GETUPVAL  R54 U2       ; R54 := U2
495 [-]: GETTABLE  R54 R54 K73  ; R54 := R54["mInitialScale"]
496 [-]: SUB       R55 K22 R52  ; R55 := 1 - R52
497 [-]: MUL       R54 R54 R55  ; R54 := R54 * R55
498 [-]: LOADK     R55 K74      ; R55 := 9.9999997473788e-06
499 [-]: LOADK     R56 K75      ; R56 := 10
500 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
501 [-]: GETUPVAL  R54 U2       ; R54 := U2
502 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
503 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
504 [-]: SETTABLE  R54 K76 R53  ; R54["mScale"] := R53
505 [-]: GETUPVAL  R54 U2       ; R54 := U2
506 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
507 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
508 [-]: GETTABLE  R54 R54 K20  ; R54 := R54["mInstance"]
509 [-]: SELF      R54 R54 K77  ; R55 := R54; R54 := R54["0x6A7E5F92"]
510 [-]: GETUPVAL  R56 U15      ; R56 := U15
511 [-]: GETTABLE  R56 R56 K78  ; R56 := R56["DECO_SCALE_MULTIPLIER"]
512 [-]: MUL       R56 R53 R56  ; R56 := R53 * R56
513 [-]: MOVE      R57 R1       ; R57 := R1
514 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
515 [-]: GETUPVAL  R54 U4       ; R54 := U4
516 [-]: SELF      R54 R54 K79  ; R55 := R54; R54 := R54["0x1F74748A"]
517 [-]: GETUPVAL  R56 U2       ; R56 := U2
518 [-]: GETTABLE  R56 R56 K24  ; R56 := R56["mMovingNode"]
519 [-]: GETTABLE  R56 R56 K17  ; R56 := R56["radialSector"]
520 [-]: MOVE      R57 R53      ; R57 := R53
521 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
522 [-]: GETUPVAL  R54 U2       ; R54 := U2
523 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
524 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
525 [-]: GETTABLE  R54 R54 K20  ; R54 := R54["mInstance"]
526 [-]: SELF      R54 R54 K80  ; R55 := R54; R54 := R54["0xB3733382"]
527 [-]: CALL      R54 2 2      ; R54 := R54(R55)
528 [-]: LOADK     R55 K22      ; R55 := 1
529 [-]: LEN       R56 R54      ; R56 := # R54
530 [-]: LOADK     R57 K22      ; R57 := 1
531 [-]: FORPREP   R55 537      ; R55 -= R57; PC := 537
532 [-]: GETTABLE  R59 R54 R58  ; R59 := R54[R58]
533 [-]: SELF      R59 R59 K77  ; R60 := R59; R59 := R59["0x6A7E5F92"]
534 [-]: LOADK     R61 K22      ; R61 := 1
535 [-]: MOVE      R62 R1       ; R62 := R1
536 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
537 [-]: FORLOOP   R55 532      ; R55 += R57; if R55 <= R56 then begin PC := 532; R58 := R55 end
538 [-]: GETUPVAL  R59 U12      ; R59 := U12
539 [-]: GETUPVAL  R60 U2       ; R60 := U2
540 [-]: GETTABLE  R60 R60 K24  ; R60 := R60["mMovingNode"]
541 [-]: CALL      R59 2 1      ; R59(R60)
542 [-]: GETUPVAL  R59 U16      ; R59 := U16
543 [-]: TEST      R59 1        ; if R59 then PC := 546
544 [-]: JMP       546          ; PC := 546
545 [-]: RETURN    R0 1         ; return 
546 [-]: GETGLOBAL R59 K81      ; R59 := _T
547 [-]: GETTABLE  R59 R59 K82  ; R59 := R59["MouseInWorldStateWindow"]
548 [-]: TEST      R59 1        ; if R59 then PC := 554
549 [-]: JMP       554          ; PC := 554
550 [-]: GETGLOBAL R59 K81      ; R59 := _T
551 [-]: GETTABLE  R59 R59 K83  ; R59 := R59["MouseInChatArea"]
552 [-]: TEST      R59 0        ; if not R59 then PC := 561
553 [-]: JMP       561          ; PC := 561
554 [-]: GETUPVAL  R59 U16      ; R59 := U16
555 [-]: GETTABLE  R59 R59 K84  ; R59 := R59["mDragging"]
556 [-]: TEST      R59 0        ; if not R59 then PC := 561
557 [-]: JMP       561          ; PC := 561
558 [-]: GETUPVAL  R59 U16      ; R59 := U16
559 [-]: SELF      R59 R59 K85  ; R60 := R59; R59 := R59["0xD963824A"]
560 [-]: CALL      R59 2 1      ; R59(R60)
561 [-]: GETGLOBAL R59 K86      ; R59 := 0x4CDEF9FF
562 [-]: CALL      R59 1 2      ; R59 := R59()
563 [-]: GETUPVAL  R60 U16      ; R60 := U16
564 [-]: SELF      R60 R60 K87  ; R61 := R60; R60 := R60["0x8C7099E9"]
565 [-]: MOVE      R62 R59      ; R62 := R59
566 [-]: CALL      R60 3 1      ; R60(R61,R62)
567 [-]: GETUPVAL  R60 U16      ; R60 := U16
568 [-]: GETTABLE  R60 R60 K88  ; R60 := R60["mCurrentScroll"]
569 [-]: GETTABLE  R60 R60 K43  ; R60 := R60["x"]
570 [-]: GETUPVAL  R61 U16      ; R61 := U16
571 [-]: GETTABLE  R61 R61 K88  ; R61 := R61["mCurrentScroll"]
572 [-]: GETTABLE  R61 R61 K27  ; R61 := R61["y"]
573 [-]: GETUPVAL  R62 U17      ; R62 := U17
574 [-]: GETTABLE  R62 R62 K89  ; R62 := R62["Active"]
575 [-]: TEST      R62 0        ; if not R62 then PC := 622
576 [-]: JMP       622          ; PC := 622
577 [-]: GETUPVAL  R62 U14      ; R62 := U14
578 [-]: GETTABLE  R62 R62 K90  ; R62 := R62["0xEA569929"]
579 [-]: GETGLOBAL R63 K91      ; R63 := mMovie
580 [-]: CALL      R62 2 3      ; R62,R63 := R62(R63)
581 [-]: GETGLOBAL R64 K72      ; R64 := 0x6374FD98
582 [-]: GETGLOBAL R65 K91      ; R65 := mMovie
583 [-]: SELF      R65 R65 K92  ; R66 := R65; R65 := R65["0xBAE5F929"]
584 [-]: CALL      R65 2 2      ; R65 := R65(R66)
585 [-]: LOADK     R66 K6       ; R66 := 0
586 [-]: MOVE      R67 R62      ; R67 := R62
587 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
588 [-]: DIV       R65 R62 K93  ; R65 := R62 / 2
589 [-]: SUB       R64 R64 R65  ; R64 := R64 - R65
590 [-]: GETGLOBAL R65 K72      ; R65 := 0x6374FD98
591 [-]: GETGLOBAL R66 K91      ; R66 := mMovie
592 [-]: SELF      R66 R66 K94  ; R67 := R66; R66 := R66["0x6ACD1B87"]
593 [-]: CALL      R66 2 2      ; R66 := R66(R67)
594 [-]: LOADK     R67 K6       ; R67 := 0
595 [-]: MOVE      R68 R63      ; R68 := R63
596 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
597 [-]: DIV       R66 R63 K93  ; R66 := R63 / 2
598 [-]: SUB       R65 R65 R66  ; R65 := R65 - R66
599 [-]: GETGLOBAL R66 K72      ; R66 := 0x6374FD98
600 [-]: DIV       R67 R64 R62  ; R67 := R64 / R62
601 [-]: LOADK     R68 K71      ; R68 := -1
602 [-]: LOADK     R69 K22      ; R69 := 1
603 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
604 [-]: UNM       R64 R66      ; R64 := - R66
605 [-]: GETGLOBAL R66 K72      ; R66 := 0x6374FD98
606 [-]: DIV       R67 R65 R63  ; R67 := R65 / R63
607 [-]: LOADK     R68 K71      ; R68 := -1
608 [-]: LOADK     R69 K22      ; R69 := 1
609 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
610 [-]: UNM       R65 R66      ; R65 := - R66
611 [-]: GETUPVAL  R66 U18      ; R66 := U18
612 [-]: SELF      R66 R66 K95  ; R67 := R66; R66 := R66["0xDB349344"]
613 [-]: MUL       R68 R64 K96  ; R68 := R64 * -0.0040000001899898
614 [-]: ADD       R68 R60 R68  ; R68 := R60 + R68
615 [-]: CALL      R66 3 1      ; R66(R67,R68)
616 [-]: GETUPVAL  R66 U19      ; R66 := U19
617 [-]: SELF      R66 R66 K95  ; R67 := R66; R66 := R66["0xDB349344"]
618 [-]: MUL       R68 R65 K97  ; R68 := R65 * -0.003000000026077
619 [-]: ADD       R68 R61 R68  ; R68 := R61 + R68
620 [-]: CALL      R66 3 1      ; R66(R67,R68)
621 [-]: JMP       630          ; PC := 630
622 [-]: GETUPVAL  R66 U18      ; R66 := U18
623 [-]: SELF      R66 R66 K95  ; R67 := R66; R66 := R66["0xDB349344"]
624 [-]: MOVE      R68 R60      ; R68 := R60
625 [-]: CALL      R66 3 1      ; R66(R67,R68)
626 [-]: GETUPVAL  R66 U19      ; R66 := U19
627 [-]: SELF      R66 R66 K95  ; R67 := R66; R66 := R66["0xDB349344"]
628 [-]: MOVE      R68 R61      ; R68 := R61
629 [-]: CALL      R66 3 1      ; R66(R67,R68)
630 [-]: GETUPVAL  R66 U18      ; R66 := U18
631 [-]: GETTABLE  R66 R66 K98  ; R66 := R66["mCurVal"]
632 [-]: GETUPVAL  R67 U19      ; R67 := U19
633 [-]: GETTABLE  R67 R67 K98  ; R67 := R67["mCurVal"]
634 [-]: GETUPVAL  R68 U18      ; R68 := U18
635 [-]: SELF      R68 R68 K87  ; R69 := R68; R68 := R68["0x8C7099E9"]
636 [-]: MOVE      R70 R59      ; R70 := R59
637 [-]: CALL      R68 3 1      ; R68(R69,R70)
638 [-]: GETUPVAL  R68 U19      ; R68 := U19
639 [-]: SELF      R68 R68 K87  ; R69 := R68; R68 := R68["0x8C7099E9"]
640 [-]: MOVE      R70 R59      ; R70 := R59
641 [-]: CALL      R68 3 1      ; R68(R69,R70)
642 [-]: GETGLOBAL R68 K99      ; R68 := math
643 [-]: GETTABLE  R68 R68 K100 ; R68 := R68["0xF93F7CC8"]
644 [-]: GETUPVAL  R69 U18      ; R69 := U18
645 [-]: GETTABLE  R69 R69 K101 ; R69 := R69["mTargetVal"]
646 [-]: SUB       R69 R66 R69  ; R69 := R66 - R69
647 [-]: CALL      R68 2 2      ; R68 := R68(R69)
648 [-]: LT        1 K102 R68   ; if 4.9999998736894e-06 < R68 then PC := 651
649 [-]: JMP       651          ; PC := 651
650 [-]: MOVE      R68 R0       ; R68 := R0
651 [-]: MOVE      R68 R1       ; R68 := R1
652 [-]: TEST      R68 1        ; if R68 then PC := 665
653 [-]: JMP       665          ; PC := 665
654 [-]: GETUPVAL  R69 U18      ; R69 := U18
655 [-]: GETTABLE  R69 R69 K98  ; R69 := R69["mCurVal"]
656 [-]: GETUPVAL  R70 U18      ; R70 := U18
657 [-]: GETTABLE  R70 R70 K101 ; R70 := R70["mTargetVal"]
658 [-]: EQ        1 R69 R70    ; if R69 == R70 then PC := 665
659 [-]: JMP       665          ; PC := 665
660 [-]: GETUPVAL  R69 U18      ; R69 := U18
661 [-]: SELF      R69 R69 K103 ; R70 := R69; R69 := R69["0x5A7A6B1"]
662 [-]: GETUPVAL  R71 U18      ; R71 := U18
663 [-]: GETTABLE  R71 R71 K101 ; R71 := R71["mTargetVal"]
664 [-]: CALL      R69 3 1      ; R69(R70,R71)
665 [-]: GETGLOBAL R69 K99      ; R69 := math
666 [-]: GETTABLE  R69 R69 K100 ; R69 := R69["0xF93F7CC8"]
667 [-]: GETUPVAL  R70 U19      ; R70 := U19
668 [-]: GETTABLE  R70 R70 K101 ; R70 := R70["mTargetVal"]
669 [-]: SUB       R70 R67 R70  ; R70 := R67 - R70
670 [-]: CALL      R69 2 2      ; R69 := R69(R70)
671 [-]: LT        1 K102 R69   ; if 4.9999998736894e-06 < R69 then PC := 674
672 [-]: JMP       674          ; PC := 674
673 [-]: MOVE      R69 R0       ; R69 := R0
674 [-]: MOVE      R69 R1       ; R69 := R1
675 [-]: TEST      R69 1        ; if R69 then PC := 688
676 [-]: JMP       688          ; PC := 688
677 [-]: GETUPVAL  R70 U19      ; R70 := U19
678 [-]: GETTABLE  R70 R70 K98  ; R70 := R70["mCurVal"]
679 [-]: GETUPVAL  R71 U19      ; R71 := U19
680 [-]: GETTABLE  R71 R71 K101 ; R71 := R71["mTargetVal"]
681 [-]: EQ        1 R70 R71    ; if R70 == R71 then PC := 688
682 [-]: JMP       688          ; PC := 688
683 [-]: GETUPVAL  R70 U19      ; R70 := U19
684 [-]: SELF      R70 R70 K103 ; R71 := R70; R70 := R70["0x5A7A6B1"]
685 [-]: GETUPVAL  R72 U19      ; R72 := U19
686 [-]: GETTABLE  R72 R72 K101 ; R72 := R72["mTargetVal"]
687 [-]: CALL      R70 3 1      ; R70(R71,R72)
688 [-]: GETUPVAL  R70 U20      ; R70 := U20
689 [-]: GETTABLE  R70 R70 K98  ; R70 := R70["mCurVal"]
690 [-]: GETUPVAL  R71 U20      ; R71 := U20
691 [-]: SELF      R71 R71 K87  ; R72 := R71; R71 := R71["0x8C7099E9"]
692 [-]: MOVE      R73 R59      ; R73 := R59
693 [-]: CALL      R71 3 1      ; R71(R72,R73)
694 [-]: GETGLOBAL R71 K99      ; R71 := math
695 [-]: GETTABLE  R71 R71 K100 ; R71 := R71["0xF93F7CC8"]
696 [-]: GETUPVAL  R72 U20      ; R72 := U20
697 [-]: GETTABLE  R72 R72 K101 ; R72 := R72["mTargetVal"]
698 [-]: SUB       R72 R70 R72  ; R72 := R70 - R72
699 [-]: CALL      R71 2 2      ; R71 := R71(R72)
700 [-]: LT        1 K104 R71   ; if 0.0099999997764826 < R71 then PC := 703
701 [-]: JMP       703          ; PC := 703
702 [-]: MOVE      R71 R0       ; R71 := R0
703 [-]: MOVE      R71 R1       ; R71 := R1
704 [-]: TEST      R71 1        ; if R71 then PC := 717
705 [-]: JMP       717          ; PC := 717
706 [-]: GETUPVAL  R72 U16      ; R72 := U16
707 [-]: GETTABLE  R72 R72 K98  ; R72 := R72["mCurVal"]
708 [-]: GETUPVAL  R73 U16      ; R73 := U16
709 [-]: GETTABLE  R73 R73 K101 ; R73 := R73["mTargetVal"]
710 [-]: EQ        1 R72 R73    ; if R72 == R73 then PC := 717
711 [-]: JMP       717          ; PC := 717
712 [-]: GETUPVAL  R72 U16      ; R72 := U16
713 [-]: SELF      R72 R72 K103 ; R73 := R72; R72 := R72["0x5A7A6B1"]
714 [-]: GETUPVAL  R74 U16      ; R74 := U16
715 [-]: GETTABLE  R74 R74 K101 ; R74 := R74["mTargetVal"]
716 [-]: CALL      R72 3 1      ; R72(R73,R74)
717 [-]: GETUPVAL  R72 U21      ; R72 := U21
718 [-]: TEST      R72 0        ; if not R72 then PC := 726
719 [-]: JMP       726          ; PC := 726
720 [-]: TEST      R71 1        ; if R71 then PC := 726
721 [-]: JMP       726          ; PC := 726
722 [-]: GETUPVAL  R72 U21      ; R72 := U21
723 [-]: CALL      R72 1 1      ; R72()
724 [-]: LOADNIL   R72 R72      ; R72 := nil
725 [-]: MOVE      R72 R21      ; R72 := R21
726 [-]: TEST      R71 0        ; if not R71 then PC := 730
727 [-]: JMP       730          ; PC := 730
728 [-]: GETUPVAL  R72 U22      ; R72 := U22
729 [-]: CALL      R72 1 1      ; R72()
730 [-]: GETUPVAL  R72 U18      ; R72 := U18
731 [-]: SELF      R72 R72 K105 ; R73 := R72; R72 := R72["0xC4E503B0"]
732 [-]: CALL      R72 2 2      ; R72 := R72(R73)
733 [-]: MUL       R72 R72 K93  ; R72 := R72 * 2
734 [-]: SUB       R72 R72 K22  ; R72 := R72 - 1
735 [-]: GETUPVAL  R73 U23      ; R73 := U23
736 [-]: MUL       R72 R72 R73  ; R72 := R72 * R73
737 [-]: GETUPVAL  R73 U19      ; R73 := U19
738 [-]: SELF      R73 R73 K105 ; R74 := R73; R73 := R73["0xC4E503B0"]
739 [-]: CALL      R73 2 2      ; R73 := R73(R74)
740 [-]: MUL       R73 R73 K93  ; R73 := R73 * 2
741 [-]: SUB       R73 R73 K22  ; R73 := R73 - 1
742 [-]: GETUPVAL  R74 U23      ; R74 := U23
743 [-]: UNM       R74 R74      ; R74 := - R74
744 [-]: MUL       R73 R73 R74  ; R73 := R73 * R74
745 [-]: GETGLOBAL R74 K29      ; R74 := 0x221C9700
746 [-]: GETUPVAL  R75 U24      ; R75 := U24
747 [-]: GETTABLE  R75 R75 K106 ; R75 := R75["origFacing"]
748 [-]: GETTABLE  R75 R75 K43  ; R75 := R75["x"]
749 [-]: GETUPVAL  R76 U24      ; R76 := U24
750 [-]: GETTABLE  R76 R76 K106 ; R76 := R76["origFacing"]
751 [-]: GETTABLE  R76 R76 K27  ; R76 := R76["y"]
752 [-]: GETUPVAL  R77 U24      ; R77 := U24
753 [-]: GETTABLE  R77 R77 K106 ; R77 := R77["origFacing"]
754 [-]: GETTABLE  R77 R77 K5   ; R77 := R77["z"]
755 [-]: CALL      R74 4 2      ; R74 := R74(R75,R76,R77)
756 [-]: GETUPVAL  R75 U20      ; R75 := U20
757 [-]: SELF      R75 R75 K105 ; R76 := R75; R75 := R75["0xC4E503B0"]
758 [-]: CALL      R75 2 2      ; R75 := R75(R76)
759 [-]: MUL       R75 R74 R75  ; R75 := R74 * R75
760 [-]: GETTABLE  R76 R75 K43  ; R76 := R75["x"]
761 [-]: ADD       R76 R76 R72  ; R76 := R76 + R72
762 [-]: SETTABLE  R75 K43 R76  ; R75["x"] := R76
763 [-]: GETTABLE  R76 R75 K27  ; R76 := R75["y"]
764 [-]: ADD       R76 R76 R73  ; R76 := R76 + R73
765 [-]: SETTABLE  R75 K27 R76  ; R75["y"] := R76
766 [-]: LOADK     R76 K107     ; R76 := -0.20000000298023
767 [-]: LOADK     R77 K108     ; R77 := 0.40000000596046
768 [-]: LOADK     R78 K109     ; R78 := -0.26499998569489
769 [-]: GETUPVAL  R79 U17      ; R79 := U17
770 [-]: GETTABLE  R79 R79 K89  ; R79 := R79["Active"]
771 [-]: TEST      R79 1        ; if R79 then PC := 873
772 [-]: JMP       873          ; PC := 873
773 [-]: GETUPVAL  R79 U25      ; R79 := U25
774 [-]: GETTABLE  R79 R79 K110 ; R79 := R79["Region"]
775 [-]: GETUPVAL  R80 U26      ; R80 := U26
776 [-]: EQ        1 R79 R80    ; if R79 == R80 then PC := 873
777 [-]: JMP       873          ; PC := 873
778 [-]: GETGLOBAL R79 K1       ; R79 := 0x400E7765
779 [-]: GETUPVAL  R80 U27      ; R80 := U27
780 [-]: CALL      R79 2 2      ; R79 := R79(R80)
781 [-]: TEST      R79 1        ; if R79 then PC := 873
782 [-]: JMP       873          ; PC := 873
783 [-]: GETUPVAL  R79 U25      ; R79 := U25
784 [-]: GETTABLE  R79 R79 K111 ; R79 := R79["Locked"]
785 [-]: TEST      R79 1        ; if R79 then PC := 873
786 [-]: JMP       873          ; PC := 873
787 [-]: GETUPVAL  R79 U25      ; R79 := U25
788 [-]: GETUPVAL  R80 U27      ; R80 := U27
789 [-]: SELF      R80 R80 K33  ; R81 := R80; R80 := R80["0x6DA72501"]
790 [-]: CALL      R80 2 2      ; R80 := R80(R81)
791 [-]: SETTABLE  R79 K112 R80 ; R79["Previous"] := R80
792 [-]: GETUPVAL  R79 U25      ; R79 := U25
793 [-]: GETUPVAL  R80 U26      ; R80 := U26
794 [-]: SETTABLE  R79 K110 R80 ; R79["Region"] := R80
795 [-]: GETGLOBAL R79 K1       ; R79 := 0x400E7765
796 [-]: GETUPVAL  R80 U26      ; R80 := U26
797 [-]: CALL      R79 2 2      ; R79 := R79(R80)
798 [-]: TEST      R79 1        ; if R79 then PC := 823
799 [-]: JMP       823          ; PC := 823
800 [-]: GETUPVAL  R79 U26      ; R79 := U26
801 [-]: GETTABLE  R79 R79 K113 ; R79 := R79["pos"]
802 [-]: GETTABLE  R80 R79 K43  ; R80 := R79["x"]
803 [-]: LE        0 K6 R80     ; if 0 > R80 then PC := 812
804 [-]: JMP       812          ; PC := 812
805 [-]: GETGLOBAL R80 K29      ; R80 := 0x221C9700
806 [-]: UNM       R81 R77      ; R81 := - R77
807 [-]: MOVE      R82 R78      ; R82 := R78
808 [-]: MOVE      R83 R76      ; R83 := R76
809 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
810 [-]: MOVE      R79 R80      ; R79 := R80
811 [-]: JMP       818          ; PC := 818
812 [-]: GETGLOBAL R80 K29      ; R80 := 0x221C9700
813 [-]: ADD       R81 R77 K114 ; R81 := R77 + 0.20000000298023
814 [-]: MOVE      R82 R78      ; R82 := R78
815 [-]: MOVE      R83 R76      ; R83 := R76
816 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
817 [-]: MOVE      R79 R80      ; R79 := R80
818 [-]: GETUPVAL  R80 U25      ; R80 := U25
819 [-]: GETUPVAL  R81 U28      ; R81 := U28
820 [-]: ADD       R81 R81 R79  ; R81 := R81 + R79
821 [-]: SETTABLE  R80 K115 R81 ; R80["Target"] := R81
822 [-]: JMP       832          ; PC := 832
823 [-]: GETUPVAL  R80 U25      ; R80 := U25
824 [-]: GETUPVAL  R81 U28      ; R81 := U28
825 [-]: GETGLOBAL R82 K29      ; R82 := 0x221C9700
826 [-]: LOADK     R83 K45      ; R83 := 0.10000000149012
827 [-]: LOADK     R84 K6       ; R84 := 0
828 [-]: LOADK     R85 K116     ; R85 := 4
829 [-]: CALL      R82 4 2      ; R82 := R82(R83,R84,R85)
830 [-]: ADD       R81 R81 R82  ; R81 := R81 + R82
831 [-]: SETTABLE  R80 K115 R81 ; R80["Target"] := R81
832 [-]: GETUPVAL  R80 U25      ; R80 := U25
833 [-]: GETTABLE  R80 R80 K117 ; R80 := R80["Prop"]
834 [-]: SELF      R80 R80 K103 ; R81 := R80; R80 := R80["0x5A7A6B1"]
835 [-]: LOADK     R82 K6       ; R82 := 0
836 [-]: CALL      R80 3 1      ; R80(R81,R82)
837 [-]: GETUPVAL  R80 U25      ; R80 := U25
838 [-]: GETTABLE  R80 R80 K117 ; R80 := R80["Prop"]
839 [-]: SELF      R80 R80 K95  ; R81 := R80; R80 := R80["0xDB349344"]
840 [-]: LOADK     R82 K22      ; R82 := 1
841 [-]: CALL      R80 3 1      ; R80(R81,R82)
842 [-]: GETUPVAL  R80 U26      ; R80 := U26
843 [-]: EQ        0 R80 K19    ; if R80 ~= nil then PC := 853
844 [-]: JMP       853          ; PC := 853
845 [-]: GETUPVAL  R80 U27      ; R80 := U27
846 [-]: SELF      R80 R80 K118 ; R81 := R80; R80 := R80["0x7A97EAF5"]
847 [-]: GETUPVAL  R82 U29      ; R82 := U29
848 [-]: MOVE      R83 R0       ; R83 := R0
849 [-]: MOVE      R84 R1       ; R84 := R1
850 [-]: LOADK     R85 K22      ; R85 := 1
851 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
852 [-]: JMP       873          ; PC := 873
853 [-]: GETUPVAL  R80 U26      ; R80 := U26
854 [-]: GETTABLE  R80 R80 K113 ; R80 := R80["pos"]
855 [-]: GETTABLE  R80 R80 K43  ; R80 := R80["x"]
856 [-]: LE        0 K6 R80     ; if 0 > R80 then PC := 866
857 [-]: JMP       866          ; PC := 866
858 [-]: GETUPVAL  R80 U27      ; R80 := U27
859 [-]: SELF      R80 R80 K118 ; R81 := R80; R80 := R80["0x7A97EAF5"]
860 [-]: GETGLOBAL R82 K119     ; R82 := leftGraspAnim
861 [-]: MOVE      R83 R0       ; R83 := R0
862 [-]: MOVE      R84 R1       ; R84 := R1
863 [-]: LOADK     R85 K22      ; R85 := 1
864 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
865 [-]: JMP       873          ; PC := 873
866 [-]: GETUPVAL  R80 U27      ; R80 := U27
867 [-]: SELF      R80 R80 K118 ; R81 := R80; R80 := R80["0x7A97EAF5"]
868 [-]: GETGLOBAL R82 K120     ; R82 := rightGraspAnim
869 [-]: MOVE      R83 R0       ; R83 := R0
870 [-]: MOVE      R84 R1       ; R84 := R1
871 [-]: LOADK     R85 K22      ; R85 := 1
872 [-]: CALL      R80 6 1      ; R80(R81,R82,R83,R84,R85)
873 [-]: GETUPVAL  R80 U24      ; R80 := U24
874 [-]: GETUPVAL  R81 U24      ; R81 := U24
875 [-]: GETTABLE  R81 R81 K121 ; R81 := R81["originPos"]
876 [-]: ADD       R81 R81 R75  ; R81 := R81 + R75
877 [-]: SETTABLE  R80 K113 R81 ; R80["pos"] := R81
878 [-]: GETUPVAL  R80 U0       ; R80 := U0
879 [-]: GETUPVAL  R81 U1       ; R81 := U1
880 [-]: GETTABLE  R81 R81 K122 ; R81 := R81["EDIT_REGION_FRAMING"]
881 [-]: EQ        0 R80 R81    ; if R80 ~= R81 then PC := 915
882 [-]: JMP       915          ; PC := 915
883 [-]: GETUPVAL  R80 U30      ; R80 := U30
884 [-]: GETUPVAL  R81 U2       ; R81 := U2
885 [-]: GETTABLE  R81 R81 K123 ; R81 := R81["mFramingRegion"]
886 [-]: GETTABLE  R80 R80 R81  ; R80 := R80[R81]
887 [-]: TEST      R80 0        ; if not R80 then PC := 915
888 [-]: JMP       915          ; PC := 915
889 [-]: GETTABLE  R81 R80 K124 ; R81 := R80["zoomedFraming"]
890 [-]: GETTABLE  R81 R81 K43  ; R81 := R81["x"]
891 [-]: EQ        0 R81 R60    ; if R81 ~= R60 then PC := 903
892 [-]: JMP       903          ; PC := 903
893 [-]: GETTABLE  R81 R80 K124 ; R81 := R80["zoomedFraming"]
894 [-]: GETTABLE  R81 R81 K27  ; R81 := R81["y"]
895 [-]: EQ        0 R81 R61    ; if R81 ~= R61 then PC := 903
896 [-]: JMP       903          ; PC := 903
897 [-]: GETTABLE  R81 R80 K124 ; R81 := R80["zoomedFraming"]
898 [-]: GETTABLE  R81 R81 K5   ; R81 := R81["z"]
899 [-]: GETUPVAL  R82 U20      ; R82 := U20
900 [-]: GETTABLE  R82 R82 K101 ; R82 := R82["mTargetVal"]
901 [-]: EQ        1 R81 R82    ; if R81 == R82 then PC := 915
902 [-]: JMP       915          ; PC := 915
903 [-]: GETGLOBAL R81 K29      ; R81 := 0x221C9700
904 [-]: MOVE      R82 R60      ; R82 := R60
905 [-]: MOVE      R83 R61      ; R83 := R61
906 [-]: GETUPVAL  R84 U20      ; R84 := U20
907 [-]: GETTABLE  R84 R84 K101 ; R84 := R84["mTargetVal"]
908 [-]: CALL      R81 4 2      ; R81 := R81(R82,R83,R84)
909 [-]: SETTABLE  R80 K124 R81 ; R80["zoomedFraming"] := R81
910 [-]: GETUPVAL  R81 U4       ; R81 := U4
911 [-]: SELF      R81 R81 K125 ; R82 := R81; R81 := R81["0x2721E25D"]
912 [-]: MOVE      R83 R80      ; R83 := R80
913 [-]: GETTABLE  R84 R80 K124 ; R84 := R80["zoomedFraming"]
914 [-]: CALL      R81 4 1      ; R81(R82,R83,R84)
915 [-]: GETUPVAL  R81 U9       ; R81 := U9
916 [-]: CALL      R81 1 1      ; R81()
917 [-]: GETUPVAL  R81 U31      ; R81 := U31
918 [-]: SELF      R81 R81 K105 ; R82 := R81; R81 := R81["0xC4E503B0"]
919 [-]: CALL      R81 2 2      ; R81 := R81(R82)
920 [-]: LOADK     R82 K22      ; R82 := 1
921 [-]: GETGLOBAL R83 K81      ; R83 := _T
922 [-]: GETTABLE  R83 R83 K126 ; R83 := R83["HideSquadOverlay"]
923 [-]: EQ        1 R83 K19    ; if R83 == nil then PC := 930
924 [-]: JMP       930          ; PC := 930
925 [-]: GETGLOBAL R83 K81      ; R83 := _T
926 [-]: GETTABLE  R83 R83 K126 ; R83 := R83["HideSquadOverlay"]
927 [-]: LE        1 R83 K6     ; if R83 <= 0 then PC := 930
928 [-]: JMP       930          ; PC := 930
929 [-]: MOVE      R83 R0       ; R83 := R0
930 [-]: MOVE      R83 R1       ; R83 := R1
931 [-]: GETGLOBAL R84 K81      ; R84 := _T
932 [-]: GETTABLE  R84 R84 K127 ; R84 := R84["BackgroundVisible"]
933 [-]: TEST      R84 1        ; if R84 then PC := 945
934 [-]: JMP       945          ; PC := 945
935 [-]: GETGLOBAL R84 K81      ; R84 := _T
936 [-]: GETTABLE  R84 R84 K128 ; R84 := R84["HideMapRedux"]
937 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 943
938 [-]: JMP       943          ; PC := 943
939 [-]: GETGLOBAL R84 K81      ; R84 := _T
940 [-]: GETTABLE  R84 R84 K128 ; R84 := R84["HideMapRedux"]
941 [-]: LT        1 K6 R84     ; if 0 < R84 then PC := 945
942 [-]: JMP       945          ; PC := 945
943 [-]: TEST      R83 1        ; if R83 then PC := 947
944 [-]: JMP       947          ; PC := 947
945 [-]: LOADK     R82 K6       ; R82 := 0
946 [-]: JMP       962          ; PC := 962
947 [-]: GETUPVAL  R84 U32      ; R84 := U32
948 [-]: GETTABLE  R84 R84 K129 ; R84 := R84["Node"]
949 [-]: EQ        0 R84 K19    ; if R84 ~= nil then PC := 955
950 [-]: JMP       955          ; PC := 955
951 [-]: GETGLOBAL R84 K81      ; R84 := _T
952 [-]: GETTABLE  R84 R84 K130 ; R84 := R84["gPendingMission"]
953 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 957
954 [-]: JMP       957          ; PC := 957
955 [-]: LOADK     R82 K114     ; R82 := 0.20000000298023
956 [-]: JMP       962          ; PC := 962
957 [-]: GETGLOBAL R84 K81      ; R84 := _T
958 [-]: GETTABLE  R84 R84 K82  ; R84 := R84["MouseInWorldStateWindow"]
959 [-]: TEST      R84 0        ; if not R84 then PC := 962
960 [-]: JMP       962          ; PC := 962
961 [-]: LOADK     R82 K45      ; R82 := 0.10000000149012
962 [-]: GETUPVAL  R84 U31      ; R84 := U31
963 [-]: SELF      R84 R84 K95  ; R85 := R84; R84 := R84["0xDB349344"]
964 [-]: MOVE      R86 R82      ; R86 := R82
965 [-]: CALL      R84 3 1      ; R84(R85,R86)
966 [-]: GETUPVAL  R84 U31      ; R84 := U31
967 [-]: SELF      R84 R84 K87  ; R85 := R84; R84 := R84["0x8C7099E9"]
968 [-]: MOVE      R86 R59      ; R86 := R59
969 [-]: CALL      R84 3 1      ; R84(R85,R86)
970 [-]: GETUPVAL  R84 U32      ; R84 := U32
971 [-]: GETTABLE  R84 R84 K129 ; R84 := R84["Node"]
972 [-]: EQ        1 R84 K19    ; if R84 == nil then PC := 978
973 [-]: JMP       978          ; PC := 978
974 [-]: GETUPVAL  R84 U33      ; R84 := U33
975 [-]: GETUPVAL  R85 U32      ; R85 := U32
976 [-]: GETTABLE  R85 R85 K129 ; R85 := R85["Node"]
977 [-]: SETTABLE  R84 K129 R85 ; R84["Node"] := R85
978 [-]: GETUPVAL  R84 U31      ; R84 := U31
979 [-]: SELF      R84 R84 K105 ; R85 := R84; R84 := R84["0xC4E503B0"]
980 [-]: CALL      R84 2 2      ; R84 := R84(R85)
981 [-]: EQ        1 R81 R84    ; if R81 == R84 then PC := 996
982 [-]: JMP       996          ; PC := 996
983 [-]: GETGLOBAL R84 K1       ; R84 := 0x400E7765
984 [-]: GETGLOBAL R85 K131     ; R85 := splineMaterial
985 [-]: CALL      R84 2 2      ; R84 := R84(R85)
986 [-]: TEST      R84 1        ; if R84 then PC := 996
987 [-]: JMP       996          ; PC := 996
988 [-]: GETGLOBAL R84 K131     ; R84 := splineMaterial
989 [-]: SELF      R84 R84 K132 ; R85 := R84; R84 := R84["0x94FB2E1A"]
990 [-]: GETUPVAL  R86 U34      ; R86 := U34
991 [-]: GETTABLE  R86 R86 K133 ; R86 := R86["UNLIT_ATTEN"]
992 [-]: GETUPVAL  R87 U31      ; R87 := U31
993 [-]: SELF      R87 R87 K105 ; R88 := R87; R87 := R87["0xC4E503B0"]
994 [-]: CALL      R87 2 0      ; R87,... := R87(R88)
995 [-]: CALL      R84 0 1      ; R84(R85,...)
996 [-]: GETUPVAL  R84 U35      ; R84 := U35
997 [-]: SELF      R84 R84 K105 ; R85 := R84; R84 := R84["0xC4E503B0"]
998 [-]: CALL      R84 2 2      ; R84 := R84(R85)
999 [-]: GETUPVAL  R85 U35      ; R85 := U35
1000 [-]: SELF      R85 R85 K95  ; R86 := R85; R85 := R85["0xDB349344"]
1001 [-]: GETUPVAL  R87 U14      ; R87 := U14
1002 [-]: GETTABLE  R87 R87 K70  ; R87 := R87["0xF81722A2"]
1003 [-]: GETUPVAL  R88 U32      ; R88 := U32
1004 [-]: GETTABLE  R88 R88 K110 ; R88 := R88["Region"]
1005 [-]: EQ        0 R88 K19    ; if R88 ~= nil then PC := 1008
1006 [-]: JMP       1008         ; PC := 1008
1007 [-]: MOVE      R88 R0       ; R88 := R0
1008 [-]: MOVE      R88 R1       ; R88 := R1
1009 [-]: LOADK     R89 K22      ; R89 := 1
1010 [-]: LOADK     R90 K6       ; R90 := 0
1011 [-]: CALL      R87 4 0      ; R87,... := R87(R88,R89,R90)
1012 [-]: CALL      R85 0 1      ; R85(R86,...)
1013 [-]: GETUPVAL  R85 U35      ; R85 := U35
1014 [-]: SELF      R85 R85 K87  ; R86 := R85; R85 := R85["0x8C7099E9"]
1015 [-]: GETGLOBAL R87 K86      ; R87 := 0x4CDEF9FF
1016 [-]: CALL      R87 1 0      ; R87,... := R87()
1017 [-]: CALL      R85 0 1      ; R85(R86,...)
1018 [-]: GETUPVAL  R85 U32      ; R85 := U32
1019 [-]: GETTABLE  R85 R85 K110 ; R85 := R85["Region"]
1020 [-]: EQ        1 R85 K19    ; if R85 == nil then PC := 1026
1021 [-]: JMP       1026         ; PC := 1026
1022 [-]: GETUPVAL  R85 U36      ; R85 := U36
1023 [-]: GETUPVAL  R86 U32      ; R86 := U32
1024 [-]: GETTABLE  R86 R86 K110 ; R86 := R86["Region"]
1025 [-]: SETTABLE  R85 K110 R86 ; R85["Region"] := R86
1026 [-]: MOVE      R85 R0       ; R85 := R0
1027 [-]: MOVE      R85 R37      ; R85 := R37
1028 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 4926
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Deco"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 55
  6 [-]: JMP       55           ; PC := 55
  7 [-]: LOADK     R0 K2        ; R0 := 120
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x58E5C2DB
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: MOD       R1 R1 R0     ; R1 := R1 % R0
 11 [-]: DIV       R1 R1 R0     ; R1 := R1 / R0
 12 [-]: GETGLOBAL R2 K4        ; R2 := math
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["pi"]
 14 [-]: MUL       R2 R2 K6     ; R2 := R2 * 2
 15 [-]: MUL       R2 R2 R1     ; R2 := R2 * R1
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["RegionIndex"]
 19 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 20 [-]: ADD       R3 R3 K8     ; R3 := R3 + 0.050000000745058
 21 [-]: GETGLOBAL R4 K4        ; R4 := math
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xBB3F1476"]
 23 [-]: MOVE      R5 R2        ; R5 := R2
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: MUL       R4 R4 R3     ; R4 := R4 * R3
 26 [-]: GETGLOBAL R5 K4        ; R5 := math
 27 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0x96330A01"]
 28 [-]: MOVE      R6 R2        ; R6 := R2
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: MUL       R5 R5 R3     ; R5 := R5 * R3
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Deco"]
 33 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0xEC183DDC"]
 34 [-]: GETUPVAL  R8 U0        ; R8 := U0
 35 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["AnchorPosition"]
 36 [-]: GETGLOBAL R9 K13       ; R9 := 0x221C9700
 37 [-]: MOVE      R10 R4       ; R10 := R4
 38 [-]: MOVE      R11 R5       ; R11 := R5
 39 [-]: LOADK     R12 K14      ; R12 := 0
 40 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 41 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 42 [-]: CALL      R6 3 1       ; R6(R7,R8)
 43 [-]: GETUPVAL  R6 U0        ; R6 := U0
 44 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Deco"]
 45 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0x5097FD8C"]
 46 [-]: GETGLOBAL R8 K16       ; R8 := 0x1E4F6281
 47 [-]: LOADK     R9 K17       ; R9 := 90
 48 [-]: GETUPVAL  R10 U2       ; R10 := U2
 49 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["0xBFE096C9"]
 50 [-]: MOVE      R11 R2       ; R11 := R2
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: LOADK     R11 K19      ; R11 := -90
 53 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 54 [-]: CALL      R6 0 1       ; R6(R7,...)
 55 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 4940
; #Upvalues:       12
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Region"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 169
  6 [-]: JMP       169          ; PC := 169
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETGLOBAL R1 K2        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 169
 12 [-]: JMP       169          ; PC := 169
 13 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Splines"]
 16 [-]: GETGLOBAL R2 K2        ; R2 := _T
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SplineIndex"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 169
 22 [-]: JMP       169          ; PC := 169
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["Splines"]
 25 [-]: GETGLOBAL R1 K2        ; R1 := _T
 26 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
 27 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SplineIndex"]
 28 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 29 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0xAC71FD5A"]
 30 [-]: GETGLOBAL R2 K2        ; R2 := _T
 31 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 32 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["Progress"]
 33 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 34 [-]: GETGLOBAL R1 K8        ; R1 := 0xB09F286F
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Region"]
 37 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["pos"]
 38 [-]: MOVE      R3 R0        ; R3 := R0
 39 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 40 [-]: LT        0 R1 K10     ; if R1 >= 0.0010000000474975 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: GETUPVAL  R1 U1        ; R1 := U1
 44 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x2721E25D"]
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Region"]
 47 [-]: GETGLOBAL R4 K12       ; R4 := 0x221C9700
 48 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["x"]
 49 [-]: MUL       R5 R5 K14    ; R5 := R5 * 0.041000001132488
 50 [-]: ADD       R5 K15 R5    ; R5 := 0.5 + R5
 51 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["y"]
 52 [-]: ADD       R6 R6 K17    ; R6 := R6 + 0.029999999329448
 53 [-]: MUL       R6 R6 K18    ; R6 := R6 * 0.043000001460314
 54 [-]: SUB       R6 K15 R6    ; R6 := 0.5 - R6
 55 [-]: GETUPVAL  R7 U2        ; R7 := U2
 56 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["MAX_ZOOM"]
 57 [-]: SUB       R7 R7 K20    ; R7 := R7 - 0.30000001192093
 58 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["z"]
 59 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 60 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 61 [-]: CALL      R1 0 1       ; R1(R2,...)
 62 [-]: GETUPVAL  R1 U3        ; R1 := U3
 63 [-]: GETUPVAL  R2 U0        ; R2 := U0
 64 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Region"]
 65 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 82
 66 [-]: JMP       82           ; PC := 82
 67 [-]: GETUPVAL  R1 U4        ; R1 := U4
 68 [-]: GETUPVAL  R2 U3        ; R2 := U3
 69 [-]: GETUPVAL  R3 U3        ; R3 := U3
 70 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["zoomedFraming"]
 71 [-]: CALL      R1 3 4       ; R1,R2,R3 := R1(R2,R3)
 72 [-]: GETUPVAL  R4 U5        ; R4 := U5
 73 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0xCE468565"]
 74 [-]: LOADK     R6 K13       ; R6 := "x"
 75 [-]: MOVE      R7 R1        ; R7 := R1
 76 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 77 [-]: GETUPVAL  R4 U5        ; R4 := U5
 78 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0xCE468565"]
 79 [-]: LOADK     R6 K16       ; R6 := "y"
 80 [-]: MOVE      R7 R2        ; R7 := R2
 81 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 82 [-]: GETUPVAL  R4 U0        ; R4 := U0
 83 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Region"]
 84 [-]: SETTABLE  R4 K9 R0     ; R4["pos"] := R0
 85 [-]: GETGLOBAL R4 K12       ; R4 := 0x221C9700
 86 [-]: GETUPVAL  R5 U0        ; R5 := U0
 87 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Region"]
 88 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["pos"]
 89 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["x"]
 90 [-]: GETUPVAL  R6 U0        ; R6 := U0
 91 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Region"]
 92 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["pos"]
 93 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["y"]
 94 [-]: GETUPVAL  R7 U0        ; R7 := U0
 95 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["Region"]
 96 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["pos"]
 97 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["z"]
 98 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 99 [-]: GETUPVAL  R5 U6        ; R5 := U6
100 [-]: MOVE      R6 R4        ; R6 := R4
101 [-]: CALL      R5 2 2       ; R5 := R5(R6)
102 [-]: MOVE      R4 R5        ; R4 := R5
103 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
104 [-]: GETUPVAL  R6 U0        ; R6 := U0
105 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Region"]
106 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["instance"]
107 [-]: CALL      R5 2 2       ; R5 := R5(R6)
108 [-]: TEST      R5 1         ; if R5 then PC := 133
109 [-]: JMP       133          ; PC := 133
110 [-]: GETUPVAL  R5 U0        ; R5 := U0
111 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Region"]
112 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["instance"]
113 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5["0xEC183DDC"]
114 [-]: MOVE      R7 R4        ; R7 := R4
115 [-]: CALL      R5 3 1       ; R5(R6,R7)
116 [-]: GETUPVAL  R5 U7        ; R5 := U7
117 [-]: GETUPVAL  R6 U0        ; R6 := U0
118 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["SubLabelIndex"]
119 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
120 [-]: GETGLOBAL R6 K12       ; R6 := 0x221C9700
121 [-]: LOADK     R7 K27       ; R7 := 0
122 [-]: GETUPVAL  R8 U0        ; R8 := U0
123 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["Region"]
124 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["scale"]
125 [-]: MUL       R8 R8 K29    ; R8 := R8 * 1.0499999523163
126 [-]: GETUPVAL  R9 U8        ; R9 := U8
127 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["PLANET_UNIT_MULTIPLIER"]
128 [-]: MUL       R8 R8 R9     ; R8 := R8 * R9
129 [-]: LOADK     R9 K31       ; R9 := 9.9999997473788e-05
130 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
131 [-]: ADD       R6 R4 R6     ; R6 := R4 + R6
132 [-]: SETTABLE  R5 K9 R6     ; R5["pos"] := R6
133 [-]: GETGLOBAL R5 K32       ; R5 := 0xECFDD17
134 [-]: GETUPVAL  R6 U0        ; R6 := U0
135 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["Sectors"]
136 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
137 [-]: JMP       155          ; PC := 155
138 [-]: GETUPVAL  R10 U0       ; R10 := U0
139 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Nodes"]
140 [-]: EQ        1 R10 K35    ; if R10 == nil then PC := 155
141 [-]: JMP       155          ; PC := 155
142 [-]: GETUPVAL  R10 U0       ; R10 := U0
143 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Nodes"]
144 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
145 [-]: EQ        1 R10 K35    ; if R10 == nil then PC := 155
146 [-]: JMP       155          ; PC := 155
147 [-]: GETGLOBAL R10 K36      ; R10 := 0x96BEA6B
148 [-]: GETUPVAL  R11 U0       ; R11 := U0
149 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["Nodes"]
150 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
151 [-]: GETTABLE  R11 R11 K37  ; R11 := R11["position"]
152 [-]: MOVE      R12 R0       ; R12 := R0
153 [-]: GETTABLE  R13 R9 K38   ; R13 := R9["decoOffset"]
154 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
155 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 138; R7 := R8 end
156 [-]: JMP       138          ; PC := 138
157 [-]: LOADK     R10 K39      ; R10 := 1
158 [-]: GETUPVAL  R11 U9       ; R11 := U9
159 [-]: LEN       R11 R11      ; R11 := # R11
160 [-]: LOADK     R12 K39      ; R12 := 1
161 [-]: FORPREP   R10 168      ; R10 -= R12; PC := 168
162 [-]: GETUPVAL  R14 U10      ; R14 := U10
163 [-]: GETUPVAL  R15 U11      ; R15 := U11
164 [-]: GETUPVAL  R16 U9       ; R16 := U9
165 [-]: GETTABLE  R16 R16 R13  ; R16 := R16[R13]
166 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
167 [-]: CALL      R14 2 1      ; R14(R15)
168 [-]: FORLOOP   R10 162      ; R10 += R12; if R10 <= R11 then begin PC := 162; R13 := R10 end
169 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 4978
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  8 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  9 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x5DB0BD4"]
 10 [-]: GETGLOBAL R4 K2        ; R4 := 0x9FAED6BC
 11 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["name"]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 15 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 16 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xD6A79FE9"]
 17 [-]: LOADK     R5 K5        ; R5 := "RegionInfo.Title"
 18 [-]: LOADK     R6 K6        ; R6 := "text"
 19 [-]: GETGLOBAL R7 K7        ; R7 := string
 20 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0x639C642A"]
 21 [-]: MOVE      R8 R2        ; R8 := R2
 22 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 23 [-]: CALL      R3 0 1       ; R3(R4,...)
 24 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1["0xF377E16C"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: LOADK     R4 K10       ; R4 := ""
 27 [-]: GETTABLE  R5 R3 K11    ; R5 := R3["availableMissions"]
 28 [-]: LT        0 K12 R5     ; if 0 >= R5 then PC := 42
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 31 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 32 [-]: LOADK     R7 K13       ; R7 := "/Lotus/Language/Menu/CompletedMissions"
 33 [-]: MOVE      R8 R0        ; R8 := R0
 34 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 35 [-]: GETTABLE  R10 R3 K15   ; R10 := R3["completedMissions"]
 36 [-]: SETTABLE  R9 K14 R10   ; R9["COMPLETED"] := R10
 37 [-]: GETTABLE  R10 R3 K11   ; R10 := R3["availableMissions"]
 38 [-]: SETTABLE  R9 K16 R10   ; R9["TOTAL"] := R10
 39 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 40 [-]: LOADK     R6 K17       ; R6 := "\r\n"
 41 [-]: CONCAT    R4 R5 R6     ; R4 := R5 .. R6
 42 [-]: MOVE      R5 R4        ; R5 := R4
 43 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
 44 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0x5DB0BD4"]
 45 [-]: GETGLOBAL R8 K2        ; R8 := 0x9FAED6BC
 46 [-]: GETTABLE  R9 R1 K18    ; R9 := R1["desc"]
 47 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 48 [-]: MOVE      R9 R0        ; R9 := R0
 49 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 50 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 51 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
 52 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0xD6A79FE9"]
 53 [-]: LOADK     R8 K19       ; R8 := "RegionInfo.RegionDesc"
 54 [-]: LOADK     R9 K6        ; R9 := "text"
 55 [-]: MOVE      R10 R5       ; R10 := R5
 56 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 57 [-]: GETGLOBAL R6 K20       ; R6 := 0x52E17A90
 58 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 59 [-]: LOADK     R8 K21       ; R8 := "RegionInfo"
 60 [-]: GETGLOBAL R9 K22       ; R9 := UISys
 61 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["FlashInstance_SMOOTH_STEP"]
 62 [-]: NEWTABLE  R10 1 0      ; R10 := {}
 63 [-]: LOADK     R11 K24      ; R11 := "_alpha"
 64 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
 65 [-]: NEWTABLE  R11 1 0      ; R11 := {}
 66 [-]: LOADK     R12 K25      ; R12 := 100
 67 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
 68 [-]: LOADK     R12 K26      ; R12 := 0.20000000298023
 69 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
 70 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 5003
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mCurVal"]
  9 [-]: LT        0 R0 K2      ; if R0 >= -2 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x458F27A9"]
 13 [-]: LOADK     R3 K4        ; R3 := "OnRegionZoomOut"
 14 [-]: LOADK     R4 K5        ; R4 := ""
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: GETUPVAL  R1 U2        ; R1 := U2
 17 [-]: CALL      R1 1 1       ; R1()
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: LOADK     R1 K6        ; R1 := 1
 20 [-]: GETUPVAL  R2 U3        ; R2 := U3
 21 [-]: LEN       R2 R2        ; R2 := # R2
 22 [-]: LOADK     R3 K6        ; R3 := 1
 23 [-]: FORPREP   R1 42        ; R1 -= R3; PC := 42
 24 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 25 [-]: GETUPVAL  R6 U4        ; R6 := U4
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: TEST      R5 1         ; if R5 then PC := 42
 28 [-]: JMP       42           ; PC := 42
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: GETUPVAL  R6 U3        ; R6 := U3
 31 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 32 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 42
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETUPVAL  R5 U0        ; R5 := U0
 35 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x458F27A9"]
 36 [-]: LOADK     R7 K7        ; R7 := "OnRegionZoomIn"
 37 [-]: GETGLOBAL R8 K8        ; R8 := 0x9FAED6BC
 38 [-]: MOVE      R9 R4        ; R9 := R4
 39 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 40 [-]: CALL      R5 0 1       ; R5(R6,...)
 41 [-]: RETURN    R0 1         ; return 
 42 [-]: FORLOOP   R1 24        ; R1 += R3; if R1 <= R2 then begin PC := 24; R4 := R1 end
 43 [-]: GETUPVAL  R5 U0        ; R5 := U0
 44 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x458F27A9"]
 45 [-]: LOADK     R7 K4        ; R7 := "OnRegionZoomOut"
 46 [-]: LOADK     R8 K5        ; R8 := ""
 47 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 48 [-]: GETUPVAL  R5 U2        ; R5 := U2
 49 [-]: CALL      R5 1 1       ; R5()
 50 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 5030
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R2 K0        ; R2 := 0
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xBFE096C9"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xABA21F2F"]
  6 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["x"]
  7 [-]: GETTABLE  R6 R1 K4     ; R6 := R1["y"]
  8 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["x"]
  9 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["y"]
 10 [-]: CALL      R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
 11 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 12 [-]: MOVE      R2 R3        ; R2 := R3
 13 [-]: SUB       R2 R2 K5     ; R2 := R2 - 90
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 5037
; #Upvalues:       39
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  82

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x221C9700
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCurVal"]
  5 [-]: GETUPVAL  R3 U1        ; R3 := U1
  6 [-]: EQ        0 R3 R2      ; if R3 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: MOVE      R2 R1        ; R2 := R1
 11 [-]: GETUPVAL  R4 U2        ; R4 := U2
 12 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["x"]
 13 [-]: GETUPVAL  R5 U3        ; R5 := U3
 14 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0xC4E503B0"]
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 32
 17 [-]: JMP       32           ; PC := 32
 18 [-]: GETUPVAL  R4 U2        ; R4 := U2
 19 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["y"]
 20 [-]: GETUPVAL  R5 U4        ; R5 := U4
 21 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0xC4E503B0"]
 22 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 23 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 32
 24 [-]: JMP       32           ; PC := 32
 25 [-]: GETUPVAL  R4 U5        ; R4 := U5
 26 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mPrevHoverNode"]
 27 [-]: GETUPVAL  R5 U5        ; R5 := U5
 28 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["Node"]
 29 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: GETUPVAL  R5 U2        ; R5 := U2
 34 [-]: GETUPVAL  R6 U3        ; R6 := U3
 35 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6["0xC4E503B0"]
 36 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 37 [-]: SETTABLE  R5 K2 R6     ; R5["x"] := R6
 38 [-]: GETUPVAL  R5 U2        ; R5 := U2
 39 [-]: GETUPVAL  R6 U4        ; R6 := U4
 40 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6["0xC4E503B0"]
 41 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 42 [-]: SETTABLE  R5 K4 R6     ; R5["y"] := R6
 43 [-]: GETUPVAL  R5 U5        ; R5 := U5
 44 [-]: GETUPVAL  R6 U5        ; R6 := U5
 45 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["Node"]
 46 [-]: SETTABLE  R5 K5 R6     ; R5["mPrevHoverNode"] := R6
 47 [-]: GETUPVAL  R5 U6        ; R5 := U6
 48 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Alpha"]
 49 [-]: GETUPVAL  R6 U7        ; R6 := U7
 50 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6["0xC4E503B0"]
 51 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 52 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: MOVE      R5 R0        ; R5 := R0
 55 [-]: MOVE      R5 R1        ; R5 := R1
 56 [-]: GETUPVAL  R6 U6        ; R6 := U6
 57 [-]: GETUPVAL  R7 U7        ; R7 := U7
 58 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7["0xC4E503B0"]
 59 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 60 [-]: SETTABLE  R6 K7 R7     ; R6["Alpha"] := R7
 61 [-]: GETUPVAL  R6 U5        ; R6 := U5
 62 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Region"]
 63 [-]: EQ        0 R6 K9      ; if R6 ~= nil then PC := 75
 64 [-]: JMP       75           ; PC := 75
 65 [-]: GETUPVAL  R7 U8        ; R7 := U8
 66 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["Region"]
 67 [-]: EQ        1 R7 K9      ; if R7 == nil then PC := 75
 68 [-]: JMP       75           ; PC := 75
 69 [-]: GETUPVAL  R7 U8        ; R7 := U8
 70 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Alpha"]
 71 [-]: LT        0 K10 R7     ; if 0 >= R7 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: GETUPVAL  R7 U8        ; R7 := U8
 74 [-]: GETTABLE  R6 R7 K8     ; R6 := R7["Region"]
 75 [-]: LOADNIL   R7 R7        ; R7 := nil
 76 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 90
 77 [-]: JMP       90           ; PC := 90
 78 [-]: LOADK     R8 K11       ; R8 := 1
 79 [-]: GETUPVAL  R9 U9        ; R9 := U9
 80 [-]: LEN       R9 R9        ; R9 := # R9
 81 [-]: LOADK     R10 K11      ; R10 := 1
 82 [-]: FORPREP   R8 89        ; R8 -= R10; PC := 89
 83 [-]: GETUPVAL  R12 U9       ; R12 := U9
 84 [-]: GETTABLE  R12 R12 R11  ; R12 := R12[R11]
 85 [-]: EQ        0 R6 R12     ; if R6 ~= R12 then PC := 89
 86 [-]: JMP       89           ; PC := 89
 87 [-]: SUB       R7 R11 K11   ; R7 := R11 - 1
 88 [-]: JMP       90           ; PC := 90
 89 [-]: FORLOOP   R8 83        ; R8 += R10; if R8 <= R9 then begin PC := 83; R11 := R8 end
 90 [-]: GETUPVAL  R12 U8       ; R12 := U8
 91 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["Alpha"]
 92 [-]: GETUPVAL  R13 U10      ; R13 := U10
 93 [-]: SELF      R13 R13 K3   ; R14 := R13; R13 := R13["0xC4E503B0"]
 94 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 95 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: MOVE      R12 R0       ; R12 := R0
 98 [-]: MOVE      R12 R1       ; R12 := R1
 99 [-]: GETUPVAL  R13 U8       ; R13 := U8
100 [-]: GETUPVAL  R14 U10      ; R14 := U10
101 [-]: SELF      R14 R14 K3   ; R15 := R14; R14 := R14["0xC4E503B0"]
102 [-]: CALL      R14 2 2      ; R14 := R14(R15)
103 [-]: SETTABLE  R13 K7 R14   ; R13["Alpha"] := R14
104 [-]: GETUPVAL  R13 U11      ; R13 := U11
105 [-]: GETUPVAL  R14 U12      ; R14 := U12
106 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["READ_ONLY"]
107 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 111
108 [-]: JMP       111          ; PC := 111
109 [-]: MOVE      R3 R1        ; R3 := R1
110 [-]: MOVE      R4 R1        ; R4 := R1
111 [-]: LOADNIL   R13 R14      ; R13 := R14 := nil
112 [-]: GETGLOBAL R15 K0       ; R15 := 0x221C9700
113 [-]: CALL      R15 1 2      ; R15 := R15()
114 [-]: GETGLOBAL R16 K0       ; R16 := 0x221C9700
115 [-]: CALL      R16 1 2      ; R16 := R16()
116 [-]: GETGLOBAL R17 K13      ; R17 := 0x1E4F6281
117 [-]: CALL      R17 1 2      ; R17 := R17()
118 [-]: GETGLOBAL R18 K0       ; R18 := 0x221C9700
119 [-]: CALL      R18 1 2      ; R18 := R18()
120 [-]: TEST      R4 1         ; if R4 then PC := 130
121 [-]: JMP       130          ; PC := 130
122 [-]: TEST      R3 1         ; if R3 then PC := 130
123 [-]: JMP       130          ; PC := 130
124 [-]: TEST      R5 1         ; if R5 then PC := 130
125 [-]: JMP       130          ; PC := 130
126 [-]: TEST      R12 1        ; if R12 then PC := 130
127 [-]: JMP       130          ; PC := 130
128 [-]: TEST      R0 0         ; if not R0 then PC := 877
129 [-]: JMP       877          ; PC := 877
130 [-]: LOADK     R19 K14      ; R19 := 100
131 [-]: LOADNIL   R20 R22      ; R20 := R21 := R22 := nil
132 [-]: TEST      R3 0         ; if not R3 then PC := 203
133 [-]: JMP       203          ; PC := 203
134 [-]: LOADK     R23 K15      ; R23 := 0.20000000298023
135 [-]: GETGLOBAL R24 K16      ; R24 := 0x6374FD98
136 [-]: MOVE      R25 R2       ; R25 := R2
137 [-]: GETUPVAL  R26 U13      ; R26 := U13
138 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["LAYER_1_RANGE"]
139 [-]: GETTABLE  R26 R26 K18  ; R26 := R26["minValue"]
140 [-]: GETUPVAL  R27 U13      ; R27 := U13
141 [-]: GETTABLE  R27 R27 K17  ; R27 := R27["LAYER_1_RANGE"]
142 [-]: GETTABLE  R27 R27 K19  ; R27 := R27["maxValue"]
143 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
144 [-]: MOVE      R14 R24      ; R14 := R24
145 [-]: GETUPVAL  R24 U13      ; R24 := U13
146 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["LAYER_1_RANGE"]
147 [-]: SELF      R24 R24 K20  ; R25 := R24; R24 := R24["0x3B43F25"]
148 [-]: MOVE      R26 R14      ; R26 := R14
149 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
150 [-]: MOVE      R14 R24      ; R14 := R24
151 [-]: LT        0 R14 R23    ; if R14 >= R23 then PC := 160
152 [-]: JMP       160          ; PC := 160
153 [-]: GETGLOBAL R24 K21      ; R24 := 0x93034B55
154 [-]: LOADK     R25 K10      ; R25 := 0
155 [-]: LOADK     R26 K22      ; R26 := 80
156 [-]: DIV       R27 R14 R23  ; R27 := R14 / R23
157 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
158 [-]: MOVE      R19 R24      ; R19 := R24
159 [-]: JMP       173          ; PC := 173
160 [-]: SUB       R24 K11 R23  ; R24 := 1 - R23
161 [-]: LT        0 R24 R14    ; if R24 >= R14 then PC := 172
162 [-]: JMP       172          ; PC := 172
163 [-]: GETGLOBAL R24 K21      ; R24 := 0x93034B55
164 [-]: LOADK     R25 K22      ; R25 := 80
165 [-]: LOADK     R26 K10      ; R26 := 0
166 [-]: SUB       R27 K11 R23  ; R27 := 1 - R23
167 [-]: SUB       R27 R14 R27  ; R27 := R14 - R27
168 [-]: DIV       R27 R27 R23  ; R27 := R27 / R23
169 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
170 [-]: MOVE      R19 R24      ; R19 := R24
171 [-]: JMP       173          ; PC := 173
172 [-]: LOADK     R19 K22      ; R19 := 80
173 [-]: GETGLOBAL R24 K16      ; R24 := 0x6374FD98
174 [-]: MOVE      R25 R2       ; R25 := R2
175 [-]: GETUPVAL  R26 U13      ; R26 := U13
176 [-]: GETTABLE  R26 R26 K23  ; R26 := R26["PLANET_VIS_RANGE"]
177 [-]: GETTABLE  R26 R26 K18  ; R26 := R26["minValue"]
178 [-]: GETUPVAL  R27 U13      ; R27 := U13
179 [-]: GETTABLE  R27 R27 K23  ; R27 := R27["PLANET_VIS_RANGE"]
180 [-]: GETTABLE  R27 R27 K19  ; R27 := R27["maxValue"]
181 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
182 [-]: MOVE      R14 R24      ; R14 := R24
183 [-]: GETGLOBAL R24 K21      ; R24 := 0x93034B55
184 [-]: LOADK     R25 K10      ; R25 := 0
185 [-]: LOADK     R26 K22      ; R26 := 80
186 [-]: GETUPVAL  R27 U13      ; R27 := U13
187 [-]: GETTABLE  R27 R27 K23  ; R27 := R27["PLANET_VIS_RANGE"]
188 [-]: SELF      R27 R27 K20  ; R28 := R27; R27 := R27["0x3B43F25"]
189 [-]: MOVE      R29 R14      ; R29 := R14
190 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
191 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
192 [-]: MOVE      R20 R24      ; R20 := R24
193 [-]: GETGLOBAL R24 K21      ; R24 := 0x93034B55
194 [-]: LOADK     R25 K24      ; R25 := 50
195 [-]: LOADK     R26 K22      ; R26 := 80
196 [-]: GETUPVAL  R27 U13      ; R27 := U13
197 [-]: GETTABLE  R27 R27 K23  ; R27 := R27["PLANET_VIS_RANGE"]
198 [-]: SELF      R27 R27 K20  ; R28 := R27; R27 := R27["0x3B43F25"]
199 [-]: MOVE      R29 R14      ; R29 := R14
200 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
201 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
202 [-]: MOVE      R21 R24      ; R21 := R24
203 [-]: TEST      R4 1         ; if R4 then PC := 209
204 [-]: JMP       209          ; PC := 209
205 [-]: TEST      R3 1         ; if R3 then PC := 209
206 [-]: JMP       209          ; PC := 209
207 [-]: TEST      R0 0         ; if not R0 then PC := 278
208 [-]: JMP       278          ; PC := 278
209 [-]: LOADK     R24 K11      ; R24 := 1
210 [-]: GETUPVAL  R25 U14      ; R25 := U14
211 [-]: LEN       R25 R25      ; R25 := # R25
212 [-]: LOADK     R26 K11      ; R26 := 1
213 [-]: FORPREP   R24 277      ; R24 -= R26; PC := 277
214 [-]: GETGLOBAL R28 K25      ; R28 := mMovie
215 [-]: SELF      R28 R28 K26  ; R29 := R28; R28 := R28["0x3688C0F4"]
216 [-]: MOVE      R30 R15      ; R30 := R15
217 [-]: GETUPVAL  R31 U14      ; R31 := U14
218 [-]: GETTABLE  R31 R31 R27  ; R31 := R31[R27]
219 [-]: GETTABLE  R31 R31 K27  ; R31 := R31["pos"]
220 [-]: MOVE      R32 R1       ; R32 := R1
221 [-]: MOVE      R33 R0       ; R33 := R0
222 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
223 [-]: GETGLOBAL R28 K25      ; R28 := mMovie
224 [-]: SELF      R28 R28 K28  ; R29 := R28; R28 := R28["0x4717530F"]
225 [-]: GETUPVAL  R30 U14      ; R30 := U14
226 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
227 [-]: GETTABLE  R30 R30 K29  ; R30 := R30["memberIndex"]
228 [-]: GETTABLE  R31 R15 K2   ; R31 := R15["x"]
229 [-]: GETTABLE  R32 R15 K4   ; R32 := R15["y"]
230 [-]: SUB       R32 R32 K30  ; R32 := R32 - 10
231 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
232 [-]: TEST      R3 0         ; if not R3 then PC := 277
233 [-]: JMP       277          ; PC := 277
234 [-]: GETUPVAL  R28 U14      ; R28 := U14
235 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
236 [-]: GETTABLE  R28 R28 K31  ; R28 := R28["layer"]
237 [-]: TEST      R28 0        ; if not R28 then PC := 277
238 [-]: JMP       277          ; PC := 277
239 [-]: LOADK     R13 K14      ; R13 := 100
240 [-]: GETUPVAL  R28 U14      ; R28 := U14
241 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
242 [-]: GETTABLE  R28 R28 K31  ; R28 := R28["layer"]
243 [-]: EQ        0 R28 K11    ; if R28 ~= 1 then PC := 247
244 [-]: JMP       247          ; PC := 247
245 [-]: MOVE      R13 R19      ; R13 := R19
246 [-]: JMP       269          ; PC := 269
247 [-]: GETUPVAL  R28 U14      ; R28 := U14
248 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
249 [-]: GETTABLE  R28 R28 K31  ; R28 := R28["layer"]
250 [-]: EQ        0 R28 K32    ; if R28 ~= 2 then PC := 269
251 [-]: JMP       269          ; PC := 269
252 [-]: MOVE      R13 R20      ; R13 := R20
253 [-]: GETGLOBAL R28 K25      ; R28 := mMovie
254 [-]: SELF      R28 R28 K33  ; R29 := R28; R28 := R28["0x445651FB"]
255 [-]: GETUPVAL  R30 U14      ; R30 := U14
256 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
257 [-]: GETTABLE  R30 R30 K29  ; R30 := R30["memberIndex"]
258 [-]: LOADK     R31 K34      ; R31 := "_xscale"
259 [-]: MOVE      R32 R21      ; R32 := R21
260 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
261 [-]: GETGLOBAL R28 K25      ; R28 := mMovie
262 [-]: SELF      R28 R28 K33  ; R29 := R28; R28 := R28["0x445651FB"]
263 [-]: GETUPVAL  R30 U14      ; R30 := U14
264 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
265 [-]: GETTABLE  R30 R30 K29  ; R30 := R30["memberIndex"]
266 [-]: LOADK     R31 K35      ; R31 := "_yscale"
267 [-]: MOVE      R32 R21      ; R32 := R21
268 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
269 [-]: GETGLOBAL R28 K25      ; R28 := mMovie
270 [-]: SELF      R28 R28 K33  ; R29 := R28; R28 := R28["0x445651FB"]
271 [-]: GETUPVAL  R30 U14      ; R30 := U14
272 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
273 [-]: GETTABLE  R30 R30 K29  ; R30 := R30["memberIndex"]
274 [-]: LOADK     R31 K36      ; R31 := "_alpha"
275 [-]: MOVE      R32 R13      ; R32 := R13
276 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
277 [-]: FORLOOP   R24 214      ; R24 += R26; if R24 <= R25 then begin PC := 214; R27 := R24 end
278 [-]: GETGLOBAL R28 K16      ; R28 := 0x6374FD98
279 [-]: MOVE      R29 R2       ; R29 := R2
280 [-]: GETUPVAL  R30 U13      ; R30 := U13
281 [-]: GETTABLE  R30 R30 K37  ; R30 := R30["LAYER_2_RANGE"]
282 [-]: GETTABLE  R30 R30 K18  ; R30 := R30["minValue"]
283 [-]: GETUPVAL  R31 U13      ; R31 := U13
284 [-]: GETTABLE  R31 R31 K37  ; R31 := R31["LAYER_2_RANGE"]
285 [-]: GETTABLE  R31 R31 K19  ; R31 := R31["maxValue"]
286 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
287 [-]: MOVE      R14 R28      ; R14 := R28
288 [-]: GETUPVAL  R28 U15      ; R28 := U15
289 [-]: GETGLOBAL R29 K21      ; R29 := 0x93034B55
290 [-]: LOADK     R30 K10      ; R30 := 0
291 [-]: LOADK     R31 K14      ; R31 := 100
292 [-]: GETUPVAL  R32 U13      ; R32 := U13
293 [-]: GETTABLE  R32 R32 K37  ; R32 := R32["LAYER_2_RANGE"]
294 [-]: SELF      R32 R32 K20  ; R33 := R32; R32 := R32["0x3B43F25"]
295 [-]: MOVE      R34 R14      ; R34 := R14
296 [-]: CALL      R32 3 0      ; R32,... := R32(R33,R34)
297 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
298 [-]: GETUPVAL  R30 U16      ; R30 := U16
299 [-]: LT        0 R30 R28    ; if R30 >= R28 then PC := 313
300 [-]: JMP       313          ; PC := 313
301 [-]: GETUPVAL  R30 U16      ; R30 := U16
302 [-]: LE        0 R29 R30    ; if R29 > R30 then PC := 313
303 [-]: JMP       313          ; PC := 313
304 [-]: GETUPVAL  R30 U17      ; R30 := U17
305 [-]: CALL      R30 1 1      ; R30()
306 [-]: GETGLOBAL R30 K25      ; R30 := mMovie
307 [-]: SELF      R30 R30 K38  ; R31 := R30; R30 := R30["0x1C19D966"]
308 [-]: LOADK     R32 K39      ; R32 := "Nodes"
309 [-]: LOADK     R33 K40      ; R33 := "noMenuSelection"
310 [-]: MOVE      R34 R1       ; R34 := R1
311 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
312 [-]: JMP       325          ; PC := 325
313 [-]: GETUPVAL  R30 U16      ; R30 := U16
314 [-]: LE        0 R28 R30    ; if R28 > R30 then PC := 325
315 [-]: JMP       325          ; PC := 325
316 [-]: GETUPVAL  R30 U16      ; R30 := U16
317 [-]: LT        0 R30 R29    ; if R30 >= R29 then PC := 325
318 [-]: JMP       325          ; PC := 325
319 [-]: GETGLOBAL R30 K25      ; R30 := mMovie
320 [-]: SELF      R30 R30 K38  ; R31 := R30; R30 := R30["0x1C19D966"]
321 [-]: LOADK     R32 K39      ; R32 := "Nodes"
322 [-]: LOADK     R33 K40      ; R33 := "noMenuSelection"
323 [-]: MOVE      R34 R0       ; R34 := R0
324 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
325 [-]: MOVE      R29 R15      ; R29 := R15
326 [-]: GETUPVAL  R30 U13      ; R30 := U13
327 [-]: GETTABLE  R30 R30 K37  ; R30 := R30["LAYER_2_RANGE"]
328 [-]: SELF      R30 R30 K20  ; R31 := R30; R30 := R30["0x3B43F25"]
329 [-]: MOVE      R32 R14      ; R32 := R14
330 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
331 [-]: GETGLOBAL R31 K16      ; R31 := 0x6374FD98
332 [-]: MOVE      R32 R2       ; R32 := R2
333 [-]: GETUPVAL  R33 U13      ; R33 := U13
334 [-]: GETTABLE  R33 R33 K41  ; R33 := R33["SHORTCUT_RANGE"]
335 [-]: GETTABLE  R33 R33 K18  ; R33 := R33["minValue"]
336 [-]: GETUPVAL  R34 U13      ; R34 := U13
337 [-]: GETTABLE  R34 R34 K41  ; R34 := R34["SHORTCUT_RANGE"]
338 [-]: GETTABLE  R34 R34 K19  ; R34 := R34["maxValue"]
339 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
340 [-]: MOVE      R14 R31      ; R14 := R31
341 [-]: GETGLOBAL R31 K21      ; R31 := 0x93034B55
342 [-]: LOADK     R32 K10      ; R32 := 0
343 [-]: LOADK     R33 K14      ; R33 := 100
344 [-]: GETUPVAL  R34 U13      ; R34 := U13
345 [-]: GETTABLE  R34 R34 K41  ; R34 := R34["SHORTCUT_RANGE"]
346 [-]: SELF      R34 R34 K20  ; R35 := R34; R34 := R34["0x3B43F25"]
347 [-]: MOVE      R36 R14      ; R36 := R14
348 [-]: CALL      R34 3 0      ; R34,... := R34(R35,R36)
349 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
350 [-]: MOVE      R22 R31      ; R22 := R31
351 [-]: GETUPVAL  R31 U11      ; R31 := U11
352 [-]: GETUPVAL  R32 U12      ; R32 := U12
353 [-]: GETTABLE  R32 R32 K42  ; R32 := R32["EDIT_NODES"]
354 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 366
355 [-]: JMP       366          ; PC := 366
356 [-]: GETUPVAL  R31 U11      ; R31 := U11
357 [-]: GETUPVAL  R32 U12      ; R32 := U12
358 [-]: GETTABLE  R32 R32 K43  ; R32 := R32["EDIT_EDGES"]
359 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 366
360 [-]: JMP       366          ; PC := 366
361 [-]: GETUPVAL  R31 U11      ; R31 := U11
362 [-]: GETUPVAL  R32 U12      ; R32 := U12
363 [-]: GETTABLE  R32 R32 K44  ; R32 := R32["EDIT_NODE_DECOS"]
364 [-]: EQ        0 R31 R32    ; if R31 ~= R32 then PC := 368
365 [-]: JMP       368          ; PC := 368
366 [-]: LOADK     R31 K14      ; R31 := 100
367 [-]: MOVE      R31 R15      ; R31 := R15
368 [-]: LOADNIL   R31 R35      ; R31 := R32 := R33 := R34 := R35 := nil
369 [-]: GETUPVAL  R36 U15      ; R36 := U15
370 [-]: LT        1 K10 R36    ; if 0 < R36 then PC := 383
371 [-]: JMP       383          ; PC := 383
372 [-]: GETUPVAL  R36 U15      ; R36 := U15
373 [-]: LT        1 K10 R36    ; if 0 < R36 then PC := 376
374 [-]: JMP       376          ; PC := 376
375 [-]: MOVE      R36 R0       ; R36 := R0
376 [-]: MOVE      R36 R1       ; R36 := R1
377 [-]: LT        1 K10 R28    ; if 0 < R28 then PC := 380
378 [-]: JMP       380          ; PC := 380
379 [-]: MOVE      R37 R0       ; R37 := R0
380 [-]: MOVE      R37 R1       ; R37 := R1
381 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 383
382 [-]: JMP       383          ; PC := 383
383 [-]: LOADK     R36 K11      ; R36 := 1
384 [-]: GETUPVAL  R37 U18      ; R37 := U18
385 [-]: LEN       R37 R37      ; R37 := # R37
386 [-]: LOADK     R38 K11      ; R38 := 1
387 [-]: FORPREP   R36 673      ; R36 -= R38; PC := 673
388 [-]: GETGLOBAL R40 K45      ; R40 := 0x1BF588C6
389 [-]: CALL      R40 1 1      ; R40()
390 [-]: GETUPVAL  R40 U18      ; R40 := U18
391 [-]: GETTABLE  R40 R40 R39  ; R40 := R40[R39]
392 [-]: GETTABLE  R41 R40 K46  ; R41 := R40["radialSector"]
393 [-]: TEST      R4 1         ; if R4 then PC := 399
394 [-]: JMP       399          ; PC := 399
395 [-]: TEST      R3 1         ; if R3 then PC := 399
396 [-]: JMP       399          ; PC := 399
397 [-]: TEST      R0 0         ; if not R0 then PC := 563
398 [-]: JMP       563          ; PC := 563
399 [-]: GETTABLE  R32 R40 K47  ; R32 := R40["position"]
400 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
401 [-]: SELF      R42 R42 K26  ; R43 := R42; R42 := R42["0x3688C0F4"]
402 [-]: MOVE      R44 R15      ; R44 := R15
403 [-]: MOVE      R45 R32      ; R45 := R32
404 [-]: MOVE      R46 R1       ; R46 := R1
405 [-]: GETUPVAL  R47 U19      ; R47 := U19
406 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
407 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
408 [-]: SELF      R42 R42 K28  ; R43 := R42; R42 := R42["0x4717530F"]
409 [-]: GETTABLE  R44 R40 K29  ; R44 := R40["memberIndex"]
410 [-]: GETTABLE  R45 R15 K2   ; R45 := R15["x"]
411 [-]: GETTABLE  R46 R15 K4   ; R46 := R15["y"]
412 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
413 [-]: GETGLOBAL R42 K21      ; R42 := 0x93034B55
414 [-]: LOADK     R43 K48      ; R43 := 20
415 [-]: LOADK     R44 K24      ; R44 := 50
416 [-]: MOVE      R45 R30      ; R45 := R30
417 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
418 [-]: MOVE      R31 R42      ; R31 := R42
419 [-]: GETTABLE  R42 R40 K49  ; R42 := R40["isSurfaceNode"]
420 [-]: TEST      R42 0        ; if not R42 then PC := 532
421 [-]: JMP       532          ; PC := 532
422 [-]: LOADK     R33 K14      ; R33 := 100
423 [-]: GETTABLE  R34 R32 K50  ; R34 := R32["z"]
424 [-]: MUL       R34 R34 K30  ; R34 := R34 * 10
425 [-]: LE        0 K10 R34    ; if 0 > R34 then PC := 442
426 [-]: JMP       442          ; PC := 442
427 [-]: GETGLOBAL R42 K21      ; R42 := 0x93034B55
428 [-]: LOADK     R43 K51      ; R43 := 75
429 [-]: LOADK     R44 K24      ; R44 := 50
430 [-]: GETGLOBAL R45 K16      ; R45 := 0x6374FD98
431 [-]: GETGLOBAL R46 K52      ; R46 := math
432 [-]: GETTABLE  R46 R46 K53  ; R46 := R46["0xD6F2D811"]
433 [-]: MOVE      R47 R34      ; R47 := R34
434 [-]: LOADK     R48 K54      ; R48 := 3
435 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
436 [-]: LOADK     R47 K10      ; R47 := 0
437 [-]: LOADK     R48 K11      ; R48 := 1
438 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
439 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
440 [-]: MOVE      R33 R42      ; R33 := R42
441 [-]: JMP       459          ; PC := 459
442 [-]: GETGLOBAL R42 K21      ; R42 := 0x93034B55
443 [-]: LOADK     R43 K51      ; R43 := 75
444 [-]: LOADK     R44 K14      ; R44 := 100
445 [-]: GETGLOBAL R45 K16      ; R45 := 0x6374FD98
446 [-]: GETGLOBAL R46 K52      ; R46 := math
447 [-]: GETTABLE  R46 R46 K53  ; R46 := R46["0xD6F2D811"]
448 [-]: GETGLOBAL R47 K52      ; R47 := math
449 [-]: GETTABLE  R47 R47 K55  ; R47 := R47["0xF93F7CC8"]
450 [-]: MOVE      R48 R34      ; R48 := R34
451 [-]: CALL      R47 2 2      ; R47 := R47(R48)
452 [-]: LOADK     R48 K54      ; R48 := 3
453 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
454 [-]: LOADK     R47 K10      ; R47 := 0
455 [-]: LOADK     R48 K11      ; R48 := 1
456 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
457 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
458 [-]: MOVE      R33 R42      ; R33 := R42
459 [-]: GETUPVAL  R42 U20      ; R42 := U20
460 [-]: GETTABLE  R43 R41 K56  ; R43 := R41["region"]
461 [-]: ADD       R43 R43 K11  ; R43 := R43 + 1
462 [-]: GETTABLE  R35 R42 R43  ; R35 := R42[R43]
463 [-]: GETGLOBAL R42 K57      ; R42 := 0x400E7765
464 [-]: MOVE      R43 R35      ; R43 := R35
465 [-]: CALL      R42 2 2      ; R42 := R42(R43)
466 [-]: TEST      R42 1        ; if R42 then PC := 492
467 [-]: JMP       492          ; PC := 492
468 [-]: SELF      R42 R35 K58  ; R43 := R35; R42 := R35["0x8EEB099D"]
469 [-]: MOVE      R44 R16      ; R44 := R16
470 [-]: CALL      R42 3 1      ; R42(R43,R44)
471 [-]: GETGLOBAL R42 K59      ; R42 := 0x518098BD
472 [-]: MOVE      R43 R18      ; R43 := R18
473 [-]: MOVE      R44 R32      ; R44 := R32
474 [-]: MOVE      R45 R16      ; R45 := R16
475 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
476 [-]: GETGLOBAL R42 K60      ; R42 := 0x20F748B4
477 [-]: MOVE      R43 R17      ; R43 := R17
478 [-]: MOVE      R44 R1       ; R44 := R1
479 [-]: MOVE      R45 R18      ; R45 := R18
480 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
481 [-]: GETTABLE  R42 R17 K61  ; R42 := R17["heading"]
482 [-]: UNM       R42 R42      ; R42 := - R42
483 [-]: SETTABLE  R17 K61 R42  ; R17["heading"] := R42
484 [-]: GETGLOBAL R42 K16      ; R42 := 0x6374FD98
485 [-]: GETTABLE  R43 R17 K62  ; R43 := R17["pitch"]
486 [-]: MUL       R43 R43 K63  ; R43 := R43 * 0.75
487 [-]: LOADK     R44 K64      ; R44 := -75
488 [-]: LOADK     R45 K51      ; R45 := 75
489 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
490 [-]: SETTABLE  R17 K62 R42  ; R17["pitch"] := R42
491 [-]: JMP       496          ; PC := 496
492 [-]: NEWTABLE  R42 0 2      ; R42 := {}
493 [-]: SETTABLE  R42 K61 K10  ; R42["heading"] := 0
494 [-]: SETTABLE  R42 K62 K10  ; R42["pitch"] := 0
495 [-]: MOVE      R17 R42      ; R17 := R42
496 [-]: GETTABLE  R42 R40 K65  ; R42 := R40["visibleLabel"]
497 [-]: TEST      R42 1        ; if R42 then PC := 517
498 [-]: JMP       517          ; PC := 517
499 [-]: GETTABLE  R42 R40 K66  ; R42 := R40["isShortcut"]
500 [-]: TEST      R42 1        ; if R42 then PC := 517
501 [-]: JMP       517          ; PC := 517
502 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
503 [-]: SELF      R42 R42 K67  ; R43 := R42; R42 := R42["0x880196A7"]
504 [-]: GETTABLE  R44 R40 K68  ; R44 := R40["clipName"]
505 [-]: LOADK     R45 K69      ; R45 := "Node.Container"
506 [-]: LOADK     R46 K70      ; R46 := "_heading"
507 [-]: GETTABLE  R47 R17 K61  ; R47 := R17["heading"]
508 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
509 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
510 [-]: SELF      R42 R42 K67  ; R43 := R42; R42 := R42["0x880196A7"]
511 [-]: GETTABLE  R44 R40 K68  ; R44 := R40["clipName"]
512 [-]: LOADK     R45 K69      ; R45 := "Node.Container"
513 [-]: LOADK     R46 K71      ; R46 := "_pitch"
514 [-]: GETTABLE  R47 R17 K62  ; R47 := R17["pitch"]
515 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
516 [-]: JMP       551          ; PC := 551
517 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
518 [-]: SELF      R42 R42 K67  ; R43 := R42; R42 := R42["0x880196A7"]
519 [-]: GETTABLE  R44 R40 K68  ; R44 := R40["clipName"]
520 [-]: LOADK     R45 K69      ; R45 := "Node.Container"
521 [-]: LOADK     R46 K70      ; R46 := "_heading"
522 [-]: GETTABLE  R47 R17 K61  ; R47 := R17["heading"]
523 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
524 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
525 [-]: SELF      R42 R42 K67  ; R43 := R42; R42 := R42["0x880196A7"]
526 [-]: GETTABLE  R44 R40 K68  ; R44 := R40["clipName"]
527 [-]: LOADK     R45 K69      ; R45 := "Node.Container"
528 [-]: LOADK     R46 K71      ; R46 := "_pitch"
529 [-]: GETTABLE  R47 R17 K62  ; R47 := R17["pitch"]
530 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
531 [-]: JMP       551          ; PC := 551
532 [-]: GETUPVAL  R42 U11      ; R42 := U11
533 [-]: GETUPVAL  R43 U12      ; R43 := U12
534 [-]: GETTABLE  R43 R43 K12  ; R43 := R43["READ_ONLY"]
535 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 551
536 [-]: JMP       551          ; PC := 551
537 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
538 [-]: SELF      R42 R42 K67  ; R43 := R42; R42 := R42["0x880196A7"]
539 [-]: GETTABLE  R44 R40 K68  ; R44 := R40["clipName"]
540 [-]: LOADK     R45 K69      ; R45 := "Node.Container"
541 [-]: LOADK     R46 K70      ; R46 := "_heading"
542 [-]: LOADK     R47 K10      ; R47 := 0
543 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
544 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
545 [-]: SELF      R42 R42 K67  ; R43 := R42; R42 := R42["0x880196A7"]
546 [-]: GETTABLE  R44 R40 K68  ; R44 := R40["clipName"]
547 [-]: LOADK     R45 K69      ; R45 := "Node.Container"
548 [-]: LOADK     R46 K71      ; R46 := "_pitch"
549 [-]: LOADK     R47 K10      ; R47 := 0
550 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
551 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
552 [-]: SELF      R42 R42 K33  ; R43 := R42; R42 := R42["0x445651FB"]
553 [-]: GETTABLE  R44 R40 K72  ; R44 := R40["nodeIndex"]
554 [-]: LOADK     R45 K34      ; R45 := "_xscale"
555 [-]: MOVE      R46 R31      ; R46 := R31
556 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
557 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
558 [-]: SELF      R42 R42 K33  ; R43 := R42; R42 := R42["0x445651FB"]
559 [-]: GETTABLE  R44 R40 K72  ; R44 := R40["nodeIndex"]
560 [-]: LOADK     R45 K35      ; R45 := "_yscale"
561 [-]: MOVE      R46 R31      ; R46 := R31
562 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
563 [-]: GETGLOBAL R42 K73      ; R42 := _T
564 [-]: GETTABLE  R42 R42 K74  ; R42 := R42["MouseInWorldStateWindow"]
565 [-]: TEST      R42 1        ; if R42 then PC := 591
566 [-]: JMP       591          ; PC := 591
567 [-]: GETGLOBAL R42 K73      ; R42 := _T
568 [-]: GETTABLE  R42 R42 K75  ; R42 := R42["gPendingMission"]
569 [-]: EQ        0 R42 K9     ; if R42 ~= nil then PC := 591
570 [-]: JMP       591          ; PC := 591
571 [-]: GETUPVAL  R42 U5       ; R42 := U5
572 [-]: GETTABLE  R42 R42 K6   ; R42 := R42["Node"]
573 [-]: EQ        1 R42 K9     ; if R42 == nil then PC := 581
574 [-]: JMP       581          ; PC := 581
575 [-]: GETUPVAL  R42 U5       ; R42 := U5
576 [-]: GETTABLE  R42 R42 K6   ; R42 := R42["Node"]
577 [-]: GETTABLE  R42 R42 K72  ; R42 := R42["nodeIndex"]
578 [-]: GETTABLE  R43 R40 K72  ; R43 := R40["nodeIndex"]
579 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 591
580 [-]: JMP       591          ; PC := 591
581 [-]: GETUPVAL  R42 U6       ; R42 := U6
582 [-]: GETTABLE  R42 R42 K6   ; R42 := R42["Node"]
583 [-]: EQ        1 R42 K9     ; if R42 == nil then PC := 591
584 [-]: JMP       591          ; PC := 591
585 [-]: GETUPVAL  R42 U6       ; R42 := U6
586 [-]: GETTABLE  R42 R42 K6   ; R42 := R42["Node"]
587 [-]: GETTABLE  R42 R42 K72  ; R42 := R42["nodeIndex"]
588 [-]: GETTABLE  R43 R40 K72  ; R43 := R40["nodeIndex"]
589 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 604
590 [-]: JMP       604          ; PC := 604
591 [-]: GETGLOBAL R42 K73      ; R42 := _T
592 [-]: GETTABLE  R42 R42 K75  ; R42 := R42["gPendingMission"]
593 [-]: EQ        1 R42 K9     ; if R42 == nil then PC := 611
594 [-]: JMP       611          ; PC := 611
595 [-]: GETTABLE  R42 R40 K46  ; R42 := R40["radialSector"]
596 [-]: EQ        1 R42 K9     ; if R42 == nil then PC := 611
597 [-]: JMP       611          ; PC := 611
598 [-]: GETGLOBAL R42 K73      ; R42 := _T
599 [-]: GETTABLE  R42 R42 K75  ; R42 := R42["gPendingMission"]
600 [-]: GETTABLE  R42 R42 K76  ; R42 := R42["baseNodeName"]
601 [-]: GETTABLE  R43 R41 K77  ; R43 := R41["name"]
602 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 611
603 [-]: JMP       611          ; PC := 611
604 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
605 [-]: SELF      R42 R42 K33  ; R43 := R42; R42 := R42["0x445651FB"]
606 [-]: GETTABLE  R44 R40 K29  ; R44 := R40["memberIndex"]
607 [-]: LOADK     R45 K36      ; R45 := "_alpha"
608 [-]: GETUPVAL  R46 U15      ; R46 := U15
609 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
610 [-]: JMP       642          ; PC := 642
611 [-]: EQ        1 R7 K9      ; if R7 == nil then PC := 632
612 [-]: JMP       632          ; PC := 632
613 [-]: GETTABLE  R42 R40 K66  ; R42 := R40["isShortcut"]
614 [-]: TEST      R42 0        ; if not R42 then PC := 632
615 [-]: JMP       632          ; PC := 632
616 [-]: GETTABLE  R42 R41 K56  ; R42 := R41["region"]
617 [-]: EQ        0 R42 R7     ; if R42 ~= R7 then PC := 632
618 [-]: JMP       632          ; PC := 632
619 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
620 [-]: SELF      R42 R42 K33  ; R43 := R42; R42 := R42["0x445651FB"]
621 [-]: GETTABLE  R44 R40 K29  ; R44 := R40["memberIndex"]
622 [-]: LOADK     R45 K36      ; R45 := "_alpha"
623 [-]: GETGLOBAL R46 K21      ; R46 := 0x93034B55
624 [-]: GETUPVAL  R47 U15      ; R47 := U15
625 [-]: MOVE      R48 R22      ; R48 := R22
626 [-]: GETUPVAL  R49 U10      ; R49 := U10
627 [-]: SELF      R49 R49 K3   ; R50 := R49; R49 := R49["0xC4E503B0"]
628 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
629 [-]: CALL      R46 0 0      ; R46,... := R46(R47,...)
630 [-]: CALL      R42 0 1      ; R42(R43,...)
631 [-]: JMP       642          ; PC := 642
632 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
633 [-]: SELF      R42 R42 K33  ; R43 := R42; R42 := R42["0x445651FB"]
634 [-]: GETTABLE  R44 R40 K29  ; R44 := R40["memberIndex"]
635 [-]: LOADK     R45 K36      ; R45 := "_alpha"
636 [-]: GETUPVAL  R46 U7       ; R46 := U7
637 [-]: SELF      R46 R46 K3   ; R47 := R46; R46 := R46["0xC4E503B0"]
638 [-]: CALL      R46 2 2      ; R46 := R46(R47)
639 [-]: GETUPVAL  R47 U15      ; R47 := U15
640 [-]: MUL       R46 R46 R47  ; R46 := R46 * R47
641 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
642 [-]: GETTABLE  R42 R40 K66  ; R42 := R40["isShortcut"]
643 [-]: TEST      R42 0        ; if not R42 then PC := 651
644 [-]: JMP       651          ; PC := 651
645 [-]: GETGLOBAL R42 K25      ; R42 := mMovie
646 [-]: SELF      R42 R42 K33  ; R43 := R42; R42 := R42["0x445651FB"]
647 [-]: GETTABLE  R44 R40 K78  ; R44 := R40["labelIndex"]
648 [-]: LOADK     R45 K36      ; R45 := "_alpha"
649 [-]: GETUPVAL  R46 U15      ; R46 := U15
650 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
651 [-]: GETUPVAL  R42 U11      ; R42 := U11
652 [-]: GETUPVAL  R43 U12      ; R43 := U12
653 [-]: GETTABLE  R43 R43 K42  ; R43 := R43["EDIT_NODES"]
654 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 673
655 [-]: JMP       673          ; PC := 673
656 [-]: GETTABLE  R42 R40 K79  ; R42 := R40["deco"]
657 [-]: EQ        1 R42 K9     ; if R42 == nil then PC := 673
658 [-]: JMP       673          ; PC := 673
659 [-]: GETGLOBAL R42 K57      ; R42 := 0x400E7765
660 [-]: GETTABLE  R43 R40 K79  ; R43 := R40["deco"]
661 [-]: GETTABLE  R43 R43 K80  ; R43 := R43["mInstance"]
662 [-]: CALL      R42 2 2      ; R42 := R42(R43)
663 [-]: TEST      R42 1        ; if R42 then PC := 673
664 [-]: JMP       673          ; PC := 673
665 [-]: GETTABLE  R42 R40 K79  ; R42 := R40["deco"]
666 [-]: GETTABLE  R42 R42 K80  ; R42 := R42["mInstance"]
667 [-]: SELF      R42 R42 K81  ; R43 := R42; R42 := R42["0xEC183DDC"]
668 [-]: GETTABLE  R44 R40 K47  ; R44 := R40["position"]
669 [-]: GETTABLE  R45 R40 K79  ; R45 := R40["deco"]
670 [-]: GETTABLE  R45 R45 K82  ; R45 := R45["mOffset"]
671 [-]: ADD       R44 R44 R45  ; R44 := R44 + R45
672 [-]: CALL      R42 3 1      ; R42(R43,R44)
673 [-]: FORLOOP   R36 388      ; R36 += R38; if R36 <= R37 then begin PC := 388; R39 := R36 end
674 [-]: LOADNIL   R42 R45      ; R42 := R43 := R44 := R45 := nil
675 [-]: LOADK     R46 K11      ; R46 := 1
676 [-]: GETUPVAL  R47 U21      ; R47 := U21
677 [-]: LEN       R47 R47      ; R47 := # R47
678 [-]: LOADK     R48 K11      ; R48 := 1
679 [-]: FORPREP   R46 787      ; R46 -= R48; PC := 787
680 [-]: GETUPVAL  R50 U21      ; R50 := U21
681 [-]: GETTABLE  R42 R50 R49  ; R42 := R50[R49]
682 [-]: GETGLOBAL R50 K57      ; R50 := 0x400E7765
683 [-]: GETTABLE  R51 R42 K83  ; R51 := R42["Instance"]
684 [-]: CALL      R50 2 2      ; R50 := R50(R51)
685 [-]: TEST      R50 1        ; if R50 then PC := 787
686 [-]: JMP       787          ; PC := 787
687 [-]: GETTABLE  R50 R42 K84  ; R50 := R42["IsShortcut"]
688 [-]: TEST      R50 1        ; if R50 then PC := 693
689 [-]: JMP       693          ; PC := 693
690 [-]: GETTABLE  R50 R42 K85  ; R50 := R42["IsJunction"]
691 [-]: TEST      R50 0        ; if not R50 then PC := 745
692 [-]: JMP       745          ; PC := 745
693 [-]: GETTABLE  R50 R42 K84  ; R50 := R42["IsShortcut"]
694 [-]: TEST      R50 0        ; if not R50 then PC := 725
695 [-]: JMP       725          ; PC := 725
696 [-]: GETUPVAL  R50 U22      ; R50 := U22
697 [-]: GETTABLE  R51 R42 K86  ; R51 := R42["NodeA"]
698 [-]: GETTABLE  R51 R51 K47  ; R51 := R51["position"]
699 [-]: GETTABLE  R52 R42 K87  ; R52 := R42["controlPointA"]
700 [-]: GETTABLE  R52 R52 K47  ; R52 := R52["position"]
701 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
702 [-]: MOVE      R43 R50      ; R43 := R50
703 [-]: GETGLOBAL R50 K25      ; R50 := mMovie
704 [-]: SELF      R50 R50 K33  ; R51 := R50; R50 := R50["0x445651FB"]
705 [-]: GETTABLE  R52 R42 K86  ; R52 := R42["NodeA"]
706 [-]: GETTABLE  R52 R52 K72  ; R52 := R52["nodeIndex"]
707 [-]: LOADK     R53 K88      ; R53 := "_rotation"
708 [-]: MOVE      R54 R43      ; R54 := R43
709 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
710 [-]: GETUPVAL  R50 U22      ; R50 := U22
711 [-]: GETTABLE  R51 R42 K89  ; R51 := R42["NodeB"]
712 [-]: GETTABLE  R51 R51 K47  ; R51 := R51["position"]
713 [-]: GETTABLE  R52 R42 K90  ; R52 := R42["controlPointB"]
714 [-]: GETTABLE  R52 R52 K47  ; R52 := R52["position"]
715 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
716 [-]: MOVE      R43 R50      ; R43 := R50
717 [-]: GETGLOBAL R50 K25      ; R50 := mMovie
718 [-]: SELF      R50 R50 K33  ; R51 := R50; R50 := R50["0x445651FB"]
719 [-]: GETTABLE  R52 R42 K89  ; R52 := R42["NodeB"]
720 [-]: GETTABLE  R52 R52 K72  ; R52 := R52["nodeIndex"]
721 [-]: LOADK     R53 K88      ; R53 := "_rotation"
722 [-]: MOVE      R54 R43      ; R54 := R43
723 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
724 [-]: JMP       745          ; PC := 745
725 [-]: GETTABLE  R50 R42 K86  ; R50 := R42["NodeA"]
726 [-]: GETTABLE  R50 R50 K91  ; R50 := R50["isJunction"]
727 [-]: TEST      R50 0        ; if not R50 then PC := 732
728 [-]: JMP       732          ; PC := 732
729 [-]: GETTABLE  R44 R42 K86  ; R44 := R42["NodeA"]
730 [-]: GETTABLE  R45 R42 K89  ; R45 := R42["NodeB"]
731 [-]: JMP       734          ; PC := 734
732 [-]: GETTABLE  R44 R42 K89  ; R44 := R42["NodeB"]
733 [-]: GETTABLE  R45 R42 K86  ; R45 := R42["NodeA"]
734 [-]: GETUPVAL  R50 U22      ; R50 := U22
735 [-]: GETTABLE  R51 R44 K47  ; R51 := R44["position"]
736 [-]: GETTABLE  R52 R45 K47  ; R52 := R45["position"]
737 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
738 [-]: MOVE      R43 R50      ; R43 := R50
739 [-]: GETGLOBAL R50 K25      ; R50 := mMovie
740 [-]: SELF      R50 R50 K33  ; R51 := R50; R50 := R50["0x445651FB"]
741 [-]: GETTABLE  R52 R44 K72  ; R52 := R44["nodeIndex"]
742 [-]: LOADK     R53 K88      ; R53 := "_rotation"
743 [-]: MOVE      R54 R43      ; R54 := R43
744 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
745 [-]: GETTABLE  R50 R42 K84  ; R50 := R42["IsShortcut"]
746 [-]: TEST      R50 0        ; if not R50 then PC := 776
747 [-]: JMP       776          ; PC := 776
748 [-]: GETTABLE  R50 R42 K86  ; R50 := R42["NodeA"]
749 [-]: GETTABLE  R50 R50 K46  ; R50 := R50["radialSector"]
750 [-]: GETTABLE  R50 R50 K56  ; R50 := R50["region"]
751 [-]: EQ        1 R50 R7     ; if R50 == R7 then PC := 758
752 [-]: JMP       758          ; PC := 758
753 [-]: GETTABLE  R50 R42 K89  ; R50 := R42["NodeB"]
754 [-]: GETTABLE  R50 R50 K46  ; R50 := R50["radialSector"]
755 [-]: GETTABLE  R50 R50 K56  ; R50 := R50["region"]
756 [-]: EQ        0 R50 R7     ; if R50 ~= R7 then PC := 776
757 [-]: JMP       776          ; PC := 776
758 [-]: GETTABLE  R50 R42 K83  ; R50 := R42["Instance"]
759 [-]: SELF      R50 R50 K92  ; R51 := R50; R50 := R50["0xD124E361"]
760 [-]: GETUPVAL  R52 U23      ; R52 := U23
761 [-]: GETTABLE  R52 R52 K93  ; R52 := R52["ALPHA_ATTEN"]
762 [-]: GETGLOBAL R53 K21      ; R53 := 0x93034B55
763 [-]: GETUPVAL  R54 U15      ; R54 := U15
764 [-]: MOVE      R55 R22      ; R55 := R22
765 [-]: GETUPVAL  R56 U10      ; R56 := U10
766 [-]: SELF      R56 R56 K3   ; R57 := R56; R56 := R56["0xC4E503B0"]
767 [-]: CALL      R56 2 0      ; R56,... := R56(R57)
768 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
769 [-]: DIV       R53 R53 K14  ; R53 := R53 / 100
770 [-]: GETUPVAL  R54 U7       ; R54 := U7
771 [-]: SELF      R54 R54 K3   ; R55 := R54; R54 := R54["0xC4E503B0"]
772 [-]: CALL      R54 2 2      ; R54 := R54(R55)
773 [-]: MUL       R53 R53 R54  ; R53 := R53 * R54
774 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
775 [-]: JMP       787          ; PC := 787
776 [-]: GETTABLE  R50 R42 K83  ; R50 := R42["Instance"]
777 [-]: SELF      R50 R50 K92  ; R51 := R50; R50 := R50["0xD124E361"]
778 [-]: GETUPVAL  R52 U23      ; R52 := U23
779 [-]: GETTABLE  R52 R52 K93  ; R52 := R52["ALPHA_ATTEN"]
780 [-]: GETUPVAL  R53 U15      ; R53 := U15
781 [-]: DIV       R53 R53 K14  ; R53 := R53 / 100
782 [-]: GETUPVAL  R54 U7       ; R54 := U7
783 [-]: SELF      R54 R54 K3   ; R55 := R54; R54 := R54["0xC4E503B0"]
784 [-]: CALL      R54 2 2      ; R54 := R54(R55)
785 [-]: MUL       R53 R53 R54  ; R53 := R53 * R54
786 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
787 [-]: FORLOOP   R46 680      ; R46 += R48; if R46 <= R47 then begin PC := 680; R49 := R46 end
788 [-]: MOVE      R14 R2       ; R14 := R2
789 [-]: GETGLOBAL R50 K16      ; R50 := 0x6374FD98
790 [-]: MOVE      R51 R14      ; R51 := R14
791 [-]: GETUPVAL  R52 U13      ; R52 := U13
792 [-]: GETTABLE  R52 R52 K17  ; R52 := R52["LAYER_1_RANGE"]
793 [-]: GETTABLE  R52 R52 K18  ; R52 := R52["minValue"]
794 [-]: GETUPVAL  R53 U13      ; R53 := U13
795 [-]: GETTABLE  R53 R53 K17  ; R53 := R53["LAYER_1_RANGE"]
796 [-]: GETTABLE  R53 R53 K19  ; R53 := R53["maxValue"]
797 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
798 [-]: MOVE      R14 R50      ; R14 := R50
799 [-]: GETGLOBAL R50 K21      ; R50 := 0x93034B55
800 [-]: LOADK     R51 K94      ; R51 := 30
801 [-]: LOADK     R52 K30      ; R52 := 10
802 [-]: GETUPVAL  R53 U13      ; R53 := U13
803 [-]: GETTABLE  R53 R53 K17  ; R53 := R53["LAYER_1_RANGE"]
804 [-]: SELF      R53 R53 K20  ; R54 := R53; R53 := R53["0x3B43F25"]
805 [-]: MOVE      R55 R14      ; R55 := R14
806 [-]: CALL      R53 3 0      ; R53,... := R53(R54,R55)
807 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
808 [-]: LOADK     R51 K11      ; R51 := 1
809 [-]: GETUPVAL  R52 U24      ; R52 := U24
810 [-]: LEN       R52 R52      ; R52 := # R52
811 [-]: LOADK     R53 K11      ; R53 := 1
812 [-]: FORPREP   R51 830      ; R51 -= R53; PC := 830
813 [-]: MOVE      R13 R50      ; R13 := R50
814 [-]: GETGLOBAL R55 K57      ; R55 := 0x400E7765
815 [-]: GETUPVAL  R56 U24      ; R56 := U24
816 [-]: GETTABLE  R56 R56 R54  ; R56 := R56[R54]
817 [-]: CALL      R55 2 2      ; R55 := R55(R56)
818 [-]: TEST      R55 1        ; if R55 then PC := 830
819 [-]: JMP       830          ; PC := 830
820 [-]: GETUPVAL  R55 U24      ; R55 := U24
821 [-]: GETTABLE  R55 R55 R54  ; R55 := R55[R54]
822 [-]: SELF      R55 R55 K92  ; R56 := R55; R55 := R55["0xD124E361"]
823 [-]: GETGLOBAL R57 K95      ; R57 := Lotus_Game
824 [-]: GETTABLE  R57 R57 K96  ; R57 := R57["TINT_COLOR"]
825 [-]: LOADK     R58 K10      ; R58 := 0
826 [-]: LOADK     R59 K10      ; R59 := 0
827 [-]: LOADK     R60 K10      ; R60 := 0
828 [-]: DIV       R61 R13 K14  ; R61 := R13 / 100
829 [-]: CALL      R55 7 1      ; R55(R56,R57,R58,R59,R60,R61)
830 [-]: FORLOOP   R51 813      ; R51 += R53; if R51 <= R52 then begin PC := 813; R54 := R51 end
831 [-]: GETUPVAL  R55 U25      ; R55 := U25
832 [-]: GETTABLE  R55 R55 K97  ; R55 := R55["Active"]
833 [-]: TEST      R55 0        ; if not R55 then PC := 873
834 [-]: JMP       873          ; PC := 873
835 [-]: GETGLOBAL R55 K25      ; R55 := mMovie
836 [-]: SELF      R55 R55 K26  ; R56 := R55; R55 := R55["0x3688C0F4"]
837 [-]: MOVE      R57 R15      ; R57 := R15
838 [-]: GETUPVAL  R58 U25      ; R58 := U25
839 [-]: GETTABLE  R58 R58 K98  ; R58 := R58["Position"]
840 [-]: MOVE      R59 R1       ; R59 := R1
841 [-]: GETUPVAL  R60 U19      ; R60 := U19
842 [-]: CALL      R55 6 1      ; R55(R56,R57,R58,R59,R60)
843 [-]: GETGLOBAL R55 K21      ; R55 := 0x93034B55
844 [-]: LOADK     R56 K99      ; R56 := 60
845 [-]: LOADK     R57 K14      ; R57 := 100
846 [-]: MOVE      R58 R30      ; R58 := R30
847 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
848 [-]: MOVE      R31 R55      ; R31 := R55
849 [-]: GETGLOBAL R55 K25      ; R55 := mMovie
850 [-]: SELF      R55 R55 K38  ; R56 := R55; R55 := R55["0x1C19D966"]
851 [-]: LOADK     R57 K100     ; R57 := "VoidTrader"
852 [-]: LOADK     R58 K101     ; R58 := "_x"
853 [-]: GETTABLE  R59 R15 K2   ; R59 := R15["x"]
854 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
855 [-]: GETGLOBAL R55 K25      ; R55 := mMovie
856 [-]: SELF      R55 R55 K38  ; R56 := R55; R55 := R55["0x1C19D966"]
857 [-]: LOADK     R57 K100     ; R57 := "VoidTrader"
858 [-]: LOADK     R58 K102     ; R58 := "_y"
859 [-]: GETTABLE  R59 R15 K4   ; R59 := R15["y"]
860 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
861 [-]: GETGLOBAL R55 K25      ; R55 := mMovie
862 [-]: SELF      R55 R55 K38  ; R56 := R55; R55 := R55["0x1C19D966"]
863 [-]: LOADK     R57 K100     ; R57 := "VoidTrader"
864 [-]: LOADK     R58 K34      ; R58 := "_xscale"
865 [-]: MOVE      R59 R31      ; R59 := R31
866 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
867 [-]: GETGLOBAL R55 K25      ; R55 := mMovie
868 [-]: SELF      R55 R55 K38  ; R56 := R55; R55 := R55["0x1C19D966"]
869 [-]: LOADK     R57 K100     ; R57 := "VoidTrader"
870 [-]: LOADK     R58 K35      ; R58 := "_yscale"
871 [-]: MOVE      R59 R31      ; R59 := R31
872 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
873 [-]: GETUPVAL  R55 U26      ; R55 := U26
874 [-]: CALL      R55 1 1      ; R55()
875 [-]: GETUPVAL  R55 U27      ; R55 := U27
876 [-]: CALL      R55 1 1      ; R55()
877 [-]: GETUPVAL  R55 U25      ; R55 := U25
878 [-]: GETTABLE  R55 R55 K97  ; R55 := R55["Active"]
879 [-]: TEST      R55 0        ; if not R55 then PC := 901
880 [-]: JMP       901          ; PC := 901
881 [-]: GETGLOBAL R55 K103     ; R55 := 0x41AF6EE8
882 [-]: CALL      R55 1 2      ; R55 := R55()
883 [-]: GETUPVAL  R56 U25      ; R56 := U25
884 [-]: GETTABLE  R56 R56 K105 ; R56 := R56["Expiry"]
885 [-]: SETTABLE  R55 K104 R56 ; R55["sec"] := R56
886 [-]: GETGLOBAL R56 K106     ; R56 := Engine
887 [-]: GETTABLE  R56 R56 K107 ; R56 := R56["0xD09D7910"]
888 [-]: MOVE      R57 R55      ; R57 := R55
889 [-]: CALL      R56 2 2      ; R56 := R56(R57)
890 [-]: LE        0 R56 K10    ; if R56 > 0 then PC := 901
891 [-]: JMP       901          ; PC := 901
892 [-]: GETUPVAL  R57 U25      ; R57 := U25
893 [-]: SETTABLE  R57 K97 K108 ; R57["Active"] := "0x0"
894 [-]: GETGLOBAL R57 K25      ; R57 := mMovie
895 [-]: SELF      R57 R57 K38  ; R58 := R57; R57 := R57["0x1C19D966"]
896 [-]: LOADK     R59 K100     ; R59 := "VoidTrader"
897 [-]: LOADK     R60 K109     ; R60 := "_visible"
898 [-]: GETUPVAL  R61 U25      ; R61 := U25
899 [-]: GETTABLE  R61 R61 K97  ; R61 := R61["Active"]
900 [-]: CALL      R57 5 1      ; R57(R58,R59,R60,R61)
901 [-]: GETGLOBAL R57 K57      ; R57 := 0x400E7765
902 [-]: GETUPVAL  R58 U28      ; R58 := U28
903 [-]: GETTABLE  R58 R58 K8   ; R58 := R58["Region"]
904 [-]: CALL      R57 2 2      ; R57 := R57(R58)
905 [-]: TEST      R57 1        ; if R57 then PC := 1116
906 [-]: JMP       1116         ; PC := 1116
907 [-]: GETGLOBAL R57 K16      ; R57 := 0x6374FD98
908 [-]: MOVE      R58 R2       ; R58 := R2
909 [-]: GETUPVAL  R59 U13      ; R59 := U13
910 [-]: GETTABLE  R59 R59 K37  ; R59 := R59["LAYER_2_RANGE"]
911 [-]: GETTABLE  R59 R59 K18  ; R59 := R59["minValue"]
912 [-]: GETUPVAL  R60 U13      ; R60 := U13
913 [-]: GETTABLE  R60 R60 K37  ; R60 := R60["LAYER_2_RANGE"]
914 [-]: GETTABLE  R60 R60 K19  ; R60 := R60["maxValue"]
915 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
916 [-]: MOVE      R2 R57       ; R2 := R57
917 [-]: GETUPVAL  R57 U13      ; R57 := U13
918 [-]: GETTABLE  R57 R57 K37  ; R57 := R57["LAYER_2_RANGE"]
919 [-]: SELF      R57 R57 K20  ; R58 := R57; R57 := R57["0x3B43F25"]
920 [-]: MOVE      R59 R2       ; R59 := R2
921 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
922 [-]: LOADNIL   R58 R59      ; R58 := R59 := nil
923 [-]: GETGLOBAL R60 K110     ; R60 := 0xECFDD17
924 [-]: GETUPVAL  R61 U28      ; R61 := U28
925 [-]: GETTABLE  R61 R61 K39  ; R61 := R61["Nodes"]
926 [-]: CALL      R60 2 4      ; R60,R61,R62 := R60(R61)
927 [-]: JMP       1092         ; PC := 1092
928 [-]: GETTABLE  R65 R64 K46  ; R65 := R64["radialSector"]
929 [-]: GETTABLE  R66 R64 K47  ; R66 := R64["position"]
930 [-]: GETGLOBAL R67 K25      ; R67 := mMovie
931 [-]: SELF      R67 R67 K26  ; R68 := R67; R67 := R67["0x3688C0F4"]
932 [-]: MOVE      R69 R15      ; R69 := R15
933 [-]: MOVE      R70 R66      ; R70 := R66
934 [-]: MOVE      R71 R1       ; R71 := R1
935 [-]: GETUPVAL  R72 U19      ; R72 := U19
936 [-]: CALL      R67 6 1      ; R67(R68,R69,R70,R71,R72)
937 [-]: GETGLOBAL R67 K25      ; R67 := mMovie
938 [-]: SELF      R67 R67 K28  ; R68 := R67; R67 := R67["0x4717530F"]
939 [-]: GETTABLE  R69 R64 K29  ; R69 := R64["memberIndex"]
940 [-]: GETTABLE  R70 R15 K2   ; R70 := R15["x"]
941 [-]: GETTABLE  R71 R15 K4   ; R71 := R15["y"]
942 [-]: CALL      R67 5 1      ; R67(R68,R69,R70,R71)
943 [-]: GETGLOBAL R67 K21      ; R67 := 0x93034B55
944 [-]: LOADK     R68 K48      ; R68 := 20
945 [-]: LOADK     R69 K24      ; R69 := 50
946 [-]: MOVE      R70 R57      ; R70 := R57
947 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
948 [-]: GETTABLE  R68 R64 K49  ; R68 := R64["isSurfaceNode"]
949 [-]: TEST      R68 0        ; if not R68 then PC := 1061
950 [-]: JMP       1061         ; PC := 1061
951 [-]: LOADK     R58 K14      ; R58 := 100
952 [-]: GETTABLE  R59 R66 K50  ; R59 := R66["z"]
953 [-]: MUL       R59 R59 K30  ; R59 := R59 * 10
954 [-]: LE        0 K10 R59    ; if 0 > R59 then PC := 971
955 [-]: JMP       971          ; PC := 971
956 [-]: GETGLOBAL R68 K21      ; R68 := 0x93034B55
957 [-]: LOADK     R69 K51      ; R69 := 75
958 [-]: LOADK     R70 K24      ; R70 := 50
959 [-]: GETGLOBAL R71 K16      ; R71 := 0x6374FD98
960 [-]: GETGLOBAL R72 K52      ; R72 := math
961 [-]: GETTABLE  R72 R72 K53  ; R72 := R72["0xD6F2D811"]
962 [-]: MOVE      R73 R59      ; R73 := R59
963 [-]: LOADK     R74 K54      ; R74 := 3
964 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
965 [-]: LOADK     R73 K10      ; R73 := 0
966 [-]: LOADK     R74 K11      ; R74 := 1
967 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
968 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
969 [-]: MOVE      R58 R68      ; R58 := R68
970 [-]: JMP       988          ; PC := 988
971 [-]: GETGLOBAL R68 K21      ; R68 := 0x93034B55
972 [-]: LOADK     R69 K51      ; R69 := 75
973 [-]: LOADK     R70 K14      ; R70 := 100
974 [-]: GETGLOBAL R71 K16      ; R71 := 0x6374FD98
975 [-]: GETGLOBAL R72 K52      ; R72 := math
976 [-]: GETTABLE  R72 R72 K53  ; R72 := R72["0xD6F2D811"]
977 [-]: GETGLOBAL R73 K52      ; R73 := math
978 [-]: GETTABLE  R73 R73 K55  ; R73 := R73["0xF93F7CC8"]
979 [-]: MOVE      R74 R59      ; R74 := R59
980 [-]: CALL      R73 2 2      ; R73 := R73(R74)
981 [-]: LOADK     R74 K54      ; R74 := 3
982 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
983 [-]: LOADK     R73 K10      ; R73 := 0
984 [-]: LOADK     R74 K11      ; R74 := 1
985 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
986 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
987 [-]: MOVE      R58 R68      ; R58 := R68
988 [-]: GETUPVAL  R68 U20      ; R68 := U20
989 [-]: GETTABLE  R69 R65 K56  ; R69 := R65["region"]
990 [-]: ADD       R69 R69 K11  ; R69 := R69 + 1
991 [-]: GETTABLE  R68 R68 R69  ; R68 := R68[R69]
992 [-]: GETGLOBAL R69 K57      ; R69 := 0x400E7765
993 [-]: MOVE      R70 R68      ; R70 := R68
994 [-]: CALL      R69 2 2      ; R69 := R69(R70)
995 [-]: TEST      R69 1        ; if R69 then PC := 1021
996 [-]: JMP       1021         ; PC := 1021
997 [-]: SELF      R69 R68 K58  ; R70 := R68; R69 := R68["0x8EEB099D"]
998 [-]: MOVE      R71 R16      ; R71 := R16
999 [-]: CALL      R69 3 1      ; R69(R70,R71)
1000 [-]: GETGLOBAL R69 K59      ; R69 := 0x518098BD
1001 [-]: MOVE      R70 R18      ; R70 := R18
1002 [-]: MOVE      R71 R66      ; R71 := R66
1003 [-]: MOVE      R72 R16      ; R72 := R16
1004 [-]: CALL      R69 4 1      ; R69(R70,R71,R72)
1005 [-]: GETGLOBAL R69 K60      ; R69 := 0x20F748B4
1006 [-]: MOVE      R70 R17      ; R70 := R17
1007 [-]: MOVE      R71 R1       ; R71 := R1
1008 [-]: MOVE      R72 R18      ; R72 := R18
1009 [-]: CALL      R69 4 1      ; R69(R70,R71,R72)
1010 [-]: GETTABLE  R69 R17 K61  ; R69 := R17["heading"]
1011 [-]: UNM       R69 R69      ; R69 := - R69
1012 [-]: SETTABLE  R17 K61 R69  ; R17["heading"] := R69
1013 [-]: GETGLOBAL R69 K16      ; R69 := 0x6374FD98
1014 [-]: GETTABLE  R70 R17 K62  ; R70 := R17["pitch"]
1015 [-]: MUL       R70 R70 K63  ; R70 := R70 * 0.75
1016 [-]: LOADK     R71 K64      ; R71 := -75
1017 [-]: LOADK     R72 K51      ; R72 := 75
1018 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
1019 [-]: SETTABLE  R17 K62 R69  ; R17["pitch"] := R69
1020 [-]: JMP       1025         ; PC := 1025
1021 [-]: NEWTABLE  R69 0 2      ; R69 := {}
1022 [-]: SETTABLE  R69 K61 K10  ; R69["heading"] := 0
1023 [-]: SETTABLE  R69 K62 K10  ; R69["pitch"] := 0
1024 [-]: MOVE      R17 R69      ; R17 := R69
1025 [-]: GETTABLE  R69 R64 K65  ; R69 := R64["visibleLabel"]
1026 [-]: TEST      R69 1        ; if R69 then PC := 1046
1027 [-]: JMP       1046         ; PC := 1046
1028 [-]: GETTABLE  R69 R64 K66  ; R69 := R64["isShortcut"]
1029 [-]: TEST      R69 1        ; if R69 then PC := 1046
1030 [-]: JMP       1046         ; PC := 1046
1031 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1032 [-]: SELF      R69 R69 K67  ; R70 := R69; R69 := R69["0x880196A7"]
1033 [-]: GETTABLE  R71 R64 K68  ; R71 := R64["clipName"]
1034 [-]: LOADK     R72 K69      ; R72 := "Node.Container"
1035 [-]: LOADK     R73 K70      ; R73 := "_heading"
1036 [-]: GETTABLE  R74 R17 K61  ; R74 := R17["heading"]
1037 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1038 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1039 [-]: SELF      R69 R69 K67  ; R70 := R69; R69 := R69["0x880196A7"]
1040 [-]: GETTABLE  R71 R64 K68  ; R71 := R64["clipName"]
1041 [-]: LOADK     R72 K69      ; R72 := "Node.Container"
1042 [-]: LOADK     R73 K71      ; R73 := "_pitch"
1043 [-]: GETTABLE  R74 R17 K62  ; R74 := R17["pitch"]
1044 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1045 [-]: JMP       1080         ; PC := 1080
1046 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1047 [-]: SELF      R69 R69 K67  ; R70 := R69; R69 := R69["0x880196A7"]
1048 [-]: GETTABLE  R71 R64 K68  ; R71 := R64["clipName"]
1049 [-]: LOADK     R72 K69      ; R72 := "Node.Container"
1050 [-]: LOADK     R73 K70      ; R73 := "_heading"
1051 [-]: GETTABLE  R74 R17 K61  ; R74 := R17["heading"]
1052 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1053 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1054 [-]: SELF      R69 R69 K67  ; R70 := R69; R69 := R69["0x880196A7"]
1055 [-]: GETTABLE  R71 R64 K68  ; R71 := R64["clipName"]
1056 [-]: LOADK     R72 K69      ; R72 := "Node.Container"
1057 [-]: LOADK     R73 K71      ; R73 := "_pitch"
1058 [-]: GETTABLE  R74 R17 K62  ; R74 := R17["pitch"]
1059 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1060 [-]: JMP       1080         ; PC := 1080
1061 [-]: GETUPVAL  R69 U11      ; R69 := U11
1062 [-]: GETUPVAL  R70 U12      ; R70 := U12
1063 [-]: GETTABLE  R70 R70 K12  ; R70 := R70["READ_ONLY"]
1064 [-]: EQ        1 R69 R70    ; if R69 == R70 then PC := 1080
1065 [-]: JMP       1080         ; PC := 1080
1066 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1067 [-]: SELF      R69 R69 K67  ; R70 := R69; R69 := R69["0x880196A7"]
1068 [-]: GETTABLE  R71 R64 K68  ; R71 := R64["clipName"]
1069 [-]: LOADK     R72 K69      ; R72 := "Node.Container"
1070 [-]: LOADK     R73 K70      ; R73 := "_heading"
1071 [-]: LOADK     R74 K10      ; R74 := 0
1072 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1073 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1074 [-]: SELF      R69 R69 K67  ; R70 := R69; R69 := R69["0x880196A7"]
1075 [-]: GETTABLE  R71 R64 K68  ; R71 := R64["clipName"]
1076 [-]: LOADK     R72 K69      ; R72 := "Node.Container"
1077 [-]: LOADK     R73 K71      ; R73 := "_pitch"
1078 [-]: LOADK     R74 K10      ; R74 := 0
1079 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1080 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1081 [-]: SELF      R69 R69 K33  ; R70 := R69; R69 := R69["0x445651FB"]
1082 [-]: GETTABLE  R71 R64 K72  ; R71 := R64["nodeIndex"]
1083 [-]: LOADK     R72 K34      ; R72 := "_xscale"
1084 [-]: MOVE      R73 R67      ; R73 := R67
1085 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1086 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1087 [-]: SELF      R69 R69 K33  ; R70 := R69; R69 := R69["0x445651FB"]
1088 [-]: GETTABLE  R71 R64 K72  ; R71 := R64["nodeIndex"]
1089 [-]: LOADK     R72 K35      ; R72 := "_yscale"
1090 [-]: MOVE      R73 R67      ; R73 := R67
1091 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1092 [-]: TFORLOOP  R60 2        ; R63,R64 :=  R60(R61,R62); if R63 ~= nil then begin PC = 928; R62 := R63 end
1093 [-]: JMP       928          ; PC := 928
1094 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1095 [-]: SELF      R69 R69 K26  ; R70 := R69; R69 := R69["0x3688C0F4"]
1096 [-]: MOVE      R71 R15      ; R71 := R15
1097 [-]: GETUPVAL  R72 U14      ; R72 := U14
1098 [-]: GETUPVAL  R73 U28      ; R73 := U28
1099 [-]: GETTABLE  R73 R73 K111 ; R73 := R73["SubLabelIndex"]
1100 [-]: GETTABLE  R72 R72 R73  ; R72 := R72[R73]
1101 [-]: GETTABLE  R72 R72 K27  ; R72 := R72["pos"]
1102 [-]: MOVE      R73 R1       ; R73 := R1
1103 [-]: MOVE      R74 R0       ; R74 := R0
1104 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1105 [-]: GETGLOBAL R69 K25      ; R69 := mMovie
1106 [-]: SELF      R69 R69 K28  ; R70 := R69; R69 := R69["0x4717530F"]
1107 [-]: GETUPVAL  R71 U14      ; R71 := U14
1108 [-]: GETUPVAL  R72 U28      ; R72 := U28
1109 [-]: GETTABLE  R72 R72 K111 ; R72 := R72["SubLabelIndex"]
1110 [-]: GETTABLE  R71 R71 R72  ; R71 := R71[R72]
1111 [-]: GETTABLE  R71 R71 K29  ; R71 := R71["memberIndex"]
1112 [-]: GETTABLE  R72 R15 K2   ; R72 := R15["x"]
1113 [-]: GETTABLE  R73 R15 K4   ; R73 := R15["y"]
1114 [-]: SUB       R73 R73 K30  ; R73 := R73 - 10
1115 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1116 [-]: GETUPVAL  R69 U5       ; R69 := U5
1117 [-]: GETTABLE  R69 R69 K6   ; R69 := R69["Node"]
1118 [-]: EQ        1 R69 K9     ; if R69 == nil then PC := 1208
1119 [-]: JMP       1208         ; PC := 1208
1120 [-]: GETUPVAL  R69 U5       ; R69 := U5
1121 [-]: GETTABLE  R69 R69 K6   ; R69 := R69["Node"]
1122 [-]: GETTABLE  R69 R69 K66  ; R69 := R69["isShortcut"]
1123 [-]: TEST      R69 1        ; if R69 then PC := 1208
1124 [-]: JMP       1208         ; PC := 1208
1125 [-]: GETUPVAL  R69 U5       ; R69 := U5
1126 [-]: GETTABLE  R69 R69 K6   ; R69 := R69["Node"]
1127 [-]: GETTABLE  R69 R69 K91  ; R69 := R69["isJunction"]
1128 [-]: TEST      R69 1        ; if R69 then PC := 1208
1129 [-]: JMP       1208         ; PC := 1208
1130 [-]: GETUPVAL  R69 U29      ; R69 := U29
1131 [-]: GETTABLE  R69 R69 K112 ; R69 := R69["0x69B983D"]
1132 [-]: GETGLOBAL R70 K25      ; R70 := mMovie
1133 [-]: GETUPVAL  R71 U5       ; R71 := U5
1134 [-]: GETTABLE  R71 R71 K6   ; R71 := R71["Node"]
1135 [-]: GETTABLE  R71 R71 K68  ; R71 := R71["clipName"]
1136 [-]: CALL      R69 3 3      ; R69,R70 := R69(R70,R71)
1137 [-]: LOADK     R71 K10      ; R71 := 0
1138 [-]: LOADNIL   R72 R72      ; R72 := nil
1139 [-]: GETGLOBAL R73 K25      ; R73 := mMovie
1140 [-]: SELF      R73 R73 K113 ; R74 := R73; R73 := R73["0xF3E132E0"]
1141 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1142 [-]: DIV       R73 R73 K32  ; R73 := R73 / 2
1143 [-]: LT        0 R73 R69    ; if R73 >= R69 then PC := 1148
1144 [-]: JMP       1148         ; PC := 1148
1145 [-]: SUB       R69 R69 K114 ; R69 := R69 - 380
1146 [-]: LOADK     R71 K115     ; R71 := -20
1147 [-]: JMP       1150         ; PC := 1150
1148 [-]: ADD       R69 R69 K94  ; R69 := R69 + 30
1149 [-]: LOADK     R71 K48      ; R71 := 20
1150 [-]: GETGLOBAL R73 K25      ; R73 := mMovie
1151 [-]: SELF      R73 R73 K116 ; R74 := R73; R73 := R73["0x68998E7D"]
1152 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1153 [-]: DIV       R73 R73 K32  ; R73 := R73 / 2
1154 [-]: LT        0 R73 R70    ; if R73 >= R70 then PC := 1159
1155 [-]: JMP       1159         ; PC := 1159
1156 [-]: SUB       R70 R70 K117 ; R70 := R70 - 300
1157 [-]: LOADK     R72 K115     ; R72 := -20
1158 [-]: JMP       1161         ; PC := 1161
1159 [-]: SUB       R70 R70 K30  ; R70 := R70 - 10
1160 [-]: LOADK     R72 K48      ; R72 := 20
1161 [-]: GETGLOBAL R73 K25      ; R73 := mMovie
1162 [-]: SELF      R73 R73 K38  ; R74 := R73; R73 := R73["0x1C19D966"]
1163 [-]: LOADK     R75 K118     ; R75 := "InfoTip"
1164 [-]: LOADK     R76 K101     ; R76 := "_x"
1165 [-]: MOVE      R77 R69      ; R77 := R69
1166 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
1167 [-]: GETGLOBAL R73 K25      ; R73 := mMovie
1168 [-]: SELF      R73 R73 K38  ; R74 := R73; R73 := R73["0x1C19D966"]
1169 [-]: LOADK     R75 K118     ; R75 := "InfoTip"
1170 [-]: LOADK     R76 K102     ; R76 := "_y"
1171 [-]: MOVE      R77 R70      ; R77 := R70
1172 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
1173 [-]: GETGLOBAL R73 K25      ; R73 := mMovie
1174 [-]: SELF      R73 R73 K33  ; R74 := R73; R73 := R73["0x445651FB"]
1175 [-]: GETUPVAL  R75 U5       ; R75 := U5
1176 [-]: GETTABLE  R75 R75 K6   ; R75 := R75["Node"]
1177 [-]: GETTABLE  R75 R75 K78  ; R75 := R75["labelIndex"]
1178 [-]: LOADK     R76 K36      ; R76 := "_alpha"
1179 [-]: LOADK     R77 K14      ; R77 := 100
1180 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
1181 [-]: GETUPVAL  R73 U30      ; R73 := U30
1182 [-]: CALL      R73 1 1      ; R73()
1183 [-]: GETGLOBAL R73 K57      ; R73 := 0x400E7765
1184 [-]: GETUPVAL  R74 U31      ; R74 := U31
1185 [-]: GETTABLE  R74 R74 K119 ; R74 := R74["Projector"]
1186 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1187 [-]: TEST      R73 0        ; if not R73 then PC := 1208
1188 [-]: JMP       1208         ; PC := 1208
1189 [-]: GETUPVAL  R73 U31      ; R73 := U31
1190 [-]: GETGLOBAL R74 K120     ; R74 := gBackgroundRegion
1191 [-]: SELF      R74 R74 K121 ; R75 := R74; R74 := R74["0xBDD34CC6"]
1192 [-]: GETGLOBAL R76 K122     ; R76 := projectorEffect
1193 [-]: GETUPVAL  R77 U5       ; R77 := U5
1194 [-]: GETTABLE  R77 R77 K6   ; R77 := R77["Node"]
1195 [-]: GETTABLE  R77 R77 K47  ; R77 := R77["position"]
1196 [-]: GETGLOBAL R78 K13      ; R78 := 0x1E4F6281
1197 [-]: MOVE      R79 R71      ; R79 := R71
1198 [-]: MOVE      R80 R72      ; R80 := R72
1199 [-]: LOADK     R81 K10      ; R81 := 0
1200 [-]: CALL      R78 4 0      ; R78,... := R78(R79,R80,R81)
1201 [-]: CALL      R74 0 2      ; R74 := R74(R75,...)
1202 [-]: SETTABLE  R73 K119 R74 ; R73["Projector"] := R74
1203 [-]: GETUPVAL  R73 U31      ; R73 := U31
1204 [-]: GETTABLE  R73 R73 K119 ; R73 := R73["Projector"]
1205 [-]: SELF      R73 R73 K123 ; R74 := R73; R73 := R73["0x6A7E5F92"]
1206 [-]: LOADK     R75 K124     ; R75 := 0.125
1207 [-]: CALL      R73 3 1      ; R73(R74,R75)
1208 [-]: GETUPVAL  R73 U31      ; R73 := U31
1209 [-]: GETTABLE  R73 R73 K125 ; R73 := R73["Playing"]
1210 [-]: TEST      R73 0        ; if not R73 then PC := 1218
1211 [-]: JMP       1218         ; PC := 1218
1212 [-]: GETUPVAL  R73 U5       ; R73 := U5
1213 [-]: GETTABLE  R73 R73 K6   ; R73 := R73["Node"]
1214 [-]: EQ        0 R73 K9     ; if R73 ~= nil then PC := 1218
1215 [-]: JMP       1218         ; PC := 1218
1216 [-]: GETUPVAL  R73 U32      ; R73 := U32
1217 [-]: CALL      R73 1 1      ; R73()
1218 [-]: GETUPVAL  R73 U33      ; R73 := U33
1219 [-]: CALL      R73 1 1      ; R73()
1220 [-]: GETUPVAL  R73 U34      ; R73 := U34
1221 [-]: GETGLOBAL R74 K73      ; R74 := _T
1222 [-]: GETTABLE  R74 R74 K126 ; R74 := R74["REGION_ID_FORTRESS"]
1223 [-]: GETTABLE  R73 R73 R74  ; R73 := R73[R74]
1224 [-]: EQ        1 R73 K127   ; if R73 == "0x1" then PC := 1228
1225 [-]: JMP       1228         ; PC := 1228
1226 [-]: GETUPVAL  R73 U35      ; R73 := U35
1227 [-]: CALL      R73 1 1      ; R73()
1228 [-]: GETUPVAL  R73 U36      ; R73 := U36
1229 [-]: GETTABLE  R73 R73 K128 ; R73 := R73["Prop"]
1230 [-]: SELF      R73 R73 K3   ; R74 := R73; R73 := R73["0xC4E503B0"]
1231 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1232 [-]: GETUPVAL  R74 U36      ; R74 := U36
1233 [-]: GETTABLE  R74 R74 K128 ; R74 := R74["Prop"]
1234 [-]: SELF      R74 R74 K129 ; R75 := R74; R74 := R74["0x8C7099E9"]
1235 [-]: GETGLOBAL R76 K130     ; R76 := 0x4CDEF9FF
1236 [-]: CALL      R76 1 0      ; R76,... := R76()
1237 [-]: CALL      R74 0 1      ; R74(R75,...)
1238 [-]: GETGLOBAL R74 K52      ; R74 := math
1239 [-]: GETTABLE  R74 R74 K55  ; R74 := R74["0xF93F7CC8"]
1240 [-]: GETUPVAL  R75 U36      ; R75 := U36
1241 [-]: GETTABLE  R75 R75 K128 ; R75 := R75["Prop"]
1242 [-]: GETTABLE  R75 R75 K131 ; R75 := R75["mTargetVal"]
1243 [-]: SUB       R75 R73 R75  ; R75 := R73 - R75
1244 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1245 [-]: LT        1 K132 R74   ; if 0.0099999997764826 < R74 then PC := 1248
1246 [-]: JMP       1248         ; PC := 1248
1247 [-]: MOVE      R74 R0       ; R74 := R0
1248 [-]: MOVE      R74 R1       ; R74 := R1
1249 [-]: TEST      R74 0        ; if not R74 then PC := 1273
1250 [-]: JMP       1273         ; PC := 1273
1251 [-]: GETGLOBAL R75 K57      ; R75 := 0x400E7765
1252 [-]: GETUPVAL  R76 U37      ; R76 := U37
1253 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1254 [-]: TEST      R75 1        ; if R75 then PC := 1273
1255 [-]: JMP       1273         ; PC := 1273
1256 [-]: GETUPVAL  R75 U38      ; R75 := U38
1257 [-]: GETTABLE  R75 R75 K133 ; R75 := R75["TransitioningOut"]
1258 [-]: TEST      R75 1        ; if R75 then PC := 1273
1259 [-]: JMP       1273         ; PC := 1273
1260 [-]: GETUPVAL  R75 U37      ; R75 := U37
1261 [-]: SELF      R75 R75 K81  ; R76 := R75; R75 := R75["0xEC183DDC"]
1262 [-]: GETGLOBAL R77 K134     ; R77 := 0xE0C881B4
1263 [-]: GETUPVAL  R78 U36      ; R78 := U36
1264 [-]: GETTABLE  R78 R78 K135 ; R78 := R78["Previous"]
1265 [-]: GETUPVAL  R79 U36      ; R79 := U36
1266 [-]: GETTABLE  R79 R79 K136 ; R79 := R79["Target"]
1267 [-]: GETUPVAL  R80 U36      ; R80 := U36
1268 [-]: GETTABLE  R80 R80 K128 ; R80 := R80["Prop"]
1269 [-]: SELF      R80 R80 K3   ; R81 := R80; R80 := R80["0xC4E503B0"]
1270 [-]: CALL      R80 2 0      ; R80,... := R80(R81)
1271 [-]: CALL      R77 0 0      ; R77,... := R77(R78,...)
1272 [-]: CALL      R75 0 1      ; R75(R76,...)
1273 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 5388
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 33
  3 [-]: JMP       33           ; PC := 33
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mControlDown"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 33
  7 [-]: JMP       33           ; PC := 33
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 11 [-]: TEST      R0 0         ; if not R0 then PC := 33
 12 [-]: JMP       33           ; PC := 33
 13 [-]: GETUPVAL  R0 U3        ; R0 := U3
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0xB09F286F
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: GETUPVAL  R3 U4        ; R3 := U4
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: LT        0 K2 R1      ; if 0.10000000149012 >= R1 then PC := 33
 20 [-]: JMP       33           ; PC := 33
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 24 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xD856231D"]
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R1 3 1       ; R1(R2,R3)
 27 [-]: GETUPVAL  R1 U2        ; R1 := U2
 28 [-]: GETUPVAL  R2 U0        ; R2 := U0
 29 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 30 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1E436B2A"]
 31 [-]: CALL      R1 2 1       ; R1(R2)
 32 [-]: MOVE      R0 R4        ; R0 := R4
 33 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 5400
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 R0     ; R1["IsVisible"] := R0
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
  5 [-]: LOADK     R3 K3        ; R3 := "Reticle"
  6 [-]: LOADK     R4 K4        ; R4 := "_visible"
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: LEN       R1 R1        ; R1 := # R1
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0xF81722A2"]
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: LOADK     R4 K6        ; R4 := 48
 15 [-]: LOADK     R5 K7        ; R5 := 32
 16 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 17 [-]: LOADK     R3 K8        ; R3 := 1
 18 [-]: MOVE      R4 R1        ; R4 := R1
 19 [-]: LOADK     R5 K8        ; R5 := 1
 20 [-]: FORPREP   R3 48        ; R3 -= R5; PC := 48
 21 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 22 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 23 [-]: GETUPVAL  R9 U1        ; R9 := U1
 24 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 25 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 26 [-]: LOADK     R10 K11      ; R10 := "Btn"
 27 [-]: LOADK     R11 K12      ; R11 := "_width"
 28 [-]: MOVE      R12 R2       ; R12 := R2
 29 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 30 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 31 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 32 [-]: GETUPVAL  R9 U1        ; R9 := U1
 33 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 34 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 35 [-]: LOADK     R10 K11      ; R10 := "Btn"
 36 [-]: LOADK     R11 K13      ; R11 := "_height"
 37 [-]: MOVE      R12 R2       ; R12 := R2
 38 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 39 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 40 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 41 [-]: GETUPVAL  R9 U1        ; R9 := U1
 42 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 43 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 44 [-]: LOADK     R10 K14      ; R10 := "Name"
 45 [-]: LOADK     R11 K15      ; R11 := "enabled"
 46 [-]: MOVE      R12 R0       ; R12 := R0
 47 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 48 [-]: FORLOOP   R3 21        ; R3 += R5; if R3 <= R4 then begin PC := 21; R6 := R3 end
 49 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 5412
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 40
  5 [-]: JMP       40           ; PC := 40
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["pos"]
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["x"]
 12 [-]: LT        1 R2 K4      ; if R2 < 0 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: GETGLOBAL R3 K5        ; R3 := _T
 17 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["radialSector"]
 18 [-]: SETTABLE  R3 K6 R4     ; R3["JunctionTasksUIRadialSector"] := R4
 19 [-]: GETGLOBAL R3 K5        ; R3 := _T
 20 [-]: SETTABLE  R3 K8 R1     ; R3["JunctionTasksInstant"] := R1
 21 [-]: GETGLOBAL R3 K9        ; R3 := gFlashMgr
 22 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x24FF386"]
 23 [-]: GETGLOBAL R5 K11       ; R5 := junctionTasksMovie
 24 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0x163B749C"]
 28 [-]: MOVE      R5 R0        ; R5 := R0
 29 [-]: CALL      R3 3 1       ; R3(R4,R5)
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x458F27A9"]
 32 [-]: LOADK     R5 K14       ; R5 := "SetRightAligned"
 33 [-]: GETUPVAL  R6 U2        ; R6 := U2
 34 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xF81722A2"]
 35 [-]: MOVE      R7 R2        ; R7 := R2
 36 [-]: LOADK     R8 K16       ; R8 := "true"
 37 [-]: LOADK     R9 K17       ; R9 := "false"
 38 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 39 [-]: CALL      R3 0 1       ; R3(R4,...)
 40 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 5424
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MovieInst"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MovieInst"]
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x458F27A9"]
 10 [-]: LOADK     R2 K3        ; R2 := "ForceClose"
 11 [-]: LOADK     R3 K4        ; R3 := ""
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: LOADK     R0 K5        ; R0 := 1
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: LEN       R1 R1        ; R1 := # R1
 16 [-]: LOADK     R2 K5        ; R2 := 1
 17 [-]: FORPREP   R0 50        ; R0 -= R2; PC := 50
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 20 [-]: GETTABLE  R5 R4 K6     ; R5 := R4["locked"]
 21 [-]: TEST      R5 0         ; if not R5 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R5 R4 K7     ; R5 := R4["forceHover"]
 24 [-]: JMP       27           ; PC := 27
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 28 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x1C19D966"]
 29 [-]: GETTABLE  R8 R4 K10    ; R8 := R4["clipName"]
 30 [-]: LOADK     R9 K11       ; R9 := "enabled"
 31 [-]: TESTSET   R10 R5 0     ; if not R5 then PC := 49 else R10 := R5
 32 [-]: JMP       49           ; PC := 49
 33 [-]: GETGLOBAL R10 K12      ; R10 := _T
 34 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["gPendingMission"]
 35 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 48
 36 [-]: JMP       48           ; PC := 48
 37 [-]: GETTABLE  R10 R4 K15   ; R10 := R4["radialSector"]
 38 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 47
 39 [-]: JMP       47           ; PC := 47
 40 [-]: GETGLOBAL R10 K12      ; R10 := _T
 41 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["gPendingMission"]
 42 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["baseNodeName"]
 43 [-]: GETTABLE  R11 R4 K15   ; R11 := R4["radialSector"]
 44 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["name"]
 45 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: MOVE      R10 R0       ; R10 := R0
 48 [-]: MOVE      R10 R1       ; R10 := R1
 49 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 50 [-]: FORLOOP   R0 18        ; R0 += R2; if R0 <= R1 then begin PC := 18; R3 := R0 end
 51 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 5437
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: GETGLOBAL R5 K0        ; R5 := 0x221C9700
  5 [-]: LOADK     R6 K1        ; R6 := 0
  6 [-]: LOADK     R7 K1        ; R7 := 0
  7 [-]: LOADK     R8 K2        ; R8 := 1
  8 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
  9 [-]: GETUPVAL  R6 U1        ; R6 := U1
 10 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["voidDecoData"]
 11 [-]: GETTABLE  R6 R6 K2     ; R6 := R6[1]
 12 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["pos"]
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["z"]
 14 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 15 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 16 [-]: LOADK     R4 K2        ; R4 := 1
 17 [-]: GETUPVAL  R5 U1        ; R5 := U1
 18 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["voidDecoData"]
 19 [-]: LEN       R5 R5        ; R5 := # R5
 20 [-]: LOADK     R6 K2        ; R6 := 1
 21 [-]: FORPREP   R4 45        ; R4 -= R6; PC := 45
 22 [-]: GETUPVAL  R8 U1        ; R8 := U1
 23 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["voidDecoData"]
 24 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 25 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["BMin"]
 26 [-]: SUB       R8 R2 R8     ; R8 := R2 - R8
 27 [-]: GETTABLE  R9 R8 K7     ; R9 := R8["x"]
 28 [-]: GETUPVAL  R10 U1       ; R10 := U1
 29 [-]: GETTABLE  R10 R10 K3   ; R10 := R10["voidDecoData"]
 30 [-]: GETTABLE  R10 R10 R7   ; R10 := R10[R7]
 31 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["BScale"]
 32 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["x"]
 33 [-]: MUL       R9 R9 R10    ; R9 := R9 * R10
 34 [-]: SUB       R9 K2 R9     ; R9 := 1 - R9
 35 [-]: SETTABLE  R8 K7 R9     ; R8["x"] := R9
 36 [-]: GETTABLE  R9 R8 K9     ; R9 := R8["y"]
 37 [-]: GETUPVAL  R10 U1       ; R10 := U1
 38 [-]: GETTABLE  R10 R10 K3   ; R10 := R10["voidDecoData"]
 39 [-]: GETTABLE  R10 R10 R7   ; R10 := R10[R7]
 40 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["BScale"]
 41 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["y"]
 42 [-]: MUL       R9 R9 R10    ; R9 := R9 * R10
 43 [-]: SETTABLE  R8 K9 R9     ; R8["y"] := R9
 44 [-]: SETTABLE  R3 R7 R8     ; R3[R7] := R8
 45 [-]: FORLOOP   R4 22        ; R4 += R6; if R4 <= R5 then begin PC := 22; R7 := R4 end
 46 [-]: RETURN    R3 2         ; return R3
 47 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 5451
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: LOADK     R5 K0        ; R5 := 1
  2 [-]: LEN       R6 R0        ; R6 := # R0
  3 [-]: LOADK     R7 K0        ; R7 := 1
  4 [-]: FORPREP   R5 32        ; R5 -= R7; PC := 32
  5 [-]: GETTABLE  R9 R0 R8     ; R9 := R0[R8]
  6 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["x"]
  7 [-]: GETTABLE  R10 R0 R8    ; R10 := R0[R8]
  8 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["y"]
  9 [-]: EQ        0 R8 K3      ; if R8 ~= 2 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: UNM       R9 R9        ; R9 := - R9
 12 [-]: UNM       R10 R10      ; R10 := - R10
 13 [-]: JMP       15           ; PC := 15
 14 [-]: UNM       R9 R9        ; R9 := - R9
 15 [-]: GETUPVAL  R11 U0       ; R11 := U0
 16 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["voidDecos"]
 17 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
 18 [-]: SELF      R11 R11 K5   ; R12 := R11; R11 := R11["0xD124E361"]
 19 [-]: GETUPVAL  R13 U0       ; R13 := U0
 20 [-]: GETTABLE  R13 R13 K6   ; R13 := R13["uvHoles"]
 21 [-]: GETTABLE  R13 R13 R1   ; R13 := R13[R1]
 22 [-]: MOVE      R14 R9       ; R14 := R9
 23 [-]: MOVE      R15 R10      ; R15 := R10
 24 [-]: GETGLOBAL R16 K7       ; R16 := 0x93034B55
 25 [-]: LOADK     R17 K8       ; R17 := 0.012500000186265
 26 [-]: LOADK     R18 K9       ; R18 := 0.050000000745058
 27 [-]: MOVE      R19 R2       ; R19 := R2
 28 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 29 [-]: MUL       R16 R16 R3   ; R16 := R16 * R3
 30 [-]: MOVE      R17 R4       ; R17 := R4
 31 [-]: CALL      R11 7 1      ; R11(R12,R13,R14,R15,R16,R17)
 32 [-]: FORLOOP   R5 5         ; R5 += R7; if R5 <= R6 then begin PC := 5; R8 := R5 end
 33 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 5467
; #Upvalues:       55
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  78

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x6306558E
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  4 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x80D6B1A"]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 1         ; if R1 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8C7099E9"]
 20 [-]: MOVE      R3 R0        ; R3 := R0
 21 [-]: CALL      R1 3 1       ; R1(R2,R3)
 22 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 23 [-]: GETUPVAL  R2 U1        ; R2 := U1
 24 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["sky"]
 25 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Zone"]
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 1         ; if R1 then PC := 29
 28 [-]: JMP       29           ; PC := 29
 29 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 30 [-]: GETUPVAL  R2 U2        ; R2 := U2
 31 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["voidDecos"]
 32 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 33 [-]: TEST      R1 1         ; if R1 then PC := 300
 34 [-]: JMP       300          ; PC := 300
 35 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 36 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x7C1F5A97"]
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: TEST      R1 0         ; if not R1 then PC := 300
 39 [-]: JMP       300          ; PC := 300
 40 [-]: GETGLOBAL R1 K9        ; R1 := 0x994A1A7
 41 [-]: GETUPVAL  R2 U3        ; R2 := U3
 42 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["MIN_ZOOM"]
 43 [-]: GETUPVAL  R3 U3        ; R3 := U3
 44 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["MAX_ZOOM"]
 45 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 46 [-]: GETGLOBAL R2 K12       ; R2 := 0x6374FD98
 47 [-]: GETUPVAL  R3 U4        ; R3 := U4
 48 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mCurVal"]
 49 [-]: GETTABLE  R4 R1 K14    ; R4 := R1["minValue"]
 50 [-]: GETTABLE  R5 R1 K15    ; R5 := R1["maxValue"]
 51 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 52 [-]: SELF      R3 R1 K16    ; R4 := R1; R3 := R1["0x3B43F25"]
 53 [-]: MOVE      R5 R2        ; R5 := R2
 54 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 55 [-]: MOVE      R2 R3        ; R2 := R3
 56 [-]: MUL       R2 R2 R2     ; R2 := R2 * R2
 57 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 58 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x7C1F5A97"]
 59 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 60 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x6DA72501"]
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: GETGLOBAL R4 K18       ; R4 := 0x221C9700
 63 [-]: LOADK     R5 K19       ; R5 := 0
 64 [-]: LOADK     R6 K19       ; R6 := 0
 65 [-]: LOADK     R7 K19       ; R7 := 0
 66 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 67 [-]: SUB       R4 R4 R3     ; R4 := R4 - R3
 68 [-]: GETGLOBAL R5 K20       ; R5 := 0x458357BC
 69 [-]: MOVE      R6 R4        ; R6 := R4
 70 [-]: CALL      R5 2 1       ; R5(R6)
 71 [-]: GETUPVAL  R5 U2        ; R5 := U2
 72 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["0xC34F8067"]
 73 [-]: MOVE      R6 R3        ; R6 := R3
 74 [-]: MOVE      R7 R4        ; R7 := R4
 75 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 76 [-]: LOADK     R6 K22       ; R6 := 1
 77 [-]: GETUPVAL  R7 U2        ; R7 := U2
 78 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["0x1A212F7"]
 79 [-]: MOVE      R8 R5        ; R8 := R5
 80 [-]: MOVE      R9 R6        ; R9 := R6
 81 [-]: MOVE      R10 R2       ; R10 := R2
 82 [-]: LOADK     R11 K24      ; R11 := 3
 83 [-]: LOADK     R12 K25      ; R12 := 0.029999999329448
 84 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 85 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
 86 [-]: GETUPVAL  R7 U5        ; R7 := U5
 87 [-]: TEST      R7 1         ; if R7 then PC := 144
 88 [-]: JMP       144          ; PC := 144
 89 [-]: LOADK     R7 K22       ; R7 := 1
 90 [-]: GETUPVAL  R8 U6        ; R8 := U6
 91 [-]: LEN       R8 R8        ; R8 := # R8
 92 [-]: LOADK     R9 K22       ; R9 := 1
 93 [-]: FORPREP   R7 142       ; R7 -= R9; PC := 142
 94 [-]: GETGLOBAL R11 K1       ; R11 := 0x400E7765
 95 [-]: GETUPVAL  R12 U7       ; R12 := U7
 96 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
 97 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 98 [-]: TEST      R11 1        ; if R11 then PC := 142
 99 [-]: JMP       142          ; PC := 142
100 [-]: GETUPVAL  R11 U7       ; R11 := U7
101 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
102 [-]: SELF      R11 R11 K26  ; R12 := R11; R11 := R11["0x8C1ACCEF"]
103 [-]: CALL      R11 2 2      ; R11 := R11(R12)
104 [-]: TEST      R11 0        ; if not R11 then PC := 142
105 [-]: JMP       142          ; PC := 142
106 [-]: GETGLOBAL R11 K27      ; R11 := string
107 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["0xDE44F664"]
108 [-]: GETUPVAL  R12 U6       ; R12 := U6
109 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
110 [-]: GETTABLE  R12 R12 K29  ; R12 := R12["name"]
111 [-]: LOADK     R13 K30      ; R13 := "Space"
112 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
113 [-]: TEST      R11 1        ; if R11 then PC := 142
114 [-]: JMP       142          ; PC := 142
115 [-]: GETUPVAL  R11 U6       ; R11 := U6
116 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
117 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["pos"]
118 [-]: SUB       R4 R11 R3    ; R4 := R11 - R3
119 [-]: GETGLOBAL R11 K20      ; R11 := 0x458357BC
120 [-]: MOVE      R12 R4       ; R12 := R4
121 [-]: CALL      R11 2 1      ; R11(R12)
122 [-]: GETUPVAL  R11 U2       ; R11 := U2
123 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xC34F8067"]
124 [-]: MOVE      R12 R3       ; R12 := R3
125 [-]: MOVE      R13 R4       ; R13 := R4
126 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
127 [-]: MOVE      R5 R11       ; R5 := R11
128 [-]: GETUPVAL  R11 U2       ; R11 := U2
129 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["uvHoles"]
130 [-]: LEN       R11 R11      ; R11 := # R11
131 [-]: LE        0 R6 R11     ; if R6 > R11 then PC := 142
132 [-]: JMP       142          ; PC := 142
133 [-]: GETUPVAL  R11 U2       ; R11 := U2
134 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["0x1A212F7"]
135 [-]: MOVE      R12 R5       ; R12 := R5
136 [-]: MOVE      R13 R6       ; R13 := R6
137 [-]: MOVE      R14 R2       ; R14 := R2
138 [-]: LOADK     R15 K33      ; R15 := 1.2999999523163
139 [-]: LOADK     R16 K34      ; R16 := 0.050000000745058
140 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
141 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
142 [-]: FORLOOP   R7 94        ; R7 += R9; if R7 <= R8 then begin PC := 94; R10 := R7 end
143 [-]: JMP       274          ; PC := 274
144 [-]: GETGLOBAL R11 K27      ; R11 := string
145 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["0xDE44F664"]
146 [-]: GETUPVAL  R12 U5       ; R12 := U5
147 [-]: GETTABLE  R12 R12 K29  ; R12 := R12["name"]
148 [-]: LOADK     R13 K30      ; R13 := "Space"
149 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
150 [-]: TEST      R11 1        ; if R11 then PC := 178
151 [-]: JMP       178          ; PC := 178
152 [-]: GETUPVAL  R11 U5       ; R11 := U5
153 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["pos"]
154 [-]: SUB       R4 R11 R3    ; R4 := R11 - R3
155 [-]: GETGLOBAL R11 K20      ; R11 := 0x458357BC
156 [-]: MOVE      R12 R4       ; R12 := R4
157 [-]: CALL      R11 2 1      ; R11(R12)
158 [-]: GETUPVAL  R11 U2       ; R11 := U2
159 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0xC34F8067"]
160 [-]: MOVE      R12 R3       ; R12 := R3
161 [-]: MOVE      R13 R4       ; R13 := R4
162 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
163 [-]: MOVE      R5 R11       ; R5 := R11
164 [-]: GETUPVAL  R11 U2       ; R11 := U2
165 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["uvHoles"]
166 [-]: LEN       R11 R11      ; R11 := # R11
167 [-]: LE        0 R6 R11     ; if R6 > R11 then PC := 178
168 [-]: JMP       178          ; PC := 178
169 [-]: GETUPVAL  R11 U2       ; R11 := U2
170 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["0x1A212F7"]
171 [-]: MOVE      R12 R5       ; R12 := R5
172 [-]: MOVE      R13 R6       ; R13 := R6
173 [-]: MOVE      R14 R2       ; R14 := R2
174 [-]: LOADK     R15 K33      ; R15 := 1.2999999523163
175 [-]: LOADK     R16 K34      ; R16 := 0.050000000745058
176 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
177 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
178 [-]: LOADK     R11 K22      ; R11 := 1
179 [-]: GETUPVAL  R12 U8       ; R12 := U8
180 [-]: LEN       R12 R12      ; R12 := # R12
181 [-]: LOADK     R13 K22      ; R13 := 1
182 [-]: FORPREP   R11 273      ; R11 -= R13; PC := 273
183 [-]: GETUPVAL  R15 U8       ; R15 := U8
184 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
185 [-]: GETUPVAL  R16 U9       ; R16 := U9
186 [-]: GETTABLE  R16 R16 K35  ; R16 := R16["0x96C3A0A7"]
187 [-]: GETTABLE  R17 R15 K36  ; R17 := R15["radialSector"]
188 [-]: CALL      R16 2 2      ; R16 := R16(R17)
189 [-]: TEST      R16 0        ; if not R16 then PC := 216
190 [-]: JMP       216          ; PC := 216
191 [-]: GETUPVAL  R16 U10      ; R16 := U10
192 [-]: GETTABLE  R16 R16 K37  ; R16 := R16["SentientFx"]
193 [-]: GETTABLE  R16 R16 K22  ; R16 := R16[1]
194 [-]: EQ        1 R16 K38    ; if R16 == nil then PC := 204
195 [-]: JMP       204          ; PC := 204
196 [-]: GETGLOBAL R16 K1       ; R16 := 0x400E7765
197 [-]: GETUPVAL  R17 U10      ; R17 := U10
198 [-]: GETTABLE  R17 R17 K37  ; R17 := R17["SentientFx"]
199 [-]: GETTABLE  R17 R17 K22  ; R17 := R17[1]
200 [-]: GETTABLE  R17 R17 K39  ; R17 := R17["mInstance"]
201 [-]: CALL      R16 2 2      ; R16 := R16(R17)
202 [-]: TEST      R16 0        ; if not R16 then PC := 216
203 [-]: JMP       216          ; PC := 216
204 [-]: GETUPVAL  R16 U10      ; R16 := U10
205 [-]: GETTABLE  R16 R16 K37  ; R16 := R16["SentientFx"]
206 [-]: GETUPVAL  R17 U11      ; R17 := U11
207 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["0xAC19E744"]
208 [-]: GETGLOBAL R18 K2       ; R18 := mMovie
209 [-]: GETTABLE  R19 R15 K41  ; R19 := R15["clipName"]
210 [-]: GETGLOBAL R20 K42      ; R20 := sentientNodeEffect
211 [-]: LOADK     R21 K19      ; R21 := 0
212 [-]: LOADK     R22 K19      ; R22 := 0
213 [-]: GETGLOBAL R23 K43      ; R23 := gBackgroundRegion
214 [-]: CALL      R17 7 2      ; R17 := R17(R18,R19,R20,R21,R22,R23)
215 [-]: SETTABLE  R16 K22 R17  ; R16[1] := R17
216 [-]: GETUPVAL  R16 U6       ; R16 := U6
217 [-]: GETTABLE  R17 R15 K36  ; R17 := R15["radialSector"]
218 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["region"]
219 [-]: ADD       R17 R17 K22  ; R17 := R17 + 1
220 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
221 [-]: GETUPVAL  R17 U5       ; R17 := U5
222 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 273
223 [-]: JMP       273          ; PC := 273
224 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
225 [-]: GETTABLE  R18 R15 K45  ; R18 := R15["deco"]
226 [-]: CALL      R17 2 2      ; R17 := R17(R18)
227 [-]: TEST      R17 1        ; if R17 then PC := 273
228 [-]: JMP       273          ; PC := 273
229 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
230 [-]: GETTABLE  R18 R15 K45  ; R18 := R15["deco"]
231 [-]: GETTABLE  R18 R18 K39  ; R18 := R18["mInstance"]
232 [-]: CALL      R17 2 2      ; R17 := R17(R18)
233 [-]: TEST      R17 1        ; if R17 then PC := 273
234 [-]: JMP       273          ; PC := 273
235 [-]: GETUPVAL  R17 U2       ; R17 := U2
236 [-]: GETTABLE  R17 R17 K32  ; R17 := R17["uvHoles"]
237 [-]: LEN       R17 R17      ; R17 := # R17
238 [-]: LE        0 R6 R17     ; if R6 > R17 then PC := 273
239 [-]: JMP       273          ; PC := 273
240 [-]: GETTABLE  R17 R15 K45  ; R17 := R15["deco"]
241 [-]: GETTABLE  R17 R17 K39  ; R17 := R17["mInstance"]
242 [-]: SELF      R17 R17 K46  ; R18 := R17; R17 := R17["0xECB5B892"]
243 [-]: CALL      R17 2 2      ; R17 := R17(R18)
244 [-]: GETTABLE  R18 R15 K45  ; R18 := R15["deco"]
245 [-]: GETTABLE  R18 R18 K47  ; R18 := R18["mScale"]
246 [-]: DIV       R17 R17 R18  ; R17 := R17 / R18
247 [-]: GETTABLE  R18 R15 K48  ; R18 := R15["position"]
248 [-]: SUB       R4 R18 R3    ; R4 := R18 - R3
249 [-]: GETGLOBAL R18 K20      ; R18 := 0x458357BC
250 [-]: MOVE      R19 R4       ; R19 := R4
251 [-]: CALL      R18 2 1      ; R18(R19)
252 [-]: GETUPVAL  R18 U2       ; R18 := U2
253 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["0xC34F8067"]
254 [-]: MOVE      R19 R3       ; R19 := R3
255 [-]: MOVE      R20 R4       ; R20 := R4
256 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
257 [-]: MOVE      R5 R18       ; R5 := R18
258 [-]: LOADK     R18 K22      ; R18 := 1
259 [-]: LEN       R19 R5       ; R19 := # R5
260 [-]: LOADK     R20 K22      ; R20 := 1
261 [-]: FORPREP   R18 271      ; R18 -= R20; PC := 271
262 [-]: GETUPVAL  R22 U2       ; R22 := U2
263 [-]: GETTABLE  R22 R22 K23  ; R22 := R22["0x1A212F7"]
264 [-]: MOVE      R23 R5       ; R23 := R5
265 [-]: MOVE      R24 R6       ; R24 := R6
266 [-]: MOVE      R25 R2       ; R25 := R2
267 [-]: MUL       R26 R17 K34  ; R26 := R17 * 0.050000000745058
268 [-]: ADD       R26 K49 R26  ; R26 := 0.10000000149012 + R26
269 [-]: LOADK     R27 K50      ; R27 := 0.014999999664724
270 [-]: CALL      R22 6 1      ; R22(R23,R24,R25,R26,R27)
271 [-]: FORLOOP   R18 262      ; R18 += R20; if R18 <= R19 then begin PC := 262; R21 := R18 end
272 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
273 [-]: FORLOOP   R11 183      ; R11 += R13; if R11 <= R12 then begin PC := 183; R14 := R11 end
274 [-]: MOVE      R22 R6       ; R22 := R6
275 [-]: GETUPVAL  R23 U2       ; R23 := U2
276 [-]: GETTABLE  R23 R23 K32  ; R23 := R23["uvHoles"]
277 [-]: LEN       R23 R23      ; R23 := # R23
278 [-]: LOADK     R24 K22      ; R24 := 1
279 [-]: FORPREP   R22 299      ; R22 -= R24; PC := 299
280 [-]: LOADK     R26 K22      ; R26 := 1
281 [-]: GETUPVAL  R27 U2       ; R27 := U2
282 [-]: GETTABLE  R27 R27 K7   ; R27 := R27["voidDecos"]
283 [-]: LEN       R27 R27      ; R27 := # R27
284 [-]: LOADK     R28 K22      ; R28 := 1
285 [-]: FORPREP   R26 298      ; R26 -= R28; PC := 298
286 [-]: GETUPVAL  R30 U2       ; R30 := U2
287 [-]: GETTABLE  R30 R30 K7   ; R30 := R30["voidDecos"]
288 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
289 [-]: SELF      R30 R30 K51  ; R31 := R30; R30 := R30["0xD124E361"]
290 [-]: GETUPVAL  R32 U2       ; R32 := U2
291 [-]: GETTABLE  R32 R32 K32  ; R32 := R32["uvHoles"]
292 [-]: GETTABLE  R32 R32 R25  ; R32 := R32[R25]
293 [-]: LOADK     R33 K19      ; R33 := 0
294 [-]: LOADK     R34 K19      ; R34 := 0
295 [-]: LOADK     R35 K19      ; R35 := 0
296 [-]: LOADK     R36 K19      ; R36 := 0
297 [-]: CALL      R30 7 1      ; R30(R31,R32,R33,R34,R35,R36)
298 [-]: FORLOOP   R26 286      ; R26 += R28; if R26 <= R27 then begin PC := 286; R29 := R26 end
299 [-]: FORLOOP   R22 280      ; R22 += R24; if R22 <= R23 then begin PC := 280; R25 := R22 end
300 [-]: GETGLOBAL R30 K1       ; R30 := 0x400E7765
301 [-]: GETUPVAL  R31 U12      ; R31 := U12
302 [-]: CALL      R30 2 2      ; R30 := R30(R31)
303 [-]: TEST      R30 1        ; if R30 then PC := 329
304 [-]: JMP       329          ; PC := 329
305 [-]: LOADK     R30 K22      ; R30 := 1
306 [-]: LOADK     R31 K24      ; R31 := 3
307 [-]: LOADK     R32 K22      ; R32 := 1
308 [-]: FORPREP   R30 314      ; R30 -= R32; PC := 314
309 [-]: GETUPVAL  R34 U13      ; R34 := U13
310 [-]: GETTABLE  R34 R34 R33  ; R34 := R34[R33]
311 [-]: SELF      R34 R34 K4   ; R35 := R34; R34 := R34["0x8C7099E9"]
312 [-]: MOVE      R36 R0       ; R36 := R0
313 [-]: CALL      R34 3 1      ; R34(R35,R36)
314 [-]: FORLOOP   R30 309      ; R30 += R32; if R30 <= R31 then begin PC := 309; R33 := R30 end
315 [-]: GETUPVAL  R34 U12      ; R34 := U12
316 [-]: SELF      R34 R34 K52  ; R35 := R34; R34 := R34["0x8FD31352"]
317 [-]: GETGLOBAL R36 K53      ; R36 := 0xB5A59043
318 [-]: GETUPVAL  R37 U13      ; R37 := U13
319 [-]: GETTABLE  R37 R37 K22  ; R37 := R37[1]
320 [-]: GETTABLE  R37 R37 K13  ; R37 := R37["mCurVal"]
321 [-]: GETUPVAL  R38 U13      ; R38 := U13
322 [-]: GETTABLE  R38 R38 K54  ; R38 := R38[2]
323 [-]: GETTABLE  R38 R38 K13  ; R38 := R38["mCurVal"]
324 [-]: GETUPVAL  R39 U13      ; R39 := U13
325 [-]: GETTABLE  R39 R39 K24  ; R39 := R39[3]
326 [-]: GETTABLE  R39 R39 K13  ; R39 := R39["mCurVal"]
327 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
328 [-]: CALL      R34 0 1      ; R34(R35,...)
329 [-]: LOADNIL   R34 R34      ; R34 := nil
330 [-]: MOVE      R34 R14      ; R34 := R14
331 [-]: GETGLOBAL R34 K1       ; R34 := 0x400E7765
332 [-]: GETUPVAL  R35 U15      ; R35 := U15
333 [-]: CALL      R34 2 2      ; R34 := R34(R35)
334 [-]: TEST      R34 1        ; if R34 then PC := 349
335 [-]: JMP       349          ; PC := 349
336 [-]: GETUPVAL  R34 U15      ; R34 := U15
337 [-]: SELF      R34 R34 K55  ; R35 := R34; R34 := R34["0x458F27A9"]
338 [-]: LOADK     R36 K56      ; R36 := "IsBrowsingForDrone"
339 [-]: LOADK     R37 K57      ; R37 := ""
340 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
341 [-]: TEST      R34 1        ; if R34 then PC := 351
342 [-]: JMP       351          ; PC := 351
343 [-]: GETUPVAL  R34 U15      ; R34 := U15
344 [-]: SELF      R34 R34 K55  ; R35 := R34; R34 := R34["0x458F27A9"]
345 [-]: LOADK     R36 K58      ; R36 := "IsViewingExtractAllManifest"
346 [-]: LOADK     R37 K57      ; R37 := ""
347 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
348 [-]: JMP       351          ; PC := 351
349 [-]: MOVE      R34 R0       ; R34 := R0
350 [-]: MOVE      R34 R1       ; R34 := R1
351 [-]: GETUPVAL  R35 U16      ; R35 := U16
352 [-]: EQ        1 R34 R35    ; if R34 == R35 then PC := 368
353 [-]: JMP       368          ; PC := 368
354 [-]: GETGLOBAL R35 K1       ; R35 := 0x400E7765
355 [-]: GETUPVAL  R36 U17      ; R36 := U17
356 [-]: GETTABLE  R36 R36 K59  ; R36 := R36["Movie"]
357 [-]: CALL      R35 2 2      ; R35 := R35(R36)
358 [-]: TEST      R35 1        ; if R35 then PC := 368
359 [-]: JMP       368          ; PC := 368
360 [-]: GETUPVAL  R35 U17      ; R35 := U17
361 [-]: GETTABLE  R35 R35 K59  ; R35 := R35["Movie"]
362 [-]: SELF      R35 R35 K55  ; R36 := R35; R35 := R35["0x458F27A9"]
363 [-]: LOADK     R37 K60      ; R37 := "ItemBrowsing"
364 [-]: GETGLOBAL R38 K61      ; R38 := 0x9FAED6BC
365 [-]: MOVE      R39 R34      ; R39 := R34
366 [-]: CALL      R38 2 0      ; R38,... := R38(R39)
367 [-]: CALL      R35 0 1      ; R35(R36,...)
368 [-]: MOVE      R34 R16      ; R34 := R16
369 [-]: GETGLOBAL R35 K62      ; R35 := _T
370 [-]: GETTABLE  R35 R35 K63  ; R35 := R35["HideSquadOverlay"]
371 [-]: EQ        1 R35 K38    ; if R35 == nil then PC := 378
372 [-]: JMP       378          ; PC := 378
373 [-]: GETGLOBAL R35 K62      ; R35 := _T
374 [-]: GETTABLE  R35 R35 K63  ; R35 := R35["HideSquadOverlay"]
375 [-]: LE        1 R35 K19    ; if R35 <= 0 then PC := 378
376 [-]: JMP       378          ; PC := 378
377 [-]: MOVE      R35 R0       ; R35 := R0
378 [-]: MOVE      R35 R1       ; R35 := R1
379 [-]: GETGLOBAL R36 K2       ; R36 := mMovie
380 [-]: SELF      R36 R36 K64  ; R37 := R36; R36 := R36["0x625791A8"]
381 [-]: GETUPVAL  R38 U16      ; R38 := U16
382 [-]: TEST      R38 1        ; if R38 then PC := 402
383 [-]: JMP       402          ; PC := 402
384 [-]: GETUPVAL  R38 U17      ; R38 := U17
385 [-]: GETTABLE  R38 R38 K65  ; R38 := R38["DioOpen"]
386 [-]: TEST      R38 1        ; if R38 then PC := 402
387 [-]: JMP       402          ; PC := 402
388 [-]: GETGLOBAL R38 K62      ; R38 := _T
389 [-]: GETTABLE  R38 R38 K66  ; R38 := R38["BackgroundVisible"]
390 [-]: TEST      R38 1        ; if R38 then PC := 402
391 [-]: JMP       402          ; PC := 402
392 [-]: GETGLOBAL R38 K62      ; R38 := _T
393 [-]: GETTABLE  R38 R38 K67  ; R38 := R38["HideMapRedux"]
394 [-]: EQ        1 R38 K38    ; if R38 == nil then PC := 400
395 [-]: JMP       400          ; PC := 400
396 [-]: GETGLOBAL R38 K62      ; R38 := _T
397 [-]: GETTABLE  R38 R38 K67  ; R38 := R38["HideMapRedux"]
398 [-]: EQ        0 R38 K19    ; if R38 ~= 0 then PC := 402
399 [-]: JMP       402          ; PC := 402
400 [-]: MOVE      R38 R35      ; R38 := R35
401 [-]: JMP       404          ; PC := 404
402 [-]: MOVE      R38 R0       ; R38 := R0
403 [-]: MOVE      R38 R1       ; R38 := R1
404 [-]: CALL      R36 3 1      ; R36(R37,R38)
405 [-]: GETUPVAL  R36 U18      ; R36 := U18
406 [-]: CALL      R36 1 1      ; R36()
407 [-]: GETUPVAL  R36 U19      ; R36 := U19
408 [-]: TEST      R36 1        ; if R36 then PC := 504
409 [-]: JMP       504          ; PC := 504
410 [-]: GETGLOBAL R36 K62      ; R36 := _T
411 [-]: GETTABLE  R36 R36 K68  ; R36 := R36["DesiredGoToNode"]
412 [-]: TEST      R36 0        ; if not R36 then PC := 482
413 [-]: JMP       482          ; PC := 482
414 [-]: GETGLOBAL R36 K69      ; R36 := 0xEC274B1A
415 [-]: GETGLOBAL R37 K62      ; R37 := _T
416 [-]: GETTABLE  R37 R37 K68  ; R37 := R37["DesiredGoToNode"]
417 [-]: CALL      R36 2 2      ; R36 := R36(R37)
418 [-]: GETUPVAL  R37 U20      ; R37 := U20
419 [-]: GETGLOBAL R38 K61      ; R38 := 0x9FAED6BC
420 [-]: MOVE      R39 R36      ; R39 := R36
421 [-]: CALL      R38 2 2      ; R38 := R38(R39)
422 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
423 [-]: CLOSURE   R38 0        ; R38 := closure(Function #129.1)
424 [-]: GETUPVAL  R0 U21       ; R0 := U21
425 [-]: MOVE      R0 R37       ; R0 := R37
426 [-]: GETUPVAL  R0 U22       ; R0 := U22
427 [-]: GETUPVAL  R0 U23       ; R0 := U23
428 [-]: GETUPVAL  R0 U11       ; R0 := U11
429 [-]: GETUPVAL  R0 U24       ; R0 := U24
430 [-]: GETUPVAL  R0 U0        ; R0 := U0
431 [-]: TEST      R37 0        ; if not R37 then PC := 461
432 [-]: JMP       461          ; PC := 461
433 [-]: GETUPVAL  R39 U6       ; R39 := U6
434 [-]: GETTABLE  R40 R37 K36  ; R40 := R37["radialSector"]
435 [-]: GETTABLE  R40 R40 K44  ; R40 := R40["region"]
436 [-]: ADD       R40 R40 K22  ; R40 := R40 + 1
437 [-]: GETTABLE  R39 R39 R40  ; R39 := R39[R40]
438 [-]: GETUPVAL  R40 U25      ; R40 := U25
439 [-]: GETTABLE  R41 R37 K36  ; R41 := R37["radialSector"]
440 [-]: GETTABLE  R41 R41 K44  ; R41 := R41["region"]
441 [-]: ADD       R41 R41 K22  ; R41 := R41 + 1
442 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
443 [-]: TEST      R40 0        ; if not R40 then PC := 448
444 [-]: JMP       448          ; PC := 448
445 [-]: MOVE      R40 R38      ; R40 := R38
446 [-]: CALL      R40 1 1      ; R40()
447 [-]: JMP       478          ; PC := 478
448 [-]: GETUPVAL  R40 U5       ; R40 := U5
449 [-]: TEST      R40 0        ; if not R40 then PC := 456
450 [-]: JMP       456          ; PC := 456
451 [-]: GETUPVAL  R40 U26      ; R40 := U26
452 [-]: MOVE      R41 R39      ; R41 := R39
453 [-]: MOVE      R42 R38      ; R42 := R38
454 [-]: CALL      R40 3 1      ; R40(R41,R42)
455 [-]: JMP       478          ; PC := 478
456 [-]: GETUPVAL  R40 U27      ; R40 := U27
457 [-]: MOVE      R41 R39      ; R41 := R39
458 [-]: MOVE      R42 R38      ; R42 := R38
459 [-]: CALL      R40 3 1      ; R40(R41,R42)
460 [-]: JMP       478          ; PC := 478
461 [-]: GETUPVAL  R40 U28      ; R40 := U28
462 [-]: GETTABLE  R40 R40 K70  ; R40 := R40["SANCTUARY_ONSLAUGHT_NODE"]
463 [-]: EQ        1 R36 R40    ; if R36 == R40 then PC := 469
464 [-]: JMP       469          ; PC := 469
465 [-]: GETUPVAL  R40 U28      ; R40 := U28
466 [-]: GETTABLE  R40 R40 K71  ; R40 := R40["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
467 [-]: EQ        0 R36 R40    ; if R36 ~= R40 then PC := 478
468 [-]: JMP       478          ; PC := 478
469 [-]: GETUPVAL  R40 U28      ; R40 := U28
470 [-]: GETTABLE  R40 R40 K72  ; R40 := R40["0x2C74584B"]
471 [-]: GETUPVAL  R41 U28      ; R41 := U28
472 [-]: GETTABLE  R41 R41 K71  ; R41 := R41["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
473 [-]: EQ        1 R36 R41    ; if R36 == R41 then PC := 476
474 [-]: JMP       476          ; PC := 476
475 [-]: MOVE      R41 R0       ; R41 := R0
476 [-]: MOVE      R41 R1       ; R41 := R1
477 [-]: CALL      R40 2 1      ; R40(R41)
478 [-]: GETGLOBAL R40 K62      ; R40 := _T
479 [-]: SETTABLE  R40 K68 K38  ; R40["DesiredGoToNode"] := nil
480 [-]: CLOSE     R36          ; SAVE R36,...
481 [-]: JMP       504          ; PC := 504
482 [-]: GETGLOBAL R36 K62      ; R36 := _T
483 [-]: GETTABLE  R36 R36 K73  ; R36 := R36["DesiredGoToRegion"]
484 [-]: TEST      R36 0        ; if not R36 then PC := 504
485 [-]: JMP       504          ; PC := 504
486 [-]: GETUPVAL  R36 U5       ; R36 := U5
487 [-]: TEST      R36 0        ; if not R36 then PC := 496
488 [-]: JMP       496          ; PC := 496
489 [-]: GETUPVAL  R36 U26      ; R36 := U26
490 [-]: GETUPVAL  R37 U6       ; R37 := U6
491 [-]: GETGLOBAL R38 K62      ; R38 := _T
492 [-]: GETTABLE  R38 R38 K73  ; R38 := R38["DesiredGoToRegion"]
493 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
494 [-]: CALL      R36 2 1      ; R36(R37)
495 [-]: JMP       502          ; PC := 502
496 [-]: GETUPVAL  R36 U27      ; R36 := U27
497 [-]: GETUPVAL  R37 U6       ; R37 := U6
498 [-]: GETGLOBAL R38 K62      ; R38 := _T
499 [-]: GETTABLE  R38 R38 K73  ; R38 := R38["DesiredGoToRegion"]
500 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
501 [-]: CALL      R36 2 1      ; R36(R37)
502 [-]: GETGLOBAL R36 K62      ; R36 := _T
503 [-]: SETTABLE  R36 K73 K38  ; R36["DesiredGoToRegion"] := nil
504 [-]: GETUPVAL  R36 U29      ; R36 := U29
505 [-]: CALL      R36 1 1      ; R36()
506 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
507 [-]: GETGLOBAL R37 K43      ; R37 := gBackgroundRegion
508 [-]: CALL      R36 2 2      ; R36 := R36(R37)
509 [-]: TEST      R36 0        ; if not R36 then PC := 512
510 [-]: JMP       512          ; PC := 512
511 [-]: RETURN    R0 1         ; return 
512 [-]: GETUPVAL  R36 U30      ; R36 := U30
513 [-]: CALL      R36 1 1      ; R36()
514 [-]: GETUPVAL  R36 U31      ; R36 := U31
515 [-]: CALL      R36 1 1      ; R36()
516 [-]: GETUPVAL  R36 U32      ; R36 := U32
517 [-]: CALL      R36 1 1      ; R36()
518 [-]: GETUPVAL  R36 U33      ; R36 := U33
519 [-]: CALL      R36 1 1      ; R36()
520 [-]: GETGLOBAL R36 K62      ; R36 := _T
521 [-]: GETTABLE  R36 R36 K74  ; R36 := R36["WareframeChallenge"]
522 [-]: TEST      R36 0        ; if not R36 then PC := 526
523 [-]: JMP       526          ; PC := 526
524 [-]: GETUPVAL  R36 U34      ; R36 := U34
525 [-]: CALL      R36 1 1      ; R36()
526 [-]: GETUPVAL  R36 U35      ; R36 := U35
527 [-]: TEST      R36 0        ; if not R36 then PC := 537
528 [-]: JMP       537          ; PC := 537
529 [-]: GETUPVAL  R36 U11      ; R36 := U11
530 [-]: GETTABLE  R36 R36 K75  ; R36 := R36["0x1C988750"]
531 [-]: LOADK     R37 K76      ; R37 := "/Lotus/Language/Menu/SoloModeRequired"
532 [-]: LOADK     R38 K77      ; R38 := "ConfirmSoloMission"
533 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
534 [-]: MOVE      R36 R36      ; R36 := R36
535 [-]: MOVE      R36 R0       ; R36 := R0
536 [-]: MOVE      R36 R35      ; R36 := R35
537 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
538 [-]: GETUPVAL  R37 U37      ; R37 := U37
539 [-]: CALL      R36 2 2      ; R36 := R36(R37)
540 [-]: TEST      R36 1        ; if R36 then PC := 693
541 [-]: JMP       693          ; PC := 693
542 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
543 [-]: GETUPVAL  R37 U5       ; R37 := U5
544 [-]: CALL      R36 2 2      ; R36 := R36(R37)
545 [-]: TEST      R36 1        ; if R36 then PC := 693
546 [-]: JMP       693          ; PC := 693
547 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
548 [-]: GETUPVAL  R37 U5       ; R37 := U5
549 [-]: GETTABLE  R37 R37 K78  ; R37 := R37["instance"]
550 [-]: CALL      R36 2 2      ; R36 := R36(R37)
551 [-]: TEST      R36 1        ; if R36 then PC := 693
552 [-]: JMP       693          ; PC := 693
553 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
554 [-]: GETUPVAL  R37 U1       ; R37 := U1
555 [-]: GETTABLE  R37 R37 K79  ; R37 := R37["cameraSpot"]
556 [-]: CALL      R36 2 2      ; R36 := R36(R37)
557 [-]: TEST      R36 1        ; if R36 then PC := 693
558 [-]: JMP       693          ; PC := 693
559 [-]: GETGLOBAL R36 K80      ; R36 := 0x4CDEF9FF
560 [-]: CALL      R36 1 2      ; R36 := R36()
561 [-]: GETUPVAL  R37 U37      ; R37 := U37
562 [-]: SELF      R37 R37 K81  ; R38 := R37; R37 := R37["0xF23A7849"]
563 [-]: CALL      R37 2 2      ; R37 := R37(R38)
564 [-]: GETTABLE  R38 R37 K82  ; R38 := R37["heading"]
565 [-]: UNM       R38 R38      ; R38 := - R38
566 [-]: SETTABLE  R37 K82 R38  ; R37["heading"] := R38
567 [-]: GETTABLE  R38 R37 K83  ; R38 := R37["pitch"]
568 [-]: UNM       R38 R38      ; R38 := - R38
569 [-]: SETTABLE  R37 K83 R38  ; R37["pitch"] := R38
570 [-]: GETUPVAL  R38 U5       ; R38 := U5
571 [-]: GETTABLE  R38 R38 K78  ; R38 := R38["instance"]
572 [-]: SELF      R38 R38 K17  ; R39 := R38; R38 := R38["0x6DA72501"]
573 [-]: CALL      R38 2 2      ; R38 := R38(R39)
574 [-]: GETGLOBAL R39 K84      ; R39 := 0x96BEA6B
575 [-]: MOVE      R40 R38      ; R40 := R38
576 [-]: MOVE      R41 R38      ; R41 := R38
577 [-]: GETUPVAL  R42 U38      ; R42 := U38
578 [-]: GETTABLE  R42 R42 K85  ; R42 := R42["CAMERA_OFFSET"]
579 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
580 [-]: GETGLOBAL R39 K2       ; R39 := mMovie
581 [-]: SELF      R39 R39 K86  ; R40 := R39; R39 := R39["0xBAE5F929"]
582 [-]: CALL      R39 2 2      ; R39 := R39(R40)
583 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
584 [-]: SELF      R40 R40 K87  ; R41 := R40; R40 := R40["0xF595D5E1"]
585 [-]: CALL      R40 2 2      ; R40 := R40(R41)
586 [-]: DIV       R39 R39 R40  ; R39 := R39 / R40
587 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
588 [-]: SELF      R40 R40 K88  ; R41 := R40; R40 := R40["0x6ACD1B87"]
589 [-]: CALL      R40 2 2      ; R40 := R40(R41)
590 [-]: GETGLOBAL R41 K2       ; R41 := mMovie
591 [-]: SELF      R41 R41 K89  ; R42 := R41; R41 := R41["0xEE069D65"]
592 [-]: CALL      R41 2 2      ; R41 := R41(R42)
593 [-]: DIV       R40 R40 R41  ; R40 := R40 / R41
594 [-]: GETTABLE  R41 R38 K90  ; R41 := R38["x"]
595 [-]: MUL       R42 R39 K54  ; R42 := R39 * 2
596 [-]: SUB       R42 R42 K22  ; R42 := R42 - 1
597 [-]: GETGLOBAL R43 K91      ; R43 := math
598 [-]: GETTABLE  R43 R43 K92  ; R43 := R43["0xE0F1DBD7"]
599 [-]: GETGLOBAL R44 K91      ; R44 := math
600 [-]: GETTABLE  R44 R44 K93  ; R44 := R44["pi"]
601 [-]: DIV       R44 R44 K94  ; R44 := R44 / 180
602 [-]: MUL       R44 K95 R44  ; R44 := 40 * R44
603 [-]: CALL      R43 2 2      ; R43 := R43(R44)
604 [-]: MUL       R42 R42 R43  ; R42 := R42 * R43
605 [-]: MUL       R42 R42 K96  ; R42 := R42 * 1.5
606 [-]: ADD       R41 R41 R42  ; R41 := R41 + R42
607 [-]: SETTABLE  R38 K90 R41  ; R38["x"] := R41
608 [-]: GETTABLE  R41 R38 K97  ; R41 := R38["y"]
609 [-]: MUL       R42 R40 K54  ; R42 := R40 * 2
610 [-]: SUB       R42 R42 K22  ; R42 := R42 - 1
611 [-]: UNM       R42 R42      ; R42 := - R42
612 [-]: MUL       R42 R42 K98  ; R42 := R42 * 0.75
613 [-]: ADD       R41 R41 R42  ; R41 := R41 + R42
614 [-]: SETTABLE  R38 K97 R41  ; R38["y"] := R41
615 [-]: GETGLOBAL R41 K99      ; R41 := 0x518098BD
616 [-]: MOVE      R42 R38      ; R42 := R38
617 [-]: MOVE      R43 R38      ; R43 := R38
618 [-]: GETUPVAL  R44 U37      ; R44 := U37
619 [-]: SELF      R44 R44 K100 ; R45 := R44; R44 := R44["0xA2B01604"]
620 [-]: GETUPVAL  R46 U39      ; R46 := U39
621 [-]: GETTABLE  R46 R46 K101 ; R46 := R46["GAME_C1_HEAD1"]
622 [-]: CALL      R44 3 0      ; R44,... := R44(R45,R46)
623 [-]: CALL      R41 0 1      ; R41(R42,...)
624 [-]: GETGLOBAL R41 K84      ; R41 := 0x96BEA6B
625 [-]: MOVE      R42 R38      ; R42 := R38
626 [-]: MOVE      R43 R38      ; R43 := R38
627 [-]: GETUPVAL  R44 U1       ; R44 := U1
628 [-]: GETTABLE  R44 R44 K102 ; R44 := R44["skyOrigin"]
629 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
630 [-]: GETUPVAL  R41 U1       ; R41 := U1
631 [-]: GETTABLE  R41 R41 K79  ; R41 := R41["cameraSpot"]
632 [-]: SELF      R41 R41 K17  ; R42 := R41; R41 := R41["0x6DA72501"]
633 [-]: CALL      R41 2 2      ; R41 := R41(R42)
634 [-]: GETUPVAL  R42 U40      ; R42 := U40
635 [-]: GETTABLE  R43 R41 K103 ; R43 := R41["z"]
636 [-]: CALL      R42 2 1      ; R42(R43)
637 [-]: SETTABLE  R41 K103 K104; R41["z"] := -1
638 [-]: GETGLOBAL R42 K99      ; R42 := 0x518098BD
639 [-]: MOVE      R43 R38      ; R43 := R38
640 [-]: MOVE      R44 R38      ; R44 := R38
641 [-]: MOVE      R45 R41      ; R45 := R41
642 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
643 [-]: GETGLOBAL R42 K105     ; R42 := 0x4CBE9A09
644 [-]: MOVE      R43 R38      ; R43 := R38
645 [-]: MOVE      R44 R37      ; R44 := R37
646 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
647 [-]: GETGLOBAL R43 K106     ; R43 := 0xEDD2EBFF
648 [-]: GETGLOBAL R44 K107     ; R44 := ZERO_VECTOR
649 [-]: MOVE      R45 R42      ; R45 := R42
650 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
651 [-]: GETGLOBAL R44 K12      ; R44 := 0x6374FD98
652 [-]: GETTABLE  R45 R43 K82  ; R45 := R43["heading"]
653 [-]: LOADK     R46 K108     ; R46 := -45
654 [-]: LOADK     R47 K109     ; R47 := 45
655 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
656 [-]: SETTABLE  R43 K82 R44  ; R43["heading"] := R44
657 [-]: GETGLOBAL R44 K12      ; R44 := 0x6374FD98
658 [-]: GETTABLE  R45 R43 K83  ; R45 := R43["pitch"]
659 [-]: LOADK     R46 K110     ; R46 := -35
660 [-]: LOADK     R47 K111     ; R47 := 35
661 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
662 [-]: SETTABLE  R43 K83 R44  ; R43["pitch"] := R44
663 [-]: SETTABLE  R43 K112 K19 ; R43["bank"] := 0
664 [-]: GETUPVAL  R44 U41      ; R44 := U41
665 [-]: SELF      R44 R44 K113 ; R45 := R44; R44 := R44["0xDB349344"]
666 [-]: GETTABLE  R46 R43 K82  ; R46 := R43["heading"]
667 [-]: CALL      R44 3 1      ; R44(R45,R46)
668 [-]: GETUPVAL  R44 U42      ; R44 := U42
669 [-]: SELF      R44 R44 K113 ; R45 := R44; R44 := R44["0xDB349344"]
670 [-]: GETTABLE  R46 R43 K83  ; R46 := R43["pitch"]
671 [-]: CALL      R44 3 1      ; R44(R45,R46)
672 [-]: GETUPVAL  R44 U41      ; R44 := U41
673 [-]: SELF      R44 R44 K4   ; R45 := R44; R44 := R44["0x8C7099E9"]
674 [-]: MOVE      R46 R36      ; R46 := R36
675 [-]: CALL      R44 3 1      ; R44(R45,R46)
676 [-]: GETUPVAL  R44 U42      ; R44 := U42
677 [-]: SELF      R44 R44 K4   ; R45 := R44; R44 := R44["0x8C7099E9"]
678 [-]: MOVE      R46 R36      ; R46 := R36
679 [-]: CALL      R44 3 1      ; R44(R45,R46)
680 [-]: GETUPVAL  R44 U41      ; R44 := U41
681 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["mCurVal"]
682 [-]: SETTABLE  R43 K82 R44  ; R43["heading"] := R44
683 [-]: GETUPVAL  R44 U42      ; R44 := U42
684 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["mCurVal"]
685 [-]: SETTABLE  R43 K83 R44  ; R43["pitch"] := R44
686 [-]: GETUPVAL  R44 U37      ; R44 := U37
687 [-]: SELF      R44 R44 K114 ; R45 := R44; R44 := R44["0x42C8B968"]
688 [-]: GETUPVAL  R46 U39      ; R46 := U39
689 [-]: GETTABLE  R46 R46 K101 ; R46 := R46["GAME_C1_HEAD1"]
690 [-]: MOVE      R47 R43      ; R47 := R43
691 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
692 [-]: JMP       704          ; PC := 704
693 [-]: GETGLOBAL R44 K1       ; R44 := 0x400E7765
694 [-]: GETUPVAL  R45 U37      ; R45 := U37
695 [-]: CALL      R44 2 2      ; R44 := R44(R45)
696 [-]: TEST      R44 1        ; if R44 then PC := 704
697 [-]: JMP       704          ; PC := 704
698 [-]: GETUPVAL  R44 U37      ; R44 := U37
699 [-]: SELF      R44 R44 K114 ; R45 := R44; R44 := R44["0x42C8B968"]
700 [-]: GETUPVAL  R46 U39      ; R46 := U39
701 [-]: GETTABLE  R46 R46 K101 ; R46 := R46["GAME_C1_HEAD1"]
702 [-]: GETGLOBAL R47 K115     ; R47 := ZERO_ROTATION
703 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
704 [-]: GETGLOBAL R44 K62      ; R44 := _T
705 [-]: GETTABLE  R44 R44 K116 ; R44 := R44["SquadCountdownTimer"]
706 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 817
707 [-]: JMP       817          ; PC := 817
708 [-]: GETGLOBAL R44 K62      ; R44 := _T
709 [-]: GETTABLE  R44 R44 K117 ; R44 := R44["gPendingMission"]
710 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 742
711 [-]: JMP       742          ; PC := 742
712 [-]: GETUPVAL  R44 U24      ; R44 := U24
713 [-]: GETTABLE  R44 R44 K118 ; R44 := R44["Node"]
714 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 724
715 [-]: JMP       724          ; PC := 724
716 [-]: GETUPVAL  R44 U24      ; R44 := U24
717 [-]: GETTABLE  R44 R44 K118 ; R44 := R44["Node"]
718 [-]: GETTABLE  R44 R44 K29  ; R44 := R44["name"]
719 [-]: GETGLOBAL R45 K62      ; R45 := _T
720 [-]: GETTABLE  R45 R45 K117 ; R45 := R45["gPendingMission"]
721 [-]: GETTABLE  R45 R45 K119 ; R45 := R45["baseNodeName"]
722 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 742
723 [-]: JMP       742          ; PC := 742
724 [-]: GETUPVAL  R44 U20      ; R44 := U20
725 [-]: GETGLOBAL R45 K61      ; R45 := 0x9FAED6BC
726 [-]: GETGLOBAL R46 K62      ; R46 := _T
727 [-]: GETTABLE  R46 R46 K117 ; R46 := R46["gPendingMission"]
728 [-]: GETTABLE  R46 R46 K119 ; R46 := R46["baseNodeName"]
729 [-]: CALL      R45 2 2      ; R45 := R45(R46)
730 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
731 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 742
732 [-]: JMP       742          ; PC := 742
733 [-]: GETUPVAL  R44 U24      ; R44 := U24
734 [-]: GETUPVAL  R45 U20      ; R45 := U20
735 [-]: GETGLOBAL R46 K61      ; R46 := 0x9FAED6BC
736 [-]: GETGLOBAL R47 K62      ; R47 := _T
737 [-]: GETTABLE  R47 R47 K117 ; R47 := R47["gPendingMission"]
738 [-]: GETTABLE  R47 R47 K119 ; R47 := R47["baseNodeName"]
739 [-]: CALL      R46 2 2      ; R46 := R46(R47)
740 [-]: GETTABLE  R45 R45 R46  ; R45 := R45[R46]
741 [-]: SETTABLE  R44 K118 R45 ; R44["Node"] := R45
742 [-]: GETUPVAL  R44 U24      ; R44 := U24
743 [-]: GETTABLE  R44 R44 K118 ; R44 := R44["Node"]
744 [-]: EQ        1 R44 K38    ; if R44 == nil then PC := 817
745 [-]: JMP       817          ; PC := 817
746 [-]: GETUPVAL  R44 U24      ; R44 := U24
747 [-]: GETTABLE  R44 R44 K120 ; R44 := R44["Timer"]
748 [-]: GETGLOBAL R45 K62      ; R45 := _T
749 [-]: GETTABLE  R45 R45 K116 ; R45 := R45["SquadCountdownTimer"]
750 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 817
751 [-]: JMP       817          ; PC := 817
752 [-]: LOADK     R44 K104     ; R44 := -1
753 [-]: GETUPVAL  R45 U24      ; R45 := U24
754 [-]: GETTABLE  R45 R45 K120 ; R45 := R45["Timer"]
755 [-]: EQ        1 R45 K38    ; if R45 == nil then PC := 763
756 [-]: JMP       763          ; PC := 763
757 [-]: GETGLOBAL R45 K91      ; R45 := math
758 [-]: GETTABLE  R45 R45 K121 ; R45 := R45["0xBCF846DF"]
759 [-]: GETUPVAL  R46 U24      ; R46 := U24
760 [-]: GETTABLE  R46 R46 K120 ; R46 := R46["Timer"]
761 [-]: CALL      R45 2 2      ; R45 := R45(R46)
762 [-]: MOVE      R44 R45      ; R44 := R45
763 [-]: GETUPVAL  R45 U24      ; R45 := U24
764 [-]: GETGLOBAL R46 K62      ; R46 := _T
765 [-]: GETTABLE  R46 R46 K116 ; R46 := R46["SquadCountdownTimer"]
766 [-]: SETTABLE  R45 K120 R46 ; R45["Timer"] := R46
767 [-]: GETUPVAL  R45 U24      ; R45 := U24
768 [-]: GETTABLE  R45 R45 K120 ; R45 := R45["Timer"]
769 [-]: EQ        0 R45 K104   ; if R45 ~= -1 then PC := 793
770 [-]: JMP       793          ; PC := 793
771 [-]: GETUPVAL  R45 U24      ; R45 := U24
772 [-]: SETTABLE  R45 K118 K38 ; R45["Node"] := nil
773 [-]: GETUPVAL  R45 U24      ; R45 := U24
774 [-]: GETTABLE  R45 R45 K122 ; R45 := R45["TransitioningOut"]
775 [-]: TEST      R45 0        ; if not R45 then PC := 793
776 [-]: JMP       793          ; PC := 793
777 [-]: GETUPVAL  R45 U24      ; R45 := U24
778 [-]: SETTABLE  R45 K122 K123; R45["TransitioningOut"] := "0x0"
779 [-]: GETUPVAL  R45 U24      ; R45 := U24
780 [-]: GETTABLE  R45 R45 K124 ; R45 := R45["InitialFOV"]
781 [-]: EQ        1 R45 K38    ; if R45 == nil then PC := 789
782 [-]: JMP       789          ; PC := 789
783 [-]: GETUPVAL  R45 U1       ; R45 := U1
784 [-]: GETTABLE  R45 R45 K79  ; R45 := R45["cameraSpot"]
785 [-]: SELF      R45 R45 K125 ; R46 := R45; R45 := R45["0x95E6F2AA"]
786 [-]: GETUPVAL  R47 U24      ; R47 := U24
787 [-]: GETTABLE  R47 R47 K124 ; R47 := R47["InitialFOV"]
788 [-]: CALL      R45 3 1      ; R45(R46,R47)
789 [-]: GETUPVAL  R45 U43      ; R45 := U43
790 [-]: SETTABLE  R45 K126 K123; R45["Locked"] := "0x0"
791 [-]: MOVE      R45 R0       ; R45 := R0
792 [-]: MOVE      R45 R19      ; R45 := R19
793 [-]: GETGLOBAL R45 K91      ; R45 := math
794 [-]: GETTABLE  R45 R45 K121 ; R45 := R45["0xBCF846DF"]
795 [-]: GETUPVAL  R46 U24      ; R46 := U24
796 [-]: GETTABLE  R46 R46 K120 ; R46 := R46["Timer"]
797 [-]: CALL      R45 2 2      ; R45 := R45(R46)
798 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 817
799 [-]: JMP       817          ; PC := 817
800 [-]: GETUPVAL  R46 U24      ; R46 := U24
801 [-]: GETTABLE  R46 R46 K118 ; R46 := R46["Node"]
802 [-]: EQ        1 R46 K38    ; if R46 == nil then PC := 817
803 [-]: JMP       817          ; PC := 817
804 [-]: GETUPVAL  R46 U10      ; R46 := U10
805 [-]: GETUPVAL  R47 U11      ; R47 := U11
806 [-]: GETTABLE  R47 R47 K40  ; R47 := R47["0xAC19E744"]
807 [-]: GETGLOBAL R48 K2       ; R48 := mMovie
808 [-]: GETUPVAL  R49 U24      ; R49 := U24
809 [-]: GETTABLE  R49 R49 K118 ; R49 := R49["Node"]
810 [-]: GETTABLE  R49 R49 K41  ; R49 := R49["clipName"]
811 [-]: GETGLOBAL R50 K128     ; R50 := nodeCountdownEffect
812 [-]: LOADK     R51 K19      ; R51 := 0
813 [-]: LOADK     R52 K19      ; R52 := 0
814 [-]: GETGLOBAL R53 K43      ; R53 := gBackgroundRegion
815 [-]: CALL      R47 7 2      ; R47 := R47(R48,R49,R50,R51,R52,R53)
816 [-]: SETTABLE  R46 K127 R47 ; R46["CountdownFx"] := R47
817 [-]: GETGLOBAL R46 K129     ; R46 := gFlashMgr
818 [-]: SELF      R46 R46 K130 ; R47 := R46; R46 := R46["0x35FF770F"]
819 [-]: CALL      R46 2 2      ; R46 := R46(R47)
820 [-]: GETGLOBAL R47 K2       ; R47 := mMovie
821 [-]: EQ        0 R46 R47    ; if R46 ~= R47 then PC := 1001
822 [-]: JMP       1001         ; PC := 1001
823 [-]: GETGLOBAL R46 K91      ; R46 := math
824 [-]: GETTABLE  R46 R46 K131 ; R46 := R46["0x8B011038"]
825 [-]: GETGLOBAL R47 K2       ; R47 := mMovie
826 [-]: SELF      R47 R47 K87  ; R48 := R47; R47 := R47["0xF595D5E1"]
827 [-]: CALL      R47 2 2      ; R47 := R47(R48)
828 [-]: GETGLOBAL R48 K2       ; R48 := mMovie
829 [-]: SELF      R48 R48 K132 ; R49 := R48; R48 := R48["0xF3E132E0"]
830 [-]: CALL      R48 2 0      ; R48,... := R48(R49)
831 [-]: CALL      R46 0 2      ; R46 := R46(R47,...)
832 [-]: GETGLOBAL R47 K91      ; R47 := math
833 [-]: GETTABLE  R47 R47 K131 ; R47 := R47["0x8B011038"]
834 [-]: GETGLOBAL R48 K2       ; R48 := mMovie
835 [-]: SELF      R48 R48 K89  ; R49 := R48; R48 := R48["0xEE069D65"]
836 [-]: CALL      R48 2 2      ; R48 := R48(R49)
837 [-]: GETGLOBAL R49 K2       ; R49 := mMovie
838 [-]: SELF      R49 R49 K133 ; R50 := R49; R49 := R49["0x68998E7D"]
839 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
840 [-]: CALL      R47 0 2      ; R47 := R47(R48,...)
841 [-]: GETUPVAL  R48 U44      ; R48 := U44
842 [-]: LEN       R48 R48      ; R48 := # R48
843 [-]: LT        1 K19 R48    ; if 0 < R48 then PC := 849
844 [-]: JMP       849          ; PC := 849
845 [-]: GETUPVAL  R48 U45      ; R48 := U45
846 [-]: LEN       R48 R48      ; R48 := # R48
847 [-]: LT        0 K19 R48    ; if 0 >= R48 then PC := 1001
848 [-]: JMP       1001         ; PC := 1001
849 [-]: GETUPVAL  R48 U46      ; R48 := U46
850 [-]: LT        0 K19 R48    ; if 0 >= R48 then PC := 1001
851 [-]: JMP       1001         ; PC := 1001
852 [-]: GETUPVAL  R48 U47      ; R48 := U47
853 [-]: GETGLOBAL R49 K80      ; R49 := 0x4CDEF9FF
854 [-]: CALL      R49 1 2      ; R49 := R49()
855 [-]: SUB       R48 R48 R49  ; R48 := R48 - R49
856 [-]: MOVE      R48 R47      ; R48 := R47
857 [-]: GETUPVAL  R48 U47      ; R48 := U47
858 [-]: LE        0 R48 K19    ; if R48 > 0 then PC := 1001
859 [-]: JMP       1001         ; PC := 1001
860 [-]: GETUPVAL  R48 U11      ; R48 := U11
861 [-]: GETTABLE  R48 R48 K134 ; R48 := R48["0xF81722A2"]
862 [-]: GETUPVAL  R49 U48      ; R49 := U48
863 [-]: LOADK     R50 K22      ; R50 := 1
864 [-]: LOADK     R51 K54      ; R51 := 2
865 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
866 [-]: MOVE      R48 R47      ; R48 := R47
867 [-]: MOVE      R48 R0       ; R48 := R0
868 [-]: LOADK     R49 K22      ; R49 := 1
869 [-]: GETUPVAL  R50 U44      ; R50 := U44
870 [-]: LEN       R50 R50      ; R50 := # R50
871 [-]: LOADK     R51 K22      ; R51 := 1
872 [-]: FORPREP   R49 934      ; R49 -= R51; PC := 934
873 [-]: GETGLOBAL R53 K135     ; R53 := 0xF595ADDE
874 [-]: GETGLOBAL R54 K2       ; R54 := mMovie
875 [-]: SELF      R54 R54 K136 ; R55 := R54; R54 := R54["0x294C4B0B"]
876 [-]: GETUPVAL  R56 U44      ; R56 := U44
877 [-]: GETTABLE  R56 R56 R52  ; R56 := R56[R52]
878 [-]: GETTABLE  R56 R56 K118 ; R56 := R56["Node"]
879 [-]: GETTABLE  R56 R56 K137 ; R56 := R56["memberIndex"]
880 [-]: LOADK     R57 K138     ; R57 := "_x"
881 [-]: CALL      R54 4 0      ; R54,... := R54(R55,R56,R57)
882 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
883 [-]: GETGLOBAL R54 K135     ; R54 := 0xF595ADDE
884 [-]: GETGLOBAL R55 K2       ; R55 := mMovie
885 [-]: SELF      R55 R55 K136 ; R56 := R55; R55 := R55["0x294C4B0B"]
886 [-]: GETUPVAL  R57 U44      ; R57 := U44
887 [-]: GETTABLE  R57 R57 R52  ; R57 := R57[R52]
888 [-]: GETTABLE  R57 R57 K118 ; R57 := R57["Node"]
889 [-]: GETTABLE  R57 R57 K137 ; R57 := R57["memberIndex"]
890 [-]: LOADK     R58 K139     ; R58 := "_y"
891 [-]: CALL      R55 4 0      ; R55,... := R55(R56,R57,R58)
892 [-]: CALL      R54 0 2      ; R54 := R54(R55,...)
893 [-]: GETUPVAL  R55 U11      ; R55 := U11
894 [-]: GETTABLE  R55 R55 K140 ; R55 := R55["0x4F6BF2C8"]
895 [-]: GETGLOBAL R56 K2       ; R56 := mMovie
896 [-]: NEWTABLE  R57 0 2      ; R57 := {}
897 [-]: SETTABLE  R57 K90 R53  ; R57["x"] := R53
898 [-]: SETTABLE  R57 K97 R54  ; R57["y"] := R54
899 [-]: CALL      R55 3 2      ; R55 := R55(R56,R57)
900 [-]: GETTABLE  R56 R55 K90  ; R56 := R55["x"]
901 [-]: LT        0 K19 R56    ; if 0 >= R56 then PC := 933
902 [-]: JMP       933          ; PC := 933
903 [-]: GETTABLE  R56 R55 K97  ; R56 := R55["y"]
904 [-]: LT        0 K19 R56    ; if 0 >= R56 then PC := 933
905 [-]: JMP       933          ; PC := 933
906 [-]: GETTABLE  R56 R55 K90  ; R56 := R55["x"]
907 [-]: LT        0 R56 K22    ; if R56 >= 1 then PC := 933
908 [-]: JMP       933          ; PC := 933
909 [-]: GETTABLE  R56 R55 K97  ; R56 := R55["y"]
910 [-]: LT        0 R56 K22    ; if R56 >= 1 then PC := 933
911 [-]: JMP       933          ; PC := 933
912 [-]: GETUPVAL  R56 U0       ; R56 := U0
913 [-]: SELF      R56 R56 K141 ; R57 := R56; R56 := R56["0x61494587"]
914 [-]: DIV       R58 R53 R46  ; R58 := R53 / R46
915 [-]: MUL       R58 R58 K22  ; R58 := R58 * 1
916 [-]: CLOSURE   R59 1        ; R59 := closure(Function #129.2)
917 [-]: GETUPVAL  R0 U44       ; R0 := U44
918 [-]: MOVE      R0 R52       ; R0 := R52
919 [-]: GETUPVAL  R0 U2        ; R0 := U2
920 [-]: GETUPVAL  R0 U10       ; R0 := U10
921 [-]: GETUPVAL  R0 U11       ; R0 := U11
922 [-]: CALL      R56 4 1      ; R56(R57,R58,R59)
923 [-]: TEST      R48 1        ; if R48 then PC := 933
924 [-]: JMP       933          ; PC := 933
925 [-]: MOVE      R48 R1       ; R48 := R1
926 [-]: GETUPVAL  R56 U0       ; R56 := U0
927 [-]: SELF      R56 R56 K141 ; R57 := R56; R56 := R56["0x61494587"]
928 [-]: DIV       R58 R53 R46  ; R58 := R53 / R46
929 [-]: MUL       R58 R58 K22  ; R58 := R58 * 1
930 [-]: CLOSURE   R59 2        ; R59 := closure(Function #129.3)
931 [-]: GETUPVAL  R0 U11       ; R0 := U11
932 [-]: CALL      R56 4 1      ; R56(R57,R58,R59)
933 [-]: CLOSE     R52          ; SAVE R52,...
934 [-]: FORLOOP   R49 873      ; R49 += R51; if R49 <= R50 then begin PC := 873; R52 := R49 end
935 [-]: LOADK     R52 K22      ; R52 := 1
936 [-]: GETUPVAL  R53 U45      ; R53 := U45
937 [-]: LEN       R53 R53      ; R53 := # R53
938 [-]: LOADK     R54 K22      ; R54 := 1
939 [-]: FORPREP   R52 1000     ; R52 -= R54; PC := 1000
940 [-]: GETGLOBAL R56 K135     ; R56 := 0xF595ADDE
941 [-]: GETGLOBAL R57 K2       ; R57 := mMovie
942 [-]: SELF      R57 R57 K136 ; R58 := R57; R57 := R57["0x294C4B0B"]
943 [-]: GETUPVAL  R59 U45      ; R59 := U45
944 [-]: GETTABLE  R59 R59 R55  ; R59 := R59[R55]
945 [-]: GETTABLE  R59 R59 K118 ; R59 := R59["Node"]
946 [-]: GETTABLE  R59 R59 K137 ; R59 := R59["memberIndex"]
947 [-]: LOADK     R60 K138     ; R60 := "_x"
948 [-]: CALL      R57 4 0      ; R57,... := R57(R58,R59,R60)
949 [-]: CALL      R56 0 2      ; R56 := R56(R57,...)
950 [-]: GETGLOBAL R57 K135     ; R57 := 0xF595ADDE
951 [-]: GETGLOBAL R58 K2       ; R58 := mMovie
952 [-]: SELF      R58 R58 K136 ; R59 := R58; R58 := R58["0x294C4B0B"]
953 [-]: GETUPVAL  R60 U45      ; R60 := U45
954 [-]: GETTABLE  R60 R60 R55  ; R60 := R60[R55]
955 [-]: GETTABLE  R60 R60 K118 ; R60 := R60["Node"]
956 [-]: GETTABLE  R60 R60 K137 ; R60 := R60["memberIndex"]
957 [-]: LOADK     R61 K139     ; R61 := "_y"
958 [-]: CALL      R58 4 0      ; R58,... := R58(R59,R60,R61)
959 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
960 [-]: GETUPVAL  R58 U11      ; R58 := U11
961 [-]: GETTABLE  R58 R58 K140 ; R58 := R58["0x4F6BF2C8"]
962 [-]: GETGLOBAL R59 K2       ; R59 := mMovie
963 [-]: NEWTABLE  R60 0 2      ; R60 := {}
964 [-]: SETTABLE  R60 K90 R56  ; R60["x"] := R56
965 [-]: SETTABLE  R60 K97 R57  ; R60["y"] := R57
966 [-]: CALL      R58 3 2      ; R58 := R58(R59,R60)
967 [-]: GETTABLE  R59 R58 K90  ; R59 := R58["x"]
968 [-]: LT        0 K19 R59    ; if 0 >= R59 then PC := 999
969 [-]: JMP       999          ; PC := 999
970 [-]: GETTABLE  R59 R58 K97  ; R59 := R58["y"]
971 [-]: LT        0 K19 R59    ; if 0 >= R59 then PC := 999
972 [-]: JMP       999          ; PC := 999
973 [-]: GETTABLE  R59 R58 K90  ; R59 := R58["x"]
974 [-]: LT        0 R59 K22    ; if R59 >= 1 then PC := 999
975 [-]: JMP       999          ; PC := 999
976 [-]: GETTABLE  R59 R58 K97  ; R59 := R58["y"]
977 [-]: LT        0 R59 K22    ; if R59 >= 1 then PC := 999
978 [-]: JMP       999          ; PC := 999
979 [-]: GETUPVAL  R59 U0       ; R59 := U0
980 [-]: SELF      R59 R59 K141 ; R60 := R59; R59 := R59["0x61494587"]
981 [-]: DIV       R61 R56 R46  ; R61 := R56 / R46
982 [-]: MUL       R61 R61 K22  ; R61 := R61 * 1
983 [-]: CLOSURE   R62 3        ; R62 := closure(Function #129.4)
984 [-]: GETUPVAL  R0 U45       ; R0 := U45
985 [-]: MOVE      R0 R55       ; R0 := R55
986 [-]: GETUPVAL  R0 U10       ; R0 := U10
987 [-]: GETUPVAL  R0 U11       ; R0 := U11
988 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
989 [-]: TEST      R48 1        ; if R48 then PC := 999
990 [-]: JMP       999          ; PC := 999
991 [-]: MOVE      R48 R1       ; R48 := R1
992 [-]: GETUPVAL  R59 U0       ; R59 := U0
993 [-]: SELF      R59 R59 K141 ; R60 := R59; R59 := R59["0x61494587"]
994 [-]: DIV       R61 R56 R46  ; R61 := R56 / R46
995 [-]: MUL       R61 R61 K22  ; R61 := R61 * 1
996 [-]: CLOSURE   R62 4        ; R62 := closure(Function #129.5)
997 [-]: GETUPVAL  R0 U11       ; R0 := U11
998 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
999 [-]: CLOSE     R55          ; SAVE R55,...
1000 [-]: FORLOOP   R52 940      ; R52 += R54; if R52 <= R53 then begin PC := 940; R55 := R52 end
1001 [-]: GETUPVAL  R55 U21      ; R55 := U21
1002 [-]: GETTABLE  R55 R55 K118 ; R55 := R55["Node"]
1003 [-]: EQ        1 R55 K38    ; if R55 == nil then PC := 1145
1004 [-]: JMP       1145         ; PC := 1145
1005 [-]: GETUPVAL  R55 U21      ; R55 := U21
1006 [-]: GETTABLE  R55 R55 K142 ; R55 := R55["UpdateTimer"]
1007 [-]: EQ        1 R55 K38    ; if R55 == nil then PC := 1145
1008 [-]: JMP       1145         ; PC := 1145
1009 [-]: GETUPVAL  R55 U21      ; R55 := U21
1010 [-]: GETTABLE  R55 R55 K143 ; R55 := R55["TimerPre"]
1011 [-]: EQ        1 R55 K38    ; if R55 == nil then PC := 1145
1012 [-]: JMP       1145         ; PC := 1145
1013 [-]: GETUPVAL  R55 U21      ; R55 := U21
1014 [-]: GETTABLE  R55 R55 K144 ; R55 := R55["TimerPost"]
1015 [-]: EQ        1 R55 K38    ; if R55 == nil then PC := 1145
1016 [-]: JMP       1145         ; PC := 1145
1017 [-]: GETUPVAL  R55 U21      ; R55 := U21
1018 [-]: GETTABLE  R55 R55 K145 ; R55 := R55["NodeTime"]
1019 [-]: EQ        1 R55 K38    ; if R55 == nil then PC := 1145
1020 [-]: JMP       1145         ; PC := 1145
1021 [-]: GETUPVAL  R55 U21      ; R55 := U21
1022 [-]: GETUPVAL  R56 U21      ; R56 := U21
1023 [-]: GETTABLE  R56 R56 K142 ; R56 := R56["UpdateTimer"]
1024 [-]: ADD       R56 R56 R0   ; R56 := R56 + R0
1025 [-]: SETTABLE  R55 K142 R56 ; R55["UpdateTimer"] := R56
1026 [-]: GETUPVAL  R55 U21      ; R55 := U21
1027 [-]: GETTABLE  R55 R55 K142 ; R55 := R55["UpdateTimer"]
1028 [-]: LT        0 K22 R55    ; if 1 >= R55 then PC := 1145
1029 [-]: JMP       1145         ; PC := 1145
1030 [-]: GETUPVAL  R55 U21      ; R55 := U21
1031 [-]: GETUPVAL  R56 U21      ; R56 := U21
1032 [-]: GETTABLE  R56 R56 K145 ; R56 := R56["NodeTime"]
1033 [-]: GETUPVAL  R57 U21      ; R57 := U21
1034 [-]: GETTABLE  R57 R57 K142 ; R57 := R57["UpdateTimer"]
1035 [-]: SUB       R56 R56 R57  ; R56 := R56 - R57
1036 [-]: SETTABLE  R55 K145 R56 ; R55["NodeTime"] := R56
1037 [-]: GETUPVAL  R55 U49      ; R55 := U49
1038 [-]: GETTABLE  R55 R55 K146 ; R55 := R55["0x555EFA5"]
1039 [-]: GETUPVAL  R56 U50      ; R56 := U50
1040 [-]: GETTABLE  R56 R56 K147 ; R56 := R56["mMission"]
1041 [-]: GETTABLE  R56 R56 K148 ; R56 := R56["location"]
1042 [-]: CALL      R55 2 2      ; R55 := R55(R56)
1043 [-]: GETUPVAL  R56 U49      ; R56 := U49
1044 [-]: GETTABLE  R56 R56 K149 ; R56 := R56["0x447FCC2F"]
1045 [-]: MOVE      R57 R55      ; R57 := R55
1046 [-]: GETUPVAL  R58 U50      ; R58 := U50
1047 [-]: GETTABLE  R58 R58 K147 ; R58 := R58["mMission"]
1048 [-]: GETTABLE  R58 R58 K148 ; R58 := R58["location"]
1049 [-]: CALL      R56 3 4      ; R56,R57,R58 := R56(R57,R58)
1050 [-]: GETUPVAL  R59 U21      ; R59 := U21
1051 [-]: GETTABLE  R59 R59 K145 ; R59 := R59["NodeTime"]
1052 [-]: LT        0 R59 K19    ; if R59 >= 0 then PC := 1057
1053 [-]: JMP       1057         ; PC := 1057
1054 [-]: GETUPVAL  R59 U21      ; R59 := U21
1055 [-]: SETTABLE  R59 K145 R58 ; R59["NodeTime"] := R58
1056 [-]: JMP       1059         ; PC := 1059
1057 [-]: GETUPVAL  R59 U21      ; R59 := U21
1058 [-]: GETTABLE  R58 R59 K145 ; R58 := R59["NodeTime"]
1059 [-]: GETUPVAL  R59 U21      ; R59 := U21
1060 [-]: GETTABLE  R59 R59 K143 ; R59 := R59["TimerPre"]
1061 [-]: GETUPVAL  R60 U50      ; R60 := U50
1062 [-]: GETTABLE  R60 R60 K147 ; R60 := R60["mMission"]
1063 [-]: GETTABLE  R60 R60 K148 ; R60 := R60["location"]
1064 [-]: GETUPVAL  R61 U49      ; R61 := U49
1065 [-]: GETTABLE  R61 R61 K150 ; R61 := R61["ORB_VALLIS_NODE_TAG"]
1066 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 1101
1067 [-]: JMP       1101         ; PC := 1101
1068 [-]: MOVE      R60 R59      ; R60 := R59
1069 [-]: LOADK     R61 K151     ; R61 := "<font color=\"#A9A9A9\">"
1070 [-]: GETGLOBAL R62 K27      ; R62 := string
1071 [-]: GETTABLE  R62 R62 K152 ; R62 := R62["0x639C642A"]
1072 [-]: GETGLOBAL R63 K2       ; R63 := mMovie
1073 [-]: SELF      R63 R63 K153 ; R64 := R63; R63 := R63["0x5DB0BD4"]
1074 [-]: LOADK     R65 K154     ; R65 := "/Lotus/Language/SolarisVenus/Temperature"
1075 [-]: MOVE      R66 R1       ; R66 := R1
1076 [-]: CALL      R63 4 0      ; R63,... := R63(R64,R65,R66)
1077 [-]: CALL      R62 0 2      ; R62 := R62(R63,...)
1078 [-]: LOADK     R63 K155     ; R63 := "  </font><font color=\"#CACACA\"><b>"
1079 [-]: GETGLOBAL R64 K2       ; R64 := mMovie
1080 [-]: SELF      R64 R64 K153 ; R65 := R64; R64 := R64["0x5DB0BD4"]
1081 [-]: LOADK     R66 K156     ; R66 := "/Lotus/Language/SystemMessages/TimeUntil"
1082 [-]: MOVE      R67 R0       ; R67 := R0
1083 [-]: NEWTABLE  R68 0 2      ; R68 := {}
1084 [-]: GETGLOBAL R69 K2       ; R69 := mMovie
1085 [-]: SELF      R69 R69 K153 ; R70 := R69; R69 := R69["0x5DB0BD4"]
1086 [-]: MOVE      R71 R57      ; R71 := R57
1087 [-]: MOVE      R72 R0       ; R72 := R0
1088 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
1089 [-]: SETTABLE  R68 K157 R69 ; R68["LABEL"] := R69
1090 [-]: GETUPVAL  R69 U49      ; R69 := U49
1091 [-]: GETTABLE  R69 R69 K159 ; R69 := R69["0xC65D09DD"]
1092 [-]: GETGLOBAL R70 K2       ; R70 := mMovie
1093 [-]: MOVE      R71 R58      ; R71 := R58
1094 [-]: LOADK     R72 K160     ; R72 := "CompactOne"
1095 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
1096 [-]: SETTABLE  R68 K158 R69 ; R68["TIME"] := R69
1097 [-]: CALL      R64 5 2      ; R64 := R64(R65,R66,R67,R68)
1098 [-]: LOADK     R65 K161     ; R65 := "</b><br></font>"
1099 [-]: CONCAT    R59 R60 R65  ; R59 := R60 .. R61 .. R62 .. R63 .. R64 .. R65
1100 [-]: JMP       1133         ; PC := 1133
1101 [-]: MOVE      R60 R59      ; R60 := R59
1102 [-]: LOADK     R61 K151     ; R61 := "<font color=\"#A9A9A9\">"
1103 [-]: GETGLOBAL R62 K27      ; R62 := string
1104 [-]: GETTABLE  R62 R62 K152 ; R62 := R62["0x639C642A"]
1105 [-]: GETGLOBAL R63 K2       ; R63 := mMovie
1106 [-]: SELF      R63 R63 K153 ; R64 := R63; R63 := R63["0x5DB0BD4"]
1107 [-]: LOADK     R65 K162     ; R65 := "/Lotus/Language/Menu/Photobooth_TimeOfDay"
1108 [-]: MOVE      R66 R1       ; R66 := R1
1109 [-]: CALL      R63 4 0      ; R63,... := R63(R64,R65,R66)
1110 [-]: CALL      R62 0 2      ; R62 := R62(R63,...)
1111 [-]: LOADK     R63 K155     ; R63 := "  </font><font color=\"#CACACA\"><b>"
1112 [-]: GETGLOBAL R64 K2       ; R64 := mMovie
1113 [-]: SELF      R64 R64 K153 ; R65 := R64; R64 := R64["0x5DB0BD4"]
1114 [-]: LOADK     R66 K156     ; R66 := "/Lotus/Language/SystemMessages/TimeUntil"
1115 [-]: MOVE      R67 R0       ; R67 := R0
1116 [-]: NEWTABLE  R68 0 2      ; R68 := {}
1117 [-]: GETGLOBAL R69 K2       ; R69 := mMovie
1118 [-]: SELF      R69 R69 K153 ; R70 := R69; R69 := R69["0x5DB0BD4"]
1119 [-]: MOVE      R71 R57      ; R71 := R57
1120 [-]: MOVE      R72 R0       ; R72 := R0
1121 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
1122 [-]: SETTABLE  R68 K157 R69 ; R68["LABEL"] := R69
1123 [-]: GETUPVAL  R69 U49      ; R69 := U49
1124 [-]: GETTABLE  R69 R69 K159 ; R69 := R69["0xC65D09DD"]
1125 [-]: GETGLOBAL R70 K2       ; R70 := mMovie
1126 [-]: MOVE      R71 R58      ; R71 := R58
1127 [-]: LOADK     R72 K160     ; R72 := "CompactOne"
1128 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
1129 [-]: SETTABLE  R68 K158 R69 ; R68["TIME"] := R69
1130 [-]: CALL      R64 5 2      ; R64 := R64(R65,R66,R67,R68)
1131 [-]: LOADK     R65 K161     ; R65 := "</b><br></font>"
1132 [-]: CONCAT    R59 R60 R65  ; R59 := R60 .. R61 .. R62 .. R63 .. R64 .. R65
1133 [-]: MOVE      R60 R59      ; R60 := R59
1134 [-]: GETUPVAL  R61 U21      ; R61 := U21
1135 [-]: GETTABLE  R61 R61 K144 ; R61 := R61["TimerPost"]
1136 [-]: CONCAT    R59 R60 R61  ; R59 := R60 .. R61
1137 [-]: GETGLOBAL R60 K2       ; R60 := mMovie
1138 [-]: SELF      R60 R60 K163 ; R61 := R60; R60 := R60["0x1C19D966"]
1139 [-]: LOADK     R62 K164     ; R62 := "InfoTip.Label"
1140 [-]: LOADK     R63 K165     ; R63 := "text"
1141 [-]: MOVE      R64 R59      ; R64 := R59
1142 [-]: CALL      R60 5 1      ; R60(R61,R62,R63,R64)
1143 [-]: GETUPVAL  R60 U21      ; R60 := U21
1144 [-]: SETTABLE  R60 K142 K19 ; R60["UpdateTimer"] := 0
1145 [-]: GETGLOBAL R60 K1       ; R60 := 0x400E7765
1146 [-]: GETUPVAL  R61 U10      ; R61 := U10
1147 [-]: GETTABLE  R61 R61 K166 ; R61 := R61["CountDownFx"]
1148 [-]: CALL      R60 2 2      ; R60 := R60(R61)
1149 [-]: TEST      R60 1        ; if R60 then PC := 1163
1150 [-]: JMP       1163         ; PC := 1163
1151 [-]: GETGLOBAL R60 K1       ; R60 := 0x400E7765
1152 [-]: GETUPVAL  R61 U10      ; R61 := U10
1153 [-]: GETTABLE  R61 R61 K166 ; R61 := R61["CountDownFx"]
1154 [-]: GETTABLE  R61 R61 K39  ; R61 := R61["mInstance"]
1155 [-]: CALL      R60 2 2      ; R60 := R60(R61)
1156 [-]: TEST      R60 1        ; if R60 then PC := 1163
1157 [-]: JMP       1163         ; PC := 1163
1158 [-]: GETUPVAL  R60 U10      ; R60 := U10
1159 [-]: GETTABLE  R60 R60 K166 ; R60 := R60["CountDownFx"]
1160 [-]: SELF      R60 R60 K4   ; R61 := R60; R60 := R60["0x8C7099E9"]
1161 [-]: MOVE      R62 R0       ; R62 := R0
1162 [-]: CALL      R60 3 1      ; R60(R61,R62)
1163 [-]: GETGLOBAL R60 K167     ; R60 := 0xECFDD17
1164 [-]: GETUPVAL  R61 U10      ; R61 := U10
1165 [-]: GETTABLE  R61 R61 K168 ; R61 := R61["PendingFx"]
1166 [-]: CALL      R60 2 4      ; R60,R61,R62 := R60(R61)
1167 [-]: JMP       1180         ; PC := 1180
1168 [-]: GETGLOBAL R65 K1       ; R65 := 0x400E7765
1169 [-]: GETTABLE  R66 R64 K39  ; R66 := R64["mInstance"]
1170 [-]: CALL      R65 2 2      ; R65 := R65(R66)
1171 [-]: TEST      R65 1        ; if R65 then PC := 1177
1172 [-]: JMP       1177         ; PC := 1177
1173 [-]: SELF      R65 R64 K4   ; R66 := R64; R65 := R64["0x8C7099E9"]
1174 [-]: MOVE      R67 R0       ; R67 := R0
1175 [-]: CALL      R65 3 1      ; R65(R66,R67)
1176 [-]: JMP       1180         ; PC := 1180
1177 [-]: GETUPVAL  R65 U10      ; R65 := U10
1178 [-]: GETTABLE  R65 R65 K168 ; R65 := R65["PendingFx"]
1179 [-]: SETTABLE  R65 R63 K38  ; R65[R63] := nil
1180 [-]: TFORLOOP  R60 2        ; R63,R64 :=  R60(R61,R62); if R63 ~= nil then begin PC = 1168; R62 := R63 end
1181 [-]: JMP       1168         ; PC := 1168
1182 [-]: GETGLOBAL R65 K167     ; R65 := 0xECFDD17
1183 [-]: GETUPVAL  R66 U10      ; R66 := U10
1184 [-]: GETTABLE  R66 R66 K169 ; R66 := R66["QuestFx"]
1185 [-]: CALL      R65 2 4      ; R65,R66,R67 := R65(R66)
1186 [-]: JMP       1199         ; PC := 1199
1187 [-]: GETGLOBAL R70 K1       ; R70 := 0x400E7765
1188 [-]: GETTABLE  R71 R69 K39  ; R71 := R69["mInstance"]
1189 [-]: CALL      R70 2 2      ; R70 := R70(R71)
1190 [-]: TEST      R70 1        ; if R70 then PC := 1196
1191 [-]: JMP       1196         ; PC := 1196
1192 [-]: SELF      R70 R69 K4   ; R71 := R69; R70 := R69["0x8C7099E9"]
1193 [-]: MOVE      R72 R0       ; R72 := R0
1194 [-]: CALL      R70 3 1      ; R70(R71,R72)
1195 [-]: JMP       1199         ; PC := 1199
1196 [-]: GETUPVAL  R70 U10      ; R70 := U10
1197 [-]: GETTABLE  R70 R70 K169 ; R70 := R70["QuestFx"]
1198 [-]: SETTABLE  R70 R68 K38  ; R70[R68] := nil
1199 [-]: TFORLOOP  R65 2        ; R68,R69 :=  R65(R66,R67); if R68 ~= nil then begin PC = 1187; R67 := R68 end
1200 [-]: JMP       1187         ; PC := 1187
1201 [-]: GETGLOBAL R70 K167     ; R70 := 0xECFDD17
1202 [-]: GETUPVAL  R71 U10      ; R71 := U10
1203 [-]: GETTABLE  R71 R71 K37  ; R71 := R71["SentientFx"]
1204 [-]: CALL      R70 2 4      ; R70,R71,R72 := R70(R71)
1205 [-]: JMP       1218         ; PC := 1218
1206 [-]: GETGLOBAL R75 K1       ; R75 := 0x400E7765
1207 [-]: GETTABLE  R76 R74 K39  ; R76 := R74["mInstance"]
1208 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1209 [-]: TEST      R75 1        ; if R75 then PC := 1215
1210 [-]: JMP       1215         ; PC := 1215
1211 [-]: SELF      R75 R74 K4   ; R76 := R74; R75 := R74["0x8C7099E9"]
1212 [-]: MOVE      R77 R0       ; R77 := R0
1213 [-]: CALL      R75 3 1      ; R75(R76,R77)
1214 [-]: JMP       1218         ; PC := 1218
1215 [-]: GETUPVAL  R75 U10      ; R75 := U10
1216 [-]: GETTABLE  R75 R75 K37  ; R75 := R75["SentientFx"]
1217 [-]: SETTABLE  R75 R73 K38  ; R75[R73] := nil
1218 [-]: TFORLOOP  R70 2        ; R73,R74 :=  R70(R71,R72); if R73 ~= nil then begin PC = 1206; R72 := R73 end
1219 [-]: JMP       1206         ; PC := 1206
1220 [-]: GETUPVAL  R75 U51      ; R75 := U51
1221 [-]: TEST      R75 0        ; if not R75 then PC := 1227
1222 [-]: JMP       1227         ; PC := 1227
1223 [-]: MOVE      R75 R0       ; R75 := R0
1224 [-]: MOVE      R75 R51      ; R75 := R51
1225 [-]: GETUPVAL  R75 U52      ; R75 := U52
1226 [-]: CALL      R75 1 1      ; R75()
1227 [-]: GETGLOBAL R75 K62      ; R75 := _T
1228 [-]: GETTABLE  R75 R75 K170 ; R75 := R75["UserInvitePending"]
1229 [-]: EQ        0 R75 K38    ; if R75 ~= nil then PC := 1232
1230 [-]: JMP       1232         ; PC := 1232
1231 [-]: MOVE      R75 R0       ; R75 := R0
1232 [-]: MOVE      R75 R1       ; R75 := R1
1233 [-]: GETUPVAL  R76 U53      ; R76 := U53
1234 [-]: EQ        1 R76 R75    ; if R76 == R75 then PC := 1239
1235 [-]: JMP       1239         ; PC := 1239
1236 [-]: MOVE      R75 R53      ; R75 := R53
1237 [-]: GETUPVAL  R76 U54      ; R76 := U54
1238 [-]: CALL      R76 1 1      ; R76()
1239 [-]: RETURN    R0 1         ; return 


; Function #129.1:
;
; Name:            
; Defined at line: 5583
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["radialSector"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mission"]
  8 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["missionType"]
  9 [-]: GETGLOBAL R1 K4        ; R1 := Lotus_Game
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["MT_JUNCTION"]
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R0 3 1       ; R0(R1,R2)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R0 U3        ; R0 := U3
 20 [-]: CALL      R0 1 1       ; R0()
 21 [-]: GETUPVAL  R0 U4        ; R0 := U4
 22 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0x25992394"]
 23 [-]: GETGLOBAL R1 K7        ; R1 := completeHoldSound
 24 [-]: CALL      R0 2 1       ; R0(R1)
 25 [-]: GETUPVAL  R0 U5        ; R0 := U5
 26 [-]: GETUPVAL  R1 U0        ; R1 := U0
 27 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 28 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
 29 [-]: GETUPVAL  R0 U6        ; R0 := U6
 30 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x61494587"]
 31 [-]: LOADK     R2 K9        ; R2 := 0.10000000149012
 32 [-]: CLOSURE   R3 0         ; R3 := closure(Function #129.1.1)
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 35 [-]: RETURN    R0 1         ; return 


; Function #129.1.1:
;
; Name:            
; Defined at line: 5595
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["Node"] := nil
  3 [-]: RETURN    R0 1         ; return 


; Function #129.2:
;
; Name:            
; Defined at line: 5740
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 62
  5 [-]: JMP       62           ; PC := 62
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 62
 11 [-]: JMP       62           ; PC := 62
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 16 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["clipName"]
 17 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 62
 18 [-]: JMP       62           ; PC := 62
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Active"]
 21 [-]: TEST      R0 0         ; if not R0 then PC := 30
 22 [-]: JMP       30           ; PC := 30
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETUPVAL  R1 U1        ; R1 := U1
 25 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 26 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 27 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["locked"]
 28 [-]: TEST      R0 1         ; if R0 then PC := 62
 29 [-]: JMP       62           ; PC := 62
 30 [-]: GETUPVAL  R0 U3        ; R0 := U3
 31 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["PendingFx"]
 32 [-]: GETUPVAL  R1 U1        ; R1 := U1
 33 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 34 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETGLOBAL R0 K6        ; R0 := 0x400E7765
 37 [-]: GETUPVAL  R1 U3        ; R1 := U3
 38 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["PendingFx"]
 39 [-]: GETUPVAL  R2 U1        ; R2 := U1
 40 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 41 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mInstance"]
 42 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 43 [-]: TEST      R0 0         ; if not R0 then PC := 62
 44 [-]: JMP       62           ; PC := 62
 45 [-]: GETUPVAL  R0 U3        ; R0 := U3
 46 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["PendingFx"]
 47 [-]: GETUPVAL  R1 U1        ; R1 := U1
 48 [-]: GETUPVAL  R2 U4        ; R2 := U4
 49 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0xAC19E744"]
 50 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 51 [-]: GETUPVAL  R4 U0        ; R4 := U0
 52 [-]: GETUPVAL  R5 U1        ; R5 := U1
 53 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 54 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Node"]
 55 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["clipName"]
 56 [-]: GETGLOBAL R5 K10       ; R5 := nextNodeEffect
 57 [-]: LOADK     R6 K11       ; R6 := 0
 58 [-]: LOADK     R7 K11       ; R7 := 0
 59 [-]: GETGLOBAL R8 K12       ; R8 := gBackgroundRegion
 60 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 61 [-]: SETTABLE  R0 R1 R2     ; R0[R1] := R2
 62 [-]: RETURN    R0 1         ; return 


; Function #129.3:
;
; Name:            
; Defined at line: 5753
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := nextNodeEffectSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #129.4:
;
; Name:            
; Defined at line: 5767
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
  5 [-]: JMP       51           ; PC := 51
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 11 [-]: JMP       51           ; PC := 51
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 16 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["clipName"]
 17 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 18 [-]: JMP       51           ; PC := 51
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["QuestFx"]
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 23 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 26 [-]: GETUPVAL  R1 U2        ; R1 := U2
 27 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["QuestFx"]
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 30 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mInstance"]
 31 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 32 [-]: TEST      R0 0         ; if not R0 then PC := 51
 33 [-]: JMP       51           ; PC := 51
 34 [-]: GETUPVAL  R0 U2        ; R0 := U2
 35 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["QuestFx"]
 36 [-]: GETUPVAL  R1 U1        ; R1 := U1
 37 [-]: GETUPVAL  R2 U3        ; R2 := U3
 38 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xAC19E744"]
 39 [-]: GETGLOBAL R3 K7        ; R3 := mMovie
 40 [-]: GETUPVAL  R4 U0        ; R4 := U0
 41 [-]: GETUPVAL  R5 U1        ; R5 := U1
 42 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 43 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Node"]
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["clipName"]
 45 [-]: GETGLOBAL R5 K8        ; R5 := questNodeEffect
 46 [-]: LOADK     R6 K9        ; R6 := 0
 47 [-]: LOADK     R7 K9        ; R7 := 0
 48 [-]: GETGLOBAL R8 K10       ; R8 := gBackgroundRegion
 49 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 50 [-]: SETTABLE  R0 R1 R2     ; R0[R1] := R2
 51 [-]: RETURN    R0 1         ; return 


; Function #129.5:
;
; Name:            
; Defined at line: 5779
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := questNodeEffectSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 5860
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Active"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 20
  4 [-]: JMP       20           ; PC := 20
  5 [-]: GETGLOBAL R0 K1        ; R0 := gMatchingService
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xD5E03646"]
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0xEB3F45BE"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["gameModeId"]
 16 [-]: EQ        1 R1 K6      ; if R1 == 0 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R1 R0        ; R1 := R0
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: LOADK     R1 K7        ; R1 := 30
 21 [-]: GETGLOBAL R2 K1        ; R2 := gMatchingService
 22 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x35DDC67D"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: LE        0 R2 K9      ; if R2 > 1 then PC := 37
 25 [-]: JMP       37           ; PC := 37
 26 [-]: GETUPVAL  R2 U1        ; R2 := U1
 27 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0xEC3342D8"]
 28 [-]: CALL      R2 1 2       ; R2 := R2()
 29 [-]: TEST      R2 0         ; if not R2 then PC := 39
 30 [-]: JMP       39           ; PC := 39
 31 [-]: GETGLOBAL R2 K1        ; R2 := gMatchingService
 32 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x9BCA84D2"]
 33 [-]: MOVE      R4 R1        ; R4 := R1
 34 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 35 [-]: MOVE      R2 R2        ; R2 := R2
 36 [-]: JMP       39           ; PC := 39
 37 [-]: MOVE      R2 R0        ; R2 := R0
 38 [-]: MOVE      R2 R1        ; R2 := R1
 39 [-]: RETURN    R2 2         ; return R2
 40 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 5875
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameRules
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x8709CE86"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x625791A8"]
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: CALL      R1 1 2       ; R1 := R1()
 14 [-]: TEST      R1 0         ; if not R1 then PC := 28
 15 [-]: JMP       28           ; PC := 28
 16 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 17 [-]: GETGLOBAL R2 K4        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SquadOverlay"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R1 K4        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SquadOverlay"]
 24 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 25 [-]: LOADK     R3 K7        ; R3 := "ForceExitMap"
 26 [-]: LOADK     R4 K8        ; R4 := ""
 27 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 28 [-]: GETGLOBAL R1 K4        ; R1 := _T
 29 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x18468666"]
 30 [-]: LOADK     R2 K10       ; R2 := "Clan"
 31 [-]: CALL      R1 2 1       ; R1(R2)
 32 [-]: GETGLOBAL R1 K4        ; R1 := _T
 33 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x18468666"]
 34 [-]: LOADK     R2 K11       ; R2 := "ClanSearch"
 35 [-]: CALL      R1 2 1       ; R1(R2)
 36 [-]: GETGLOBAL R1 K4        ; R1 := _T
 37 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x18468666"]
 38 [-]: LOADK     R2 K12       ; R2 := "InvasionSelection"
 39 [-]: CALL      R1 2 1       ; R1(R2)
 40 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 41 [-]: GETGLOBAL R2 K4        ; R2 := _T
 42 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mTrigger"]
 43 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 44 [-]: TEST      R1 1         ; if R1 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETGLOBAL R1 K4        ; R1 := _T
 47 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["mTrigger"]
 48 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1["0x8D5886B7"]
 49 [-]: LOADK     R3 K15       ; R3 := "Close"
 50 [-]: CALL      R1 3 1       ; R1(R2,R3)
 51 [-]: GETGLOBAL R1 K4        ; R1 := _T
 52 [-]: SETTABLE  R1 K16 K17   ; R1["DiegeticPosition"] := nil
 53 [-]: GETUPVAL  R1 U1        ; R1 := U1
 54 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["0x25992394"]
 55 [-]: GETGLOBAL R2 K19       ; R2 := closeSound
 56 [-]: CALL      R1 2 1       ; R1(R2)
 57 [-]: GETGLOBAL R1 K20       ; R1 := gRegion
 58 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x3E2F6BF"]
 59 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 60 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 61 [-]: MOVE      R3 R1        ; R3 := R1
 62 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 63 [-]: TEST      R2 1         ; if R2 then PC := 70
 64 [-]: JMP       70           ; PC := 70
 65 [-]: SELF      R2 R1 K22    ; R3 := R1; R2 := R1["0x28609C89"]
 66 [-]: GETGLOBAL R4 K23       ; R4 := 0xEC274B1A
 67 [-]: LOADK     R5 K24       ; R5 := "IDLE"
 68 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 69 [-]: CALL      R2 0 1       ; R2(R3,...)
 70 [-]: GETGLOBAL R2 K25       ; R2 := mMovie
 71 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2["0xA58BB96C"]
 72 [-]: CALL      R2 2 1       ; R2(R3)
 73 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 5906
; #Upvalues:       15
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: TEST      R0 1         ; if R0 then PC := 91
  2 [-]: JMP       91           ; PC := 91
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["Open"]
  9 [-]: TEST      R3 1         ; if R3 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["DioOpen"]
 13 [-]: TEST      R3 0         ; if not R3 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 16 [-]: GETUPVAL  R4 U1        ; R4 := U1
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Movie"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
 23 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 24 [-]: LOADK     R5 K5        ; R5 := "CancelPressed"
 25 [-]: LOADK     R6 K6        ; R6 := ""
 26 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R3 K7        ; R3 := Engine
 29 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x9490FE70"]
 30 [-]: CALL      R3 1 2       ; R3 := R3()
 31 [-]: TEST      R3 0         ; if not R3 then PC := 51
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 34 [-]: GETUPVAL  R4 U2        ; R4 := U2
 35 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 36 [-]: TEST      R3 1         ; if R3 then PC := 51
 37 [-]: JMP       51           ; PC := 51
 38 [-]: GETUPVAL  R3 U2        ; R3 := U2
 39 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 40 [-]: LOADK     R5 K9        ; R5 := "IsExpanded"
 41 [-]: LOADK     R6 K6        ; R6 := ""
 42 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 43 [-]: TEST      R3 0         ; if not R3 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETUPVAL  R3 U2        ; R3 := U2
 46 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 47 [-]: LOADK     R5 K10       ; R5 := "DroneInfoUnfocused"
 48 [-]: LOADK     R6 K6        ; R6 := ""
 49 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 52 [-]: GETGLOBAL R4 K11       ; R4 := _T
 53 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["SquadOverlay"]
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: TEST      R3 1         ; if R3 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETGLOBAL R3 K11       ; R3 := _T
 58 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SquadOverlay"]
 59 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 60 [-]: LOADK     R5 K13       ; R5 := "CancelMatchmakingDropdown"
 61 [-]: LOADK     R6 K6        ; R6 := ""
 62 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 63 [-]: TEST      R3 0         ; if not R3 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: GETUPVAL  R3 U3        ; R3 := U3
 67 [-]: GETUPVAL  R4 U4        ; R4 := U4
 68 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["READ_ONLY"]
 69 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: GETUPVAL  R3 U5        ; R3 := U5
 72 [-]: GETUPVAL  R4 U4        ; R4 := U4
 73 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["READ_ONLY"]
 74 [-]: CALL      R3 2 1       ; R3(R4)
 75 [-]: RETURN    R0 1         ; return 
 76 [-]: GETUPVAL  R3 U6        ; R3 := U6
 77 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mTargetVal"]
 78 [-]: GETUPVAL  R4 U7        ; R4 := U7
 79 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["STARTING_ZOOM"]
 80 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 83 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
 84 [-]: LOADK     R5 K18       ; R5 := "onKeyDown_MENU_RIGHT_CLICK"
 85 [-]: LOADK     R6 K6        ; R6 := ""
 86 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 87 [-]: RETURN    R0 1         ; return 
 88 [-]: EQ        0 R0 K19     ; if R0 ~= "0x0" then PC := 91
 89 [-]: JMP       91           ; PC := 91
 90 [-]: RETURN    R0 1         ; return 
 91 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 92 [-]: GETUPVAL  R4 U1        ; R4 := U1
 93 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Movie"]
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: TEST      R3 1         ; if R3 then PC := 111
 96 [-]: JMP       111          ; PC := 111
 97 [-]: GETGLOBAL R3 K20       ; R3 := 0x52E17A90
 98 [-]: GETUPVAL  R4 U1        ; R4 := U1
 99 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["Movie"]
100 [-]: LOADK     R5 K21       ; R5 := "_root"
101 [-]: GETGLOBAL R6 K22       ; R6 := UISys
102 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["FlashInstance_LINEAR"]
103 [-]: NEWTABLE  R7 1 0       ; R7 := {}
104 [-]: LOADK     R8 K24       ; R8 := "_alpha"
105 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
106 [-]: NEWTABLE  R8 1 0       ; R8 := {}
107 [-]: LOADK     R9 K25       ; R9 := 0
108 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
109 [-]: LOADK     R9 K26       ; R9 := 0.30000001192093
110 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
111 [-]: TEST      R2 1         ; if R2 then PC := 117
112 [-]: JMP       117          ; PC := 117
113 [-]: GETUPVAL  R3 U8        ; R3 := U8
114 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["0x25992394"]
115 [-]: GETGLOBAL R4 K28       ; R4 := closeSound
116 [-]: CALL      R3 2 1       ; R3(R4)
117 [-]: GETUPVAL  R3 U9        ; R3 := U9
118 [-]: CALL      R3 1 2       ; R3 := R3()
119 [-]: TEST      R3 0         ; if not R3 then PC := 133
120 [-]: JMP       133          ; PC := 133
121 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
122 [-]: GETGLOBAL R4 K11       ; R4 := _T
123 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["SquadOverlay"]
124 [-]: CALL      R3 2 2       ; R3 := R3(R4)
125 [-]: TEST      R3 1         ; if R3 then PC := 133
126 [-]: JMP       133          ; PC := 133
127 [-]: GETGLOBAL R3 K11       ; R3 := _T
128 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SquadOverlay"]
129 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x458F27A9"]
130 [-]: LOADK     R5 K29       ; R5 := "ForceExitMap"
131 [-]: LOADK     R6 K6        ; R6 := ""
132 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
133 [-]: GETGLOBAL R3 K11       ; R3 := _T
134 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["0x45CBC39B"]
135 [-]: CALL      R3 1 1       ; R3()
136 [-]: MOVE      R3 R1        ; R3 := R1
137 [-]: MOVE      R3 R0        ; R3 := R0
138 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
139 [-]: GETUPVAL  R4 U10       ; R4 := U10
140 [-]: CALL      R3 2 2       ; R3 := R3(R4)
141 [-]: TEST      R3 1         ; if R3 then PC := 153
142 [-]: JMP       153          ; PC := 153
143 [-]: GETUPVAL  R3 U10       ; R3 := U10
144 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3["0xCE468565"]
145 [-]: LOADK     R5 K32       ; R5 := "x"
146 [-]: LOADK     R6 K33       ; R6 := 0.5
147 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
148 [-]: GETUPVAL  R3 U10       ; R3 := U10
149 [-]: SELF      R3 R3 K31    ; R4 := R3; R3 := R3["0xCE468565"]
150 [-]: LOADK     R5 K34       ; R5 := "y"
151 [-]: LOADK     R6 K33       ; R6 := 0.5
152 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
153 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
154 [-]: GETUPVAL  R4 U11       ; R4 := U11
155 [-]: CALL      R3 2 2       ; R3 := R3(R4)
156 [-]: TEST      R3 1         ; if R3 then PC := 184
157 [-]: JMP       184          ; PC := 184
158 [-]: GETUPVAL  R3 U12       ; R3 := U12
159 [-]: SETTABLE  R3 K35 K36   ; R3["Locked"] := "0x1"
160 [-]: GETUPVAL  R3 U12       ; R3 := U12
161 [-]: GETUPVAL  R4 U11       ; R4 := U11
162 [-]: SELF      R4 R4 K38    ; R5 := R4; R4 := R4["0x6DA72501"]
163 [-]: CALL      R4 2 2       ; R4 := R4(R5)
164 [-]: SETTABLE  R3 K37 R4    ; R3["Previous"] := R4
165 [-]: GETUPVAL  R3 U12       ; R3 := U12
166 [-]: GETUPVAL  R4 U13       ; R4 := U13
167 [-]: GETGLOBAL R5 K40       ; R5 := 0x221C9700
168 [-]: LOADK     R6 K25       ; R6 := 0
169 [-]: LOADK     R7 K25       ; R7 := 0
170 [-]: LOADK     R8 K41       ; R8 := 35
171 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
172 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
173 [-]: SETTABLE  R3 K39 R4    ; R3["Target"] := R4
174 [-]: GETUPVAL  R3 U12       ; R3 := U12
175 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["Prop"]
176 [-]: SELF      R3 R3 K43    ; R4 := R3; R3 := R3["0x5A7A6B1"]
177 [-]: LOADK     R5 K25       ; R5 := 0
178 [-]: CALL      R3 3 1       ; R3(R4,R5)
179 [-]: GETUPVAL  R3 U12       ; R3 := U12
180 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["Prop"]
181 [-]: SELF      R3 R3 K44    ; R4 := R3; R3 := R3["0xDB349344"]
182 [-]: LOADK     R5 K45       ; R5 := 1
183 [-]: CALL      R3 3 1       ; R3(R4,R5)
184 [-]: GETUPVAL  R3 U6        ; R3 := U6
185 [-]: SELF      R3 R3 K44    ; R4 := R3; R3 := R3["0xDB349344"]
186 [-]: LOADK     R5 K46       ; R5 := -100
187 [-]: CALL      R3 3 1       ; R3(R4,R5)
188 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
189 [-]: SELF      R3 R3 K47    ; R4 := R3; R3 := R3["0xD692CA7B"]
190 [-]: MOVE      R5 R0        ; R5 := R0
191 [-]: CALL      R3 3 1       ; R3(R4,R5)
192 [-]: TEST      R1 0         ; if not R1 then PC := 200
193 [-]: JMP       200          ; PC := 200
194 [-]: GETGLOBAL R3 K48       ; R3 := gFlashMgr
195 [-]: SELF      R3 R3 K49    ; R4 := R3; R3 := R3["0xC4E70543"]
196 [-]: CALL      R3 2 1       ; R3(R4)
197 [-]: GETUPVAL  R3 U14       ; R3 := U14
198 [-]: CALL      R3 1 1       ; R3()
199 [-]: JMP       223          ; PC := 223
200 [-]: GETGLOBAL R3 K20       ; R3 := 0x52E17A90
201 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
202 [-]: LOADK     R5 K21       ; R5 := "_root"
203 [-]: GETGLOBAL R6 K22       ; R6 := UISys
204 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["FlashInstance_LINEAR"]
205 [-]: NEWTABLE  R7 1 0       ; R7 := {}
206 [-]: LOADK     R8 K24       ; R8 := "_alpha"
207 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
208 [-]: NEWTABLE  R8 1 0       ; R8 := {}
209 [-]: LOADK     R9 K25       ; R9 := 0
210 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
211 [-]: LOADK     R9 K26       ; R9 := 0.30000001192093
212 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
213 [-]: GETUPVAL  R3 U8        ; R3 := U8
214 [-]: GETTABLE  R3 R3 K50    ; R3 := R3["0xDB33ECB2"]
215 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
216 [-]: LOADK     R5 K45       ; R5 := 1
217 [-]: LOADK     R6 K26       ; R6 := 0.30000001192093
218 [-]: LOADK     R7 K25       ; R7 := 0
219 [-]: CLOSURE   R8 0         ; R8 := closure(Function #132.1)
220 [-]: GETUPVAL  R0 U14       ; R0 := U14
221 [-]: GETUPVAL  R0 U8        ; R0 := U8
222 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
223 [-]: RETURN    R0 1         ; return 


; Function #132.1:
;
; Name:            
; Defined at line: 5981
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xC4E70543"]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0xDB33ECB2"]
  8 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
  9 [-]: LOADK     R2 K4        ; R2 := 0
 10 [-]: LOADK     R3 K5        ; R3 := 0.20000000298023
 11 [-]: LOADK     R4 K4        ; R4 := 0
 12 [-]: GETUPVAL  R5 U0        ; R5 := U0
 13 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 14 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 5989
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R3 K1        ; R3 := _T
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["SCREEN_EXIT_REASON_FORCE_CLOSE"]
  6 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETGLOBAL R3 K1        ; R3 := _T
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["SCREEN_EXIT_REASON_TELEPORT_TO_CONSOLE"]
 10 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: EQ        1 R1 K0      ; if R1 == "true" then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: MOVE      R4 R1        ; R4 := R1
 18 [-]: CALL      R2 3 1       ; R2(R3,R4)
 19 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 5993
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 5997
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 6000
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R2 K0        ; R2 := 1
  2 [-]: LOADK     R3 K1        ; R3 := 100000
  3 [-]: LOADK     R4 K0        ; R4 := 1
  4 [-]: LEN       R5 R0        ; R5 := # R0
  5 [-]: LOADK     R6 K0        ; R6 := 1
  6 [-]: FORPREP   R4 15        ; R4 -= R6; PC := 15
  7 [-]: GETGLOBAL R8 K2        ; R8 := 0xB09F286F
  8 [-]: GETTABLE  R9 R0 R7     ; R9 := R0[R7]
  9 [-]: MOVE      R10 R1       ; R10 := R1
 10 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 11 [-]: LT        0 R8 R3      ; if R8 >= R3 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R3 R8        ; R3 := R8
 14 [-]: MOVE      R2 R7        ; R2 := R7
 15 [-]: FORLOOP   R4 7         ; R4 += R6; if R4 <= R5 then begin PC := 7; R7 := R4 end
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 6014
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  5 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: CALL      R0 1 2       ; R0 := R0()
 12 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
 14 [-]: LOADK     R3 K3        ; R3 := "Reticle"
 15 [-]: LOADK     R4 K4        ; R4 := "_x"
 16 [-]: GETUPVAL  R5 U2        ; R5 := U2
 17 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0xB57E56DF"]
 18 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["x"]
 19 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 20 [-]: CALL      R1 0 1       ; R1(R2,...)
 21 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
 23 [-]: LOADK     R3 K3        ; R3 := "Reticle"
 24 [-]: LOADK     R4 K7        ; R4 := "_y"
 25 [-]: GETUPVAL  R5 U2        ; R5 := U2
 26 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0xB57E56DF"]
 27 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["y"]
 28 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 29 [-]: CALL      R1 0 1       ; R1(R2,...)
 30 [-]: GETUPVAL  R1 U3        ; R1 := U3
 31 [-]: EQ        1 R1 K9      ; if R1 == nil then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R1 U3        ; R1 := U3
 34 [-]: CALL      R1 1 1       ; R1()
 35 [-]: LOADNIL   R1 R1        ; R1 := nil
 36 [-]: MOVE      R1 R3        ; R1 := R3
 37 [-]: GETUPVAL  R1 U4        ; R1 := U4
 38 [-]: TEST      R1 1         ; if R1 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETUPVAL  R1 U5        ; R1 := U5
 41 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0xD963824A"]
 42 [-]: CALL      R1 2 1       ; R1(R2)
 43 [-]: GETUPVAL  R1 U6        ; R1 := U6
 44 [-]: GETUPVAL  R2 U7        ; R2 := U7
 45 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["EDIT_REGIONS"]
 46 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 49 [-]: GETUPVAL  R2 U8        ; R2 := U8
 50 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mMovingRegion"]
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: TEST      R1 1         ; if R1 then PC := 58
 53 [-]: JMP       58           ; PC := 58
 54 [-]: GETUPVAL  R1 U8        ; R1 := U8
 55 [-]: SETTABLE  R1 K12 K9    ; R1["mMovingRegion"] := nil
 56 [-]: GETUPVAL  R1 U8        ; R1 := U8
 57 [-]: SETTABLE  R1 K13 K9    ; R1["mChildNodes"] := nil
 58 [-]: GETUPVAL  R1 U6        ; R1 := U6
 59 [-]: GETUPVAL  R2 U7        ; R2 := U7
 60 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["EDIT_NODES"]
 61 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 71
 62 [-]: JMP       71           ; PC := 71
 63 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 64 [-]: GETUPVAL  R2 U8        ; R2 := U8
 65 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mMovingNode"]
 66 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 67 [-]: TEST      R1 1         ; if R1 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: GETUPVAL  R1 U8        ; R1 := U8
 70 [-]: SETTABLE  R1 K15 K9    ; R1["mMovingNode"] := nil
 71 [-]: GETUPVAL  R1 U6        ; R1 := U6
 72 [-]: GETUPVAL  R2 U7        ; R2 := U7
 73 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["EDIT_NODE_DECOS"]
 74 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 90
 75 [-]: JMP       90           ; PC := 90
 76 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 77 [-]: GETUPVAL  R2 U8        ; R2 := U8
 78 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mMovingNode"]
 79 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 80 [-]: TEST      R1 1         ; if R1 then PC := 90
 81 [-]: JMP       90           ; PC := 90
 82 [-]: GETUPVAL  R1 U8        ; R1 := U8
 83 [-]: SETTABLE  R1 K15 K9    ; R1["mMovingNode"] := nil
 84 [-]: GETUPVAL  R1 U8        ; R1 := U8
 85 [-]: SETTABLE  R1 K17 K18   ; R1["mEditingOffset"] := "0x0"
 86 [-]: GETUPVAL  R1 U8        ; R1 := U8
 87 [-]: SETTABLE  R1 K19 K18   ; R1["mEditingRotation"] := "0x0"
 88 [-]: GETUPVAL  R1 U8        ; R1 := U8
 89 [-]: SETTABLE  R1 K20 K18   ; R1["mEditingScale"] := "0x0"
 90 [-]: GETUPVAL  R1 U6        ; R1 := U6
 91 [-]: GETUPVAL  R2 U7        ; R2 := U7
 92 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
 93 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 101
 94 [-]: JMP       101          ; PC := 101
 95 [-]: GETUPVAL  R1 U8        ; R1 := U8
 96 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["mControlPointHeld"]
 97 [-]: TEST      R1 0         ; if not R1 then PC := 101
 98 [-]: JMP       101          ; PC := 101
 99 [-]: GETUPVAL  R1 U8        ; R1 := U8
100 [-]: SETTABLE  R1 K22 K18   ; R1["mControlPointHeld"] := "0x0"
101 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 6053
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["x"]
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["y"]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["z"]
  4 [-]: RETURN    R2 4         ; return R2,R3,R4
  5 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 6075
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["position"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x221C9700
  3 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["x"]
  4 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["y"]
  5 [-]: GETTABLE  R5 R1 K4     ; R5 := R1["z"]
  6 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  7 [-]: LOADNIL   R3 R3        ; R3 := nil
  8 [-]: LOADK     R4 K5        ; R4 := 1
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: LEN       R5 R5        ; R5 := # R5
 11 [-]: LOADK     R6 K5        ; R6 := 1
 12 [-]: FORPREP   R4 20        ; R4 -= R6; PC := 20
 13 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["radialSector"]
 14 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["region"]
 15 [-]: SUB       R9 R7 K5     ; R9 := R7 - 1
 16 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: GETUPVAL  R8 U0        ; R8 := U0
 19 [-]: GETTABLE  R3 R8 R7     ; R3 := R8[R7]
 20 [-]: FORLOOP   R4 13        ; R4 += R6; if R4 <= R5 then begin PC := 13; R7 := R4 end
 21 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 22 [-]: GETUPVAL  R9 U1        ; R9 := U1
 23 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 24 [-]: SETTABLE  R2 K2 R8     ; R2["x"] := R8
 25 [-]: GETTABLE  R8 R2 K3     ; R8 := R2["y"]
 26 [-]: UNM       R8 R8        ; R8 := - R8
 27 [-]: GETUPVAL  R9 U1        ; R9 := U1
 28 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 29 [-]: SETTABLE  R2 K3 R8     ; R2["y"] := R8
 30 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETTABLE  R8 R3 K9     ; R8 := R3["zoomedFraming"]
 33 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["z"]
 34 [-]: ADD       R8 R8 K10    ; R8 := R8 + 0.64999997615814
 35 [-]: SETTABLE  R2 K4 R8     ; R2["z"] := R8
 36 [-]: JMP       38           ; PC := 38
 37 [-]: SETTABLE  R2 K4 K11    ; R2["z"] := 8
 38 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 39 [-]: MUL       R8 R8 K12    ; R8 := R8 * 0.5
 40 [-]: ADD       R8 R8 K12    ; R8 := R8 + 0.5
 41 [-]: SETTABLE  R2 K2 R8     ; R2["x"] := R8
 42 [-]: GETTABLE  R8 R2 K3     ; R8 := R2["y"]
 43 [-]: MUL       R8 R8 K12    ; R8 := R8 * 0.5
 44 [-]: ADD       R8 R8 K12    ; R8 := R8 + 0.5
 45 [-]: SETTABLE  R2 K3 R8     ; R2["y"] := R8
 46 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 47 [-]: GETTABLE  R9 R2 K3     ; R9 := R2["y"]
 48 [-]: GETTABLE  R10 R2 K4    ; R10 := R2["z"]
 49 [-]: RETURN    R8 4         ; return R8,R9,R10
 50 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 6100
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R2        ; R0 := R2
 13 [-]: JMP       14           ; PC := 14
 14 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 6112
; #Upvalues:       13
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: EQ        0 R3 R0      ; if R3 ~= R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R3 1 1       ; R3()
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: CALL      R3 1 1       ; R3()
 12 [-]: GETUPVAL  R3 U2        ; R3 := U2
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["zoomedFraming"]
 15 [-]: CALL      R3 3 4       ; R3,R4,R5 := R3(R4,R5)
 16 [-]: GETUPVAL  R6 U3        ; R6 := U3
 17 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0xCE468565"]
 18 [-]: LOADK     R8 K2        ; R8 := "x"
 19 [-]: MOVE      R9 R3        ; R9 := R3
 20 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 21 [-]: GETUPVAL  R6 U3        ; R6 := U3
 22 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0xCE468565"]
 23 [-]: LOADK     R8 K3        ; R8 := "y"
 24 [-]: MOVE      R9 R4        ; R9 := R4
 25 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 26 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 27 [-]: MOVE      R7 R2        ; R7 := R2
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: TEST      R6 0         ; if not R6 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETUPVAL  R6 U4        ; R6 := U4
 32 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xDB349344"]
 33 [-]: MOVE      R8 R5        ; R8 := R5
 34 [-]: CALL      R6 3 1       ; R6(R7,R8)
 35 [-]: MOVE      R1 R5        ; R1 := R5
 36 [-]: GETUPVAL  R6 U7        ; R6 := U7
 37 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xF81722A2"]
 38 [-]: GETUPVAL  R7 U8        ; R7 := U8
 39 [-]: LOADK     R8 K7        ; R8 := 0.5
 40 [-]: LOADK     R9 K8        ; R9 := 2
 41 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 42 [-]: MOVE      R6 R6        ; R6 := R6
 43 [-]: GETUPVAL  R6 U7        ; R6 := U7
 44 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["0x25992394"]
 45 [-]: GETGLOBAL R7 K10       ; R7 := zoomInRegionSound
 46 [-]: CALL      R6 2 1       ; R6(R7)
 47 [-]: GETUPVAL  R6 U9        ; R6 := U9
 48 [-]: CALL      R6 1 1       ; R6()
 49 [-]: GETGLOBAL R6 K11       ; R6 := 0xCAA43ABB
 50 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["zoomedInEffects"]
 51 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 52 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 53 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["instance"]
 54 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 55 [-]: TEST      R7 1         ; if R7 then PC := 67
 56 [-]: JMP       67           ; PC := 67
 57 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 58 [-]: MOVE      R8 R6        ; R8 := R6
 59 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 60 [-]: TEST      R7 1         ; if R7 then PC := 67
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["instance"]
 63 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7["0xAB436EF2"]
 64 [-]: MOVE      R9 R6        ; R9 := R6
 65 [-]: GETGLOBAL R10 K15      ; R10 := EMPTY_SYMBOL
 66 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 67 [-]: GETUPVAL  R7 U10       ; R7 := U10
 68 [-]: GETTABLE  R7 R7 K16    ; R7 := R7[1]
 69 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 70 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 71 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["red"]
 72 [-]: CALL      R7 3 1       ; R7(R8,R9)
 73 [-]: GETUPVAL  R7 U10       ; R7 := U10
 74 [-]: GETTABLE  R7 R7 K8     ; R7 := R7[2]
 75 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 76 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 77 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["green"]
 78 [-]: CALL      R7 3 1       ; R7(R8,R9)
 79 [-]: GETUPVAL  R7 U10       ; R7 := U10
 80 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[3]
 81 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 82 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 83 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["blue"]
 84 [-]: CALL      R7 3 1       ; R7(R8,R9)
 85 [-]: GETGLOBAL R7 K22       ; R7 := _T
 86 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["WareframeChallenge"]
 87 [-]: TEST      R7 0         ; if not R7 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETGLOBAL R7 K22       ; R7 := _T
 90 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["WareframeChallenge"]
 91 [-]: SETTABLE  R7 K24 R0    ; R7["selectedPlanet"] := R0
 92 [-]: GETGLOBAL R7 K22       ; R7 := _T
 93 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["NemesisRegionTransmissionPlayed"]
 94 [-]: TEST      R7 1         ; if R7 then PC := 155
 95 [-]: JMP       155          ; PC := 155
 96 [-]: GETGLOBAL R7 K26       ; R7 := gGameData
 97 [-]: SELF      R7 R7 K27    ; R8 := R7; R7 := R7["0x17358D95"]
 98 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 99 [-]: GETGLOBAL R8 K4        ; R8 := 0x400E7765
100 [-]: MOVE      R9 R7        ; R9 := R7
101 [-]: CALL      R8 2 2       ; R8 := R8(R9)
102 [-]: TEST      R8 1         ; if R8 then PC := 155
103 [-]: JMP       155          ; PC := 155
104 [-]: GETTABLE  R8 R7 K28    ; R8 := R7["mInfluenceNodes"]
105 [-]: LOADK     R9 K16       ; R9 := 1
106 [-]: LEN       R10 R8       ; R10 := # R8
107 [-]: LOADK     R11 K16      ; R11 := 1
108 [-]: FORPREP   R9 154       ; R9 -= R11; PC := 154
109 [-]: GETUPVAL  R13 U11      ; R13 := U11
110 [-]: SELF      R13 R13 K29  ; R14 := R13; R13 := R13["0xF64198FD"]
111 [-]: GETTABLE  R15 R8 R12   ; R15 := R8[R12]
112 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["mNode"]
113 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
114 [-]: GETTABLE  R13 R13 K31  ; R13 := R13["name"]
115 [-]: GETTABLE  R14 R0 K31   ; R14 := R0["name"]
116 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 154
117 [-]: JMP       154          ; PC := 154
118 [-]: GETGLOBAL R13 K32      ; R13 := _G
119 [-]: GETGLOBAL R14 K32      ; R14 := _G
120 [-]: GETTABLE  R14 R14 K33  ; R14 := R14["NemesisTauntCooldowns"]
121 [-]: TEST      R14 1        ; if R14 then PC := 124
122 [-]: JMP       124          ; PC := 124
123 [-]: NEWTABLE  R14 0 0      ; R14 := {}
124 [-]: SETTABLE  R13 K33 R14  ; R13["NemesisTauntCooldowns"] := R14
125 [-]: GETGLOBAL R13 K32      ; R13 := _G
126 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["NemesisTauntCooldowns"]
127 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["InfluenceRegion"]
128 [-]: TEST      R13 0        ; if not R13 then PC := 139
129 [-]: JMP       139          ; PC := 139
130 [-]: GETGLOBAL R13 K32      ; R13 := _G
131 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["NemesisTauntCooldowns"]
132 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["InfluenceRegion"]
133 [-]: ADD       R13 R13 K35  ; R13 := R13 + 1200
134 [-]: GETGLOBAL R14 K36      ; R14 := gGameRules
135 [-]: SELF      R14 R14 K37  ; R15 := R14; R14 := R14["0x7B107ACD"]
136 [-]: CALL      R14 2 2      ; R14 := R14(R15)
137 [-]: LT        0 R13 R14    ; if R13 >= R14 then PC := 151
138 [-]: JMP       151          ; PC := 151
139 [-]: GETUPVAL  R13 U12      ; R13 := U12
140 [-]: GETTABLE  R13 R13 K38  ; R13 := R13["0x85329A4B"]
141 [-]: GETGLOBAL R14 K39      ; R14 := 0xEC274B1A
142 [-]: LOADK     R15 K34      ; R15 := "InfluenceRegion"
143 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
144 [-]: CALL      R13 0 1      ; R13(R14,...)
145 [-]: GETGLOBAL R13 K32      ; R13 := _G
146 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["NemesisTauntCooldowns"]
147 [-]: GETGLOBAL R14 K36      ; R14 := gGameRules
148 [-]: SELF      R14 R14 K37  ; R15 := R14; R14 := R14["0x7B107ACD"]
149 [-]: CALL      R14 2 2      ; R14 := R14(R15)
150 [-]: SETTABLE  R13 K34 R14  ; R13["InfluenceRegion"] := R14
151 [-]: GETGLOBAL R13 K22      ; R13 := _T
152 [-]: SETTABLE  R13 K25 K40  ; R13["NemesisRegionTransmissionPlayed"] := "0x1"
153 [-]: JMP       155          ; PC := 155
154 [-]: FORLOOP   R9 109       ; R9 += R11; if R9 <= R10 then begin PC := 109; R12 := R9 end
155 [-]: GETGLOBAL R13 K22      ; R13 := _T
156 [-]: SETTABLE  R13 K41 R0   ; R13["StarChartSelectedRegion"] := R0
157 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 6173
; #Upvalues:       12
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        0 R2 R0      ; if R2 ~= R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: CALL      R2 1 1       ; R2()
 12 [-]: GETUPVAL  R2 U3        ; R2 := U3
 13 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
 14 [-]: GETUPVAL  R3 U4        ; R3 := U4
 15 [-]: LOADK     R4 K1        ; R4 := 0.5
 16 [-]: LOADK     R5 K2        ; R5 := 2
 17 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 18 [-]: MOVE      R2 R2        ; R2 := R2
 19 [-]: GETUPVAL  R2 U5        ; R2 := U5
 20 [-]: MOVE      R3 R0        ; R3 := R0
 21 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["zoomedFraming"]
 22 [-]: CALL      R2 3 4       ; R2,R3,R4 := R2(R3,R4)
 23 [-]: GETUPVAL  R5 U6        ; R5 := U6
 24 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mCurrentScroll"]
 25 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["x"]
 26 [-]: GETUPVAL  R6 U6        ; R6 := U6
 27 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mCurrentScroll"]
 28 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["y"]
 29 [-]: GETUPVAL  R7 U3        ; R7 := U3
 30 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0x2D888705"]
 31 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 32 [-]: SETTABLE  R8 K8 R5     ; R8["X"] := R5
 33 [-]: SETTABLE  R8 K9 R6     ; R8["Y"] := R6
 34 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 35 [-]: SETTABLE  R9 K8 R2     ; R9["X"] := R2
 36 [-]: SETTABLE  R9 K9 R3     ; R9["Y"] := R3
 37 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 38 [-]: LOADK     R8 K10       ; R8 := 0
 39 [-]: LOADK     R9 K10       ; R9 := 0
 40 [-]: GETUPVAL  R10 U7       ; R10 := U7
 41 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mCurVal"]
 42 [-]: LT        0 K10 R7     ; if 0 >= R7 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R11 K12      ; R11 := math
 45 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0x8B011038"]
 46 [-]: LOADK     R12 K14      ; R12 := 1.5
 47 [-]: MUL       R13 K15 R7   ; R13 := 4 * R7
 48 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 49 [-]: TEST      R11 1        ; if R11 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: LOADK     R11 K10      ; R11 := 0
 52 [-]: LOADK     R12 K16      ; R12 := -2
 53 [-]: CLOSURE   R13 0        ; R13 := closure(Function #142.1)
 54 [-]: MOVE      R0 R10       ; R0 := R10
 55 [-]: MOVE      R0 R12       ; R0 := R12
 56 [-]: MOVE      R0 R4        ; R0 := R4
 57 [-]: GETUPVAL  R0 U7        ; R0 := U7
 58 [-]: MOVE      R0 R8        ; R0 := R8
 59 [-]: MOVE      R0 R5        ; R0 := R5
 60 [-]: MOVE      R0 R2        ; R0 := R2
 61 [-]: MOVE      R0 R9        ; R0 := R9
 62 [-]: MOVE      R0 R6        ; R0 := R6
 63 [-]: MOVE      R0 R3        ; R0 := R3
 64 [-]: GETUPVAL  R0 U6        ; R0 := U6
 65 [-]: GETUPVAL  R0 U8        ; R0 := U8
 66 [-]: GETUPVAL  R0 U9        ; R0 := U9
 67 [-]: MOVE      R14 R1       ; R14 := R1
 68 [-]: MOVE      R14 R10      ; R14 := R10
 69 [-]: GETGLOBAL R14 K17      ; R14 := 0x52E17A90
 70 [-]: GETGLOBAL R15 K18      ; R15 := mMovie
 71 [-]: LOADK     R16 K19      ; R16 := "_root"
 72 [-]: GETGLOBAL R17 K20      ; R17 := UISys
 73 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["FlashInstance_LINEAR"]
 74 [-]: NEWTABLE  R18 1 0      ; R18 := {}
 75 [-]: MOVE      R19 R13      ; R19 := R13
 76 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
 77 [-]: NEWTABLE  R19 1 0      ; R19 := {}
 78 [-]: LOADK     R20 K22      ; R20 := 1
 79 [-]: SETLIST   R19 1 1      ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
 80 [-]: MOVE      R20 R11      ; R20 := R11
 81 [-]: LOADK     R21 K10      ; R21 := 0
 82 [-]: CLOSURE   R22 1        ; R22 := closure(Function #142.2)
 83 [-]: GETUPVAL  R0 U10       ; R0 := U10
 84 [-]: MOVE      R0 R1        ; R0 := R1
 85 [-]: CALL      R14 9 1      ; R14(R15,R16,R17,R18,R19,R20,R21,R22)
 86 [-]: GETUPVAL  R14 U3       ; R14 := U3
 87 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0x25992394"]
 88 [-]: GETGLOBAL R15 K24      ; R15 := jumpToRegionSound
 89 [-]: CALL      R14 2 1      ; R14(R15)
 90 [-]: GETUPVAL  R14 U11      ; R14 := U11
 91 [-]: GETTABLE  R14 R14 K22  ; R14 := R14[1]
 92 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
 93 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
 94 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["red"]
 95 [-]: CALL      R14 3 1      ; R14(R15,R16)
 96 [-]: GETUPVAL  R14 U11      ; R14 := U11
 97 [-]: GETTABLE  R14 R14 K2   ; R14 := R14[2]
 98 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
 99 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
100 [-]: GETTABLE  R16 R16 K28  ; R16 := R16["green"]
101 [-]: CALL      R14 3 1      ; R14(R15,R16)
102 [-]: GETUPVAL  R14 U11      ; R14 := U11
103 [-]: GETTABLE  R14 R14 K29  ; R14 := R14[3]
104 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
105 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
106 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["blue"]
107 [-]: CALL      R14 3 1      ; R14(R15,R16)
108 [-]: GETGLOBAL R14 K31      ; R14 := 0xCAA43ABB
109 [-]: GETTABLE  R15 R0 K32   ; R15 := R0["zoomedInEffects"]
110 [-]: CALL      R14 2 2      ; R14 := R14(R15)
111 [-]: GETGLOBAL R15 K33      ; R15 := 0x400E7765
112 [-]: GETTABLE  R16 R0 K34   ; R16 := R0["instance"]
113 [-]: CALL      R15 2 2      ; R15 := R15(R16)
114 [-]: TEST      R15 1        ; if R15 then PC := 126
115 [-]: JMP       126          ; PC := 126
116 [-]: GETGLOBAL R15 K33      ; R15 := 0x400E7765
117 [-]: MOVE      R16 R14      ; R16 := R14
118 [-]: CALL      R15 2 2      ; R15 := R15(R16)
119 [-]: TEST      R15 1        ; if R15 then PC := 126
120 [-]: JMP       126          ; PC := 126
121 [-]: GETTABLE  R15 R0 K34   ; R15 := R0["instance"]
122 [-]: SELF      R15 R15 K35  ; R16 := R15; R15 := R15["0xAB436EF2"]
123 [-]: MOVE      R17 R14      ; R17 := R14
124 [-]: GETGLOBAL R18 K36      ; R18 := EMPTY_SYMBOL
125 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
126 [-]: RETURN    R0 1         ; return 


; Function #142.1:
;
; Name:            
; Defined at line: 6200
; #Upvalues:       13
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9E1B8940
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x9E1B8940
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x9E1B8940
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R2 0 0       ; R2,... := R2(R3,...)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x9E1B8940
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x9E1B8940
 10 [-]: GETGLOBAL R4 K1        ; R4 := math
 11 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xD6F2D811"]
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: LOADK     R6 K3        ; R6 := 0.89999997615814
 14 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 15 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 16 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 17 [-]: LOADK     R3 K4        ; R3 := 0
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: LE        0 R4 K5      ; if R4 > 0.5 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 22 [-]: GETUPVAL  R6 U0        ; R6 := U0
 23 [-]: GETUPVAL  R7 U1        ; R7 := U1
 24 [-]: MOVE      R8 R4        ; R8 := R4
 25 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 26 [-]: MOVE      R3 R5        ; R3 := R5
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 29 [-]: GETUPVAL  R6 U1        ; R6 := U1
 30 [-]: GETUPVAL  R7 U2        ; R7 := U2
 31 [-]: MOVE      R8 R4        ; R8 := R4
 32 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 33 [-]: MOVE      R3 R5        ; R3 := R5
 34 [-]: GETUPVAL  R5 U3        ; R5 := U3
 35 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 36 [-]: MOVE      R7 R3        ; R7 := R3
 37 [-]: CALL      R5 3 1       ; R5(R6,R7)
 38 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 39 [-]: GETUPVAL  R6 U5        ; R6 := U5
 40 [-]: GETUPVAL  R7 U6        ; R7 := U6
 41 [-]: MOVE      R8 R1        ; R8 := R1
 42 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 43 [-]: MOVE      R5 R4        ; R5 := R4
 44 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 45 [-]: GETUPVAL  R6 U8        ; R6 := U8
 46 [-]: GETUPVAL  R7 U9        ; R7 := U9
 47 [-]: MOVE      R8 R1        ; R8 := R1
 48 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 49 [-]: MOVE      R5 R7        ; R5 := R7
 50 [-]: GETUPVAL  R5 U10       ; R5 := U10
 51 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xCE468565"]
 52 [-]: LOADK     R7 K9        ; R7 := "x"
 53 [-]: GETUPVAL  R8 U4        ; R8 := U4
 54 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 55 [-]: GETUPVAL  R5 U10       ; R5 := U10
 56 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xCE468565"]
 57 [-]: LOADK     R7 K10       ; R7 := "y"
 58 [-]: GETUPVAL  R8 U7        ; R8 := U7
 59 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 60 [-]: GETUPVAL  R5 U11       ; R5 := U11
 61 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 62 [-]: GETUPVAL  R7 U4        ; R7 := U4
 63 [-]: CALL      R5 3 1       ; R5(R6,R7)
 64 [-]: GETUPVAL  R5 U12       ; R5 := U12
 65 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 66 [-]: GETUPVAL  R7 U7        ; R7 := U7
 67 [-]: CALL      R5 3 1       ; R5(R6,R7)
 68 [-]: RETURN    R0 1         ; return 


; Function #142.2:
;
; Name:            
; Defined at line: 6223
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 6241
; #Upvalues:       9
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  111

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x9FAED6BC
  2 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["name"]
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["radialSector"]
  5 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["name"]
  6 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["radialSector"]
  7 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["nodeType"]
  8 [-]: GETUPVAL  R8 U1        ; R8 := U1
  9 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["0x4A4041CA"]
 10 [-]: MOVE      R9 R0        ; R9 := R0
 11 [-]: MOVE      R10 R2       ; R10 := R2
 12 [-]: GETUPVAL  R11 U2       ; R11 := U2
 13 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 14 [-]: MOVE      R8 R0        ; R8 := R0
 15 [-]: GETUPVAL  R8 U0        ; R8 := U0
 16 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["mName"]
 17 [-]: GETGLOBAL R9 K6        ; R9 := _G
 18 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["CachedGoalInfo"]
 19 [-]: LOADK     R10 K8       ; R10 := ""
 20 [-]: GETGLOBAL R11 K9       ; R11 := string
 21 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["0x639C642A"]
 22 [-]: GETGLOBAL R12 K11      ; R12 := 0xE6DC43B0
 23 [-]: GETGLOBAL R13 K0       ; R13 := 0x9FAED6BC
 24 [-]: GETTABLE  R14 R0 K12   ; R14 := R0["locTag"]
 25 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 26 [-]: MOVE      R14 R0       ; R14 := R0
 27 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
 28 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 29 [-]: GETGLOBAL R12 K13      ; R12 := _T
 30 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["CachedSyndicateMissions"]
 31 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 32 [-]: TEST      R12 0        ; if not R12 then PC := 67
 33 [-]: JMP       67           ; PC := 67
 34 [-]: GETGLOBAL R12 K13      ; R12 := _T
 35 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["CachedSyndicateMissions"]
 36 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 37 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["mVisible"]
 38 [-]: TEST      R12 0        ; if not R12 then PC := 67
 39 [-]: JMP       67           ; PC := 67
 40 [-]: GETGLOBAL R12 K13      ; R12 := _T
 41 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["CachedAlerts"]
 42 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 43 [-]: TEST      R12 0        ; if not R12 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETGLOBAL R12 K13      ; R12 := _T
 46 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["CachedAlerts"]
 47 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 48 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["mVisible"]
 49 [-]: TEST      R12 1        ; if R12 then PC := 67
 50 [-]: JMP       67           ; PC := 67
 51 [-]: GETTABLE  R12 R9 R5    ; R12 := R9[R5]
 52 [-]: TEST      R12 1        ; if R12 then PC := 67
 53 [-]: JMP       67           ; PC := 67
 54 [-]: MOVE      R12 R11      ; R12 := R11
 55 [-]: LOADK     R13 K17      ; R13 := " - "
 56 [-]: GETGLOBAL R14 K9       ; R14 := string
 57 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["0x639C642A"]
 58 [-]: GETGLOBAL R15 K11      ; R15 := 0xE6DC43B0
 59 [-]: GETGLOBAL R16 K13      ; R16 := _T
 60 [-]: GETTABLE  R16 R16 K14  ; R16 := R16["CachedSyndicateMissions"]
 61 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
 62 [-]: GETTABLE  R16 R16 K18  ; R16 := R16["mSyndicateName"]
 63 [-]: MOVE      R17 R0       ; R17 := R0
 64 [-]: CALL      R15 3 0      ; R15,... := R15(R16,R17)
 65 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 66 [-]: CONCAT    R11 R12 R14  ; R11 := R12 .. R13 .. R14
 67 [-]: GETUPVAL  R12 U3       ; R12 := U3
 68 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["0xF81722A2"]
 69 [-]: GETGLOBAL R13 K9       ; R13 := string
 70 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["0xDE44F664"]
 71 [-]: MOVE      R14 R5       ; R14 := R5
 72 [-]: GETUPVAL  R15 U1       ; R15 := U1
 73 [-]: GETTABLE  R15 R15 K21  ; R15 := R15["KEY_TAG"]
 74 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 75 [-]: EQ        1 R13 K22    ; if R13 == nil then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: MOVE      R13 R0       ; R13 := R0
 78 [-]: MOVE      R13 R1       ; R13 := R1
 79 [-]: GETGLOBAL R14 K23      ; R14 := mMovie
 80 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14["0x5DB0BD4"]
 81 [-]: LOADK     R16 K25      ; R16 := "/Lotus/Language/Game/MissionName_Default"
 82 [-]: MOVE      R17 R0       ; R17 := R0
 83 [-]: NEWTABLE  R18 1 1      ; R18 := {}
 84 [-]: SETTABLE  R18 K26 R11  ; R18["MISSION_NAME"] := R11
 85 [-]: LOADNIL   R19 R19      ; R19 := nil
 86 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
 87 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
 88 [-]: MOVE      R15 R11      ; R15 := R11
 89 [-]: MOVE      R16 R0       ; R16 := R0
 90 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 91 [-]: GETGLOBAL R13 K27      ; R13 := Lotus_Game
 92 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["NT_HUB"]
 93 [-]: EQ        1 R7 R13     ; if R7 == R13 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: MOVE      R13 R0       ; R13 := R0
 96 [-]: MOVE      R13 R1       ; R13 := R1
 97 [-]: GETGLOBAL R14 K9       ; R14 := string
 98 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["0xDE44F664"]
 99 [-]: MOVE      R15 R5       ; R15 := R5
100 [-]: LOADK     R16 K29      ; R16 := "Dojo"
101 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
102 [-]: EQ        0 R14 K22    ; if R14 ~= nil then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: MOVE      R14 R0       ; R14 := R0
105 [-]: MOVE      R14 R1       ; R14 := R1
106 [-]: LOADNIL   R15 R15      ; R15 := nil
107 [-]: LOADK     R16 K30      ; R16 := 0
108 [-]: MOVE      R17 R0       ; R17 := R0
109 [-]: LOADK     R18 K8       ; R18 := ""
110 [-]: LOADK     R19 K30      ; R19 := 0
111 [-]: LOADK     R20 K31      ; R20 := 3
112 [-]: LOADNIL   R21 R21      ; R21 := nil
113 [-]: LOADK     R22 K8       ; R22 := ""
114 [-]: MOVE      R23 R0       ; R23 := R0
115 [-]: LOADK     R24 K8       ; R24 := ""
116 [-]: GETGLOBAL R25 K13      ; R25 := _T
117 [-]: GETTABLE  R25 R25 K32  ; R25 := R25["gActiveMatchMakingMode"]
118 [-]: GETGLOBAL R26 K13      ; R26 := _T
119 [-]: GETTABLE  R26 R26 K33  ; R26 := R26["MATCHMAKING_QUICKMATCH_GAMEMODE"]
120 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 145
121 [-]: JMP       145          ; PC := 145
122 [-]: GETUPVAL  R25 U1       ; R25 := U1
123 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["0x25E52949"]
124 [-]: GETTABLE  R26 R0 K2    ; R26 := R0["radialSector"]
125 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["region"]
126 [-]: ADD       R26 R26 K36  ; R26 := R26 + 1
127 [-]: CALL      R25 2 2      ; R25 := R25(R26)
128 [-]: TEST      R25 1        ; if R25 then PC := 145
129 [-]: JMP       145          ; PC := 145
130 [-]: GETUPVAL  R25 U1       ; R25 := U1
131 [-]: GETTABLE  R25 R25 K37  ; R25 := R25["0xE4E5932F"]
132 [-]: MOVE      R26 R5       ; R26 := R5
133 [-]: CALL      R25 2 2      ; R25 := R25(R26)
134 [-]: GETUPVAL  R26 U4       ; R26 := U4
135 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
136 [-]: TEST      R26 0        ; if not R26 then PC := 144
137 [-]: JMP       144          ; PC := 144
138 [-]: GETUPVAL  R26 U4       ; R26 := U4
139 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
140 [-]: LT        0 K30 R26    ; if 0 >= R26 then PC := 144
141 [-]: JMP       144          ; PC := 144
142 [-]: GETUPVAL  R26 U4       ; R26 := U4
143 [-]: GETTABLE  R16 R26 R25  ; R16 := R26[R25]
144 [-]: MOVE      R17 R1       ; R17 := R1
145 [-]: LOADNIL   R26 R28      ; R26 := R27 := R28 := nil
146 [-]: LOADK     R29 K8       ; R29 := ""
147 [-]: CLOSURE   R30 0        ; R30 := closure(Function #143.1)
148 [-]: MOVE      R0 R29       ; R0 := R29
149 [-]: CLOSURE   R31 1        ; R31 := closure(Function #143.2)
150 [-]: MOVE      R0 R29       ; R0 := R29
151 [-]: LOADK     R29 K38      ; R29 := "<p>"
152 [-]: TEST      R13 1        ; if R13 then PC := 156
153 [-]: JMP       156          ; PC := 156
154 [-]: TEST      R14 0        ; if not R14 then PC := 158
155 [-]: JMP       158          ; PC := 158
156 [-]: MOVE      R17 R0       ; R17 := R0
157 [-]: JMP       743          ; PC := 743
158 [-]: GETUPVAL  R32 U0       ; R32 := U0
159 [-]: GETTABLE  R32 R32 K39  ; R32 := R32["mAlertInfo"]
160 [-]: EQ        1 R32 K22    ; if R32 == nil then PC := 230
161 [-]: JMP       230          ; PC := 230
162 [-]: LOADK     R32 K40      ; R32 := " ("
163 [-]: GETGLOBAL R33 K11      ; R33 := 0xE6DC43B0
164 [-]: LOADK     R34 K41      ; R34 := "/Lotus/Language/Menu/Notification_Alert"
165 [-]: MOVE      R35 R0       ; R35 := R0
166 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
167 [-]: LOADK     R34 K42      ; R34 := ")"
168 [-]: CONCAT    R10 R32 R34  ; R10 := R32 .. R33 .. R34
169 [-]: GETGLOBAL R32 K43      ; R32 := Engine
170 [-]: GETTABLE  R32 R32 K44  ; R32 := R32["0xD09D7910"]
171 [-]: GETGLOBAL R33 K13      ; R33 := _T
172 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["CachedAlerts"]
173 [-]: GETTABLE  R33 R33 R5   ; R33 := R33[R5]
174 [-]: GETTABLE  R33 R33 K39  ; R33 := R33["mAlertInfo"]
175 [-]: GETTABLE  R33 R33 K45  ; R33 := R33["mExpiry"]
176 [-]: CALL      R32 2 2      ; R32 := R32(R33)
177 [-]: GETUPVAL  R33 U1       ; R33 := U1
178 [-]: GETTABLE  R33 R33 K46  ; R33 := R33["0x9E1A1D26"]
179 [-]: MOVE      R34 R32      ; R34 := R32
180 [-]: CALL      R33 2 2      ; R33 := R33(R34)
181 [-]: MOVE      R26 R33      ; R26 := R33
182 [-]: GETGLOBAL R33 K13      ; R33 := _T
183 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["CachedAlerts"]
184 [-]: GETTABLE  R33 R33 R5   ; R33 := R33[R5]
185 [-]: TEST      R33 0        ; if not R33 then PC := 221
186 [-]: JMP       221          ; PC := 221
187 [-]: GETGLOBAL R33 K13      ; R33 := _T
188 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["CachedAlerts"]
189 [-]: GETTABLE  R33 R33 R5   ; R33 := R33[R5]
190 [-]: GETTABLE  R33 R33 K39  ; R33 := R33["mAlertInfo"]
191 [-]: GETTABLE  R33 R33 K47  ; R33 := R33["mTag"]
192 [-]: GETGLOBAL R34 K48      ; R34 := EMPTY_SYMBOL
193 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 221
194 [-]: JMP       221          ; PC := 221
195 [-]: GETGLOBAL R33 K13      ; R33 := _T
196 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["CachedAlerts"]
197 [-]: GETTABLE  R33 R33 R5   ; R33 := R33[R5]
198 [-]: GETTABLE  R33 R33 K39  ; R33 := R33["mAlertInfo"]
199 [-]: GETTABLE  R33 R33 K49  ; R33 := R33["mMissionInfo"]
200 [-]: GETTABLE  R33 R33 K50  ; R33 := R33["descText"]
201 [-]: GETGLOBAL R34 K48      ; R34 := EMPTY_SYMBOL
202 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 221
203 [-]: JMP       221          ; PC := 221
204 [-]: LOADK     R33 K40      ; R33 := " ("
205 [-]: GETGLOBAL R34 K9       ; R34 := string
206 [-]: GETTABLE  R34 R34 K10  ; R34 := R34["0x639C642A"]
207 [-]: GETGLOBAL R35 K11      ; R35 := 0xE6DC43B0
208 [-]: GETGLOBAL R36 K0       ; R36 := 0x9FAED6BC
209 [-]: GETGLOBAL R37 K13      ; R37 := _T
210 [-]: GETTABLE  R37 R37 K16  ; R37 := R37["CachedAlerts"]
211 [-]: GETTABLE  R37 R37 R5   ; R37 := R37[R5]
212 [-]: GETTABLE  R37 R37 K39  ; R37 := R37["mAlertInfo"]
213 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["mMissionInfo"]
214 [-]: GETTABLE  R37 R37 K50  ; R37 := R37["descText"]
215 [-]: CALL      R36 2 2      ; R36 := R36(R37)
216 [-]: MOVE      R37 R0       ; R37 := R0
217 [-]: CALL      R35 3 0      ; R35,... := R35(R36,R37)
218 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
219 [-]: LOADK     R35 K42      ; R35 := ")"
220 [-]: CONCAT    R10 R33 R35  ; R10 := R33 .. R34 .. R35
221 [-]: GETUPVAL  R33 U1       ; R33 := U1
222 [-]: GETTABLE  R33 R33 K51  ; R33 := R33["0xF030C338"]
223 [-]: GETGLOBAL R34 K23      ; R34 := mMovie
224 [-]: GETUPVAL  R35 U0       ; R35 := U0
225 [-]: GETTABLE  R35 R35 K39  ; R35 := R35["mAlertInfo"]
226 [-]: GETTABLE  R35 R35 K52  ; R35 := R35["missionReward"]
227 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
228 [-]: MOVE      R27 R33      ; R27 := R33
229 [-]: JMP       743          ; PC := 743
230 [-]: GETUPVAL  R33 U0       ; R33 := U0
231 [-]: GETTABLE  R33 R33 K53  ; R33 := R33["mGoalInfo"]
232 [-]: TEST      R33 0        ; if not R33 then PC := 297
233 [-]: JMP       297          ; PC := 297
234 [-]: GETGLOBAL R33 K9       ; R33 := string
235 [-]: GETTABLE  R33 R33 K10  ; R33 := R33["0x639C642A"]
236 [-]: GETGLOBAL R34 K11      ; R34 := 0xE6DC43B0
237 [-]: GETUPVAL  R35 U0       ; R35 := U0
238 [-]: GETTABLE  R35 R35 K53  ; R35 := R35["mGoalInfo"]
239 [-]: GETTABLE  R35 R35 K54  ; R35 := R35["mDesc"]
240 [-]: MOVE      R36 R0       ; R36 := R0
241 [-]: CALL      R34 3 0      ; R34,... := R34(R35,R36)
242 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
243 [-]: MOVE      R12 R33      ; R12 := R33
244 [-]: GETGLOBAL R33 K9       ; R33 := string
245 [-]: GETTABLE  R33 R33 K10  ; R33 := R33["0x639C642A"]
246 [-]: GETGLOBAL R34 K23      ; R34 := mMovie
247 [-]: SELF      R34 R34 K24  ; R35 := R34; R34 := R34["0x5DB0BD4"]
248 [-]: LOADK     R36 K55      ; R36 := "/Lotus/Language/Game/MissionName_"
249 [-]: GETUPVAL  R37 U1       ; R37 := U1
250 [-]: GETTABLE  R37 R37 K56  ; R37 := R37["0x87B2D555"]
251 [-]: GETUPVAL  R38 U0       ; R38 := U0
252 [-]: GETTABLE  R38 R38 K57  ; R38 := R38["mMission"]
253 [-]: CALL      R37 2 2      ; R37 := R37(R38)
254 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
255 [-]: MOVE      R37 R0       ; R37 := R0
256 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
257 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
258 [-]: MOVE      R8 R33       ; R8 := R33
259 [-]: GETUPVAL  R33 U0       ; R33 := U0
260 [-]: GETTABLE  R33 R33 K57  ; R33 := R33["mMission"]
261 [-]: GETTABLE  R33 R33 K58  ; R33 := R33["archwingRequired"]
262 [-]: TEST      R33 0        ; if not R33 then PC := 743
263 [-]: JMP       743          ; PC := 743
264 [-]: GETGLOBAL R33 K23      ; R33 := mMovie
265 [-]: SELF      R33 R33 K24  ; R34 := R33; R33 := R33["0x5DB0BD4"]
266 [-]: LOADK     R35 K59      ; R35 := "<ARCHWING>"
267 [-]: MOVE      R36 R1       ; R36 := R1
268 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
269 [-]: LOADK     R34 K60      ; R34 := " "
270 [-]: MOVE      R35 R8       ; R35 := R8
271 [-]: CONCAT    R8 R33 R35   ; R8 := R33 .. R34 .. R35
272 [-]: GETUPVAL  R33 U0       ; R33 := U0
273 [-]: GETTABLE  R33 R33 K57  ; R33 := R33["mMission"]
274 [-]: GETTABLE  R33 R33 K61  ; R33 := R33["isSharkwingMission"]
275 [-]: TEST      R33 0        ; if not R33 then PC := 287
276 [-]: JMP       287          ; PC := 287
277 [-]: MOVE      R33 R8       ; R33 := R8
278 [-]: LOADK     R34 K40      ; R34 := " ("
279 [-]: GETGLOBAL R35 K23      ; R35 := mMovie
280 [-]: SELF      R35 R35 K24  ; R36 := R35; R35 := R35["0x5DB0BD4"]
281 [-]: LOADK     R37 K62      ; R37 := "/Lotus/Language/Menu/Sharkwing"
282 [-]: MOVE      R38 R0       ; R38 := R0
283 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
284 [-]: LOADK     R36 K42      ; R36 := ")"
285 [-]: CONCAT    R8 R33 R36   ; R8 := R33 .. R34 .. R35 .. R36
286 [-]: JMP       743          ; PC := 743
287 [-]: MOVE      R33 R8       ; R33 := R8
288 [-]: LOADK     R34 K40      ; R34 := " ("
289 [-]: GETGLOBAL R35 K23      ; R35 := mMovie
290 [-]: SELF      R35 R35 K24  ; R36 := R35; R35 := R35["0x5DB0BD4"]
291 [-]: LOADK     R37 K63      ; R37 := "/Lotus/Language/Menu/Loadout_Archwing"
292 [-]: MOVE      R38 R0       ; R38 := R0
293 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
294 [-]: LOADK     R36 K42      ; R36 := ")"
295 [-]: CONCAT    R8 R33 R36   ; R8 := R33 .. R34 .. R35 .. R36
296 [-]: JMP       743          ; PC := 743
297 [-]: GETUPVAL  R33 U0       ; R33 := U0
298 [-]: GETTABLE  R33 R33 K64  ; R33 := R33["mGhostTowerMissionInfo"]
299 [-]: EQ        1 R33 K22    ; if R33 == nil then PC := 322
300 [-]: JMP       322          ; PC := 322
301 [-]: GETUPVAL  R33 U3       ; R33 := U3
302 [-]: GETTABLE  R33 R33 K19  ; R33 := R33["0xF81722A2"]
303 [-]: GETUPVAL  R34 U0       ; R34 := U0
304 [-]: GETTABLE  R34 R34 K64  ; R34 := R34["mGhostTowerMissionInfo"]
305 [-]: GETTABLE  R34 R34 K49  ; R34 := R34["mMissionInfo"]
306 [-]: GETTABLE  R34 R34 K65  ; R34 := R34["minEnemyLevel"]
307 [-]: LE        1 K66 R34    ; if 80 <= R34 then PC := 310
308 [-]: JMP       310          ; PC := 310
309 [-]: MOVE      R34 R0       ; R34 := R0
310 [-]: MOVE      R34 R1       ; R34 := R1
311 [-]: LOADK     R35 K67      ; R35 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
312 [-]: LOADK     R36 K68      ; R36 := "/Lotus/Language/Menu/GhostTowerMissionName"
313 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
314 [-]: LOADK     R34 K40      ; R34 := " ("
315 [-]: GETGLOBAL R35 K11      ; R35 := 0xE6DC43B0
316 [-]: MOVE      R36 R33      ; R36 := R33
317 [-]: MOVE      R37 R0       ; R37 := R0
318 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
319 [-]: LOADK     R36 K42      ; R36 := ")"
320 [-]: CONCAT    R10 R34 R36  ; R10 := R34 .. R35 .. R36
321 [-]: JMP       743          ; PC := 743
322 [-]: GETGLOBAL R34 K13      ; R34 := _T
323 [-]: GETTABLE  R34 R34 K69  ; R34 := R34["CachedSkullNodes"]
324 [-]: GETTABLE  R34 R34 R5   ; R34 := R34[R5]
325 [-]: EQ        1 R34 K22    ; if R34 == nil then PC := 364
326 [-]: JMP       364          ; PC := 364
327 [-]: TEST      R3 0         ; if not R3 then PC := 364
328 [-]: JMP       364          ; PC := 364
329 [-]: LOADK     R10 K40      ; R10 := " ("
330 [-]: LOADK     R34 K36      ; R34 := 1
331 [-]: GETGLOBAL R35 K13      ; R35 := _T
332 [-]: GETTABLE  R35 R35 K69  ; R35 := R35["CachedSkullNodes"]
333 [-]: GETTABLE  R35 R35 R5   ; R35 := R35[R5]
334 [-]: LEN       R35 R35      ; R35 := # R35
335 [-]: LOADK     R36 K36      ; R36 := 1
336 [-]: FORPREP   R34 359      ; R34 -= R36; PC := 359
337 [-]: EQ        1 R37 K36    ; if R37 == 1 then PC := 345
338 [-]: JMP       345          ; PC := 345
339 [-]: GETGLOBAL R38 K9       ; R38 := string
340 [-]: GETTABLE  R38 R38 K10  ; R38 := R38["0x639C642A"]
341 [-]: MOVE      R39 R10      ; R39 := R10
342 [-]: CALL      R38 2 2      ; R38 := R38(R39)
343 [-]: LOADK     R39 K70      ; R39 := ", "
344 [-]: CONCAT    R10 R38 R39  ; R10 := R38 .. R39
345 [-]: MOVE      R38 R10      ; R38 := R10
346 [-]: GETGLOBAL R39 K9       ; R39 := string
347 [-]: GETTABLE  R39 R39 K10  ; R39 := R39["0x639C642A"]
348 [-]: GETGLOBAL R40 K23      ; R40 := mMovie
349 [-]: SELF      R40 R40 K24  ; R41 := R40; R40 := R40["0x5DB0BD4"]
350 [-]: GETGLOBAL R42 K13      ; R42 := _T
351 [-]: GETTABLE  R42 R42 K69  ; R42 := R42["CachedSkullNodes"]
352 [-]: GETTABLE  R42 R42 R5   ; R42 := R42[R5]
353 [-]: GETTABLE  R42 R42 R37  ; R42 := R42[R37]
354 [-]: GETTABLE  R42 R42 K71  ; R42 := R42[2]
355 [-]: MOVE      R43 R0       ; R43 := R0
356 [-]: CALL      R40 4 0      ; R40,... := R40(R41,R42,R43)
357 [-]: CALL      R39 0 2      ; R39 := R39(R40,...)
358 [-]: CONCAT    R10 R38 R39  ; R10 := R38 .. R39
359 [-]: FORLOOP   R34 337      ; R34 += R36; if R34 <= R35 then begin PC := 337; R37 := R34 end
360 [-]: MOVE      R38 R10      ; R38 := R10
361 [-]: LOADK     R39 K42      ; R39 := ")"
362 [-]: CONCAT    R10 R38 R39  ; R10 := R38 .. R39
363 [-]: JMP       743          ; PC := 743
364 [-]: GETGLOBAL R38 K13      ; R38 := _T
365 [-]: GETTABLE  R38 R38 K72  ; R38 := R38["CachedSortieMissions"]
366 [-]: GETTABLE  R38 R38 R5   ; R38 := R38[R5]
367 [-]: TEST      R38 0        ; if not R38 then PC := 399
368 [-]: JMP       399          ; PC := 399
369 [-]: GETGLOBAL R38 K13      ; R38 := _T
370 [-]: GETTABLE  R38 R38 K72  ; R38 := R38["CachedSortieMissions"]
371 [-]: GETTABLE  R38 R38 R5   ; R38 := R38[R5]
372 [-]: GETTABLE  R38 R38 K73  ; R38 := R38["mShowInStarChart"]
373 [-]: TEST      R38 0        ; if not R38 then PC := 399
374 [-]: JMP       399          ; PC := 399
375 [-]: LOADK     R38 K40      ; R38 := " ("
376 [-]: GETGLOBAL R39 K11      ; R39 := 0xE6DC43B0
377 [-]: LOADK     R40 K74      ; R40 := "/Lotus/Language/Menu/SortieMissionName"
378 [-]: LOADNIL   R41 R41      ; R41 := nil
379 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
380 [-]: LOADK     R40 K42      ; R40 := ")"
381 [-]: CONCAT    R10 R38 R40  ; R10 := R38 .. R39 .. R40
382 [-]: GETGLOBAL R38 K43      ; R38 := Engine
383 [-]: GETTABLE  R38 R38 K44  ; R38 := R38["0xD09D7910"]
384 [-]: GETGLOBAL R39 K13      ; R39 := _T
385 [-]: GETTABLE  R39 R39 K72  ; R39 := R39["CachedSortieMissions"]
386 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
387 [-]: GETTABLE  R39 R39 K45  ; R39 := R39["mExpiry"]
388 [-]: CALL      R38 2 2      ; R38 := R38(R39)
389 [-]: GETUPVAL  R39 U1       ; R39 := U1
390 [-]: GETTABLE  R39 R39 K75  ; R39 := R39["0xE233A311"]
391 [-]: MOVE      R40 R38      ; R40 := R38
392 [-]: CALL      R39 2 2      ; R39 := R39(R40)
393 [-]: MOVE      R26 R39      ; R26 := R39
394 [-]: GETGLOBAL R39 K13      ; R39 := _T
395 [-]: GETTABLE  R39 R39 K72  ; R39 := R39["CachedSortieMissions"]
396 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
397 [-]: GETTABLE  R28 R39 K76  ; R28 := R39["mModifierAuraDesc"]
398 [-]: JMP       743          ; PC := 743
399 [-]: GETGLOBAL R39 K13      ; R39 := _T
400 [-]: GETTABLE  R39 R39 K14  ; R39 := R39["CachedSyndicateMissions"]
401 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
402 [-]: TEST      R39 0        ; if not R39 then PC := 441
403 [-]: JMP       441          ; PC := 441
404 [-]: GETGLOBAL R39 K13      ; R39 := _T
405 [-]: GETTABLE  R39 R39 K14  ; R39 := R39["CachedSyndicateMissions"]
406 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
407 [-]: GETTABLE  R39 R39 K15  ; R39 := R39["mVisible"]
408 [-]: TEST      R39 0        ; if not R39 then PC := 441
409 [-]: JMP       441          ; PC := 441
410 [-]: LOADK     R39 K40      ; R39 := " ("
411 [-]: GETGLOBAL R40 K11      ; R40 := 0xE6DC43B0
412 [-]: LOADK     R41 K77      ; R41 := "/Lotus/Language/Menu/SyndicateMissionName"
413 [-]: MOVE      R42 R0       ; R42 := R0
414 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
415 [-]: LOADK     R41 K42      ; R41 := ")"
416 [-]: CONCAT    R10 R39 R41  ; R10 := R39 .. R40 .. R41
417 [-]: GETGLOBAL R39 K43      ; R39 := Engine
418 [-]: GETTABLE  R39 R39 K44  ; R39 := R39["0xD09D7910"]
419 [-]: GETGLOBAL R40 K13      ; R40 := _T
420 [-]: GETTABLE  R40 R40 K14  ; R40 := R40["CachedSyndicateMissions"]
421 [-]: GETTABLE  R40 R40 R5   ; R40 := R40[R5]
422 [-]: GETTABLE  R40 R40 K45  ; R40 := R40["mExpiry"]
423 [-]: CALL      R39 2 2      ; R39 := R39(R40)
424 [-]: GETUPVAL  R40 U1       ; R40 := U1
425 [-]: GETTABLE  R40 R40 K46  ; R40 := R40["0x9E1A1D26"]
426 [-]: MOVE      R41 R39      ; R41 := R39
427 [-]: CALL      R40 2 2      ; R40 := R40(R41)
428 [-]: MOVE      R26 R40      ; R26 := R40
429 [-]: GETGLOBAL R40 K23      ; R40 := mMovie
430 [-]: SELF      R40 R40 K24  ; R41 := R40; R40 := R40["0x5DB0BD4"]
431 [-]: LOADK     R42 K78      ; R42 := "/Lotus/Language/Menu/Syndicates_Reputation"
432 [-]: MOVE      R43 R1       ; R43 := R1
433 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
434 [-]: GETGLOBAL R41 K13      ; R41 := _T
435 [-]: GETTABLE  R41 R41 K14  ; R41 := R41["CachedSyndicateMissions"]
436 [-]: GETTABLE  R41 R41 R5   ; R41 := R41[R5]
437 [-]: GETTABLE  R41 R41 K49  ; R41 := R41["mMissionInfo"]
438 [-]: GETTABLE  R41 R41 K79  ; R41 := R41["syndicateXP"]
439 [-]: CONCAT    R27 R40 R41  ; R27 := R40 .. R41
440 [-]: JMP       743          ; PC := 743
441 [-]: GETGLOBAL R40 K13      ; R40 := _T
442 [-]: GETTABLE  R40 R40 K80  ; R40 := R40["CachedActiveMissions"]
443 [-]: TEST      R40 0        ; if not R40 then PC := 473
444 [-]: JMP       473          ; PC := 473
445 [-]: GETGLOBAL R40 K13      ; R40 := _T
446 [-]: GETTABLE  R40 R40 K80  ; R40 := R40["CachedActiveMissions"]
447 [-]: GETTABLE  R40 R40 R5   ; R40 := R40[R5]
448 [-]: TEST      R40 0        ; if not R40 then PC := 473
449 [-]: JMP       473          ; PC := 473
450 [-]: GETGLOBAL R40 K13      ; R40 := _T
451 [-]: GETTABLE  R40 R40 K80  ; R40 := R40["CachedActiveMissions"]
452 [-]: GETTABLE  R40 R40 R5   ; R40 := R40[R5]
453 [-]: GETTABLE  R40 R40 K15  ; R40 := R40["mVisible"]
454 [-]: TEST      R40 0        ; if not R40 then PC := 473
455 [-]: JMP       473          ; PC := 473
456 [-]: GETGLOBAL R40 K43      ; R40 := Engine
457 [-]: GETTABLE  R40 R40 K44  ; R40 := R40["0xD09D7910"]
458 [-]: GETGLOBAL R41 K13      ; R41 := _T
459 [-]: GETTABLE  R41 R41 K80  ; R41 := R41["CachedActiveMissions"]
460 [-]: GETTABLE  R41 R41 R5   ; R41 := R41[R5]
461 [-]: GETTABLE  R41 R41 K45  ; R41 := R41["mExpiry"]
462 [-]: CALL      R40 2 2      ; R40 := R40(R41)
463 [-]: GETUPVAL  R41 U1       ; R41 := U1
464 [-]: GETTABLE  R41 R41 K75  ; R41 := R41["0xE233A311"]
465 [-]: MOVE      R42 R40      ; R42 := R40
466 [-]: CALL      R41 2 2      ; R41 := R41(R42)
467 [-]: MOVE      R26 R41      ; R26 := R41
468 [-]: GETGLOBAL R41 K13      ; R41 := _T
469 [-]: GETTABLE  R41 R41 K80  ; R41 := R41["CachedActiveMissions"]
470 [-]: GETTABLE  R41 R41 R5   ; R41 := R41[R5]
471 [-]: GETTABLE  R28 R41 K76  ; R28 := R41["mModifierAuraDesc"]
472 [-]: JMP       743          ; PC := 743
473 [-]: GETUPVAL  R41 U0       ; R41 := U0
474 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
475 [-]: EQ        1 R41 K22    ; if R41 == nil then PC := 743
476 [-]: JMP       743          ; PC := 743
477 [-]: GETUPVAL  R41 U0       ; R41 := U0
478 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
479 [-]: GETTABLE  R41 R41 K82  ; R41 := R41["mFaction"]
480 [-]: GETGLOBAL R42 K27      ; R42 := Lotus_Game
481 [-]: GETTABLE  R42 R42 K83  ; R42 := R42["FC_INFESTATION"]
482 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 485
483 [-]: JMP       485          ; PC := 485
484 [-]: MOVE      R23 R0       ; R23 := R0
485 [-]: MOVE      R23 R1       ; R23 := R1
486 [-]: GETUPVAL  R41 U0       ; R41 := U0
487 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
488 [-]: GETTABLE  R41 R41 K84  ; R41 := R41["mEventTag"]
489 [-]: GETGLOBAL R42 K48      ; R42 := EMPTY_SYMBOL
490 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 527
491 [-]: JMP       527          ; PC := 527
492 [-]: GETUPVAL  R41 U0       ; R41 := U0
493 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
494 [-]: GETTABLE  R41 R41 K85  ; R41 := R41["mCount"]
495 [-]: GETUPVAL  R42 U0       ; R42 := U0
496 [-]: GETTABLE  R42 R42 K81  ; R42 := R42["mInvasionInfo"]
497 [-]: GETTABLE  R42 R42 K86  ; R42 := R42["mGoal"]
498 [-]: DIV       R41 R41 R42  ; R41 := R41 / R42
499 [-]: MUL       R41 R41 K87  ; R41 := R41 * 50
500 [-]: ADD       R41 K87 R41  ; R41 := 50 + R41
501 [-]: TEST      R23 0        ; if not R23 then PC := 513
502 [-]: JMP       513          ; PC := 513
503 [-]: GETUPVAL  R42 U0       ; R42 := U0
504 [-]: GETTABLE  R42 R42 K81  ; R42 := R42["mInvasionInfo"]
505 [-]: GETTABLE  R42 R42 K85  ; R42 := R42["mCount"]
506 [-]: GETUPVAL  R43 U0       ; R43 := U0
507 [-]: GETTABLE  R43 R43 K81  ; R43 := R43["mInvasionInfo"]
508 [-]: GETTABLE  R43 R43 K86  ; R43 := R43["mGoal"]
509 [-]: DIV       R42 R42 R43  ; R42 := R42 / R43
510 [-]: MUL       R42 R42 K88  ; R42 := R42 * 100
511 [-]: ADD       R41 K88 R42  ; R41 := 100 + R42
512 [-]: JMP       521          ; PC := 521
513 [-]: GETUPVAL  R42 U0       ; R42 := U0
514 [-]: GETTABLE  R42 R42 K81  ; R42 := R42["mInvasionInfo"]
515 [-]: GETTABLE  R42 R42 K89  ; R42 := R42["mAttackerMissionInfo"]
516 [-]: GETTABLE  R42 R42 K90  ; R42 := R42["faction"]
517 [-]: GETGLOBAL R43 K27      ; R43 := Lotus_Game
518 [-]: GETTABLE  R43 R43 K83  ; R43 := R43["FC_INFESTATION"]
519 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 521
520 [-]: JMP       521          ; PC := 521
521 [-]: GETUPVAL  R42 U1       ; R42 := U1
522 [-]: GETTABLE  R42 R42 K91  ; R42 := R42["0x90BB414A"]
523 [-]: MOVE      R43 R41      ; R43 := R41
524 [-]: CALL      R42 2 2      ; R42 := R42(R43)
525 [-]: MOVE      R18 R42      ; R18 := R42
526 [-]: JMP       562          ; PC := 562
527 [-]: GETUPVAL  R42 U0       ; R42 := U0
528 [-]: GETTABLE  R42 R42 K81  ; R42 := R42["mInvasionInfo"]
529 [-]: GETTABLE  R42 R42 K85  ; R42 := R42["mCount"]
530 [-]: GETUPVAL  R43 U0       ; R43 := U0
531 [-]: GETTABLE  R43 R43 K81  ; R43 := R43["mInvasionInfo"]
532 [-]: GETTABLE  R43 R43 K86  ; R43 := R43["mGoal"]
533 [-]: DIV       R42 R42 R43  ; R42 := R42 / R43
534 [-]: MUL       R42 R42 K87  ; R42 := R42 * 50
535 [-]: ADD       R42 K87 R42  ; R42 := 50 + R42
536 [-]: GETUPVAL  R43 U0       ; R43 := U0
537 [-]: GETTABLE  R43 R43 K81  ; R43 := R43["mInvasionInfo"]
538 [-]: GETTABLE  R43 R43 K85  ; R43 := R43["mCount"]
539 [-]: GETUPVAL  R44 U0       ; R44 := U0
540 [-]: GETTABLE  R44 R44 K81  ; R44 := R44["mInvasionInfo"]
541 [-]: GETTABLE  R44 R44 K86  ; R44 := R44["mGoal"]
542 [-]: DIV       R43 R43 R44  ; R43 := R43 / R44
543 [-]: MUL       R43 R43 K87  ; R43 := R43 * 50
544 [-]: SUB       R43 K87 R43  ; R43 := 50 - R43
545 [-]: GETUPVAL  R44 U1       ; R44 := U1
546 [-]: GETTABLE  R44 R44 K91  ; R44 := R44["0x90BB414A"]
547 [-]: MOVE      R45 R42      ; R45 := R42
548 [-]: CALL      R44 2 2      ; R44 := R44(R45)
549 [-]: GETUPVAL  R45 U1       ; R45 := U1
550 [-]: GETTABLE  R45 R45 K91  ; R45 := R45["0x90BB414A"]
551 [-]: MOVE      R46 R43      ; R46 := R43
552 [-]: CALL      R45 2 2      ; R45 := R45(R46)
553 [-]: GETGLOBAL R46 K11      ; R46 := 0xE6DC43B0
554 [-]: LOADK     R47 K92      ; R47 := "/Lotus/Language/Menu/DilemmaActiveProgress"
555 [-]: NEWTABLE  R48 0 4      ; R48 := {}
556 [-]: SETTABLE  R48 K93 K94  ; R48["OPTION_ONE"] := "Nef Anyo"
557 [-]: SETTABLE  R48 K95 K96  ; R48["OPTION_TWO"] := "Alad V"
558 [-]: SETTABLE  R48 K97 R44  ; R48["VALUE_ONE"] := R44
559 [-]: SETTABLE  R48 K98 R45  ; R48["VALUE_TWO"] := R45
560 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
561 [-]: MOVE      R18 R46      ; R18 := R46
562 [-]: TEST      R23 0        ; if not R23 then PC := 574
563 [-]: JMP       574          ; PC := 574
564 [-]: GETGLOBAL R46 K11      ; R46 := 0xE6DC43B0
565 [-]: LOADK     R47 K99      ; R47 := "/Lotus/Language/Menu/MissionIntro_Invasion"
566 [-]: MOVE      R48 R0       ; R48 := R0
567 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
568 [-]: MOVE      R8 R46       ; R8 := R46
569 [-]: LOADK     R46 K40      ; R46 := " ("
570 [-]: GETUPVAL  R47 U0       ; R47 := U0
571 [-]: GETTABLE  R47 R47 K5   ; R47 := R47["mName"]
572 [-]: LOADK     R48 K42      ; R48 := ")"
573 [-]: CONCAT    R10 R46 R48  ; R10 := R46 .. R47 .. R48
574 [-]: GETGLOBAL R46 K100     ; R46 := 0x400E7765
575 [-]: GETGLOBAL R47 K101     ; R47 := gGameData
576 [-]: CALL      R46 2 2      ; R46 := R46(R47)
577 [-]: TEST      R46 1        ; if R46 then PC := 743
578 [-]: JMP       743          ; PC := 743
579 [-]: GETGLOBAL R46 K101     ; R46 := gGameData
580 [-]: SELF      R46 R46 K102 ; R47 := R46; R46 := R46["0x8EA5238E"]
581 [-]: CALL      R46 2 2      ; R46 := R46(R47)
582 [-]: LOADK     R47 K36      ; R47 := 1
583 [-]: LEN       R48 R46      ; R48 := # R46
584 [-]: LOADK     R49 K36      ; R49 := 1
585 [-]: FORPREP   R47 656      ; R47 -= R49; PC := 656
586 [-]: GETTABLE  R51 R46 R50  ; R51 := R46[R50]
587 [-]: GETTABLE  R51 R51 K103 ; R51 := R51["mId"]
588 [-]: GETTABLE  R51 R51 K103 ; R51 := R51["mId"]
589 [-]: GETUPVAL  R52 U0       ; R52 := U0
590 [-]: GETTABLE  R52 R52 K81  ; R52 := R52["mInvasionInfo"]
591 [-]: GETTABLE  R52 R52 K103 ; R52 := R52["mId"]
592 [-]: GETTABLE  R52 R52 K103 ; R52 := R52["mId"]
593 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 656
594 [-]: JMP       656          ; PC := 656
595 [-]: GETTABLE  R51 R46 R50  ; R51 := R46[R50]
596 [-]: GETTABLE  R19 R51 K104 ; R19 := R51["mDelta"]
597 [-]: LT        0 K30 R19    ; if 0 >= R19 then PC := 624
598 [-]: JMP       624          ; PC := 624
599 [-]: GETUPVAL  R51 U0       ; R51 := U0
600 [-]: GETTABLE  R51 R51 K81  ; R51 := R51["mInvasionInfo"]
601 [-]: GETTABLE  R21 R51 K82  ; R21 := R51["mFaction"]
602 [-]: GETUPVAL  R51 U3       ; R51 := U3
603 [-]: GETTABLE  R51 R51 K19  ; R51 := R51["0xF81722A2"]
604 [-]: GETUPVAL  R52 U0       ; R52 := U0
605 [-]: GETTABLE  R52 R52 K81  ; R52 := R52["mInvasionInfo"]
606 [-]: GETTABLE  R52 R52 K105 ; R52 := R52["mAttackerName"]
607 [-]: GETGLOBAL R53 K48      ; R53 := EMPTY_SYMBOL
608 [-]: EQ        1 R52 R53    ; if R52 == R53 then PC := 611
609 [-]: JMP       611          ; PC := 611
610 [-]: MOVE      R52 R0       ; R52 := R0
611 [-]: MOVE      R52 R1       ; R52 := R1
612 [-]: GETUPVAL  R53 U1       ; R53 := U1
613 [-]: GETTABLE  R53 R53 K106 ; R53 := R53["FactionNames"]
614 [-]: ADD       R54 R21 K36  ; R54 := R21 + 1
615 [-]: GETTABLE  R53 R53 R54  ; R53 := R53[R54]
616 [-]: GETGLOBAL R54 K0       ; R54 := 0x9FAED6BC
617 [-]: GETUPVAL  R55 U0       ; R55 := U0
618 [-]: GETTABLE  R55 R55 K81  ; R55 := R55["mInvasionInfo"]
619 [-]: GETTABLE  R55 R55 K105 ; R55 := R55["mAttackerName"]
620 [-]: CALL      R54 2 0      ; R54,... := R54(R55)
621 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
622 [-]: MOVE      R22 R51      ; R22 := R51
623 [-]: JMP       656          ; PC := 656
624 [-]: LT        0 R19 K30    ; if R19 >= 0 then PC := 656
625 [-]: JMP       656          ; PC := 656
626 [-]: GETGLOBAL R51 K107     ; R51 := math
627 [-]: GETTABLE  R51 R51 K108 ; R51 := R51["0xF93F7CC8"]
628 [-]: MOVE      R52 R19      ; R52 := R19
629 [-]: CALL      R51 2 2      ; R51 := R51(R52)
630 [-]: MOVE      R19 R51      ; R19 := R51
631 [-]: GETUPVAL  R51 U0       ; R51 := U0
632 [-]: GETTABLE  R51 R51 K81  ; R51 := R51["mInvasionInfo"]
633 [-]: GETTABLE  R51 R51 K89  ; R51 := R51["mAttackerMissionInfo"]
634 [-]: GETTABLE  R21 R51 K90  ; R21 := R51["faction"]
635 [-]: GETUPVAL  R51 U3       ; R51 := U3
636 [-]: GETTABLE  R51 R51 K19  ; R51 := R51["0xF81722A2"]
637 [-]: GETUPVAL  R52 U0       ; R52 := U0
638 [-]: GETTABLE  R52 R52 K81  ; R52 := R52["mInvasionInfo"]
639 [-]: GETTABLE  R52 R52 K109 ; R52 := R52["mDefenderName"]
640 [-]: GETGLOBAL R53 K48      ; R53 := EMPTY_SYMBOL
641 [-]: EQ        1 R52 R53    ; if R52 == R53 then PC := 644
642 [-]: JMP       644          ; PC := 644
643 [-]: MOVE      R52 R0       ; R52 := R0
644 [-]: MOVE      R52 R1       ; R52 := R1
645 [-]: GETUPVAL  R53 U1       ; R53 := U1
646 [-]: GETTABLE  R53 R53 K106 ; R53 := R53["FactionNames"]
647 [-]: ADD       R54 R21 K36  ; R54 := R21 + 1
648 [-]: GETTABLE  R53 R53 R54  ; R53 := R53[R54]
649 [-]: GETGLOBAL R54 K0       ; R54 := 0x9FAED6BC
650 [-]: GETUPVAL  R55 U0       ; R55 := U0
651 [-]: GETTABLE  R55 R55 K81  ; R55 := R55["mInvasionInfo"]
652 [-]: GETTABLE  R55 R55 K109 ; R55 := R55["mDefenderName"]
653 [-]: CALL      R54 2 0      ; R54,... := R54(R55)
654 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
655 [-]: MOVE      R22 R51      ; R22 := R51
656 [-]: FORLOOP   R47 586      ; R47 += R49; if R47 <= R48 then begin PC := 586; R50 := R47 end
657 [-]: GETUPVAL  R51 U1       ; R51 := U1
658 [-]: GETTABLE  R51 R51 K51  ; R51 := R51["0xF030C338"]
659 [-]: GETGLOBAL R52 K23      ; R52 := mMovie
660 [-]: GETUPVAL  R53 U0       ; R53 := U0
661 [-]: GETTABLE  R53 R53 K81  ; R53 := R53["mInvasionInfo"]
662 [-]: GETTABLE  R53 R53 K110 ; R53 := R53["mAttackerReward"]
663 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
664 [-]: GETUPVAL  R52 U1       ; R52 := U1
665 [-]: GETTABLE  R52 R52 K51  ; R52 := R52["0xF030C338"]
666 [-]: GETGLOBAL R53 K23      ; R53 := mMovie
667 [-]: GETUPVAL  R54 U0       ; R54 := U0
668 [-]: GETTABLE  R54 R54 K81  ; R54 := R54["mInvasionInfo"]
669 [-]: GETTABLE  R54 R54 K111 ; R54 := R54["mDefenderReward"]
670 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
671 [-]: GETUPVAL  R53 U3       ; R53 := U3
672 [-]: GETTABLE  R53 R53 K19  ; R53 := R53["0xF81722A2"]
673 [-]: MOVE      R54 R23      ; R54 := R23
674 [-]: MOVE      R55 R51      ; R55 := R51
675 [-]: LOADK     R56 K60      ; R56 := " "
676 [-]: GETGLOBAL R57 K23      ; R57 := mMovie
677 [-]: SELF      R57 R57 K24  ; R58 := R57; R57 := R57["0x5DB0BD4"]
678 [-]: LOADK     R59 K112     ; R59 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
679 [-]: MOVE      R60 R0       ; R60 := R0
680 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
681 [-]: LOADK     R58 K60      ; R58 := " "
682 [-]: MOVE      R59 R52      ; R59 := R52
683 [-]: CONCAT    R55 R55 R59  ; R55 := R55 .. R56 .. R57 .. R58 .. R59
684 [-]: MOVE      R56 R52      ; R56 := R52
685 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
686 [-]: MOVE      R24 R53      ; R24 := R53
687 [-]: LOADK     R53 K113     ; R53 := "\r\n"
688 [-]: MOVE      R54 R18      ; R54 := R18
689 [-]: LOADK     R55 K113     ; R55 := "\r\n"
690 [-]: MOVE      R56 R19      ; R56 := R19
691 [-]: LOADK     R57 K114     ; R57 := "/"
692 [-]: MOVE      R58 R20      ; R58 := R20
693 [-]: CONCAT    R15 R53 R58  ; R15 := R53 .. R54 .. R55 .. R56 .. R57 .. R58
694 [-]: TEST      R21 0        ; if not R21 then PC := 706
695 [-]: JMP       706          ; PC := 706
696 [-]: TEST      R23 1        ; if R23 then PC := 706
697 [-]: JMP       706          ; PC := 706
698 [-]: MOVE      R53 R15      ; R53 := R15
699 [-]: LOADK     R54 K60      ; R54 := " "
700 [-]: GETGLOBAL R55 K23      ; R55 := mMovie
701 [-]: SELF      R55 R55 K24  ; R56 := R55; R55 := R55["0x5DB0BD4"]
702 [-]: MOVE      R57 R22      ; R57 := R22
703 [-]: MOVE      R58 R0       ; R58 := R0
704 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
705 [-]: CONCAT    R15 R53 R55  ; R15 := R53 .. R54 .. R55
706 [-]: MOVE      R53 R15      ; R53 := R15
707 [-]: LOADK     R54 K113     ; R54 := "\r\n"
708 [-]: MOVE      R55 R24      ; R55 := R24
709 [-]: CONCAT    R15 R53 R55  ; R15 := R53 .. R54 .. R55
710 [-]: GETGLOBAL R53 K43      ; R53 := Engine
711 [-]: GETTABLE  R53 R53 K44  ; R53 := R53["0xD09D7910"]
712 [-]: GETUPVAL  R54 U0       ; R54 := U0
713 [-]: GETTABLE  R54 R54 K81  ; R54 := R54["mInvasionInfo"]
714 [-]: GETTABLE  R54 R54 K45  ; R54 := R54["mExpiry"]
715 [-]: CALL      R53 2 2      ; R53 := R53(R54)
716 [-]: LE        0 K115 R53   ; if -600 > R53 then PC := 743
717 [-]: JMP       743          ; PC := 743
718 [-]: LE        0 R53 K116   ; if R53 > 43200 then PC := 743
719 [-]: JMP       743          ; PC := 743
720 [-]: GETUPVAL  R54 U1       ; R54 := U1
721 [-]: GETTABLE  R54 R54 K117 ; R54 := R54["0xE5892312"]
722 [-]: MOVE      R55 R53      ; R55 := R53
723 [-]: CALL      R54 2 2      ; R54 := R54(R55)
724 [-]: LT        0 R53 K30    ; if R53 >= 0 then PC := 731
725 [-]: JMP       731          ; PC := 731
726 [-]: GETUPVAL  R55 U1       ; R55 := U1
727 [-]: GETTABLE  R55 R55 K117 ; R55 := R55["0xE5892312"]
728 [-]: LOADK     R56 K30      ; R56 := 0
729 [-]: CALL      R55 2 2      ; R55 := R55(R56)
730 [-]: MOVE      R54 R55      ; R54 := R55
731 [-]: MOVE      R55 R12      ; R55 := R12
732 [-]: LOADK     R56 K17      ; R56 := " - "
733 [-]: GETGLOBAL R57 K9       ; R57 := string
734 [-]: GETTABLE  R57 R57 K10  ; R57 := R57["0x639C642A"]
735 [-]: GETGLOBAL R58 K11      ; R58 := 0xE6DC43B0
736 [-]: LOADK     R59 K118     ; R59 := "/Lotus/Language/Menu/Notification_Expiry_Heading"
737 [-]: LOADNIL   R60 R60      ; R60 := nil
738 [-]: CALL      R58 3 0      ; R58,... := R58(R59,R60)
739 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
740 [-]: LOADK     R58 K60      ; R58 := " "
741 [-]: MOVE      R59 R54      ; R59 := R54
742 [-]: CONCAT    R12 R55 R59  ; R12 := R55 .. R56 .. R57 .. R58 .. R59
743 [-]: GETUPVAL  R55 U0       ; R55 := U0
744 [-]: GETTABLE  R55 R55 K57  ; R55 := R55["mMission"]
745 [-]: GETTABLE  R55 R55 K119 ; R55 := R55["missionType"]
746 [-]: GETGLOBAL R56 K27      ; R56 := Lotus_Game
747 [-]: GETTABLE  R56 R56 K120 ; R56 := R56["MT_RAILJACK"]
748 [-]: EQ        0 R55 R56    ; if R55 ~= R56 then PC := 796
749 [-]: JMP       796          ; PC := 796
750 [-]: GETGLOBAL R55 K100     ; R55 := 0x400E7765
751 [-]: GETUPVAL  R56 U0       ; R56 := U0
752 [-]: GETTABLE  R56 R56 K57  ; R56 := R56["mMission"]
753 [-]: SELF      R56 R56 K121 ; R57 := R56; R56 := R56["0x70C51B59"]
754 [-]: CALL      R56 2 0      ; R56,... := R56(R57)
755 [-]: CALL      R55 0 2      ; R55 := R55(R56,...)
756 [-]: TEST      R55 0        ; if not R55 then PC := 796
757 [-]: JMP       796          ; PC := 796
758 [-]: GETGLOBAL R55 K23      ; R55 := mMovie
759 [-]: SELF      R55 R55 K24  ; R56 := R55; R55 := R55["0x5DB0BD4"]
760 [-]: LOADK     R57 K122     ; R57 := "<RAILJACK>"
761 [-]: MOVE      R58 R1       ; R58 := R1
762 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
763 [-]: LOADK     R56 K60      ; R56 := " "
764 [-]: GETGLOBAL R57 K9       ; R57 := string
765 [-]: GETTABLE  R57 R57 K10  ; R57 := R57["0x639C642A"]
766 [-]: GETGLOBAL R58 K23      ; R58 := mMovie
767 [-]: SELF      R58 R58 K24  ; R59 := R58; R58 := R58["0x5DB0BD4"]
768 [-]: LOADK     R60 K123     ; R60 := "/Lotus/Language/Railjack/Railjack"
769 [-]: MOVE      R61 R0       ; R61 := R0
770 [-]: CALL      R58 4 0      ; R58,... := R58(R59,R60,R61)
771 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
772 [-]: CONCAT    R8 R55 R57   ; R8 := R55 .. R56 .. R57
773 [-]: MOVE      R55 R30      ; R55 := R30
774 [-]: LOADK     R56 K124     ; R56 := "/Lotus/Language/Menu/Lobby_Mission"
775 [-]: MOVE      R57 R8       ; R57 := R8
776 [-]: CALL      R55 3 1      ; R55(R56,R57)
777 [-]: GETGLOBAL R55 K9       ; R55 := string
778 [-]: GETTABLE  R55 R55 K125 ; R55 := R55["0xC6772A8A"]
779 [-]: MOVE      R56 R29      ; R56 := R29
780 [-]: CALL      R55 2 2      ; R55 := R55(R56)
781 [-]: MOVE      R56 R29      ; R56 := R29
782 [-]: LOADK     R57 K126     ; R57 := "</p>"
783 [-]: CONCAT    R29 R56 R57  ; R29 := R56 .. R57
784 [-]: GETUPVAL  R56 U5       ; R56 := U5
785 [-]: GETTABLE  R56 R56 K127 ; R56 := R56["UpdateTimer"]
786 [-]: EQ        1 R56 K22    ; if R56 == nil then PC := 795
787 [-]: JMP       795          ; PC := 795
788 [-]: GETUPVAL  R56 U5       ; R56 := U5
789 [-]: GETGLOBAL R57 K9       ; R57 := string
790 [-]: GETTABLE  R57 R57 K129 ; R57 := R57["0x7B782033"]
791 [-]: MOVE      R58 R29      ; R58 := R29
792 [-]: ADD       R59 R55 K36  ; R59 := R55 + 1
793 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
794 [-]: SETTABLE  R56 K128 R57 ; R56["TimerPost"] := R57
795 [-]: RETURN    R29 2        ; return R29
796 [-]: GETGLOBAL R56 K27      ; R56 := Lotus_Game
797 [-]: GETTABLE  R56 R56 K28  ; R56 := R56["NT_HUB"]
798 [-]: EQ        1 R7 R56     ; if R7 == R56 then PC := 806
799 [-]: JMP       806          ; PC := 806
800 [-]: MOVE      R56 R30      ; R56 := R30
801 [-]: LOADK     R57 K124     ; R57 := "/Lotus/Language/Menu/Lobby_Mission"
802 [-]: MOVE      R58 R8       ; R58 := R8
803 [-]: MOVE      R59 R10      ; R59 := R10
804 [-]: CONCAT    R58 R58 R59  ; R58 := R58 .. R59
805 [-]: CALL      R56 3 1      ; R56(R57,R58)
806 [-]: GETUPVAL  R56 U0       ; R56 := U0
807 [-]: GETTABLE  R56 R56 K57  ; R56 := R56["mMission"]
808 [-]: GETTABLE  R56 R56 K130 ; R56 := R56["goalTag"]
809 [-]: SELF      R56 R56 K131 ; R57 := R56; R56 := R56["0x5EC7A3D2"]
810 [-]: CALL      R56 2 2      ; R56 := R56(R57)
811 [-]: EQ        0 R56 K132   ; if R56 ~= "NoMods" then PC := 826
812 [-]: JMP       826          ; PC := 826
813 [-]: GETGLOBAL R56 K23      ; R56 := mMovie
814 [-]: SELF      R56 R56 K24  ; R57 := R56; R56 := R56["0x5DB0BD4"]
815 [-]: LOADK     R58 K133     ; R58 := "/Lotus/Language/Sorties/SOModifierNoMods"
816 [-]: MOVE      R59 R0       ; R59 := R0
817 [-]: CALL      R56 4 2      ; R56 := R56(R57,R58,R59)
818 [-]: GETGLOBAL R57 K23      ; R57 := mMovie
819 [-]: SELF      R57 R57 K24  ; R58 := R57; R57 := R57["0x5DB0BD4"]
820 [-]: LOADK     R59 K134     ; R59 := "/Lotus/Language/Sorties/SOModifierCaption"
821 [-]: MOVE      R60 R0       ; R60 := R0
822 [-]: NEWTABLE  R61 0 1      ; R61 := {}
823 [-]: SETTABLE  R61 K135 R56 ; R61["MODIFIER_DESC"] := R56
824 [-]: CALL      R57 5 2      ; R57 := R57(R58,R59,R60,R61)
825 [-]: MOVE      R28 R57      ; R28 := R57
826 [-]: EQ        1 R15 K22    ; if R15 == nil then PC := 903
827 [-]: JMP       903          ; PC := 903
828 [-]: TEST      R23 1        ; if R23 then PC := 903
829 [-]: JMP       903          ; PC := 903
830 [-]: GETGLOBAL R57 K11      ; R57 := 0xE6DC43B0
831 [-]: GETGLOBAL R58 K0       ; R58 := 0x9FAED6BC
832 [-]: GETUPVAL  R59 U1       ; R59 := U1
833 [-]: GETTABLE  R59 R59 K106 ; R59 := R59["FactionNames"]
834 [-]: GETUPVAL  R60 U0       ; R60 := U0
835 [-]: GETTABLE  R60 R60 K81  ; R60 := R60["mInvasionInfo"]
836 [-]: GETTABLE  R60 R60 K82  ; R60 := R60["mFaction"]
837 [-]: ADD       R60 R60 K36  ; R60 := R60 + 1
838 [-]: GETTABLE  R59 R59 R60  ; R59 := R59[R60]
839 [-]: CALL      R58 2 2      ; R58 := R58(R59)
840 [-]: MOVE      R59 R0       ; R59 := R0
841 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
842 [-]: LOADK     R58 K40      ; R58 := " ("
843 [-]: GETGLOBAL R59 K9       ; R59 := string
844 [-]: GETTABLE  R59 R59 K10  ; R59 := R59["0x639C642A"]
845 [-]: GETGLOBAL R60 K23      ; R60 := mMovie
846 [-]: SELF      R60 R60 K24  ; R61 := R60; R60 := R60["0x5DB0BD4"]
847 [-]: LOADK     R62 K55      ; R62 := "/Lotus/Language/Game/MissionName_"
848 [-]: GETUPVAL  R63 U1       ; R63 := U1
849 [-]: GETTABLE  R63 R63 K56  ; R63 := R63["0x87B2D555"]
850 [-]: GETUPVAL  R64 U0       ; R64 := U0
851 [-]: GETTABLE  R64 R64 K81  ; R64 := R64["mInvasionInfo"]
852 [-]: GETTABLE  R64 R64 K89  ; R64 := R64["mAttackerMissionInfo"]
853 [-]: CALL      R63 2 2      ; R63 := R63(R64)
854 [-]: CONCAT    R62 R62 R63  ; R62 := R62 .. R63
855 [-]: MOVE      R63 R0       ; R63 := R0
856 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
857 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
858 [-]: LOADK     R60 K42      ; R60 := ")"
859 [-]: CONCAT    R57 R57 R60  ; R57 := R57 .. R58 .. R59 .. R60
860 [-]: GETGLOBAL R58 K11      ; R58 := 0xE6DC43B0
861 [-]: GETGLOBAL R59 K0       ; R59 := 0x9FAED6BC
862 [-]: GETUPVAL  R60 U1       ; R60 := U1
863 [-]: GETTABLE  R60 R60 K106 ; R60 := R60["FactionNames"]
864 [-]: GETUPVAL  R61 U0       ; R61 := U0
865 [-]: GETTABLE  R61 R61 K81  ; R61 := R61["mInvasionInfo"]
866 [-]: GETTABLE  R61 R61 K89  ; R61 := R61["mAttackerMissionInfo"]
867 [-]: GETTABLE  R61 R61 K90  ; R61 := R61["faction"]
868 [-]: ADD       R61 R61 K36  ; R61 := R61 + 1
869 [-]: GETTABLE  R60 R60 R61  ; R60 := R60[R61]
870 [-]: CALL      R59 2 2      ; R59 := R59(R60)
871 [-]: MOVE      R60 R0       ; R60 := R0
872 [-]: CALL      R58 3 2      ; R58 := R58(R59,R60)
873 [-]: LOADK     R59 K40      ; R59 := " ("
874 [-]: GETGLOBAL R60 K9       ; R60 := string
875 [-]: GETTABLE  R60 R60 K10  ; R60 := R60["0x639C642A"]
876 [-]: GETGLOBAL R61 K23      ; R61 := mMovie
877 [-]: SELF      R61 R61 K24  ; R62 := R61; R61 := R61["0x5DB0BD4"]
878 [-]: LOADK     R63 K55      ; R63 := "/Lotus/Language/Game/MissionName_"
879 [-]: GETUPVAL  R64 U1       ; R64 := U1
880 [-]: GETTABLE  R64 R64 K56  ; R64 := R64["0x87B2D555"]
881 [-]: GETUPVAL  R65 U0       ; R65 := U0
882 [-]: GETTABLE  R65 R65 K81  ; R65 := R65["mInvasionInfo"]
883 [-]: GETTABLE  R65 R65 K136 ; R65 := R65["mDefenderMissionInfo"]
884 [-]: CALL      R64 2 2      ; R64 := R64(R65)
885 [-]: CONCAT    R63 R63 R64  ; R63 := R63 .. R64
886 [-]: MOVE      R64 R0       ; R64 := R0
887 [-]: CALL      R61 4 0      ; R61,... := R61(R62,R63,R64)
888 [-]: CALL      R60 0 2      ; R60 := R60(R61,...)
889 [-]: LOADK     R61 K42      ; R61 := ")"
890 [-]: CONCAT    R58 R58 R61  ; R58 := R58 .. R59 .. R60 .. R61
891 [-]: MOVE      R59 R30      ; R59 := R30
892 [-]: LOADNIL   R60 R60      ; R60 := nil
893 [-]: MOVE      R61 R57      ; R61 := R57
894 [-]: LOADK     R62 K60      ; R62 := " "
895 [-]: GETGLOBAL R63 K11      ; R63 := 0xE6DC43B0
896 [-]: LOADK     R64 K112     ; R64 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
897 [-]: LOADNIL   R65 R65      ; R65 := nil
898 [-]: CALL      R63 3 2      ; R63 := R63(R64,R65)
899 [-]: LOADK     R64 K113     ; R64 := "\r\n"
900 [-]: MOVE      R65 R58      ; R65 := R58
901 [-]: CONCAT    R61 R61 R65  ; R61 := R61 .. R62 .. R63 .. R64 .. R65
902 [-]: CALL      R59 3 1      ; R59(R60,R61)
903 [-]: GETUPVAL  R59 U0       ; R59 := U0
904 [-]: GETTABLE  R59 R59 K57  ; R59 := R59["mMission"]
905 [-]: GETTABLE  R59 R59 K119 ; R59 := R59["missionType"]
906 [-]: GETGLOBAL R60 K27      ; R60 := Lotus_Game
907 [-]: GETTABLE  R60 R60 K137 ; R60 := R60["MT_LANDSCAPE"]
908 [-]: EQ        1 R59 R60    ; if R59 == R60 then PC := 918
909 [-]: JMP       918          ; PC := 918
910 [-]: GETGLOBAL R59 K27      ; R59 := Lotus_Game
911 [-]: GETTABLE  R59 R59 K28  ; R59 := R59["NT_HUB"]
912 [-]: EQ        0 R7 R59     ; if R7 ~= R59 then PC := 990
913 [-]: JMP       990          ; PC := 990
914 [-]: GETUPVAL  R59 U1       ; R59 := U1
915 [-]: GETTABLE  R59 R59 K138 ; R59 := R59["CETUS_NODE_TAG"]
916 [-]: EQ        0 R6 R59     ; if R6 ~= R59 then PC := 990
917 [-]: JMP       990          ; PC := 990
918 [-]: GETUPVAL  R59 U5       ; R59 := U5
919 [-]: SETTABLE  R59 K127 K30 ; R59["UpdateTimer"] := 0
920 [-]: GETUPVAL  R59 U5       ; R59 := U5
921 [-]: SETTABLE  R59 K139 R29 ; R59["TimerPre"] := R29
922 [-]: GETUPVAL  R59 U1       ; R59 := U1
923 [-]: GETTABLE  R59 R59 K140 ; R59 := R59["0x555EFA5"]
924 [-]: GETUPVAL  R60 U0       ; R60 := U0
925 [-]: GETTABLE  R60 R60 K57  ; R60 := R60["mMission"]
926 [-]: GETTABLE  R60 R60 K141 ; R60 := R60["location"]
927 [-]: CALL      R59 2 2      ; R59 := R59(R60)
928 [-]: GETUPVAL  R60 U1       ; R60 := U1
929 [-]: GETTABLE  R60 R60 K142 ; R60 := R60["0x447FCC2F"]
930 [-]: MOVE      R61 R59      ; R61 := R59
931 [-]: GETUPVAL  R62 U0       ; R62 := U0
932 [-]: GETTABLE  R62 R62 K57  ; R62 := R62["mMission"]
933 [-]: GETTABLE  R62 R62 K141 ; R62 := R62["location"]
934 [-]: CALL      R60 3 4      ; R60,R61,R62 := R60(R61,R62)
935 [-]: GETUPVAL  R63 U5       ; R63 := U5
936 [-]: SETTABLE  R63 K143 R62 ; R63["NodeTime"] := R62
937 [-]: GETUPVAL  R63 U0       ; R63 := U0
938 [-]: GETTABLE  R63 R63 K57  ; R63 := R63["mMission"]
939 [-]: GETTABLE  R63 R63 K141 ; R63 := R63["location"]
940 [-]: GETUPVAL  R64 U1       ; R64 := U1
941 [-]: GETTABLE  R64 R64 K144 ; R64 := R64["ORB_VALLIS_NODE_TAG"]
942 [-]: EQ        0 R63 R64    ; if R63 ~= R64 then PC := 967
943 [-]: JMP       967          ; PC := 967
944 [-]: MOVE      R63 R30      ; R63 := R30
945 [-]: LOADK     R64 K145     ; R64 := "/Lotus/Language/SolarisVenus/Temperature"
946 [-]: GETGLOBAL R65 K23      ; R65 := mMovie
947 [-]: SELF      R65 R65 K24  ; R66 := R65; R65 := R65["0x5DB0BD4"]
948 [-]: LOADK     R67 K146     ; R67 := "/Lotus/Language/SystemMessages/TimeUntil"
949 [-]: MOVE      R68 R0       ; R68 := R0
950 [-]: NEWTABLE  R69 0 2      ; R69 := {}
951 [-]: GETGLOBAL R70 K23      ; R70 := mMovie
952 [-]: SELF      R70 R70 K24  ; R71 := R70; R70 := R70["0x5DB0BD4"]
953 [-]: MOVE      R72 R61      ; R72 := R61
954 [-]: MOVE      R73 R0       ; R73 := R0
955 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
956 [-]: SETTABLE  R69 K147 R70 ; R69["LABEL"] := R70
957 [-]: GETUPVAL  R70 U1       ; R70 := U1
958 [-]: GETTABLE  R70 R70 K149 ; R70 := R70["0xC65D09DD"]
959 [-]: GETGLOBAL R71 K23      ; R71 := mMovie
960 [-]: MOVE      R72 R62      ; R72 := R62
961 [-]: LOADK     R73 K150     ; R73 := "CompactOne"
962 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
963 [-]: SETTABLE  R69 K148 R70 ; R69["TIME"] := R70
964 [-]: CALL      R65 5 0      ; R65,... := R65(R66,R67,R68,R69)
965 [-]: CALL      R63 0 1      ; R63(R64,...)
966 [-]: JMP       998          ; PC := 998
967 [-]: MOVE      R63 R30      ; R63 := R30
968 [-]: LOADK     R64 K151     ; R64 := "/Lotus/Language/Menu/Photobooth_TimeOfDay"
969 [-]: GETGLOBAL R65 K23      ; R65 := mMovie
970 [-]: SELF      R65 R65 K24  ; R66 := R65; R65 := R65["0x5DB0BD4"]
971 [-]: LOADK     R67 K146     ; R67 := "/Lotus/Language/SystemMessages/TimeUntil"
972 [-]: MOVE      R68 R0       ; R68 := R0
973 [-]: NEWTABLE  R69 0 2      ; R69 := {}
974 [-]: GETGLOBAL R70 K23      ; R70 := mMovie
975 [-]: SELF      R70 R70 K24  ; R71 := R70; R70 := R70["0x5DB0BD4"]
976 [-]: MOVE      R72 R61      ; R72 := R61
977 [-]: MOVE      R73 R0       ; R73 := R0
978 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
979 [-]: SETTABLE  R69 K147 R70 ; R69["LABEL"] := R70
980 [-]: GETUPVAL  R70 U1       ; R70 := U1
981 [-]: GETTABLE  R70 R70 K149 ; R70 := R70["0xC65D09DD"]
982 [-]: GETGLOBAL R71 K23      ; R71 := mMovie
983 [-]: MOVE      R72 R62      ; R72 := R62
984 [-]: LOADK     R73 K150     ; R73 := "CompactOne"
985 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
986 [-]: SETTABLE  R69 K148 R70 ; R69["TIME"] := R70
987 [-]: CALL      R65 5 0      ; R65,... := R65(R66,R67,R68,R69)
988 [-]: CALL      R63 0 1      ; R63(R64,...)
989 [-]: JMP       998          ; PC := 998
990 [-]: GETUPVAL  R63 U5       ; R63 := U5
991 [-]: SETTABLE  R63 K127 K22 ; R63["UpdateTimer"] := nil
992 [-]: GETUPVAL  R63 U5       ; R63 := U5
993 [-]: SETTABLE  R63 K143 K22 ; R63["NodeTime"] := nil
994 [-]: GETUPVAL  R63 U5       ; R63 := U5
995 [-]: SETTABLE  R63 K139 K22 ; R63["TimerPre"] := nil
996 [-]: GETUPVAL  R63 U5       ; R63 := U5
997 [-]: SETTABLE  R63 K128 K22 ; R63["TimerPost"] := nil
998 [-]: GETGLOBAL R63 K9       ; R63 := string
999 [-]: GETTABLE  R63 R63 K125 ; R63 := R63["0xC6772A8A"]
1000 [-]: MOVE      R64 R29      ; R64 := R29
1001 [-]: CALL      R63 2 2      ; R63 := R63(R64)
1002 [-]: GETUPVAL  R64 U1       ; R64 := U1
1003 [-]: GETTABLE  R64 R64 K152 ; R64 := R64["OPTIONAL_GOAL_PREFIX"]
1004 [-]: MOVE      R65 R5       ; R65 := R5
1005 [-]: CONCAT    R64 R64 R65  ; R64 := R64 .. R65
1006 [-]: GETTABLE  R65 R9 R64   ; R65 := R9[R64]
1007 [-]: TEST      R65 0        ; if not R65 then PC := 1017
1008 [-]: JMP       1017         ; PC := 1017
1009 [-]: MOVE      R65 R30      ; R65 := R30
1010 [-]: LOADK     R66 K153     ; R66 := "/Lotus/Language/Menu/WorldStatePanel_Event"
1011 [-]: GETGLOBAL R67 K11      ; R67 := 0xE6DC43B0
1012 [-]: GETTABLE  R68 R9 R64   ; R68 := R9[R64]
1013 [-]: GETTABLE  R68 R68 K54  ; R68 := R68["mDesc"]
1014 [-]: LOADNIL   R69 R69      ; R69 := nil
1015 [-]: CALL      R67 3 0      ; R67,... := R67(R68,R69)
1016 [-]: CALL      R65 0 1      ; R65(R66,...)
1017 [-]: GETUPVAL  R65 U0       ; R65 := U0
1018 [-]: GETTABLE  R65 R65 K57  ; R65 := R65["mMission"]
1019 [-]: GETTABLE  R65 R65 K119 ; R65 := R65["missionType"]
1020 [-]: GETGLOBAL R66 K27      ; R66 := Lotus_Game
1021 [-]: GETTABLE  R66 R66 K154 ; R66 := R66["MT_ASSASSINATION"]
1022 [-]: EQ        0 R65 R66    ; if R65 ~= R66 then PC := 1035
1023 [-]: JMP       1035         ; PC := 1035
1024 [-]: TEST      R14 1        ; if R14 then PC := 1035
1025 [-]: JMP       1035         ; PC := 1035
1026 [-]: MOVE      R65 R30      ; R65 := R30
1027 [-]: LOADK     R66 K155     ; R66 := "/Lotus/Language/Menu/MissionIntro_Target"
1028 [-]: GETGLOBAL R67 K9       ; R67 := string
1029 [-]: GETTABLE  R67 R67 K10  ; R67 := R67["0x639C642A"]
1030 [-]: GETUPVAL  R68 U0       ; R68 := U0
1031 [-]: GETTABLE  R68 R68 K54  ; R68 := R68["mDesc"]
1032 [-]: CALL      R67 2 0      ; R67,... := R67(R68)
1033 [-]: CALL      R65 0 1      ; R65(R66,...)
1034 [-]: JMP       1110         ; PC := 1110
1035 [-]: GETTABLE  R65 R0 K156  ; R65 := R0["guildId"]
1036 [-]: EQ        1 R65 K22    ; if R65 == nil then PC := 1061
1037 [-]: JMP       1061         ; PC := 1061
1038 [-]: GETTABLE  R65 R0 K157  ; R65 := R0["clanTier"]
1039 [-]: EQ        1 R65 K22    ; if R65 == nil then PC := 1061
1040 [-]: JMP       1061         ; PC := 1061
1041 [-]: MOVE      R65 R30      ; R65 := R30
1042 [-]: LOADK     R66 K158     ; R66 := "/Lotus/Language/Menu/Profile_Clan"
1043 [-]: GETGLOBAL R67 K9       ; R67 := string
1044 [-]: GETTABLE  R67 R67 K10  ; R67 := R67["0x639C642A"]
1045 [-]: GETTABLE  R68 R0 K159  ; R68 := R0["locName"]
1046 [-]: CALL      R67 2 0      ; R67,... := R67(R68)
1047 [-]: CALL      R65 0 1      ; R65(R66,...)
1048 [-]: MOVE      R65 R30      ; R65 := R30
1049 [-]: LOADK     R66 K160     ; R66 := "/Lotus/Language/Dojo/ClanTier"
1050 [-]: GETGLOBAL R67 K9       ; R67 := string
1051 [-]: GETTABLE  R67 R67 K10  ; R67 := R67["0x639C642A"]
1052 [-]: GETGLOBAL R68 K11      ; R68 := 0xE6DC43B0
1053 [-]: GETUPVAL  R69 U6       ; R69 := U6
1054 [-]: GETTABLE  R70 R0 K157  ; R70 := R0["clanTier"]
1055 [-]: GETTABLE  R69 R69 R70  ; R69 := R69[R70]
1056 [-]: LOADNIL   R70 R70      ; R70 := nil
1057 [-]: CALL      R68 3 0      ; R68,... := R68(R69,R70)
1058 [-]: CALL      R67 0 0      ; R67,... := R67(R68,...)
1059 [-]: CALL      R65 0 1      ; R65(R66,...)
1060 [-]: JMP       1110         ; PC := 1110
1061 [-]: GETGLOBAL R65 K27      ; R65 := Lotus_Game
1062 [-]: GETTABLE  R65 R65 K28  ; R65 := R65["NT_HUB"]
1063 [-]: EQ        0 R7 R65     ; if R7 ~= R65 then PC := 1082
1064 [-]: JMP       1082         ; PC := 1082
1065 [-]: LOADNIL   R65 R65      ; R65 := nil
1066 [-]: EQ        0 R5 K161    ; if R5 ~= "IronwakeHUB3" then PC := 1070
1067 [-]: JMP       1070         ; PC := 1070
1068 [-]: LOADK     R65 K162     ; R65 := "/Lotus/Language/Factions/SteelMeridianName"
1069 [-]: JMP       1071         ; PC := 1071
1070 [-]: LOADK     R65 K163     ; R65 := "/Lotus/Language/Menu/Codex_Tenno"
1071 [-]: MOVE      R66 R30      ; R66 := R30
1072 [-]: LOADK     R67 K164     ; R67 := "/Lotus/Language/Menu/MissionIntro_Faction"
1073 [-]: GETGLOBAL R68 K9       ; R68 := string
1074 [-]: GETTABLE  R68 R68 K10  ; R68 := R68["0x639C642A"]
1075 [-]: GETGLOBAL R69 K11      ; R69 := 0xE6DC43B0
1076 [-]: MOVE      R70 R65      ; R70 := R65
1077 [-]: LOADNIL   R71 R71      ; R71 := nil
1078 [-]: CALL      R69 3 0      ; R69,... := R69(R70,R71)
1079 [-]: CALL      R68 0 0      ; R68,... := R68(R69,...)
1080 [-]: CALL      R66 0 1      ; R66(R67,...)
1081 [-]: JMP       1110         ; PC := 1110
1082 [-]: TEST      R14 0        ; if not R14 then PC := 1088
1083 [-]: JMP       1088         ; PC := 1088
1084 [-]: GETUPVAL  R66 U7       ; R66 := U7
1085 [-]: GETTABLE  R66 R66 K165 ; R66 := R66["Active"]
1086 [-]: TEST      R66 1        ; if R66 then PC := 1110
1087 [-]: JMP       1110         ; PC := 1110
1088 [-]: GETGLOBAL R66 K9       ; R66 := string
1089 [-]: GETTABLE  R66 R66 K10  ; R66 := R66["0x639C642A"]
1090 [-]: GETUPVAL  R67 U0       ; R67 := U0
1091 [-]: GETTABLE  R67 R67 K54  ; R67 := R67["mDesc"]
1092 [-]: CALL      R66 2 2      ; R66 := R66(R67)
1093 [-]: TEST      R4 0         ; if not R4 then PC := 1106
1094 [-]: JMP       1106         ; PC := 1106
1095 [-]: MOVE      R67 R66      ; R67 := R66
1096 [-]: LOADK     R68 K40      ; R68 := " ("
1097 [-]: GETGLOBAL R69 K9       ; R69 := string
1098 [-]: GETTABLE  R69 R69 K10  ; R69 := R69["0x639C642A"]
1099 [-]: GETGLOBAL R70 K11      ; R70 := 0xE6DC43B0
1100 [-]: LOADK     R71 K166     ; R71 := "/Lotus/Language/Menu/OccupyingFaction"
1101 [-]: LOADNIL   R72 R72      ; R72 := nil
1102 [-]: CALL      R70 3 0      ; R70,... := R70(R71,R72)
1103 [-]: CALL      R69 0 2      ; R69 := R69(R70,...)
1104 [-]: LOADK     R70 K42      ; R70 := ")"
1105 [-]: CONCAT    R66 R67 R70  ; R66 := R67 .. R68 .. R69 .. R70
1106 [-]: MOVE      R67 R30      ; R67 := R30
1107 [-]: LOADK     R68 K164     ; R68 := "/Lotus/Language/Menu/MissionIntro_Faction"
1108 [-]: MOVE      R69 R66      ; R69 := R66
1109 [-]: CALL      R67 3 1      ; R67(R68,R69)
1110 [-]: TEST      R13 1        ; if R13 then PC := 1168
1111 [-]: JMP       1168         ; PC := 1168
1112 [-]: TEST      R14 1        ; if R14 then PC := 1168
1113 [-]: JMP       1168         ; PC := 1168
1114 [-]: GETUPVAL  R67 U3       ; R67 := U3
1115 [-]: GETTABLE  R67 R67 K19  ; R67 := R67["0xF81722A2"]
1116 [-]: EQ        1 R3 K167    ; if R3 == "0x1" then PC := 1119
1117 [-]: JMP       1119         ; PC := 1119
1118 [-]: MOVE      R68 R0       ; R68 := R0
1119 [-]: MOVE      R68 R1       ; R68 := R1
1120 [-]: LOADK     R69 K168     ; R69 := 10
1121 [-]: LOADK     R70 K30      ; R70 := 0
1122 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
1123 [-]: GETUPVAL  R68 U0       ; R68 := U0
1124 [-]: GETTABLE  R68 R68 K169 ; R68 := R68["mLevelMin"]
1125 [-]: ADD       R68 R68 R67  ; R68 := R68 + R67
1126 [-]: LOADK     R69 K170     ; R69 := "-"
1127 [-]: GETUPVAL  R70 U0       ; R70 := U0
1128 [-]: GETTABLE  R70 R70 K171 ; R70 := R70["mLevelMax"]
1129 [-]: ADD       R70 R70 R67  ; R70 := R70 + R67
1130 [-]: CONCAT    R68 R68 R70  ; R68 := R68 .. R69 .. R70
1131 [-]: GETUPVAL  R69 U0       ; R69 := U0
1132 [-]: GETTABLE  R69 R69 K172 ; R69 := R69["mConclaveMax"]
1133 [-]: LT        0 K30 R69    ; if 0 >= R69 then PC := 1145
1134 [-]: JMP       1145         ; PC := 1145
1135 [-]: MOVE      R69 R68      ; R69 := R68
1136 [-]: LOADK     R70 K173     ; R70 := "  "
1137 [-]: GETGLOBAL R71 K23      ; R71 := mMovie
1138 [-]: SELF      R71 R71 K24  ; R72 := R71; R71 := R71["0x5DB0BD4"]
1139 [-]: LOADK     R73 K174     ; R73 := "<CONCLAVE>"
1140 [-]: MOVE      R74 R1       ; R74 := R1
1141 [-]: CALL      R71 4 2      ; R71 := R71(R72,R73,R74)
1142 [-]: GETUPVAL  R72 U0       ; R72 := U0
1143 [-]: GETTABLE  R72 R72 K172 ; R72 := R72["mConclaveMax"]
1144 [-]: CONCAT    R68 R69 R72  ; R68 := R69 .. R70 .. R71 .. R72
1145 [-]: MOVE      R69 R30      ; R69 := R30
1146 [-]: LOADK     R70 K175     ; R70 := "/Lotus/Language/Menu/MissionBoard_Level"
1147 [-]: MOVE      R71 R68      ; R71 := R68
1148 [-]: CALL      R69 3 1      ; R69(R70,R71)
1149 [-]: GETUPVAL  R69 U0       ; R69 := U0
1150 [-]: GETTABLE  R69 R69 K57  ; R69 := R69["mMission"]
1151 [-]: GETTABLE  R69 R69 K119 ; R69 := R69["missionType"]
1152 [-]: GETGLOBAL R70 K27      ; R70 := Lotus_Game
1153 [-]: GETTABLE  R70 R70 K120 ; R70 := R70["MT_RAILJACK"]
1154 [-]: EQ        0 R69 R70    ; if R69 ~= R70 then PC := 1168
1155 [-]: JMP       1168         ; PC := 1168
1156 [-]: GETUPVAL  R69 U0       ; R69 := U0
1157 [-]: GETTABLE  R69 R69 K57  ; R69 := R69["mMission"]
1158 [-]: GETTABLE  R69 R69 K176 ; R69 := R69["minSpaceEnemyLevel"]
1159 [-]: LOADK     R70 K170     ; R70 := "-"
1160 [-]: GETUPVAL  R71 U0       ; R71 := U0
1161 [-]: GETTABLE  R71 R71 K57  ; R71 := R71["mMission"]
1162 [-]: GETTABLE  R71 R71 K177 ; R71 := R71["maxSpaceEnemyLevel"]
1163 [-]: CONCAT    R69 R69 R71  ; R69 := R69 .. R70 .. R71
1164 [-]: MOVE      R70 R30      ; R70 := R30
1165 [-]: LOADK     R71 K178     ; R71 := "/Lotus/Language/Menu/MissionBoard_SpaceLevel"
1166 [-]: MOVE      R72 R69      ; R72 := R69
1167 [-]: CALL      R70 3 1      ; R70(R71,R72)
1168 [-]: TEST      R17 0        ; if not R17 then PC := 1176
1169 [-]: JMP       1176         ; PC := 1176
1170 [-]: MOVE      R70 R30      ; R70 := R30
1171 [-]: LOADK     R71 K179     ; R71 := "/Lotus/Language/Menu/MissionBoard_Squads"
1172 [-]: GETGLOBAL R72 K0       ; R72 := 0x9FAED6BC
1173 [-]: MOVE      R73 R16      ; R73 := R16
1174 [-]: CALL      R72 2 0      ; R72,... := R72(R73)
1175 [-]: CALL      R70 0 1      ; R70(R71,...)
1176 [-]: GETGLOBAL R70 K100     ; R70 := 0x400E7765
1177 [-]: GETUPVAL  R71 U0       ; R71 := U0
1178 [-]: GETTABLE  R71 R71 K57  ; R71 := R71["mMission"]
1179 [-]: GETTABLE  R71 R71 K180 ; R71 := R71["exclusiveWeapon"]
1180 [-]: CALL      R70 2 2      ; R70 := R70(R71)
1181 [-]: TEST      R70 1        ; if R70 then PC := 1225
1182 [-]: JMP       1225         ; PC := 1225
1183 [-]: GETGLOBAL R70 K11      ; R70 := 0xE6DC43B0
1184 [-]: GETGLOBAL R71 K0       ; R71 := 0x9FAED6BC
1185 [-]: GETGLOBAL R72 K181     ; R72 := 0x7C282057
1186 [-]: GETUPVAL  R73 U0       ; R73 := U0
1187 [-]: GETTABLE  R73 R73 K57  ; R73 := R73["mMission"]
1188 [-]: GETTABLE  R73 R73 K180 ; R73 := R73["exclusiveWeapon"]
1189 [-]: CALL      R72 2 2      ; R72 := R72(R73)
1190 [-]: SELF      R72 R72 K182 ; R73 := R72; R72 := R72["0x616C74B6"]
1191 [-]: CALL      R72 2 0      ; R72,... := R72(R73)
1192 [-]: CALL      R71 0 2      ; R71 := R71(R72,...)
1193 [-]: MOVE      R72 R0       ; R72 := R0
1194 [-]: CALL      R70 3 2      ; R70 := R70(R71,R72)
1195 [-]: GETGLOBAL R71 K11      ; R71 := 0xE6DC43B0
1196 [-]: LOADK     R72 K183     ; R72 := "/Lotus/Language/Menu/Lobby_RestrictionDesc"
1197 [-]: NEWTABLE  R73 0 1      ; R73 := {}
1198 [-]: SETTABLE  R73 K184 R70 ; R73["ITEM"] := R70
1199 [-]: CALL      R71 3 2      ; R71 := R71(R72,R73)
1200 [-]: GETUPVAL  R72 U0       ; R72 := U0
1201 [-]: GETTABLE  R72 R72 K53  ; R72 := R72["mGoalInfo"]
1202 [-]: TEST      R72 0        ; if not R72 then PC := 1220
1203 [-]: JMP       1220         ; PC := 1220
1204 [-]: GETUPVAL  R72 U0       ; R72 := U0
1205 [-]: GETTABLE  R72 R72 K53  ; R72 := R72["mGoalInfo"]
1206 [-]: GETTABLE  R72 R72 K47  ; R72 := R72["mTag"]
1207 [-]: GETUPVAL  R73 U8       ; R73 := U8
1208 [-]: GETTABLE  R73 R73 K185 ; R73 := R73["MACHETE_MAYHEM"]
1209 [-]: EQ        0 R72 R73    ; if R72 ~= R73 then PC := 1220
1210 [-]: JMP       1220         ; PC := 1220
1211 [-]: GETGLOBAL R72 K11      ; R72 := 0xE6DC43B0
1212 [-]: LOADK     R73 K186     ; R73 := "/Lotus/Language/Menu/EnergyRestrictionDesc"
1213 [-]: NEWTABLE  R74 0 1      ; R74 := {}
1214 [-]: SETTABLE  R74 K187 K188; R74["AMOUNT"] := 25
1215 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
1216 [-]: MOVE      R73 R71      ; R73 := R71
1217 [-]: LOADK     R74 K70      ; R74 := ", "
1218 [-]: MOVE      R75 R72      ; R75 := R72
1219 [-]: CONCAT    R71 R73 R75  ; R71 := R73 .. R74 .. R75
1220 [-]: MOVE      R73 R30      ; R73 := R30
1221 [-]: LOADK     R74 K189     ; R74 := "/Lotus/Language/Menu/Lobby_Restriction"
1222 [-]: MOVE      R75 R71      ; R75 := R71
1223 [-]: CALL      R73 3 1      ; R73(R74,R75)
1224 [-]: JMP       1333         ; PC := 1333
1225 [-]: GETGLOBAL R73 K100     ; R73 := 0x400E7765
1226 [-]: GETUPVAL  R74 U0       ; R74 := U0
1227 [-]: GETTABLE  R74 R74 K57  ; R74 := R74["mMission"]
1228 [-]: GETTABLE  R74 R74 K190 ; R74 := R74["miscItemFee"]
1229 [-]: GETTABLE  R74 R74 K191 ; R74 := R74["mItemType"]
1230 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1231 [-]: TEST      R73 1        ; if R73 then PC := 1333
1232 [-]: JMP       1333         ; PC := 1333
1233 [-]: EQ        0 R15 K22    ; if R15 ~= nil then PC := 1333
1234 [-]: JMP       1333         ; PC := 1333
1235 [-]: GETUPVAL  R73 U0       ; R73 := U0
1236 [-]: GETTABLE  R73 R73 K57  ; R73 := R73["mMission"]
1237 [-]: GETTABLE  R73 R73 K190 ; R73 := R73["miscItemFee"]
1238 [-]: GETTABLE  R73 R73 K191 ; R73 := R73["mItemType"]
1239 [-]: GETGLOBAL R74 K0       ; R74 := 0x9FAED6BC
1240 [-]: GETUPVAL  R75 U0       ; R75 := U0
1241 [-]: GETTABLE  R75 R75 K57  ; R75 := R75["mMission"]
1242 [-]: GETTABLE  R75 R75 K190 ; R75 := R75["miscItemFee"]
1243 [-]: GETTABLE  R75 R75 K191 ; R75 := R75["mItemType"]
1244 [-]: SELF      R75 R75 K192 ; R76 := R75; R75 := R75["0x1B252E3C"]
1245 [-]: CALL      R75 2 0      ; R75,... := R75(R76)
1246 [-]: CALL      R74 0 2      ; R74 := R74(R75,...)
1247 [-]: GETGLOBAL R75 K13      ; R75 := _T
1248 [-]: GETTABLE  R75 R75 K193 ; R75 := R75["OwnedFeeItems"]
1249 [-]: TEST      R75 1        ; if R75 then PC := 1254
1250 [-]: JMP       1254         ; PC := 1254
1251 [-]: GETGLOBAL R75 K13      ; R75 := _T
1252 [-]: NEWTABLE  R76 0 0      ; R76 := {}
1253 [-]: SETTABLE  R75 K193 R76 ; R75["OwnedFeeItems"] := R76
1254 [-]: GETGLOBAL R75 K13      ; R75 := _T
1255 [-]: GETTABLE  R75 R75 K193 ; R75 := R75["OwnedFeeItems"]
1256 [-]: GETTABLE  R75 R75 R74  ; R75 := R75[R74]
1257 [-]: TEST      R75 1        ; if R75 then PC := 1310
1258 [-]: JMP       1310         ; PC := 1310
1259 [-]: GETGLOBAL R75 K13      ; R75 := _T
1260 [-]: GETTABLE  R75 R75 K193 ; R75 := R75["OwnedFeeItems"]
1261 [-]: NEWTABLE  R76 0 0      ; R76 := {}
1262 [-]: SETTABLE  R75 R74 R76  ; R75[R74] := R76
1263 [-]: GETGLOBAL R75 K13      ; R75 := _T
1264 [-]: GETTABLE  R75 R75 K193 ; R75 := R75["OwnedFeeItems"]
1265 [-]: GETTABLE  R75 R75 R74  ; R75 := R75[R74]
1266 [-]: SETTABLE  R75 K194 K30 ; R75["Count"] := 0
1267 [-]: GETGLOBAL R75 K13      ; R75 := _T
1268 [-]: GETTABLE  R75 R75 K193 ; R75 := R75["OwnedFeeItems"]
1269 [-]: GETTABLE  R75 R75 R74  ; R75 := R75[R74]
1270 [-]: GETGLOBAL R76 K11      ; R76 := 0xE6DC43B0
1271 [-]: GETGLOBAL R77 K0       ; R77 := 0x9FAED6BC
1272 [-]: GETGLOBAL R78 K181     ; R78 := 0x7C282057
1273 [-]: MOVE      R79 R73      ; R79 := R73
1274 [-]: CALL      R78 2 2      ; R78 := R78(R79)
1275 [-]: SELF      R78 R78 K182 ; R79 := R78; R78 := R78["0x616C74B6"]
1276 [-]: CALL      R78 2 0      ; R78,... := R78(R79)
1277 [-]: CALL      R77 0 2      ; R77 := R77(R78,...)
1278 [-]: MOVE      R78 R0       ; R78 := R0
1279 [-]: CALL      R76 3 2      ; R76 := R76(R77,R78)
1280 [-]: SETTABLE  R75 K195 R76 ; R75["LocText"] := R76
1281 [-]: GETGLOBAL R75 K196     ; R75 := gPlayerProfileMgr
1282 [-]: SELF      R75 R75 K197 ; R76 := R75; R75 := R75["0x21EF7B1A"]
1283 [-]: LOADK     R77 K30      ; R77 := 0
1284 [-]: CALL      R75 3 2      ; R75 := R75(R76,R77)
1285 [-]: SELF      R75 R75 K198 ; R76 := R75; R75 := R75["0x654F1092"]
1286 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1287 [-]: SELF      R75 R75 K199 ; R76 := R75; R75 := R75["0x6F2E05FD"]
1288 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1289 [-]: SELF      R75 R75 K200 ; R76 := R75; R75 := R75["0x3329FBFF"]
1290 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1291 [-]: LOADK     R76 K36      ; R76 := 1
1292 [-]: LEN       R77 R75      ; R77 := # R75
1293 [-]: LOADK     R78 K36      ; R78 := 1
1294 [-]: FORPREP   R76 1309     ; R76 -= R78; PC := 1309
1295 [-]: GETTABLE  R80 R75 R79  ; R80 := R75[R79]
1296 [-]: GETTABLE  R80 R80 K191 ; R80 := R80["mItemType"]
1297 [-]: SELF      R80 R80 K201 ; R81 := R80; R80 := R80["0x8B598ED4"]
1298 [-]: MOVE      R82 R73      ; R82 := R73
1299 [-]: CALL      R80 3 2      ; R80 := R80(R81,R82)
1300 [-]: TEST      R80 0        ; if not R80 then PC := 1309
1301 [-]: JMP       1309         ; PC := 1309
1302 [-]: GETGLOBAL R80 K13      ; R80 := _T
1303 [-]: GETTABLE  R80 R80 K193 ; R80 := R80["OwnedFeeItems"]
1304 [-]: GETTABLE  R80 R80 R74  ; R80 := R80[R74]
1305 [-]: GETTABLE  R81 R75 R79  ; R81 := R75[R79]
1306 [-]: GETTABLE  R81 R81 K202 ; R81 := R81["mItemCount"]
1307 [-]: SETTABLE  R80 K194 R81 ; R80["Count"] := R81
1308 [-]: JMP       1310         ; PC := 1310
1309 [-]: FORLOOP   R76 1295     ; R76 += R78; if R76 <= R77 then begin PC := 1295; R79 := R76 end
1310 [-]: GETGLOBAL R80 K11      ; R80 := 0xE6DC43B0
1311 [-]: LOADK     R81 K203     ; R81 := "/Lotus/Language/Menu/Lobby_CountedItemRestrictionDesc"
1312 [-]: NEWTABLE  R82 0 3      ; R82 := {}
1313 [-]: GETGLOBAL R83 K13      ; R83 := _T
1314 [-]: GETTABLE  R83 R83 K193 ; R83 := R83["OwnedFeeItems"]
1315 [-]: GETTABLE  R83 R83 R74  ; R83 := R83[R74]
1316 [-]: GETTABLE  R83 R83 K195 ; R83 := R83["LocText"]
1317 [-]: SETTABLE  R82 K184 R83 ; R82["ITEM"] := R83
1318 [-]: GETUPVAL  R83 U0       ; R83 := U0
1319 [-]: GETTABLE  R83 R83 K57  ; R83 := R83["mMission"]
1320 [-]: GETTABLE  R83 R83 K190 ; R83 := R83["miscItemFee"]
1321 [-]: GETTABLE  R83 R83 K202 ; R83 := R83["mItemCount"]
1322 [-]: SETTABLE  R82 K204 R83 ; R82["COUNT"] := R83
1323 [-]: GETGLOBAL R83 K13      ; R83 := _T
1324 [-]: GETTABLE  R83 R83 K193 ; R83 := R83["OwnedFeeItems"]
1325 [-]: GETTABLE  R83 R83 R74  ; R83 := R83[R74]
1326 [-]: GETTABLE  R83 R83 K194 ; R83 := R83["Count"]
1327 [-]: SETTABLE  R82 K205 R83 ; R82["OWNED"] := R83
1328 [-]: CALL      R80 3 2      ; R80 := R80(R81,R82)
1329 [-]: MOVE      R81 R30      ; R81 := R30
1330 [-]: LOADK     R82 K8       ; R82 := ""
1331 [-]: MOVE      R83 R80      ; R83 := R80
1332 [-]: CALL      R81 3 1      ; R81(R82,R83)
1333 [-]: GETTABLE  R81 R2 K119  ; R81 := R2["missionType"]
1334 [-]: GETGLOBAL R82 K27      ; R82 := Lotus_Game
1335 [-]: GETTABLE  R82 R82 K206 ; R82 := R82["MT_ARENA"]
1336 [-]: EQ        0 R81 R82    ; if R81 ~= R82 then PC := 1388
1337 [-]: JMP       1388         ; PC := 1388
1338 [-]: GETTABLE  R81 R2 K90   ; R81 := R2["faction"]
1339 [-]: GETGLOBAL R82 K27      ; R82 := Lotus_Game
1340 [-]: GETTABLE  R82 R82 K207 ; R82 := R82["FC_CORPUS"]
1341 [-]: EQ        0 R81 R82    ; if R81 ~= R82 then PC := 1388
1342 [-]: JMP       1388         ; PC := 1388
1343 [-]: SELF      R81 R2 K208  ; R82 := R2; R81 := R2["0x62A99A22"]
1344 [-]: CALL      R81 2 2      ; R81 := R81(R82)
1345 [-]: LEN       R82 R81      ; R82 := # R81
1346 [-]: LT        0 K30 R82    ; if 0 >= R82 then PC := 1388
1347 [-]: JMP       1388         ; PC := 1388
1348 [-]: GETUPVAL  R82 U3       ; R82 := U3
1349 [-]: GETTABLE  R82 R82 K209 ; R82 := R82["0x7E197415"]
1350 [-]: GETTABLE  R83 R81 K36  ; R83 := R81[1]
1351 [-]: GETTABLE  R83 R83 K210 ; R83 := R83["mCreditsFee"]
1352 [-]: CALL      R82 2 2      ; R82 := R82(R83)
1353 [-]: LOADK     R83 K30      ; R83 := 0
1354 [-]: GETGLOBAL R84 K100     ; R84 := 0x400E7765
1355 [-]: GETGLOBAL R85 K101     ; R85 := gGameData
1356 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1357 [-]: TEST      R84 1        ; if R84 then PC := 1366
1358 [-]: JMP       1366         ; PC := 1366
1359 [-]: GETUPVAL  R84 U3       ; R84 := U3
1360 [-]: GETTABLE  R84 R84 K211 ; R84 := R84["0x1C719E76"]
1361 [-]: GETGLOBAL R85 K101     ; R85 := gGameData
1362 [-]: SELF      R85 R85 K212 ; R86 := R85; R85 := R85["0xCD5A25A6"]
1363 [-]: CALL      R85 2 0      ; R85,... := R85(R86)
1364 [-]: CALL      R84 0 2      ; R84 := R84(R85,...)
1365 [-]: MOVE      R83 R84      ; R83 := R84
1366 [-]: GETGLOBAL R84 K23      ; R84 := mMovie
1367 [-]: SELF      R84 R84 K24  ; R85 := R84; R84 := R84["0x5DB0BD4"]
1368 [-]: LOADK     R86 K213     ; R86 := "/Lotus/Language/Menu/CreditsFormatted"
1369 [-]: MOVE      R87 R1       ; R87 := R1
1370 [-]: NEWTABLE  R88 0 1      ; R88 := {}
1371 [-]: SETTABLE  R88 K214 R82 ; R88["CREDITS"] := R82
1372 [-]: CALL      R84 5 2      ; R84 := R84(R85,R86,R87,R88)
1373 [-]: MOVE      R85 R30      ; R85 := R30
1374 [-]: LOADK     R86 K215     ; R86 := "/Lotus/Language/Menu/Lobby_GreedCreditsRequirementDesc"
1375 [-]: MOVE      R87 R84      ; R87 := R84
1376 [-]: CALL      R85 3 1      ; R85(R86,R87)
1377 [-]: GETGLOBAL R85 K23      ; R85 := mMovie
1378 [-]: SELF      R85 R85 K24  ; R86 := R85; R85 := R85["0x5DB0BD4"]
1379 [-]: LOADK     R87 K216     ; R87 := "/Lotus/Language/Menu/CreditsFormattedOwned"
1380 [-]: MOVE      R88 R1       ; R88 := R1
1381 [-]: NEWTABLE  R89 0 1      ; R89 := {}
1382 [-]: SETTABLE  R89 K205 R83 ; R89["OWNED"] := R83
1383 [-]: CALL      R85 5 2      ; R85 := R85(R86,R87,R88,R89)
1384 [-]: MOVE      R86 R30      ; R86 := R30
1385 [-]: LOADK     R87 K217     ; R87 := "/Lotus/Language/Menu/Lobby_GreedCreditsOwnedRequirementDesc"
1386 [-]: MOVE      R88 R85      ; R88 := R85
1387 [-]: CALL      R86 3 1      ; R86(R87,R88)
1388 [-]: GETTABLE  R86 R2 K218  ; R86 := R2["skillReqs"]
1389 [-]: LEN       R86 R86      ; R86 := # R86
1390 [-]: LT        0 K30 R86    ; if 0 >= R86 then PC := 1430
1391 [-]: JMP       1430         ; PC := 1430
1392 [-]: NEWTABLE  R86 6 0      ; R86 := {}
1393 [-]: LOADK     R87 K219     ; R87 := "Intrinsics"
1394 [-]: LOADK     R88 K220     ; R88 := "RailjackIntrinsicPilot"
1395 [-]: LOADK     R89 K221     ; R89 := "RailjackIntrinsicGunner"
1396 [-]: LOADK     R90 K222     ; R90 := "RailjackIntrinsicTactic"
1397 [-]: LOADK     R91 K223     ; R91 := "RailjackIntrinsicEngineer"
1398 [-]: LOADK     R92 K224     ; R92 := "RailjackIntrinsicCommand"
1399 [-]: SETLIST   R86 6 1      ; R86[(1-1)*FPF+i] := R(86+i), 1 <= i <= 6
1400 [-]: LOADK     R87 K8       ; R87 := ""
1401 [-]: GETGLOBAL R88 K225     ; R88 := 0xECFDD17
1402 [-]: GETTABLE  R89 R2 K218  ; R89 := R2["skillReqs"]
1403 [-]: CALL      R88 2 4      ; R88,R89,R90 := R88(R89)
1404 [-]: JMP       1424         ; PC := 1424
1405 [-]: GETTABLE  R93 R92 K226 ; R93 := R92["skill"]
1406 [-]: ADD       R93 R93 K36  ; R93 := R93 + 1
1407 [-]: GETTABLE  R93 R86 R93  ; R93 := R86[R93]
1408 [-]: GETGLOBAL R94 K11      ; R94 := 0xE6DC43B0
1409 [-]: LOADK     R95 K227     ; R95 := "/Lotus/Language/Intrinsics/"
1410 [-]: MOVE      R96 R93      ; R96 := R93
1411 [-]: CONCAT    R95 R95 R96  ; R95 := R95 .. R96
1412 [-]: LOADNIL   R96 R96      ; R96 := nil
1413 [-]: CALL      R94 3 2      ; R94 := R94(R95,R96)
1414 [-]: GETGLOBAL R95 K9       ; R95 := string
1415 [-]: GETTABLE  R95 R95 K10  ; R95 := R95["0x639C642A"]
1416 [-]: MOVE      R96 R87      ; R96 := R87
1417 [-]: MOVE      R97 R94      ; R97 := R94
1418 [-]: LOADK     R98 K60      ; R98 := " "
1419 [-]: GETTABLE  R99 R92 K228 ; R99 := R92["req"]
1420 [-]: LOADK     R100 K60     ; R100 := " "
1421 [-]: CONCAT    R96 R96 R100 ; R96 := R96 .. R97 .. R98 .. R99 .. R100
1422 [-]: CALL      R95 2 2      ; R95 := R95(R96)
1423 [-]: MOVE      R87 R95      ; R87 := R95
1424 [-]: TFORLOOP  R88 2        ; R91,R92 :=  R88(R89,R90); if R91 ~= nil then begin PC = 1405; R90 := R91 end
1425 [-]: JMP       1405         ; PC := 1405
1426 [-]: MOVE      R95 R30      ; R95 := R30
1427 [-]: LOADK     R96 K229     ; R96 := "/Game/Requires"
1428 [-]: MOVE      R97 R87      ; R97 := R87
1429 [-]: CALL      R95 3 1      ; R95(R96,R97)
1430 [-]: GETGLOBAL R95 K27      ; R95 := Lotus_Game
1431 [-]: GETTABLE  R95 R95 K230 ; R95 := R95["NT_CLAN"]
1432 [-]: EQ        0 R7 R95     ; if R7 ~= R95 then PC := 1458
1433 [-]: JMP       1458         ; PC := 1458
1434 [-]: SELF      R95 R2 K231  ; R96 := R2; R95 := R2["0xC2648A91"]
1435 [-]: CALL      R95 2 2      ; R95 := R95(R96)
1436 [-]: GETGLOBAL R96 K100     ; R96 := 0x400E7765
1437 [-]: MOVE      R97 R95      ; R97 := R95
1438 [-]: CALL      R96 2 2      ; R96 := R96(R97)
1439 [-]: TEST      R96 1        ; if R96 then PC := 1458
1440 [-]: JMP       1458         ; PC := 1458
1441 [-]: LOADK     R96 K8       ; R96 := ""
1442 [-]: LOADK     R97 K36      ; R97 := 1
1443 [-]: LEN       R98 R95      ; R98 := # R95
1444 [-]: LOADK     R99 K36      ; R99 := 1
1445 [-]: FORPREP   R97 1453     ; R97 -= R99; PC := 1453
1446 [-]: MOVE      R101 R96     ; R101 := R96
1447 [-]: GETTABLE  R102 R95 R100; R102 := R95[R100]
1448 [-]: SELF      R102 R102 K232; R103 := R102; R102 := R102["0x2683916D"]
1449 [-]: MOVE      R104 R1      ; R104 := R1
1450 [-]: CALL      R102 3 2     ; R102 := R102(R103,R104)
1451 [-]: LOADK     R103 K113    ; R103 := "\r\n"
1452 [-]: CONCAT    R96 R101 R103; R96 := R101 .. R102 .. R103
1453 [-]: FORLOOP   R97 1446     ; R97 += R99; if R97 <= R98 then begin PC := 1446; R100 := R97 end
1454 [-]: MOVE      R101 R30     ; R101 := R30
1455 [-]: LOADK     R102 K233    ; R102 := "/Lotus/Language/Menu/BonusBounty"
1456 [-]: MOVE      R103 R96     ; R103 := R96
1457 [-]: CALL      R101 3 1     ; R101(R102,R103)
1458 [-]: EQ        1 R15 K22    ; if R15 == nil then PC := 1488
1459 [-]: JMP       1488         ; PC := 1488
1460 [-]: MOVE      R101 R30     ; R101 := R30
1461 [-]: LOADK     R102 K234    ; R102 := "/Lotus/Language/Menu/MissionBoard_InvasionStatus"
1462 [-]: MOVE      R103 R18     ; R103 := R18
1463 [-]: CALL      R101 3 1     ; R101(R102,R103)
1464 [-]: MOVE      R101 R19     ; R101 := R19
1465 [-]: LOADK     R102 K114    ; R102 := "/"
1466 [-]: MOVE      R103 R20     ; R103 := R20
1467 [-]: CONCAT    R101 R101 R103; R101 := R101 .. R102 .. R103
1468 [-]: TEST      R21 0        ; if not R21 then PC := 1480
1469 [-]: JMP       1480         ; PC := 1480
1470 [-]: TEST      R23 1        ; if R23 then PC := 1480
1471 [-]: JMP       1480         ; PC := 1480
1472 [-]: MOVE      R102 R101    ; R102 := R101
1473 [-]: LOADK     R103 K60     ; R103 := " "
1474 [-]: GETGLOBAL R104 K23     ; R104 := mMovie
1475 [-]: SELF      R104 R104 K24; R105 := R104; R104 := R104["0x5DB0BD4"]
1476 [-]: MOVE      R106 R22     ; R106 := R22
1477 [-]: MOVE      R107 R0      ; R107 := R0
1478 [-]: CALL      R104 4 2     ; R104 := R104(R105,R106,R107)
1479 [-]: CONCAT    R101 R102 R104; R101 := R102 .. R103 .. R104
1480 [-]: MOVE      R102 R30     ; R102 := R30
1481 [-]: LOADK     R103 K235    ; R103 := "/Lotus/Language/Menu/MissionBoard_InvasionCompletions"
1482 [-]: MOVE      R104 R101    ; R104 := R101
1483 [-]: CALL      R102 3 1     ; R102(R103,R104)
1484 [-]: MOVE      R102 R30     ; R102 := R30
1485 [-]: LOADK     R103 K236    ; R103 := "/Lotus/Language/Menu/MissionBoard_InvasionPayment"
1486 [-]: MOVE      R104 R24     ; R104 := R24
1487 [-]: CALL      R102 3 1     ; R102(R103,R104)
1488 [-]: EQ        1 R26 K22    ; if R26 == nil then PC := 1494
1489 [-]: JMP       1494         ; PC := 1494
1490 [-]: MOVE      R102 R30     ; R102 := R30
1491 [-]: LOADK     R103 K118    ; R103 := "/Lotus/Language/Menu/Notification_Expiry_Heading"
1492 [-]: MOVE      R104 R26     ; R104 := R26
1493 [-]: CALL      R102 3 1     ; R102(R103,R104)
1494 [-]: EQ        1 R27 K22    ; if R27 == nil then PC := 1500
1495 [-]: JMP       1500         ; PC := 1500
1496 [-]: MOVE      R102 R30     ; R102 := R30
1497 [-]: LOADK     R103 K237    ; R103 := "/Lotus/Language/Menu/AlertPopup_Rewards"
1498 [-]: MOVE      R104 R27     ; R104 := R27
1499 [-]: CALL      R102 3 1     ; R102(R103,R104)
1500 [-]: EQ        1 R28 K22    ; if R28 == nil then PC := 1509
1501 [-]: JMP       1509         ; PC := 1509
1502 [-]: MOVE      R102 R30     ; R102 := R30
1503 [-]: LOADNIL   R103 R103    ; R103 := nil
1504 [-]: GETGLOBAL R104 K9      ; R104 := string
1505 [-]: GETTABLE  R104 R104 K10; R104 := R104["0x639C642A"]
1506 [-]: MOVE      R105 R28     ; R105 := R28
1507 [-]: CALL      R104 2 0     ; R104,... := R104(R105)
1508 [-]: CALL      R102 0 1     ; R102(R103,...)
1509 [-]: GETGLOBAL R102 K100    ; R102 := 0x400E7765
1510 [-]: GETTABLE  R103 R2 K238 ; R103 := R2["questReq"]
1511 [-]: CALL      R102 2 2     ; R102 := R102(R103)
1512 [-]: TEST      R102 1       ; if R102 then PC := 1541
1513 [-]: JMP       1541         ; PC := 1541
1514 [-]: GETUPVAL  R102 U1      ; R102 := U1
1515 [-]: GETTABLE  R102 R102 K239; R102 := R102["0x2AAC7A8C"]
1516 [-]: GETTABLE  R103 R2 K238 ; R103 := R2["questReq"]
1517 [-]: CALL      R102 2 2     ; R102 := R102(R103)
1518 [-]: TEST      R102 1       ; if R102 then PC := 1541
1519 [-]: JMP       1541         ; PC := 1541
1520 [-]: GETGLOBAL R102 K181    ; R102 := 0x7C282057
1521 [-]: GETTABLE  R103 R2 K238 ; R103 := R2["questReq"]
1522 [-]: CALL      R102 2 2     ; R102 := R102(R103)
1523 [-]: GETGLOBAL R103 K23     ; R103 := mMovie
1524 [-]: SELF      R103 R103 K24; R104 := R103; R103 := R103["0x5DB0BD4"]
1525 [-]: GETGLOBAL R105 K0      ; R105 := 0x9FAED6BC
1526 [-]: SELF      R106 R102 K182; R107 := R102; R106 := R102["0x616C74B6"]
1527 [-]: CALL      R106 2 0     ; R106,... := R106(R107)
1528 [-]: CALL      R105 0 2     ; R105 := R105(R106,...)
1529 [-]: MOVE      R106 R0      ; R106 := R0
1530 [-]: CALL      R103 4 2     ; R103 := R103(R104,R105,R106)
1531 [-]: MOVE      R104 R30     ; R104 := R30
1532 [-]: LOADK     R105 K240    ; R105 := "/Lotus/Language/Menu/MissionLocked"
1533 [-]: GETGLOBAL R106 K23     ; R106 := mMovie
1534 [-]: SELF      R106 R106 K24; R107 := R106; R106 := R106["0x5DB0BD4"]
1535 [-]: LOADK     R108 K241    ; R108 := "/Lotus/Language/Game/MissionNodeQuestRequired"
1536 [-]: MOVE      R109 R0      ; R109 := R0
1537 [-]: NEWTABLE  R110 0 1     ; R110 := {}
1538 [-]: SETTABLE  R110 K242 R103; R110["QUESTNAME"] := R103
1539 [-]: CALL      R106 5 0     ; R106,... := R106(R107,R108,R109,R110)
1540 [-]: CALL      R104 0 1     ; R104(R105,...)
1541 [-]: MOVE      R104 R30     ; R104 := R30
1542 [-]: LOADNIL   R105 R105    ; R105 := nil
1543 [-]: LOADK     R106 K60     ; R106 := " "
1544 [-]: CALL      R104 3 1     ; R104(R105,R106)
1545 [-]: MOVE      R104 R30     ; R104 := R30
1546 [-]: LOADNIL   R105 R105    ; R105 := nil
1547 [-]: LOADK     R106 K60     ; R106 := " "
1548 [-]: CALL      R104 3 1     ; R104(R105,R106)
1549 [-]: MOVE      R104 R29     ; R104 := R29
1550 [-]: LOADK     R105 K126    ; R105 := "</p>"
1551 [-]: CONCAT    R29 R104 R105; R29 := R104 .. R105
1552 [-]: GETUPVAL  R104 U5      ; R104 := U5
1553 [-]: GETTABLE  R104 R104 K127; R104 := R104["UpdateTimer"]
1554 [-]: EQ        1 R104 K22   ; if R104 == nil then PC := 1563
1555 [-]: JMP       1563         ; PC := 1563
1556 [-]: GETUPVAL  R104 U5      ; R104 := U5
1557 [-]: GETGLOBAL R105 K9      ; R105 := string
1558 [-]: GETTABLE  R105 R105 K129; R105 := R105["0x7B782033"]
1559 [-]: MOVE      R106 R29     ; R106 := R29
1560 [-]: ADD       R107 R63 K36 ; R107 := R63 + 1
1561 [-]: CALL      R105 3 2     ; R105 := R105(R106,R107)
1562 [-]: SETTABLE  R104 K128 R105; R104["TimerPost"] := R105
1563 [-]: RETURN    R29 2        ; return R29
1564 [-]: RETURN    R0 1         ; return 


; Function #143.1:
;
; Name:            
; Defined at line: 6286
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 16
  2 [-]: JMP       16           ; PC := 16
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K1        ; R3 := "<font color=\"#A9A9A9\">"
  5 [-]: GETGLOBAL R4 K2        ; R4 := string
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0x639C642A"]
  7 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
  8 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
  9 [-]: MOVE      R7 R0        ; R7 := R0
 10 [-]: MOVE      R8 R1        ; R8 := R1
 11 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 12 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 13 [-]: LOADK     R5 K6        ; R5 := "  </font>"
 14 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETGLOBAL R2 K2        ; R2 := string
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0xC6772A8A"]
 20 [-]: MOVE      R3 R1        ; R3 := R1
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: LT        0 K8 R2      ; if 0 >= R2 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: LOADK     R3 K9        ; R3 := "<font color=\"#CACACA\"><b>"
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: LOADK     R5 K10       ; R5 := "</b><br></font>"
 28 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 29 [-]: MOVE      R2 R0        ; R2 := R0
 30 [-]: RETURN    R0 1         ; return 


; Function #143.2:
;
; Name:            
; Defined at line: 6296
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 16
  2 [-]: JMP       16           ; PC := 16
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K1        ; R3 := "<font color=\"#A9A9A9\">"
  5 [-]: GETGLOBAL R4 K2        ; R4 := string
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0x639C642A"]
  7 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
  8 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
  9 [-]: MOVE      R7 R0        ; R7 := R0
 10 [-]: MOVE      R8 R1        ; R8 := R1
 11 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 12 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 13 [-]: LOADK     R5 K6        ; R5 := "  </font>"
 14 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETGLOBAL R2 K2        ; R2 := string
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0xC6772A8A"]
 20 [-]: MOVE      R3 R1        ; R3 := R1
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: LT        0 K8 R2      ; if 0 >= R2 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: LOADK     R3 K9        ; R3 := "<font color=\"#CACACA\"><b>"
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: LOADK     R5 K10       ; R5 := "</b> </font>"
 28 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 29 [-]: MOVE      R2 R0        ; R2 := R0
 30 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 6649
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  2 [-]: LOADK     R3 K1        ; R3 := "OnEmblemReady("
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x9FAED6BC
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K3        ; R5 := ", "
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: LOADK     R7 K4        ; R7 := ")"
  9 [-]: CONCAT    R3 R3 R7     ; R3 := R3 .. R4 .. R5 .. R6 .. R7
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 36
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0x7C282057
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x85A7A017"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 36
 19 [-]: JMP       36           ; PC := 36
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 22 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: SETTABLE  R3 K8 R2     ; R3["clanIcon"] := R2
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: SETTABLE  R4 R1 K7     ; R4[R1] := nil
 27 [-]: GETUPVAL  R4 U1        ; R4 := U1
 28 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["Node"]
 29 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R4 K10       ; R4 := mMovie
 32 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x26581636"]
 33 [-]: LOADK     R6 K12       ; R6 := "InfoTip.EnemyIcon"
 34 [-]: MOVE      R7 R2        ; R7 := R2
 35 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 36 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 6667
; #Upvalues:       24
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  54

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  7 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
  9 [-]: LOADK     R4 K3        ; R4 := "_root"
 10 [-]: LOADK     R5 K4        ; R5 := "_xmouse"
 11 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 12 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
 14 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 15 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x6B7B470B"]
 16 [-]: LOADK     R5 K3        ; R5 := "_root"
 17 [-]: LOADK     R6 K5        ; R6 := "_ymouse"
 18 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 19 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 20 [-]: LE        0 R1 K6      ; if R1 > -1000 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: LE        0 R2 K6      ; if R2 > -1000 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R3 U2        ; R3 := U2
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 27 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 81
 28 [-]: JMP       81           ; PC := 81
 29 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 30 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x880196A7"]
 31 [-]: GETUPVAL  R5 U2        ; R5 := U2
 32 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Node"]
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["clipName"]
 34 [-]: LOADK     R6 K7        ; R6 := "Node"
 35 [-]: LOADK     R7 K11       ; R7 := "_color"
 36 [-]: GETGLOBAL R8 K12       ; R8 := _G
 37 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["UIColor_White"]
 38 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 39 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 40 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x445651FB"]
 41 [-]: GETUPVAL  R5 U2        ; R5 := U2
 42 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Node"]
 43 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["labelIndex"]
 44 [-]: LOADK     R6 K16       ; R6 := "_alpha"
 45 [-]: GETUPVAL  R7 U3        ; R7 := U3
 46 [-]: GETUPVAL  R8 U2        ; R8 := U2
 47 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Node"]
 48 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 49 [-]: CALL      R3 0 1       ; R3(R4,...)
 50 [-]: GETUPVAL  R3 U2        ; R3 := U2
 51 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 52 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["guildId"]
 53 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETUPVAL  R3 U2        ; R3 := U2
 56 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 57 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["clanTier"]
 58 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: MOVE      R3 R0        ; R3 := R0
 61 [-]: MOVE      R3 R1        ; R3 := R1
 62 [-]: TEST      R3 0         ; if not R3 then PC := 81
 63 [-]: JMP       81           ; PC := 81
 64 [-]: GETGLOBAL R4 K19       ; R4 := 0x52E17A90
 65 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 66 [-]: GETUPVAL  R6 U2        ; R6 := U2
 67 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Node"]
 68 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["clipName"]
 69 [-]: LOADK     R7 K20       ; R7 := ".Node.Container.Node"
 70 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 71 [-]: GETGLOBAL R7 K21       ; R7 := UISys
 72 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["FlashInstance_LINEAR"]
 73 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 74 [-]: LOADK     R9 K16       ; R9 := "_alpha"
 75 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 76 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 77 [-]: LOADK     R10 K23      ; R10 := 0
 78 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 79 [-]: LOADK     R10 K24      ; R10 := 0.25
 80 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 81 [-]: GETUPVAL  R4 U4        ; R4 := U4
 82 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 83 [-]: MOVE      R5 R0        ; R5 := R0
 84 [-]: GETUPVAL  R6 U5        ; R6 := U5
 85 [-]: EQ        0 R4 R6      ; if R4 ~= R6 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: MOVE      R5 R1        ; R5 := R1
 88 [-]: GETGLOBAL R6 K25       ; R6 := 0x400E7765
 89 [-]: MOVE      R7 R4        ; R7 := R4
 90 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 91 [-]: TEST      R6 1         ; if R6 then PC := 927
 92 [-]: JMP       927          ; PC := 927
 93 [-]: GETTABLE  R6 R4 K26    ; R6 := R4["forceHover"]
 94 [-]: TEST      R6 1         ; if R6 then PC := 114
 95 [-]: JMP       114          ; PC := 114
 96 [-]: GETTABLE  R6 R4 K27    ; R6 := R4["locked"]
 97 [-]: TEST      R6 0         ; if not R6 then PC := 114
 98 [-]: JMP       114          ; PC := 114
 99 [-]: GETUPVAL  R6 U6        ; R6 := U6
100 [-]: GETUPVAL  R7 U7        ; R7 := U7
101 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["EDIT_NODES"]
102 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETUPVAL  R6 U6        ; R6 := U6
105 [-]: GETUPVAL  R7 U7        ; R7 := U7
106 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["EDIT_EDGES"]
107 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 114
108 [-]: JMP       114          ; PC := 114
109 [-]: GETUPVAL  R6 U6        ; R6 := U6
110 [-]: GETUPVAL  R7 U7        ; R7 := U7
111 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["EDIT_NODE_DECOS"]
112 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 927
113 [-]: JMP       927          ; PC := 927
114 [-]: GETTABLE  R6 R4 K31    ; R6 := R4["locationEnabled"]
115 [-]: TEST      R6 0         ; if not R6 then PC := 927
116 [-]: JMP       927          ; PC := 927
117 [-]: GETUPVAL  R6 U2        ; R6 := U2
118 [-]: SETTABLE  R6 K7 R4     ; R6["Node"] := R4
119 [-]: GETGLOBAL R6 K25       ; R6 := 0x400E7765
120 [-]: GETUPVAL  R7 U2        ; R7 := U2
121 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Node"]
122 [-]: CALL      R6 2 2       ; R6 := R6(R7)
123 [-]: TEST      R6 0         ; if not R6 then PC := 126
124 [-]: JMP       126          ; PC := 126
125 [-]: RETURN    R0 1         ; return 
126 [-]: GETUPVAL  R6 U2        ; R6 := U2
127 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Node"]
128 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["radialSector"]
129 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["mission"]
130 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["missionType"]
131 [-]: GETGLOBAL R7 K35       ; R7 := Lotus_Game
132 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["MT_ASSASSINATION"]
133 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 139
134 [-]: JMP       139          ; PC := 139
135 [-]: GETUPVAL  R6 U8        ; R6 := U8
136 [-]: GETUPVAL  R7 U2        ; R7 := U2
137 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Node"]
138 [-]: CALL      R6 2 1       ; R6(R7)
139 [-]: TEST      R5 1         ; if R5 then PC := 146
140 [-]: JMP       146          ; PC := 146
141 [-]: GETUPVAL  R6 U9        ; R6 := U9
142 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["0x25992394"]
143 [-]: GETGLOBAL R7 K12       ; R7 := _G
144 [-]: GETTABLE  R7 R7 K38    ; R7 := R7["UISound_Focus"]
145 [-]: CALL      R6 2 1       ; R6(R7)
146 [-]: GETTABLE  R6 R4 K17    ; R6 := R4["guildId"]
147 [-]: EQ        1 R6 K8      ; if R6 == nil then PC := 152
148 [-]: JMP       152          ; PC := 152
149 [-]: GETTABLE  R6 R4 K18    ; R6 := R4["clanTier"]
150 [-]: EQ        0 R6 K8      ; if R6 ~= nil then PC := 153
151 [-]: JMP       153          ; PC := 153
152 [-]: MOVE      R6 R0        ; R6 := R0
153 [-]: MOVE      R6 R1        ; R6 := R1
154 [-]: TEST      R6 0         ; if not R6 then PC := 172
155 [-]: JMP       172          ; PC := 172
156 [-]: GETGLOBAL R7 K19       ; R7 := 0x52E17A90
157 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
158 [-]: GETTABLE  R9 R4 K10    ; R9 := R4["clipName"]
159 [-]: LOADK     R10 K20      ; R10 := ".Node.Container.Node"
160 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
161 [-]: GETGLOBAL R10 K21      ; R10 := UISys
162 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_LINEAR"]
163 [-]: NEWTABLE  R11 1 0      ; R11 := {}
164 [-]: LOADK     R12 K16      ; R12 := "_alpha"
165 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
166 [-]: NEWTABLE  R12 1 0      ; R12 := {}
167 [-]: LOADK     R13 K39      ; R13 := 35
168 [-]: SETLIST   R12 1 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
169 [-]: LOADK     R13 K24      ; R13 := 0.25
170 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
171 [-]: JMP       179          ; PC := 179
172 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
173 [-]: SELF      R7 R7 K40    ; R8 := R7; R7 := R7["0x1C19D966"]
174 [-]: GETTABLE  R9 R4 K10    ; R9 := R4["clipName"]
175 [-]: LOADK     R10 K11      ; R10 := "_color"
176 [-]: GETGLOBAL R11 K12      ; R11 := _G
177 [-]: GETTABLE  R11 R11 K41  ; R11 := R11["UIColor_Yellow"]
178 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
179 [-]: GETTABLE  R7 R4 K42    ; R7 := R4["isJunction"]
180 [-]: TEST      R7 0         ; if not R7 then PC := 189
181 [-]: JMP       189          ; PC := 189
182 [-]: GETGLOBAL R7 K43       ; R7 := _T
183 [-]: SETTABLE  R7 K44 K8    ; R7["JunctionTasksRelayReconstruction"] := nil
184 [-]: GETUPVAL  R7 U10       ; R7 := U10
185 [-]: MOVE      R8 R4        ; R8 := R4
186 [-]: MOVE      R9 R5        ; R9 := R5
187 [-]: CALL      R7 3 1       ; R7(R8,R9)
188 [-]: JMP       927          ; PC := 927
189 [-]: GETTABLE  R7 R4 K45    ; R7 := R4["reconstructionProgress"]
190 [-]: TEST      R7 0         ; if not R7 then PC := 220
191 [-]: JMP       220          ; PC := 220
192 [-]: GETTABLE  R7 R4 K45    ; R7 := R4["reconstructionProgress"]
193 [-]: EQ        0 R7 K23     ; if R7 ~= 0 then PC := 220
194 [-]: JMP       220          ; PC := 220
195 [-]: GETTABLE  R7 R4 K46    ; R7 := R4["name"]
196 [-]: SELF      R7 R7 K47    ; R8 := R7; R7 := R7["0x5EC7A3D2"]
197 [-]: CALL      R7 2 2       ; R7 := R7(R8)
198 [-]: GETGLOBAL R8 K48       ; R8 := string
199 [-]: GETTABLE  R8 R8 K49    ; R8 := R8["0x7B782033"]
200 [-]: MOVE      R9 R7        ; R9 := R7
201 [-]: LOADK     R10 K50      ; R10 := 1
202 [-]: GETGLOBAL R11 K48      ; R11 := string
203 [-]: GETTABLE  R11 R11 K51  ; R11 := R11["0xDE44F664"]
204 [-]: MOVE      R12 R7       ; R12 := R7
205 [-]: LOADK     R13 K52      ; R13 := "Rebuild"
206 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
207 [-]: SUB       R11 R11 K50  ; R11 := R11 - 1
208 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
209 [-]: MOVE      R7 R8        ; R7 := R8
210 [-]: GETGLOBAL R8 K43       ; R8 := _T
211 [-]: GETUPVAL  R9 U11       ; R9 := U11
212 [-]: GETTABLE  R9 R9 R7     ; R9 := R9[R7]
213 [-]: GETTABLE  R9 R9 K53    ; R9 := R9["info"]
214 [-]: SETTABLE  R8 K44 R9    ; R8["JunctionTasksRelayReconstruction"] := R9
215 [-]: GETUPVAL  R8 U10       ; R8 := U10
216 [-]: MOVE      R9 R4        ; R9 := R4
217 [-]: MOVE      R10 R5       ; R10 := R5
218 [-]: CALL      R8 3 1       ; R8(R9,R10)
219 [-]: JMP       927          ; PC := 927
220 [-]: GETUPVAL  R8 U6        ; R8 := U6
221 [-]: GETUPVAL  R9 U7        ; R9 := U7
222 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["EDIT_NODE_DECOS"]
223 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 927
224 [-]: JMP       927          ; PC := 927
225 [-]: GETUPVAL  R8 U12       ; R8 := U12
226 [-]: TEST      R8 0         ; if not R8 then PC := 927
227 [-]: JMP       927          ; PC := 927
228 [-]: GETTABLE  R8 R4 K26    ; R8 := R4["forceHover"]
229 [-]: TEST      R8 1         ; if R8 then PC := 234
230 [-]: JMP       234          ; PC := 234
231 [-]: GETTABLE  R8 R4 K27    ; R8 := R4["locked"]
232 [-]: TEST      R8 1         ; if R8 then PC := 927
233 [-]: JMP       927          ; PC := 927
234 [-]: GETTABLE  R8 R4 K54    ; R8 := R4["isShortcut"]
235 [-]: TEST      R8 1         ; if R8 then PC := 927
236 [-]: JMP       927          ; PC := 927
237 [-]: GETUPVAL  R8 U13       ; R8 := U13
238 [-]: SELF      R8 R8 K55    ; R9 := R8; R8 := R8["0xDF213CE1"]
239 [-]: GETTABLE  R10 R4 K32   ; R10 := R4["radialSector"]
240 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["name"]
241 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
242 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["mission"]
243 [-]: GETTABLE  R8 R8 K56    ; R8 := R8["faction"]
244 [-]: GETGLOBAL R9 K57       ; R9 := 0x9FAED6BC
245 [-]: GETTABLE  R10 R4 K32   ; R10 := R4["radialSector"]
246 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["name"]
247 [-]: CALL      R9 2 2       ; R9 := R9(R10)
248 [-]: LOADNIL   R10 R10      ; R10 := nil
249 [-]: GETTABLE  R11 R4 K58   ; R11 := R4["displayMissionOverride"]
250 [-]: EQ        1 R11 K8     ; if R11 == nil then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: GETTABLE  R10 R4 K58   ; R10 := R4["displayMissionOverride"]
253 [-]: JMP       272          ; PC := 272
254 [-]: GETGLOBAL R11 K25      ; R11 := 0x400E7765
255 [-]: GETTABLE  R12 R4 K32   ; R12 := R4["radialSector"]
256 [-]: GETTABLE  R12 R12 K33  ; R12 := R12["mission"]
257 [-]: GETTABLE  R12 R12 K59  ; R12 := R12["levelKeyName"]
258 [-]: CALL      R11 2 2      ; R11 := R11(R12)
259 [-]: TEST      R11 1        ; if R11 then PC := 264
260 [-]: JMP       264          ; PC := 264
261 [-]: GETTABLE  R11 R4 K32   ; R11 := R4["radialSector"]
262 [-]: GETTABLE  R10 R11 K33  ; R10 := R11["mission"]
263 [-]: JMP       272          ; PC := 272
264 [-]: GETUPVAL  R11 U14      ; R11 := U14
265 [-]: GETTABLE  R11 R11 K60  ; R11 := R11["0xBB3AACF2"]
266 [-]: CALL      R11 1 2      ; R11 := R11()
267 [-]: SELF      R11 R11 K61  ; R12 := R11; R11 := R11["0x4B93F65B"]
268 [-]: GETTABLE  R13 R4 K32   ; R13 := R4["radialSector"]
269 [-]: GETTABLE  R13 R13 K46  ; R13 := R13["name"]
270 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
271 [-]: MOVE      R10 R11      ; R10 := R11
272 [-]: MOVE      R11 R0       ; R11 := R0
273 [-]: GETGLOBAL R12 K43      ; R12 := _T
274 [-]: GETTABLE  R12 R12 K62  ; R12 := R12["CachedInvasionInfo"]
275 [-]: GETTABLE  R12 R12 R9   ; R12 := R12[R9]
276 [-]: EQ        0 R12 K8     ; if R12 ~= nil then PC := 279
277 [-]: JMP       279          ; PC := 279
278 [-]: MOVE      R12 R0       ; R12 := R0
279 [-]: MOVE      R12 R1       ; R12 := R1
280 [-]: GETGLOBAL R13 K25      ; R13 := 0x400E7765
281 [-]: GETTABLE  R14 R4 K58   ; R14 := R4["displayMissionOverride"]
282 [-]: CALL      R13 2 2      ; R13 := R13(R14)
283 [-]: TEST      R13 0        ; if not R13 then PC := 294
284 [-]: JMP       294          ; PC := 294
285 [-]: GETTABLE  R13 R10 K56  ; R13 := R10["faction"]
286 [-]: EQ        1 R8 R13     ; if R8 == R13 then PC := 292
287 [-]: JMP       292          ; PC := 292
288 [-]: GETGLOBAL R13 K25      ; R13 := 0x400E7765
289 [-]: GETTABLE  R14 R10 K59  ; R14 := R10["levelKeyName"]
290 [-]: CALL      R13 2 2      ; R13 := R13(R14)
291 [-]: JMP       294          ; PC := 294
292 [-]: MOVE      R13 R0       ; R13 := R0
293 [-]: MOVE      R13 R1       ; R13 := R1
294 [-]: GETGLOBAL R14 K43      ; R14 := _T
295 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["CachedGhostTowerMissions"]
296 [-]: GETTABLE  R14 R14 R9   ; R14 := R14[R9]
297 [-]: EQ        1 R14 K8     ; if R14 == nil then PC := 320
298 [-]: JMP       320          ; PC := 320
299 [-]: GETGLOBAL R14 K43      ; R14 := _T
300 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["CachedGhostTowerMissions"]
301 [-]: GETTABLE  R14 R14 R9   ; R14 := R14[R9]
302 [-]: GETTABLE  R14 R14 K64  ; R14 := R14["mUnlocked"]
303 [-]: TEST      R14 0        ; if not R14 then PC := 322
304 [-]: JMP       322          ; PC := 322
305 [-]: GETTABLE  R14 R4 K65   ; R14 := R4["icon"]
306 [-]: GETGLOBAL R15 K12      ; R15 := _G
307 [-]: GETTABLE  R15 R15 K66  ; R15 := R15["UITextures_GhostTower"]
308 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 315
309 [-]: JMP       315          ; PC := 315
310 [-]: GETTABLE  R14 R4 K65   ; R14 := R4["icon"]
311 [-]: GETGLOBAL R15 K12      ; R15 := _G
312 [-]: GETTABLE  R15 R15 K67  ; R15 := R15["UITextures_GhostTowerVariant"]
313 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 320
314 [-]: JMP       320          ; PC := 320
315 [-]: GETGLOBAL R14 K43      ; R14 := _T
316 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["CachedGhostTowerMissions"]
317 [-]: GETTABLE  R14 R14 R9   ; R14 := R14[R9]
318 [-]: GETTABLE  R14 R14 K68  ; R14 := R14["mShowInStarChart"]
319 [-]: JMP       322          ; PC := 322
320 [-]: MOVE      R14 R0       ; R14 := R0
321 [-]: MOVE      R14 R1       ; R14 := R1
322 [-]: TEST      R14 1        ; if R14 then PC := 351
323 [-]: JMP       351          ; PC := 351
324 [-]: GETGLOBAL R15 K43      ; R15 := _T
325 [-]: GETTABLE  R15 R15 K69  ; R15 := R15["CachedSkullNodes"]
326 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
327 [-]: TEST      R15 1        ; if R15 then PC := 342
328 [-]: JMP       342          ; PC := 342
329 [-]: GETGLOBAL R15 K43      ; R15 := _T
330 [-]: GETTABLE  R15 R15 K70  ; R15 := R15["CachedAlerts"]
331 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
332 [-]: TEST      R15 0        ; if not R15 then PC := 353
333 [-]: JMP       353          ; PC := 353
334 [-]: GETGLOBAL R15 K43      ; R15 := _T
335 [-]: GETTABLE  R15 R15 K70  ; R15 := R15["CachedAlerts"]
336 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
337 [-]: GETTABLE  R15 R15 K71  ; R15 := R15["mAlertInfo"]
338 [-]: GETTABLE  R15 R15 K72  ; R15 := R15["mMissionInfo"]
339 [-]: GETTABLE  R15 R15 K73  ; R15 := R15["nightmare"]
340 [-]: TEST      R15 0        ; if not R15 then PC := 353
341 [-]: JMP       353          ; PC := 353
342 [-]: GETUPVAL  R15 U15      ; R15 := U15
343 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
344 [-]: TEST      R15 0        ; if not R15 then PC := 352
345 [-]: JMP       352          ; PC := 352
346 [-]: GETUPVAL  R15 U15      ; R15 := U15
347 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
348 [-]: GETTABLE  R15 R15 K74  ; R15 := R15["IsQuest"]
349 [-]: MOVE      R15 R15      ; R15 := R15
350 [-]: JMP       353          ; PC := 353
351 [-]: MOVE      R15 R0       ; R15 := R0
352 [-]: MOVE      R15 R1       ; R15 := R1
353 [-]: GETGLOBAL R16 K43      ; R16 := _T
354 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["CachedEliteAlertMissions"]
355 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
356 [-]: EQ        1 R16 K8     ; if R16 == nil then PC := 369
357 [-]: JMP       369          ; PC := 369
358 [-]: GETGLOBAL R16 K43      ; R16 := _T
359 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["CachedEliteAlertMissions"]
360 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
361 [-]: GETTABLE  R16 R16 K64  ; R16 := R16["mUnlocked"]
362 [-]: TEST      R16 0        ; if not R16 then PC := 371
363 [-]: JMP       371          ; PC := 371
364 [-]: GETGLOBAL R16 K43      ; R16 := _T
365 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["CachedEliteAlertMissions"]
366 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
367 [-]: GETTABLE  R16 R16 K68  ; R16 := R16["mShowInStarChart"]
368 [-]: JMP       371          ; PC := 371
369 [-]: MOVE      R16 R0       ; R16 := R0
370 [-]: MOVE      R16 R1       ; R16 := R1
371 [-]: GETGLOBAL R17 K43      ; R17 := _T
372 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["CachedNemesisMissions"]
373 [-]: GETTABLE  R17 R17 R9   ; R17 := R17[R9]
374 [-]: EQ        0 R17 K8     ; if R17 ~= nil then PC := 377
375 [-]: JMP       377          ; PC := 377
376 [-]: MOVE      R17 R0       ; R17 := R0
377 [-]: MOVE      R17 R1       ; R17 := R1
378 [-]: GETUPVAL  R18 U16      ; R18 := U16
379 [-]: GETTABLE  R18 R18 K77  ; R18 := R18["Active"]
380 [-]: GETGLOBAL R19 K12      ; R19 := _G
381 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["CachedGoalInfo"]
382 [-]: TEST      R19 0        ; if not R19 then PC := 422
383 [-]: JMP       422          ; PC := 422
384 [-]: GETGLOBAL R19 K12      ; R19 := _G
385 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["CachedGoalInfo"]
386 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
387 [-]: TEST      R19 0        ; if not R19 then PC := 422
388 [-]: JMP       422          ; PC := 422
389 [-]: GETGLOBAL R19 K12      ; R19 := _G
390 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["CachedGoalInfo"]
391 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
392 [-]: GETTABLE  R19 R19 K79  ; R19 := R19["mRelayReconstruction"]
393 [-]: TEST      R19 0        ; if not R19 then PC := 398
394 [-]: JMP       398          ; PC := 398
395 [-]: GETTABLE  R19 R4 K45   ; R19 := R4["reconstructionProgress"]
396 [-]: EQ        0 R19 K50    ; if R19 ~= 1 then PC := 422
397 [-]: JMP       422          ; PC := 422
398 [-]: GETGLOBAL R19 K12      ; R19 := _G
399 [-]: GETTABLE  R19 R19 K78  ; R19 := R19["CachedGoalInfo"]
400 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
401 [-]: GETTABLE  R10 R19 K72  ; R10 := R19["mMissionInfo"]
402 [-]: GETGLOBAL R19 K43      ; R19 := _T
403 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
404 [-]: TEST      R19 0        ; if not R19 then PC := 417
405 [-]: JMP       417          ; PC := 417
406 [-]: GETGLOBAL R19 K43      ; R19 := _T
407 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
408 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
409 [-]: TEST      R19 0        ; if not R19 then PC := 417
410 [-]: JMP       417          ; PC := 417
411 [-]: GETGLOBAL R19 K43      ; R19 := _T
412 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
413 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
414 [-]: SELF      R19 R19 K81  ; R20 := R19; R19 := R19["0xF1A9732E"]
415 [-]: CALL      R19 2 2      ; R19 := R19(R20)
416 [-]: SETTABLE  R10 K65 R19  ; R10["icon"] := R19
417 [-]: GETGLOBAL R19 K25      ; R19 := 0x400E7765
418 [-]: GETTABLE  R20 R10 K65  ; R20 := R10["icon"]
419 [-]: CALL      R19 2 2      ; R19 := R19(R20)
420 [-]: MOVE      R11 R19      ; R11 := R19
421 [-]: JMP       453          ; PC := 453
422 [-]: GETGLOBAL R19 K43      ; R19 := _T
423 [-]: GETTABLE  R19 R19 K82  ; R19 := R19["LockedGoalMissionInfo"]
424 [-]: TEST      R19 0        ; if not R19 then PC := 453
425 [-]: JMP       453          ; PC := 453
426 [-]: GETGLOBAL R19 K43      ; R19 := _T
427 [-]: GETTABLE  R19 R19 K82  ; R19 := R19["LockedGoalMissionInfo"]
428 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
429 [-]: TEST      R19 0        ; if not R19 then PC := 453
430 [-]: JMP       453          ; PC := 453
431 [-]: GETGLOBAL R19 K43      ; R19 := _T
432 [-]: GETTABLE  R19 R19 K82  ; R19 := R19["LockedGoalMissionInfo"]
433 [-]: GETTABLE  R10 R19 R9   ; R10 := R19[R9]
434 [-]: GETGLOBAL R19 K43      ; R19 := _T
435 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
436 [-]: TEST      R19 0        ; if not R19 then PC := 449
437 [-]: JMP       449          ; PC := 449
438 [-]: GETGLOBAL R19 K43      ; R19 := _T
439 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
440 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
441 [-]: TEST      R19 0        ; if not R19 then PC := 449
442 [-]: JMP       449          ; PC := 449
443 [-]: GETGLOBAL R19 K43      ; R19 := _T
444 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["CachedGoalKeys"]
445 [-]: GETTABLE  R19 R19 R9   ; R19 := R19[R9]
446 [-]: SELF      R19 R19 K81  ; R20 := R19; R19 := R19["0xF1A9732E"]
447 [-]: CALL      R19 2 2      ; R19 := R19(R20)
448 [-]: SETTABLE  R10 K65 R19  ; R10["icon"] := R19
449 [-]: GETGLOBAL R19 K25      ; R19 := 0x400E7765
450 [-]: GETTABLE  R20 R10 K65  ; R20 := R10["icon"]
451 [-]: CALL      R19 2 2      ; R19 := R19(R20)
452 [-]: MOVE      R11 R19      ; R11 := R19
453 [-]: GETTABLE  R19 R4 K83   ; R19 := R4["locName"]
454 [-]: TEST      R15 0        ; if not R15 then PC := 464
455 [-]: JMP       464          ; PC := 464
456 [-]: GETGLOBAL R20 K84      ; R20 := 0xE6DC43B0
457 [-]: LOADK     R21 K85      ; R21 := "/Lotus/Language/Menu/NightmareModeName"
458 [-]: LOADNIL   R22 R22      ; R22 := nil
459 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
460 [-]: LOADK     R21 K86      ; R21 := ": "
461 [-]: MOVE      R22 R19      ; R22 := R19
462 [-]: CONCAT    R19 R20 R22  ; R19 := R20 .. R21 .. R22
463 [-]: JMP       474          ; PC := 474
464 [-]: TEST      R6 0         ; if not R6 then PC := 474
465 [-]: JMP       474          ; PC := 474
466 [-]: GETGLOBAL R20 K48      ; R20 := string
467 [-]: GETTABLE  R20 R20 K87  ; R20 := R20["0x639C642A"]
468 [-]: GETGLOBAL R21 K84      ; R21 := 0xE6DC43B0
469 [-]: LOADK     R22 K88      ; R22 := "/Lotus/Language/Dojo/FeaturedDojo"
470 [-]: LOADNIL   R23 R23      ; R23 := nil
471 [-]: CALL      R21 3 0      ; R21,... := R21(R22,R23)
472 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
473 [-]: MOVE      R19 R20      ; R19 := R20
474 [-]: GETUPVAL  R20 U17      ; R20 := U17
475 [-]: MOVE      R21 R4       ; R21 := R4
476 [-]: LOADNIL   R22 R22      ; R22 := nil
477 [-]: MOVE      R23 R10      ; R23 := R10
478 [-]: MOVE      R24 R15      ; R24 := R15
479 [-]: MOVE      R25 R13      ; R25 := R13
480 [-]: CALL      R20 6 2      ; R20 := R20(R21,R22,R23,R24,R25)
481 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
482 [-]: SELF      R21 R21 K40  ; R22 := R21; R21 := R21["0x1C19D966"]
483 [-]: LOADK     R23 K89      ; R23 := "InfoTip.NodeName"
484 [-]: LOADK     R24 K90      ; R24 := "verticalAlignment"
485 [-]: LOADK     R25 K91      ; R25 := "bottom"
486 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
487 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
488 [-]: SELF      R21 R21 K40  ; R22 := R21; R21 := R21["0x1C19D966"]
489 [-]: LOADK     R23 K89      ; R23 := "InfoTip.NodeName"
490 [-]: LOADK     R24 K92      ; R24 := "text"
491 [-]: MOVE      R25 R19      ; R25 := R19
492 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
493 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
494 [-]: SELF      R21 R21 K40  ; R22 := R21; R21 := R21["0x1C19D966"]
495 [-]: LOADK     R23 K93      ; R23 := "InfoTip.Label"
496 [-]: LOADK     R24 K92      ; R24 := "text"
497 [-]: MOVE      R25 R20      ; R25 := R20
498 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
499 [-]: GETUPVAL  R21 U18      ; R21 := U18
500 [-]: GETGLOBAL R22 K0       ; R22 := 0xF595ADDE
501 [-]: GETGLOBAL R23 K1       ; R23 := mMovie
502 [-]: SELF      R23 R23 K2   ; R24 := R23; R23 := R23["0x6B7B470B"]
503 [-]: LOADK     R25 K95      ; R25 := "InfoTip.Bg"
504 [-]: LOADK     R26 K96      ; R26 := "_width"
505 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
506 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
507 [-]: SETTABLE  R21 K94 R22  ; R21["BgWidth"] := R22
508 [-]: GETUPVAL  R21 U18      ; R21 := U18
509 [-]: GETGLOBAL R22 K0       ; R22 := 0xF595ADDE
510 [-]: GETGLOBAL R23 K1       ; R23 := mMovie
511 [-]: SELF      R23 R23 K2   ; R24 := R23; R23 := R23["0x6B7B470B"]
512 [-]: LOADK     R25 K93      ; R25 := "InfoTip.Label"
513 [-]: LOADK     R26 K98      ; R26 := "textHeight"
514 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
515 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
516 [-]: SUB       R22 R22 K99  ; R22 := R22 - 10
517 [-]: SETTABLE  R21 K97 R22  ; R21["BgHeight"] := R22
518 [-]: GETGLOBAL R21 K19      ; R21 := 0x52E17A90
519 [-]: GETGLOBAL R22 K1       ; R22 := mMovie
520 [-]: LOADK     R23 K100     ; R23 := "InfoTip"
521 [-]: GETGLOBAL R24 K21      ; R24 := UISys
522 [-]: GETTABLE  R24 R24 K22  ; R24 := R24["FlashInstance_LINEAR"]
523 [-]: NEWTABLE  R25 1 0      ; R25 := {}
524 [-]: LOADK     R26 K16      ; R26 := "_alpha"
525 [-]: SETLIST   R25 1 1      ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 1
526 [-]: NEWTABLE  R26 1 0      ; R26 := {}
527 [-]: LOADK     R27 K101     ; R27 := 100
528 [-]: SETLIST   R26 1 1      ; R26[(1-1)*FPF+i] := R(26+i), 1 <= i <= 1
529 [-]: LOADK     R27 K102     ; R27 := 0.20000000298023
530 [-]: CALL      R21 7 1      ; R21(R22,R23,R24,R25,R26,R27)
531 [-]: GETGLOBAL R21 K103     ; R21 := math
532 [-]: GETTABLE  R21 R21 K104 ; R21 := R21["0x1DD19CC9"]
533 [-]: MUL       R22 R0 K105  ; R22 := R0 * 67443
534 [-]: CALL      R21 2 1      ; R21(R22)
535 [-]: LOADNIL   R21 R21      ; R21 := nil
536 [-]: TEST      R16 0        ; if not R16 then PC := 541
537 [-]: JMP       541          ; PC := 541
538 [-]: GETGLOBAL R22 K12      ; R22 := _G
539 [-]: GETTABLE  R21 R22 K106 ; R21 := R22["UITexture_EliteAlert"]
540 [-]: JMP       698          ; PC := 698
541 [-]: TEST      R15 0        ; if not R15 then PC := 546
542 [-]: JMP       546          ; PC := 546
543 [-]: GETGLOBAL R22 K12      ; R22 := _G
544 [-]: GETTABLE  R21 R22 K107 ; R21 := R22["UITexture_SkullLarge"]
545 [-]: JMP       698          ; PC := 698
546 [-]: TEST      R14 0        ; if not R14 then PC := 550
547 [-]: JMP       550          ; PC := 550
548 [-]: GETTABLE  R21 R4 K65   ; R21 := R4["icon"]
549 [-]: JMP       698          ; PC := 698
550 [-]: TEST      R6 0         ; if not R6 then PC := 582
551 [-]: JMP       582          ; PC := 582
552 [-]: GETTABLE  R22 R4 K108  ; R22 := R4["clanIcon"]
553 [-]: EQ        1 R22 K8     ; if R22 == nil then PC := 557
554 [-]: JMP       557          ; PC := 557
555 [-]: GETTABLE  R21 R4 K108  ; R21 := R4["clanIcon"]
556 [-]: JMP       698          ; PC := 698
557 [-]: GETGLOBAL R22 K12      ; R22 := _G
558 [-]: GETTABLE  R21 R22 K109 ; R21 := R22["UITexture_DefaultClan"]
559 [-]: GETUPVAL  R22 U9       ; R22 := U9
560 [-]: GETTABLE  R22 R22 K110 ; R22 := R22["0x36BA5F48"]
561 [-]: CALL      R22 1 2      ; R22 := R22()
562 [-]: TEST      R22 1        ; if R22 then PC := 698
563 [-]: JMP       698          ; PC := 698
564 [-]: GETUPVAL  R22 U14      ; R22 := U14
565 [-]: GETTABLE  R22 R22 K111 ; R22 := R22["0x71ACF9C"]
566 [-]: GETTABLE  R23 R4 K17   ; R23 := R4["guildId"]
567 [-]: CALL      R22 2 2      ; R22 := R22(R23)
568 [-]: EQ        1 R22 K8     ; if R22 == nil then PC := 698
569 [-]: JMP       698          ; PC := 698
570 [-]: GETUPVAL  R23 U19      ; R23 := U19
571 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
572 [-]: EQ        0 R23 K8     ; if R23 ~= nil then PC := 698
573 [-]: JMP       698          ; PC := 698
574 [-]: GETUPVAL  R23 U19      ; R23 := U19
575 [-]: SETTABLE  R23 R22 R4   ; R23[R22] := R4
576 [-]: GETGLOBAL R23 K112     ; R23 := gGameRules
577 [-]: SELF      R23 R23 K113 ; R24 := R23; R23 := R23["0x4A57F63D"]
578 [-]: MOVE      R25 R22      ; R25 := R22
579 [-]: LOADK     R26 K114     ; R26 := "OnEmblemReady"
580 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
581 [-]: JMP       698          ; PC := 698
582 [-]: GETGLOBAL R23 K25      ; R23 := 0x400E7765
583 [-]: MOVE      R24 R10      ; R24 := R10
584 [-]: CALL      R23 2 2      ; R23 := R23(R24)
585 [-]: TEST      R23 1        ; if R23 then PC := 698
586 [-]: JMP       698          ; PC := 698
587 [-]: LOADNIL   R23 R23      ; R23 := nil
588 [-]: TEST      R12 0        ; if not R12 then PC := 598
589 [-]: JMP       598          ; PC := 598
590 [-]: GETGLOBAL R24 K43      ; R24 := _T
591 [-]: GETTABLE  R24 R24 K62  ; R24 := R24["CachedInvasionInfo"]
592 [-]: GETTABLE  R24 R24 R9   ; R24 := R24[R9]
593 [-]: GETTABLE  R24 R24 K115 ; R24 := R24["mAttackerMissionInfo"]
594 [-]: SELF      R24 R24 K116 ; R25 := R24; R24 := R24["0x70C51B59"]
595 [-]: CALL      R24 2 2      ; R24 := R24(R25)
596 [-]: MOVE      R23 R24      ; R23 := R24
597 [-]: JMP       668          ; PC := 668
598 [-]: GETGLOBAL R24 K25      ; R24 := 0x400E7765
599 [-]: GETTABLE  R25 R10 K117 ; R25 := R10["vipAgent"]
600 [-]: CALL      R24 2 2      ; R24 := R24(R25)
601 [-]: TEST      R24 1        ; if R24 then PC := 632
602 [-]: JMP       632          ; PC := 632
603 [-]: GETGLOBAL R24 K118     ; R24 := 0x63B09107
604 [-]: GETUPVAL  R25 U20      ; R25 := U20
605 [-]: CALL      R24 2 4      ; R24,R25,R26 := R24(R25)
606 [-]: JMP       618          ; PC := 618
607 [-]: GETTABLE  R29 R28 K119 ; R29 := R28["StarChartAgent"]
608 [-]: GETTABLE  R30 R10 K117 ; R30 := R10["vipAgent"]
609 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 618
610 [-]: JMP       618          ; PC := 618
611 [-]: GETGLOBAL R29 K25      ; R29 := 0x400E7765
612 [-]: GETTABLE  R30 R28 K120 ; R30 := R28["StarChartImage"]
613 [-]: CALL      R29 2 2      ; R29 := R29(R30)
614 [-]: TEST      R29 1        ; if R29 then PC := 620
615 [-]: JMP       620          ; PC := 620
616 [-]: GETTABLE  R21 R28 K120 ; R21 := R28["StarChartImage"]
617 [-]: JMP       620          ; PC := 620
618 [-]: TFORLOOP  R24 2        ; R27,R28 :=  R24(R25,R26); if R27 ~= nil then begin PC = 607; R26 := R27 end
619 [-]: JMP       607          ; PC := 607
620 [-]: GETGLOBAL R29 K25      ; R29 := 0x400E7765
621 [-]: MOVE      R30 R21      ; R30 := R21
622 [-]: CALL      R29 2 2      ; R29 := R29(R30)
623 [-]: TEST      R29 0        ; if not R29 then PC := 668
624 [-]: JMP       668          ; PC := 668
625 [-]: NEWTABLE  R29 1 0      ; R29 := {}
626 [-]: NEWTABLE  R30 0 1      ; R30 := {}
627 [-]: GETTABLE  R31 R10 K117 ; R31 := R10["vipAgent"]
628 [-]: SETTABLE  R30 K121 R31 ; R30["agent"] := R31
629 [-]: SETLIST   R29 1 1      ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 1
630 [-]: MOVE      R23 R29      ; R23 := R29
631 [-]: JMP       668          ; PC := 668
632 [-]: GETTABLE  R29 R10 K34  ; R29 := R10["missionType"]
633 [-]: GETGLOBAL R30 K35      ; R30 := Lotus_Game
634 [-]: GETTABLE  R30 R30 K122 ; R30 := R30["MT_RAILJACK"]
635 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 668
636 [-]: JMP       668          ; PC := 668
637 [-]: GETGLOBAL R29 K118     ; R29 := 0x63B09107
638 [-]: SELF      R30 R10 K116 ; R31 := R10; R30 := R10["0x70C51B59"]
639 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
640 [-]: CALL      R29 0 4      ; R29,R30,R31 := R29(R30,...)
641 [-]: JMP       666          ; PC := 666
642 [-]: GETTABLE  R34 R33 K121 ; R34 := R33["agent"]
643 [-]: GETGLOBAL R35 K25      ; R35 := 0x400E7765
644 [-]: MOVE      R36 R34      ; R36 := R34
645 [-]: CALL      R35 2 2      ; R35 := R35(R36)
646 [-]: TEST      R35 1        ; if R35 then PC := 666
647 [-]: JMP       666          ; PC := 666
648 [-]: GETGLOBAL R35 K48      ; R35 := string
649 [-]: GETTABLE  R35 R35 K51  ; R35 := R35["0xDE44F664"]
650 [-]: SELF      R36 R34 K123 ; R37 := R34; R36 := R34["0x1B252E3C"]
651 [-]: CALL      R36 2 2      ; R36 := R36(R37)
652 [-]: LOADK     R37 K124     ; R37 := "Fighters"
653 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
654 [-]: TEST      R35 0        ; if not R35 then PC := 666
655 [-]: JMP       666          ; PC := 666
656 [-]: EQ        0 R23 K8     ; if R23 ~= nil then PC := 660
657 [-]: JMP       660          ; PC := 660
658 [-]: NEWTABLE  R35 0 0      ; R35 := {}
659 [-]: MOVE      R23 R35      ; R23 := R35
660 [-]: GETGLOBAL R35 K125     ; R35 := table
661 [-]: GETTABLE  R35 R35 K126 ; R35 := R35["0xE6450C9D"]
662 [-]: MOVE      R36 R23      ; R36 := R23
663 [-]: NEWTABLE  R37 0 1      ; R37 := {}
664 [-]: SETTABLE  R37 K121 R34 ; R37["agent"] := R34
665 [-]: CALL      R35 3 1      ; R35(R36,R37)
666 [-]: TFORLOOP  R29 2        ; R32,R33 :=  R29(R30,R31); if R32 ~= nil then begin PC = 642; R31 := R32 end
667 [-]: JMP       642          ; PC := 642
668 [-]: GETGLOBAL R35 K25      ; R35 := 0x400E7765
669 [-]: MOVE      R36 R23      ; R36 := R23
670 [-]: CALL      R35 2 2      ; R35 := R35(R36)
671 [-]: TEST      R35 0        ; if not R35 then PC := 676
672 [-]: JMP       676          ; PC := 676
673 [-]: SELF      R35 R10 K116 ; R36 := R10; R35 := R10["0x70C51B59"]
674 [-]: CALL      R35 2 2      ; R35 := R35(R36)
675 [-]: MOVE      R23 R35      ; R23 := R35
676 [-]: LEN       R35 R23      ; R35 := # R23
677 [-]: LT        0 K23 R35    ; if 0 >= R35 then PC := 698
678 [-]: JMP       698          ; PC := 698
679 [-]: GETGLOBAL R35 K103     ; R35 := math
680 [-]: GETTABLE  R35 R35 K127 ; R35 := R35["0xBCF846DF"]
681 [-]: GETGLOBAL R36 K103     ; R36 := math
682 [-]: GETTABLE  R36 R36 K128 ; R36 := R36["0x865961F7"]
683 [-]: LOADK     R37 K50      ; R37 := 1
684 [-]: LEN       R38 R23      ; R38 := # R23
685 [-]: CALL      R36 3 0      ; R36,... := R36(R37,R38)
686 [-]: CALL      R35 0 2      ; R35 := R35(R36,...)
687 [-]: GETUPVAL  R36 U21      ; R36 := U21
688 [-]: SELF      R36 R36 K129 ; R37 := R36; R36 := R36["0xF37AEF8E"]
689 [-]: GETTABLE  R38 R23 R35  ; R38 := R23[R35]
690 [-]: GETTABLE  R38 R38 K121 ; R38 := R38["agent"]
691 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
692 [-]: GETGLOBAL R37 K25      ; R37 := 0x400E7765
693 [-]: GETTABLE  R38 R36 K65  ; R38 := R36["icon"]
694 [-]: CALL      R37 2 2      ; R37 := R37(R38)
695 [-]: TEST      R37 1        ; if R37 then PC := 698
696 [-]: JMP       698          ; PC := 698
697 [-]: GETTABLE  R21 R36 K65  ; R21 := R36["icon"]
698 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
699 [-]: SELF      R37 R37 K130 ; R38 := R37; R37 := R37["0x26581636"]
700 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
701 [-]: MOVE      R40 R21      ; R40 := R21
702 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
703 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
704 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
705 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
706 [-]: LOADK     R40 K132     ; R40 := "_visible"
707 [-]: GETGLOBAL R41 K25      ; R41 := 0x400E7765
708 [-]: MOVE      R42 R21      ; R42 := R21
709 [-]: CALL      R41 2 2      ; R41 := R41(R42)
710 [-]: TEST      R41 1        ; if R41 then PC := 718
711 [-]: JMP       718          ; PC := 718
712 [-]: GETUPVAL  R41 U22      ; R41 := U22
713 [-]: GETTABLE  R41 R41 K133 ; R41 := R41["Playing"]
714 [-]: TEST      R41 1        ; if R41 then PC := 718
715 [-]: JMP       718          ; PC := 718
716 [-]: MOVE      R41 R11      ; R41 := R11
717 [-]: JMP       720          ; PC := 720
718 [-]: MOVE      R41 R0       ; R41 := R0
719 [-]: MOVE      R41 R1       ; R41 := R1
720 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
721 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
722 [-]: SELF      R37 R37 K134 ; R38 := R37; R37 := R37["0x7E1F26D7"]
723 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
724 [-]: GETGLOBAL R40 K135     ; R40 := fgEnemyMaterial
725 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
726 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
727 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
728 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
729 [-]: LOADK     R40 K136     ; R40 := "_xscale"
730 [-]: LOADK     R41 K137     ; R41 := 155
731 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
732 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
733 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
734 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
735 [-]: LOADK     R40 K138     ; R40 := "_yscale"
736 [-]: LOADK     R41 K137     ; R41 := 155
737 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
738 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
739 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
740 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
741 [-]: LOADK     R40 K139     ; R40 := "_y"
742 [-]: LOADK     R41 K140     ; R41 := 95
743 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
744 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
745 [-]: SELF      R37 R37 K40  ; R38 := R37; R37 := R37["0x1C19D966"]
746 [-]: LOADK     R39 K131     ; R39 := "InfoTip.EnemyIcon"
747 [-]: LOADK     R40 K141     ; R40 := "_x"
748 [-]: LOADK     R41 K142     ; R41 := 64
749 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
750 [-]: GETGLOBAL R37 K143     ; R37 := locationTextures
751 [-]: GETGLOBAL R38 K103     ; R38 := math
752 [-]: GETTABLE  R38 R38 K127 ; R38 := R38["0xBCF846DF"]
753 [-]: GETGLOBAL R39 K103     ; R39 := math
754 [-]: GETTABLE  R39 R39 K128 ; R39 := R39["0x865961F7"]
755 [-]: LOADK     R40 K50      ; R40 := 1
756 [-]: GETGLOBAL R41 K143     ; R41 := locationTextures
757 [-]: LEN       R41 R41      ; R41 := # R41
758 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
759 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
760 [-]: GETTABLE  R37 R37 R38  ; R37 := R37[R38]
761 [-]: GETUPVAL  R38 U18      ; R38 := U18
762 [-]: GETTABLE  R38 R38 K144 ; R38 := R38["InitLocationPicHeight"]
763 [-]: GETUPVAL  R39 U18      ; R39 := U18
764 [-]: GETTABLE  R39 R39 K145 ; R39 := R39["InitLocationPicYPos"]
765 [-]: TEST      R11 0        ; if not R11 then PC := 797
766 [-]: JMP       797          ; PC := 797
767 [-]: GETTABLE  R37 R10 K65  ; R37 := R10["icon"]
768 [-]: GETGLOBAL R40 K146     ; R40 := 0x7C282057
769 [-]: MOVE      R41 R37      ; R41 := R37
770 [-]: CALL      R40 2 2      ; R40 := R40(R41)
771 [-]: SELF      R41 R40 K147 ; R42 := R40; R41 := R40["0x11FF52EA"]
772 [-]: CALL      R41 2 2      ; R41 := R41(R42)
773 [-]: GETTABLE  R42 R41 K148 ; R42 := R41["x"]
774 [-]: LT        0 K23 R42    ; if 0 >= R42 then PC := 840
775 [-]: JMP       840          ; PC := 840
776 [-]: GETTABLE  R42 R41 K149 ; R42 := R41["y"]
777 [-]: GETTABLE  R43 R41 K148 ; R43 := R41["x"]
778 [-]: DIV       R42 R42 R43  ; R42 := R42 / R43
779 [-]: GETGLOBAL R43 K0       ; R43 := 0xF595ADDE
780 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
781 [-]: SELF      R44 R44 K2   ; R45 := R44; R44 := R44["0x6B7B470B"]
782 [-]: LOADK     R46 K150     ; R46 := "InfoTip.LocationPic"
783 [-]: LOADK     R47 K96      ; R47 := "_width"
784 [-]: CALL      R44 4 0      ; R44,... := R44(R45,R46,R47)
785 [-]: CALL      R43 0 2      ; R43 := R43(R44,...)
786 [-]: MUL       R38 R43 R42  ; R38 := R43 * R42
787 [-]: GETUPVAL  R43 U18      ; R43 := U18
788 [-]: GETTABLE  R43 R43 K144 ; R43 := R43["InitLocationPicHeight"]
789 [-]: LT        0 R43 R38    ; if R43 >= R38 then PC := 840
790 [-]: JMP       840          ; PC := 840
791 [-]: GETUPVAL  R43 U18      ; R43 := U18
792 [-]: GETTABLE  R43 R43 K144 ; R43 := R43["InitLocationPicHeight"]
793 [-]: SUB       R43 R38 R43  ; R43 := R38 - R43
794 [-]: DIV       R43 R43 K151 ; R43 := R43 / 2
795 [-]: ADD       R39 R39 R43  ; R39 := R39 + R43
796 [-]: JMP       840          ; PC := 840
797 [-]: GETGLOBAL R43 K48      ; R43 := string
798 [-]: GETTABLE  R43 R43 K51  ; R43 := R43["0xDE44F664"]
799 [-]: MOVE      R44 R9       ; R44 := R9
800 [-]: LOADK     R45 K152     ; R45 := "Dojo"
801 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
802 [-]: TEST      R43 0        ; if not R43 then PC := 815
803 [-]: JMP       815          ; PC := 815
804 [-]: GETGLOBAL R43 K153     ; R43 := locationIconMap
805 [-]: SELF      R43 R43 K154 ; R44 := R43; R43 := R43["0x7FFA0478"]
806 [-]: LOADK     R45 K155     ; R45 := "dojo"
807 [-]: GETGLOBAL R46 K103     ; R46 := math
808 [-]: GETTABLE  R46 R46 K128 ; R46 := R46["0x865961F7"]
809 [-]: LOADK     R47 K23      ; R47 := 0
810 [-]: LOADK     R48 K101     ; R48 := 100
811 [-]: CALL      R46 3 0      ; R46,... := R46(R47,R48)
812 [-]: CALL      R43 0 2      ; R43 := R43(R44,...)
813 [-]: MOVE      R37 R43      ; R37 := R43
814 [-]: JMP       840          ; PC := 840
815 [-]: GETGLOBAL R43 K25      ; R43 := 0x400E7765
816 [-]: GETTABLE  R44 R10 K156 ; R44 := R10["levelOverride"]
817 [-]: CALL      R43 2 2      ; R43 := R43(R44)
818 [-]: TEST      R43 1        ; if R43 then PC := 840
819 [-]: JMP       840          ; PC := 840
820 [-]: GETGLOBAL R43 K25      ; R43 := 0x400E7765
821 [-]: GETGLOBAL R44 K153     ; R44 := locationIconMap
822 [-]: CALL      R43 2 2      ; R43 := R43(R44)
823 [-]: TEST      R43 1        ; if R43 then PC := 840
824 [-]: JMP       840          ; PC := 840
825 [-]: GETGLOBAL R43 K153     ; R43 := locationIconMap
826 [-]: SELF      R43 R43 K154 ; R44 := R43; R43 := R43["0x7FFA0478"]
827 [-]: GETGLOBAL R45 K48      ; R45 := string
828 [-]: GETTABLE  R45 R45 K157 ; R45 := R45["0xBDD0D625"]
829 [-]: GETTABLE  R46 R10 K156 ; R46 := R10["levelOverride"]
830 [-]: SELF      R46 R46 K123 ; R47 := R46; R46 := R46["0x1B252E3C"]
831 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
832 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
833 [-]: GETGLOBAL R46 K103     ; R46 := math
834 [-]: GETTABLE  R46 R46 K128 ; R46 := R46["0x865961F7"]
835 [-]: LOADK     R47 K23      ; R47 := 0
836 [-]: LOADK     R48 K101     ; R48 := 100
837 [-]: CALL      R46 3 0      ; R46,... := R46(R47,R48)
838 [-]: CALL      R43 0 2      ; R43 := R43(R44,...)
839 [-]: MOVE      R37 R43      ; R37 := R43
840 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
841 [-]: SELF      R43 R43 K40  ; R44 := R43; R43 := R43["0x1C19D966"]
842 [-]: LOADK     R45 K150     ; R45 := "InfoTip.LocationPic"
843 [-]: LOADK     R46 K158     ; R46 := "_height"
844 [-]: MOVE      R47 R38      ; R47 := R38
845 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
846 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
847 [-]: SELF      R43 R43 K40  ; R44 := R43; R43 := R43["0x1C19D966"]
848 [-]: LOADK     R45 K150     ; R45 := "InfoTip.LocationPic"
849 [-]: LOADK     R46 K139     ; R46 := "_y"
850 [-]: MOVE      R47 R39      ; R47 := R39
851 [-]: CALL      R43 5 1      ; R43(R44,R45,R46,R47)
852 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
853 [-]: SELF      R43 R43 K130 ; R44 := R43; R43 := R43["0x26581636"]
854 [-]: LOADK     R45 K150     ; R45 := "InfoTip.LocationPic"
855 [-]: MOVE      R46 R37      ; R46 := R37
856 [-]: CALL      R43 4 1      ; R43(R44,R45,R46)
857 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
858 [-]: SELF      R43 R43 K134 ; R44 := R43; R43 := R43["0x7E1F26D7"]
859 [-]: LOADK     R45 K150     ; R45 := "InfoTip.LocationPic"
860 [-]: GETGLOBAL R46 K159     ; R46 := locationPicMaterial
861 [-]: CALL      R43 4 1      ; R43(R44,R45,R46)
862 [-]: LOADK     R43 K160     ; R43 := 16777215
863 [-]: TEST      R15 0        ; if not R15 then PC := 867
864 [-]: JMP       867          ; PC := 867
865 [-]: LOADK     R43 K161     ; R43 := 13382451
866 [-]: JMP       870          ; PC := 870
867 [-]: TEST      R17 0        ; if not R17 then PC := 870
868 [-]: JMP       870          ; PC := 870
869 [-]: LOADK     R43 K162     ; R43 := 16746632
870 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
871 [-]: SELF      R44 R44 K9   ; R45 := R44; R44 := R44["0x880196A7"]
872 [-]: LOADK     R46 K100     ; R46 := "InfoTip"
873 [-]: LOADK     R47 K163     ; R47 := "NemesisOverlay"
874 [-]: LOADK     R48 K132     ; R48 := "_visible"
875 [-]: MOVE      R49 R17      ; R49 := R17
876 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
877 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
878 [-]: SELF      R44 R44 K9   ; R45 := R44; R44 := R44["0x880196A7"]
879 [-]: LOADK     R46 K100     ; R46 := "InfoTip"
880 [-]: LOADK     R47 K164     ; R47 := "LocationPic"
881 [-]: LOADK     R48 K11      ; R48 := "_color"
882 [-]: MOVE      R49 R43      ; R49 := R43
883 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
884 [-]: GETGLOBAL R44 K1       ; R44 := mMovie
885 [-]: SELF      R44 R44 K9   ; R45 := R44; R44 := R44["0x880196A7"]
886 [-]: LOADK     R46 K100     ; R46 := "InfoTip"
887 [-]: LOADK     R47 K165     ; R47 := "RailjackOverlay"
888 [-]: LOADK     R48 K132     ; R48 := "_visible"
889 [-]: MOVE      R49 R18      ; R49 := R18
890 [-]: CALL      R44 6 1      ; R44(R45,R46,R47,R48,R49)
891 [-]: GETGLOBAL R44 K166     ; R44 := 0x8C64AFA9
892 [-]: GETGLOBAL R45 K1       ; R45 := mMovie
893 [-]: GETTABLE  R46 R4 K10   ; R46 := R4["clipName"]
894 [-]: LOADK     R47 K167     ; R47 := ".swapDepths"
895 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
896 [-]: LOADK     R47 K168     ; R47 := 501
897 [-]: CALL      R44 4 1      ; R44(R45,R46,R47)
898 [-]: GETTABLE  R44 R4 K169  ; R44 := R4["deco"]
899 [-]: EQ        1 R44 K8     ; if R44 == nil then PC := 927
900 [-]: JMP       927          ; PC := 927
901 [-]: GETGLOBAL R44 K25      ; R44 := 0x400E7765
902 [-]: GETTABLE  R45 R4 K169  ; R45 := R4["deco"]
903 [-]: GETTABLE  R45 R45 K170 ; R45 := R45["mInstance"]
904 [-]: CALL      R44 2 2      ; R44 := R44(R45)
905 [-]: TEST      R44 1        ; if R44 then PC := 927
906 [-]: JMP       927          ; PC := 927
907 [-]: GETGLOBAL R44 K19      ; R44 := 0x52E17A90
908 [-]: GETGLOBAL R45 K1       ; R45 := mMovie
909 [-]: GETTABLE  R46 R4 K10   ; R46 := R4["clipName"]
910 [-]: GETGLOBAL R47 K21      ; R47 := UISys
911 [-]: GETTABLE  R47 R47 K171 ; R47 := R47["FlashInstance_EASE_OUT"]
912 [-]: NEWTABLE  R48 1 0      ; R48 := {}
913 [-]: CLOSURE   R49 0        ; R49 := closure(Function #145.1)
914 [-]: MOVE      R0 R4        ; R0 := R4
915 [-]: GETUPVAL  R0 U23       ; R0 := U23
916 [-]: SETLIST   R48 1 1      ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 1
917 [-]: NEWTABLE  R49 1 0      ; R49 := {}
918 [-]: LOADK     R50 K50      ; R50 := 1
919 [-]: SETLIST   R49 1 1      ; R49[(1-1)*FPF+i] := R(49+i), 1 <= i <= 1
920 [-]: GETUPVAL  R50 U9       ; R50 := U9
921 [-]: GETTABLE  R50 R50 K172 ; R50 := R50["0xF81722A2"]
922 [-]: MOVE      R51 R5       ; R51 := R5
923 [-]: LOADK     R52 K173     ; R52 := 0.0010000000474975
924 [-]: LOADK     R53 K102     ; R53 := 0.20000000298023
925 [-]: CALL      R50 4 0      ; R50,... := R50(R51,R52,R53)
926 [-]: CALL      R44 0 1      ; R44(R45,...)
927 [-]: RETURN    R0 1         ; return 


; Function #145.1:
;
; Name:            
; Defined at line: 6887
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
  3 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["deco"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mInstance"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInstance"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6A7E5F92"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["deco"]
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScale"]
 19 [-]: MUL       R4 R0 K6     ; R4 := R0 * 0.5
 20 [-]: ADD       R4 K7 R4     ; R4 := 1 + R4
 21 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["DECO_SCALE_MULTIPLIER"]
 24 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 6898
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        1 R1 R2      ; if R1 <= R2 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  6 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Node"]
 15 [-]: MOVE      R2 R3        ; R2 := R3
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: SETTABLE  R2 K2 K3     ; R2["Node"] := nil
 18 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETUPVAL  R2 U4        ; R2 := U4
 21 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 22 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: GETUPVAL  R2 U4        ; R2 := U4
 25 [-]: GETTABLE  R1 R2 R0     ; R1 := R2[R0]
 26 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 27 [-]: GETUPVAL  R3 U5        ; R3 := U5
 28 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Projector"]
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 1         ; if R2 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETGLOBAL R2 K5        ; R2 := gBackgroundRegion
 33 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x9B0A3887"]
 34 [-]: GETUPVAL  R4 U5        ; R4 := U5
 35 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Projector"]
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 38 [-]: MOVE      R3 R1        ; R3 := R1
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: TEST      R2 1         ; if R2 then PC := 131
 41 [-]: JMP       131          ; PC := 131
 42 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 43 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x1C19D966"]
 44 [-]: GETTABLE  R4 R1 K8     ; R4 := R1["clipName"]
 45 [-]: LOADK     R5 K9        ; R5 := "_color"
 46 [-]: GETGLOBAL R6 K10       ; R6 := _G
 47 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["UIColor_White"]
 48 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 49 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 50 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x445651FB"]
 51 [-]: GETTABLE  R4 R1 K13    ; R4 := R1["labelIndex"]
 52 [-]: LOADK     R5 K14       ; R5 := "_alpha"
 53 [-]: GETUPVAL  R6 U6        ; R6 := U6
 54 [-]: MOVE      R7 R1        ; R7 := R1
 55 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 56 [-]: CALL      R2 0 1       ; R2(R3,...)
 57 [-]: GETTABLE  R2 R1 K15    ; R2 := R1["guildId"]
 58 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: GETTABLE  R2 R1 K16    ; R2 := R1["clanTier"]
 61 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: MOVE      R2 R0        ; R2 := R0
 64 [-]: MOVE      R2 R1        ; R2 := R1
 65 [-]: TEST      R2 0         ; if not R2 then PC := 82
 66 [-]: JMP       82           ; PC := 82
 67 [-]: GETGLOBAL R3 K17       ; R3 := 0x52E17A90
 68 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 69 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["clipName"]
 70 [-]: LOADK     R6 K18       ; R6 := ".Node.Container.Node"
 71 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 72 [-]: GETGLOBAL R6 K19       ; R6 := UISys
 73 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["FlashInstance_LINEAR"]
 74 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 75 [-]: LOADK     R8 K14       ; R8 := "_alpha"
 76 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 77 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 78 [-]: LOADK     R9 K21       ; R9 := 0
 79 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 80 [-]: LOADK     R9 K22       ; R9 := 0.25
 81 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 82 [-]: GETGLOBAL R3 K17       ; R3 := 0x52E17A90
 83 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 84 [-]: LOADK     R5 K23       ; R5 := "InfoTip"
 85 [-]: GETGLOBAL R6 K19       ; R6 := UISys
 86 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["FlashInstance_LINEAR"]
 87 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 88 [-]: LOADK     R8 K14       ; R8 := "_alpha"
 89 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 90 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 91 [-]: LOADK     R9 K21       ; R9 := 0
 92 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 93 [-]: LOADK     R9 K24       ; R9 := 0.050000000745058
 94 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 95 [-]: GETTABLE  R3 R1 K25    ; R3 := R1["deco"]
 96 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 119
 97 [-]: JMP       119          ; PC := 119
 98 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 99 [-]: GETTABLE  R4 R1 K25    ; R4 := R1["deco"]
100 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["mInstance"]
101 [-]: CALL      R3 2 2       ; R3 := R3(R4)
102 [-]: TEST      R3 1         ; if R3 then PC := 119
103 [-]: JMP       119          ; PC := 119
104 [-]: GETGLOBAL R3 K17       ; R3 := 0x52E17A90
105 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
106 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["clipName"]
107 [-]: GETGLOBAL R6 K19       ; R6 := UISys
108 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["FlashInstance_EASE_OUT"]
109 [-]: NEWTABLE  R7 1 0       ; R7 := {}
110 [-]: CLOSURE   R8 0         ; R8 := closure(Function #146.1)
111 [-]: MOVE      R0 R1        ; R0 := R1
112 [-]: GETUPVAL  R0 U7        ; R0 := U7
113 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
114 [-]: NEWTABLE  R8 1 0       ; R8 := {}
115 [-]: LOADK     R9 K28       ; R9 := 1
116 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
117 [-]: LOADK     R9 K29       ; R9 := 0.20000000298023
118 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
119 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
120 [-]: GETUPVAL  R4 U8        ; R4 := U8
121 [-]: CALL      R3 2 2       ; R3 := R3(R4)
122 [-]: TEST      R3 1         ; if R3 then PC := 131
123 [-]: JMP       131          ; PC := 131
124 [-]: GETGLOBAL R3 K30       ; R3 := _T
125 [-]: SETTABLE  R3 K31 K3    ; R3["JunctionTasksUIRadialSector"] := nil
126 [-]: GETUPVAL  R3 U8        ; R3 := U8
127 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3["0xA58BB96C"]
128 [-]: CALL      R3 2 1       ; R3(R4)
129 [-]: LOADNIL   R3 R3        ; R3 := nil
130 [-]: MOVE      R3 R8        ; R3 := R8
131 [-]: RETURN    R0 1         ; return 


; Function #146.1:
;
; Name:            
; Defined at line: 6928
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
  3 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["deco"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mInstance"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInstance"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6A7E5F92"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["deco"]
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScale"]
 19 [-]: MUL       R4 R0 K6     ; R4 := R0 * 0.5
 20 [-]: SUB       R4 K7 R4     ; R4 := 1.5 - R4
 21 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["DECO_SCALE_MULTIPLIER"]
 24 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 6943
; #Upvalues:       28
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["DioOpen"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K1        ; R0 := 0xF595ADDE
 10 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x6B7B470B"]
 12 [-]: LOADK     R3 K4        ; R3 := "_root"
 13 [-]: LOADK     R4 K5        ; R4 := "_xmouse"
 14 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 15 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 16 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
 17 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 18 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x6B7B470B"]
 19 [-]: LOADK     R4 K4        ; R4 := "_root"
 20 [-]: LOADK     R5 K6        ; R5 := "_ymouse"
 21 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 22 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 23 [-]: LE        0 R0 K7      ; if R0 > -1000 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: LE        0 R1 K7      ; if R1 > -1000 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R2 K8        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["MouseInWorldStateWindow"]
 30 [-]: TEST      R2 1         ; if R2 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R2 K8        ; R2 := _T
 33 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["MouseInChatArea"]
 34 [-]: TEST      R2 0         ; if not R2 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R2 K8        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AcceptInvitePanel"]
 39 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 50
 40 [-]: JMP       50           ; PC := 50
 41 [-]: GETGLOBAL R2 K8        ; R2 := _T
 42 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AcceptInvitePanel"]
 43 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x458F27A9"]
 44 [-]: LOADK     R4 K14       ; R4 := "HasFocus"
 45 [-]: LOADK     R5 K15       ; R5 := ""
 46 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 47 [-]: TEST      R2 0         ; if not R2 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: RETURN    R0 1         ; return 
 50 [-]: GETGLOBAL R2 K8        ; R2 := _T
 51 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["TopMenuOpen"]
 52 [-]: TEST      R2 0         ; if not R2 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: RETURN    R0 1         ; return 
 55 [-]: GETGLOBAL R2 K17       ; R2 := gGameConfig
 56 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x89E53943"]
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 1         ; if R2 then PC := 67
 59 [-]: JMP       67           ; PC := 67
 60 [-]: GETUPVAL  R2 U2        ; R2 := U2
 61 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["Active"]
 62 [-]: TEST      R2 0         ; if not R2 then PC := 127
 63 [-]: JMP       127          ; PC := 127
 64 [-]: GETGLOBAL R2 K20       ; R2 := gPromotedToHost
 65 [-]: TEST      R2 0         ; if not R2 then PC := 127
 66 [-]: JMP       127          ; PC := 127
 67 [-]: GETUPVAL  R2 U2        ; R2 := U2
 68 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["Active"]
 69 [-]: TEST      R2 0         ; if not R2 then PC := 102
 70 [-]: JMP       102          ; PC := 102
 71 [-]: GETUPVAL  R2 U3        ; R2 := U3
 72 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Region"]
 73 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 83
 74 [-]: JMP       83           ; PC := 83
 75 [-]: GETUPVAL  R2 U3        ; R2 := U3
 76 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["Region"]
 77 [-]: GETUPVAL  R3 U4        ; R3 := U4
 78 [-]: GETGLOBAL R4 K8        ; R4 := _T
 79 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["REGION_ID_DOJO"]
 80 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 81 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 101
 82 [-]: JMP       101          ; PC := 101
 83 [-]: GETUPVAL  R2 U3        ; R2 := U3
 84 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["Node"]
 85 [-]: TEST      R2 0         ; if not R2 then PC := 102
 86 [-]: JMP       102          ; PC := 102
 87 [-]: GETUPVAL  R2 U3        ; R2 := U3
 88 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["Node"]
 89 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["radialSector"]
 90 [-]: TEST      R2 0         ; if not R2 then PC := 102
 91 [-]: JMP       102          ; PC := 102
 92 [-]: GETUPVAL  R2 U3        ; R2 := U3
 93 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["Node"]
 94 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["radialSector"]
 95 [-]: GETTABLE  R2 R2 K25    ; R2 := R2["region"]
 96 [-]: GETGLOBAL R3 K8        ; R3 := _T
 97 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["REGION_ID_DOJO"]
 98 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 101
 99 [-]: JMP       101          ; PC := 101
100 [-]: MOVE      R2 R0        ; R2 := R0
101 [-]: MOVE      R2 R1        ; R2 := R1
102 [-]: TEST      R2 1         ; if R2 then PC := 127
103 [-]: JMP       127          ; PC := 127
104 [-]: LOADNIL   R3 R3        ; R3 := nil
105 [-]: GETUPVAL  R4 U2        ; R4 := U2
106 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["Active"]
107 [-]: TEST      R4 0         ; if not R4 then PC := 117
108 [-]: JMP       117          ; PC := 117
109 [-]: GETUPVAL  R4 U5        ; R4 := U5
110 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["0xF81722A2"]
111 [-]: GETGLOBAL R5 K20       ; R5 := gPromotedToHost
112 [-]: LOADK     R6 K27       ; R6 := "/Lotus/Language/Menu/HostMigrationMissionsBlocked"
113 [-]: LOADK     R7 K28       ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlockedRailjack"
114 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
115 [-]: MOVE      R3 R4        ; R3 := R4
116 [-]: JMP       118          ; PC := 118
117 [-]: LOADK     R3 K29       ; R3 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
118 [-]: GETUPVAL  R4 U5        ; R4 := U5
119 [-]: GETTABLE  R4 R4 K30    ; R4 := R4["0xB11F032"]
120 [-]: GETGLOBAL R5 K2        ; R5 := mMovie
121 [-]: SELF      R5 R5 K31    ; R6 := R5; R5 := R5["0x5DB0BD4"]
122 [-]: MOVE      R7 R3        ; R7 := R3
123 [-]: MOVE      R8 R0        ; R8 := R0
124 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
125 [-]: CALL      R4 0 1       ; R4(R5,...)
126 [-]: RETURN    R0 1         ; return 
127 [-]: GETGLOBAL R4 K32       ; R4 := Engine
128 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["0x9490FE70"]
129 [-]: CALL      R4 1 2       ; R4 := R4()
130 [-]: TEST      R4 0         ; if not R4 then PC := 147
131 [-]: JMP       147          ; PC := 147
132 [-]: GETGLOBAL R4 K34       ; R4 := 0x400E7765
133 [-]: GETGLOBAL R5 K8        ; R5 := _T
134 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["SquadOverlay"]
135 [-]: CALL      R4 2 2       ; R4 := R4(R5)
136 [-]: TEST      R4 1         ; if R4 then PC := 147
137 [-]: JMP       147          ; PC := 147
138 [-]: GETGLOBAL R4 K8        ; R4 := _T
139 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["SquadOverlay"]
140 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x458F27A9"]
141 [-]: LOADK     R6 K36       ; R6 := "MatchmakingFocused"
142 [-]: LOADK     R7 K15       ; R7 := ""
143 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
144 [-]: TEST      R4 0         ; if not R4 then PC := 147
145 [-]: JMP       147          ; PC := 147
146 [-]: RETURN    R0 1         ; return 
147 [-]: GETUPVAL  R4 U6        ; R4 := U6
148 [-]: GETUPVAL  R5 U7        ; R5 := U7
149 [-]: GETTABLE  R5 R5 K37    ; R5 := R5["EDIT_REGIONS"]
150 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 221
151 [-]: JMP       221          ; PC := 221
152 [-]: GETGLOBAL R4 K34       ; R4 := 0x400E7765
153 [-]: GETUPVAL  R5 U3        ; R5 := U3
154 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["Region"]
155 [-]: CALL      R4 2 2       ; R4 := R4(R5)
156 [-]: TEST      R4 1         ; if R4 then PC := 221
157 [-]: JMP       221          ; PC := 221
158 [-]: GETUPVAL  R4 U8        ; R4 := U8
159 [-]: GETUPVAL  R5 U3        ; R5 := U3
160 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["Region"]
161 [-]: SETTABLE  R4 K38 R5    ; R4["mMovingRegion"] := R5
162 [-]: GETUPVAL  R4 U8        ; R4 := U8
163 [-]: GETUPVAL  R5 U3        ; R5 := U3
164 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["Region"]
165 [-]: GETTABLE  R5 R5 K40    ; R5 := R5["instance"]
166 [-]: SELF      R5 R5 K41    ; R6 := R5; R5 := R5["0x6DA72501"]
167 [-]: CALL      R5 2 2       ; R5 := R5(R6)
168 [-]: SETTABLE  R4 K39 R5    ; R4["mInitialPosition"] := R5
169 [-]: GETUPVAL  R4 U8        ; R4 := U8
170 [-]: GETUPVAL  R5 U9        ; R5 := U9
171 [-]: CALL      R5 1 2       ; R5 := R5()
172 [-]: SETTABLE  R4 K42 R5    ; R4["mInitialWorldCursor"] := R5
173 [-]: LOADNIL   R4 R4        ; R4 := nil
174 [-]: GETGLOBAL R5 K43       ; R5 := 0x63B09107
175 [-]: GETUPVAL  R6 U4        ; R6 := U4
176 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
177 [-]: JMP       184          ; PC := 184
178 [-]: GETUPVAL  R10 U3       ; R10 := U3
179 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["Region"]
180 [-]: EQ        0 R10 R9     ; if R10 ~= R9 then PC := 184
181 [-]: JMP       184          ; PC := 184
182 [-]: SUB       R4 R8 K44    ; R4 := R8 - 1
183 [-]: JMP       186          ; PC := 186
184 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 178; R7 := R8 end
185 [-]: JMP       178          ; PC := 178
186 [-]: GETGLOBAL R10 K34      ; R10 := 0x400E7765
187 [-]: MOVE      R11 R4       ; R11 := R4
188 [-]: CALL      R10 2 2      ; R10 := R10(R11)
189 [-]: TEST      R10 1        ; if R10 then PC := 643
190 [-]: JMP       643          ; PC := 643
191 [-]: GETUPVAL  R10 U8       ; R10 := U8
192 [-]: NEWTABLE  R11 0 0      ; R11 := {}
193 [-]: SETTABLE  R10 K45 R11  ; R10["mChildNodes"] := R11
194 [-]: GETGLOBAL R10 K43      ; R10 := 0x63B09107
195 [-]: GETUPVAL  R11 U10      ; R11 := U10
196 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
197 [-]: JMP       218          ; PC := 218
198 [-]: GETTABLE  R15 R14 K24  ; R15 := R14["radialSector"]
199 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["region"]
200 [-]: EQ        0 R15 R4     ; if R15 ~= R4 then PC := 218
201 [-]: JMP       218          ; PC := 218
202 [-]: GETGLOBAL R15 K46      ; R15 := table
203 [-]: GETTABLE  R15 R15 K47  ; R15 := R15["0xE6450C9D"]
204 [-]: GETUPVAL  R16 U8       ; R16 := U8
205 [-]: GETTABLE  R16 R16 K45  ; R16 := R16["mChildNodes"]
206 [-]: NEWTABLE  R17 0 2      ; R17 := {}
207 [-]: SETTABLE  R17 K48 R13  ; R17["NodeIndex"] := R13
208 [-]: GETGLOBAL R18 K50      ; R18 := 0x221C9700
209 [-]: GETTABLE  R19 R14 K51  ; R19 := R14["position"]
210 [-]: GETTABLE  R19 R19 K52  ; R19 := R19["x"]
211 [-]: GETTABLE  R20 R14 K51  ; R20 := R14["position"]
212 [-]: GETTABLE  R20 R20 K53  ; R20 := R20["y"]
213 [-]: GETTABLE  R21 R14 K51  ; R21 := R14["position"]
214 [-]: GETTABLE  R21 R21 K54  ; R21 := R21["z"]
215 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
216 [-]: SETTABLE  R17 K49 R18  ; R17["InitialPosition"] := R18
217 [-]: CALL      R15 3 1      ; R15(R16,R17)
218 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 198; R12 := R13 end
219 [-]: JMP       198          ; PC := 198
220 [-]: JMP       643          ; PC := 643
221 [-]: GETUPVAL  R15 U6       ; R15 := U6
222 [-]: GETUPVAL  R16 U7       ; R16 := U7
223 [-]: GETTABLE  R16 R16 K55  ; R16 := R16["EDIT_NODES"]
224 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 261
225 [-]: JMP       261          ; PC := 261
226 [-]: GETGLOBAL R15 K34      ; R15 := 0x400E7765
227 [-]: GETUPVAL  R16 U3       ; R16 := U3
228 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Node"]
229 [-]: CALL      R15 2 2      ; R15 := R15(R16)
230 [-]: TEST      R15 1        ; if R15 then PC := 261
231 [-]: JMP       261          ; PC := 261
232 [-]: GETUPVAL  R15 U8       ; R15 := U8
233 [-]: GETUPVAL  R16 U3       ; R16 := U3
234 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Node"]
235 [-]: SETTABLE  R15 K56 R16  ; R15["mMovingNode"] := R16
236 [-]: GETUPVAL  R15 U8       ; R15 := U8
237 [-]: GETGLOBAL R16 K50      ; R16 := 0x221C9700
238 [-]: GETUPVAL  R17 U3       ; R17 := U3
239 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["Node"]
240 [-]: GETTABLE  R17 R17 K51  ; R17 := R17["position"]
241 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["x"]
242 [-]: GETUPVAL  R18 U3       ; R18 := U3
243 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["Node"]
244 [-]: GETTABLE  R18 R18 K51  ; R18 := R18["position"]
245 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["y"]
246 [-]: GETUPVAL  R19 U3       ; R19 := U3
247 [-]: GETTABLE  R19 R19 K23  ; R19 := R19["Node"]
248 [-]: GETTABLE  R19 R19 K51  ; R19 := R19["position"]
249 [-]: GETTABLE  R19 R19 K54  ; R19 := R19["z"]
250 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
251 [-]: SETTABLE  R15 K39 R16  ; R15["mInitialPosition"] := R16
252 [-]: GETUPVAL  R15 U8       ; R15 := U8
253 [-]: GETUPVAL  R16 U9       ; R16 := U9
254 [-]: CALL      R16 1 2      ; R16 := R16()
255 [-]: SETTABLE  R15 K42 R16  ; R15["mInitialWorldCursor"] := R16
256 [-]: GETUPVAL  R15 U8       ; R15 := U8
257 [-]: GETUPVAL  R16 U11      ; R16 := U11
258 [-]: CALL      R16 1 2      ; R16 := R16()
259 [-]: SETTABLE  R15 K57 R16  ; R15["mInitialMousePosition"] := R16
260 [-]: JMP       643          ; PC := 643
261 [-]: GETUPVAL  R15 U6       ; R15 := U6
262 [-]: GETUPVAL  R16 U7       ; R16 := U7
263 [-]: GETTABLE  R16 R16 K58  ; R16 := R16["EDIT_EDGES"]
264 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 340
265 [-]: JMP       340          ; PC := 340
266 [-]: GETGLOBAL R15 K34      ; R15 := 0x400E7765
267 [-]: GETUPVAL  R16 U3       ; R16 := U3
268 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Node"]
269 [-]: CALL      R15 2 2      ; R15 := R15(R16)
270 [-]: TEST      R15 0        ; if not R15 then PC := 277
271 [-]: JMP       277          ; PC := 277
272 [-]: GETUPVAL  R15 U8       ; R15 := U8
273 [-]: SETTABLE  R15 K59 K12  ; R15["mEdgeNode1"] := nil
274 [-]: GETUPVAL  R15 U8       ; R15 := U8
275 [-]: SETTABLE  R15 K60 K12  ; R15["mEdgeNode2"] := nil
276 [-]: JMP       332          ; PC := 332
277 [-]: GETGLOBAL R15 K34      ; R15 := 0x400E7765
278 [-]: GETUPVAL  R16 U8       ; R16 := U8
279 [-]: GETTABLE  R16 R16 K59  ; R16 := R16["mEdgeNode1"]
280 [-]: CALL      R15 2 2      ; R15 := R15(R16)
281 [-]: TEST      R15 1        ; if R15 then PC := 291
282 [-]: JMP       291          ; PC := 291
283 [-]: GETUPVAL  R15 U12      ; R15 := U12
284 [-]: GETTABLE  R15 R15 K61  ; R15 := R15["mControlDown"]
285 [-]: TEST      R15 1        ; if R15 then PC := 296
286 [-]: JMP       296          ; PC := 296
287 [-]: GETUPVAL  R15 U12      ; R15 := U12
288 [-]: GETTABLE  R15 R15 K62  ; R15 := R15["mShiftDown"]
289 [-]: TEST      R15 1        ; if R15 then PC := 296
290 [-]: JMP       296          ; PC := 296
291 [-]: GETUPVAL  R15 U8       ; R15 := U8
292 [-]: GETUPVAL  R16 U3       ; R16 := U3
293 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Node"]
294 [-]: SETTABLE  R15 K59 R16  ; R15["mEdgeNode1"] := R16
295 [-]: JMP       308          ; PC := 308
296 [-]: GETUPVAL  R15 U3       ; R15 := U3
297 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["Node"]
298 [-]: GETTABLE  R15 R15 K63  ; R15 := R15["name"]
299 [-]: GETUPVAL  R16 U8       ; R16 := U8
300 [-]: GETTABLE  R16 R16 K59  ; R16 := R16["mEdgeNode1"]
301 [-]: GETTABLE  R16 R16 K63  ; R16 := R16["name"]
302 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 308
303 [-]: JMP       308          ; PC := 308
304 [-]: GETUPVAL  R15 U8       ; R15 := U8
305 [-]: GETUPVAL  R16 U3       ; R16 := U3
306 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Node"]
307 [-]: SETTABLE  R15 K60 R16  ; R15["mEdgeNode2"] := R16
308 [-]: GETUPVAL  R15 U8       ; R15 := U8
309 [-]: GETGLOBAL R16 K50      ; R16 := 0x221C9700
310 [-]: GETUPVAL  R17 U3       ; R17 := U3
311 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["Node"]
312 [-]: GETTABLE  R17 R17 K51  ; R17 := R17["position"]
313 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["x"]
314 [-]: GETUPVAL  R18 U3       ; R18 := U3
315 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["Node"]
316 [-]: GETTABLE  R18 R18 K51  ; R18 := R18["position"]
317 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["y"]
318 [-]: GETUPVAL  R19 U3       ; R19 := U3
319 [-]: GETTABLE  R19 R19 K23  ; R19 := R19["Node"]
320 [-]: GETTABLE  R19 R19 K51  ; R19 := R19["position"]
321 [-]: GETTABLE  R19 R19 K54  ; R19 := R19["z"]
322 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
323 [-]: SETTABLE  R15 K39 R16  ; R15["mInitialPosition"] := R16
324 [-]: GETUPVAL  R15 U8       ; R15 := U8
325 [-]: GETUPVAL  R16 U9       ; R16 := U9
326 [-]: CALL      R16 1 2      ; R16 := R16()
327 [-]: SETTABLE  R15 K42 R16  ; R15["mInitialWorldCursor"] := R16
328 [-]: GETUPVAL  R15 U8       ; R15 := U8
329 [-]: GETUPVAL  R16 U11      ; R16 := U11
330 [-]: CALL      R16 1 2      ; R16 := R16()
331 [-]: SETTABLE  R15 K57 R16  ; R15["mInitialMousePosition"] := R16
332 [-]: GETGLOBAL R15 K2       ; R15 := mMovie
333 [-]: SELF      R15 R15 K64  ; R16 := R15; R15 := R15["0x1C19D966"]
334 [-]: LOADK     R17 K65      ; R17 := "ScreenModeLabel"
335 [-]: LOADK     R18 K66      ; R18 := "text"
336 [-]: GETUPVAL  R19 U13      ; R19 := U13
337 [-]: CALL      R19 1 0      ; R19,... := R19()
338 [-]: CALL      R15 0 1      ; R15(R16,...)
339 [-]: JMP       643          ; PC := 643
340 [-]: GETUPVAL  R15 U6       ; R15 := U6
341 [-]: GETUPVAL  R16 U7       ; R16 := U7
342 [-]: GETTABLE  R16 R16 K67  ; R16 := R16["EDIT_NODE_DECOS"]
343 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 452
344 [-]: JMP       452          ; PC := 452
345 [-]: GETGLOBAL R15 K34      ; R15 := 0x400E7765
346 [-]: GETUPVAL  R16 U3       ; R16 := U3
347 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Node"]
348 [-]: CALL      R15 2 2      ; R15 := R15(R16)
349 [-]: TEST      R15 1        ; if R15 then PC := 452
350 [-]: JMP       452          ; PC := 452
351 [-]: GETUPVAL  R15 U3       ; R15 := U3
352 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["Node"]
353 [-]: GETTABLE  R15 R15 K68  ; R15 := R15["deco"]
354 [-]: EQ        1 R15 K12    ; if R15 == nil then PC := 364
355 [-]: JMP       364          ; PC := 364
356 [-]: GETGLOBAL R15 K34      ; R15 := 0x400E7765
357 [-]: GETUPVAL  R16 U3       ; R16 := U3
358 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Node"]
359 [-]: GETTABLE  R16 R16 K68  ; R16 := R16["deco"]
360 [-]: GETTABLE  R16 R16 K69  ; R16 := R16["mInstance"]
361 [-]: CALL      R15 2 2      ; R15 := R15(R16)
362 [-]: TEST      R15 0        ; if not R15 then PC := 365
363 [-]: JMP       365          ; PC := 365
364 [-]: RETURN    R0 1         ; return 
365 [-]: GETUPVAL  R15 U8       ; R15 := U8
366 [-]: GETUPVAL  R16 U3       ; R16 := U3
367 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Node"]
368 [-]: SETTABLE  R15 K56 R16  ; R15["mMovingNode"] := R16
369 [-]: GETUPVAL  R15 U8       ; R15 := U8
370 [-]: SETTABLE  R15 K70 K71  ; R15["mEditingOffset"] := "0x0"
371 [-]: GETUPVAL  R15 U8       ; R15 := U8
372 [-]: SETTABLE  R15 K72 K71  ; R15["mEditingRotation"] := "0x0"
373 [-]: GETUPVAL  R15 U8       ; R15 := U8
374 [-]: SETTABLE  R15 K73 K71  ; R15["mEditingScale"] := "0x0"
375 [-]: GETUPVAL  R15 U12      ; R15 := U12
376 [-]: GETTABLE  R15 R15 K74  ; R15 := R15["mAltDown"]
377 [-]: TEST      R15 0        ; if not R15 then PC := 392
378 [-]: JMP       392          ; PC := 392
379 [-]: GETUPVAL  R15 U8       ; R15 := U8
380 [-]: GETUPVAL  R16 U3       ; R16 := U3
381 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Node"]
382 [-]: GETTABLE  R16 R16 K68  ; R16 := R16["deco"]
383 [-]: GETTABLE  R16 R16 K76  ; R16 := R16["mScale"]
384 [-]: SETTABLE  R15 K75 R16  ; R15["mInitialScale"] := R16
385 [-]: GETUPVAL  R15 U8       ; R15 := U8
386 [-]: GETUPVAL  R16 U11      ; R16 := U11
387 [-]: CALL      R16 1 2      ; R16 := R16()
388 [-]: SETTABLE  R15 K57 R16  ; R15["mInitialMousePosition"] := R16
389 [-]: GETUPVAL  R15 U8       ; R15 := U8
390 [-]: SETTABLE  R15 K73 K77  ; R15["mEditingScale"] := "0x1"
391 [-]: JMP       447          ; PC := 447
392 [-]: GETUPVAL  R15 U12      ; R15 := U12
393 [-]: GETTABLE  R15 R15 K62  ; R15 := R15["mShiftDown"]
394 [-]: TEST      R15 1        ; if R15 then PC := 400
395 [-]: JMP       400          ; PC := 400
396 [-]: GETUPVAL  R15 U12      ; R15 := U12
397 [-]: GETTABLE  R15 R15 K61  ; R15 := R15["mControlDown"]
398 [-]: TEST      R15 0        ; if not R15 then PC := 426
399 [-]: JMP       426          ; PC := 426
400 [-]: GETUPVAL  R15 U8       ; R15 := U8
401 [-]: GETGLOBAL R16 K79      ; R16 := 0x1E4F6281
402 [-]: GETUPVAL  R17 U3       ; R17 := U3
403 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["Node"]
404 [-]: GETTABLE  R17 R17 K68  ; R17 := R17["deco"]
405 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["mRotation"]
406 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["heading"]
407 [-]: GETUPVAL  R18 U3       ; R18 := U3
408 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["Node"]
409 [-]: GETTABLE  R18 R18 K68  ; R18 := R18["deco"]
410 [-]: GETTABLE  R18 R18 K80  ; R18 := R18["mRotation"]
411 [-]: GETTABLE  R18 R18 K82  ; R18 := R18["pitch"]
412 [-]: GETUPVAL  R19 U3       ; R19 := U3
413 [-]: GETTABLE  R19 R19 K23  ; R19 := R19["Node"]
414 [-]: GETTABLE  R19 R19 K68  ; R19 := R19["deco"]
415 [-]: GETTABLE  R19 R19 K80  ; R19 := R19["mRotation"]
416 [-]: GETTABLE  R19 R19 K83  ; R19 := R19["bank"]
417 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
418 [-]: SETTABLE  R15 K78 R16  ; R15["mInitialRotation"] := R16
419 [-]: GETUPVAL  R15 U8       ; R15 := U8
420 [-]: GETUPVAL  R16 U11      ; R16 := U11
421 [-]: CALL      R16 1 2      ; R16 := R16()
422 [-]: SETTABLE  R15 K57 R16  ; R15["mInitialMousePosition"] := R16
423 [-]: GETUPVAL  R15 U8       ; R15 := U8
424 [-]: SETTABLE  R15 K72 K77  ; R15["mEditingRotation"] := "0x1"
425 [-]: JMP       447          ; PC := 447
426 [-]: GETUPVAL  R15 U8       ; R15 := U8
427 [-]: GETGLOBAL R16 K50      ; R16 := 0x221C9700
428 [-]: GETUPVAL  R17 U3       ; R17 := U3
429 [-]: GETTABLE  R17 R17 K23  ; R17 := R17["Node"]
430 [-]: GETTABLE  R17 R17 K68  ; R17 := R17["deco"]
431 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["mOffset"]
432 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["x"]
433 [-]: GETUPVAL  R18 U3       ; R18 := U3
434 [-]: GETTABLE  R18 R18 K23  ; R18 := R18["Node"]
435 [-]: GETTABLE  R18 R18 K68  ; R18 := R18["deco"]
436 [-]: GETTABLE  R18 R18 K84  ; R18 := R18["mOffset"]
437 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["y"]
438 [-]: GETUPVAL  R19 U3       ; R19 := U3
439 [-]: GETTABLE  R19 R19 K23  ; R19 := R19["Node"]
440 [-]: GETTABLE  R19 R19 K68  ; R19 := R19["deco"]
441 [-]: GETTABLE  R19 R19 K84  ; R19 := R19["mOffset"]
442 [-]: GETTABLE  R19 R19 K54  ; R19 := R19["z"]
443 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
444 [-]: SETTABLE  R15 K39 R16  ; R15["mInitialPosition"] := R16
445 [-]: GETUPVAL  R15 U8       ; R15 := U8
446 [-]: SETTABLE  R15 K70 K77  ; R15["mEditingOffset"] := "0x1"
447 [-]: GETUPVAL  R15 U8       ; R15 := U8
448 [-]: GETUPVAL  R16 U9       ; R16 := U9
449 [-]: CALL      R16 1 2      ; R16 := R16()
450 [-]: SETTABLE  R15 K42 R16  ; R15["mInitialWorldCursor"] := R16
451 [-]: JMP       643          ; PC := 643
452 [-]: GETUPVAL  R15 U6       ; R15 := U6
453 [-]: GETUPVAL  R16 U7       ; R16 := U7
454 [-]: GETTABLE  R16 R16 K85  ; R16 := R16["EDIT_REGION_FRAMING"]
455 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 461
456 [-]: JMP       461          ; PC := 461
457 [-]: GETUPVAL  R15 U14      ; R15 := U14
458 [-]: SELF      R15 R15 K86  ; R16 := R15; R15 := R15["0x3AEEE6C2"]
459 [-]: CALL      R15 2 1      ; R15(R16)
460 [-]: JMP       643          ; PC := 643
461 [-]: GETUPVAL  R15 U6       ; R15 := U6
462 [-]: GETUPVAL  R16 U7       ; R16 := U7
463 [-]: GETTABLE  R16 R16 K87  ; R16 := R16["EDIT_SHORTCUT_CONTROL_POINTS"]
464 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 495
465 [-]: JMP       495          ; PC := 495
466 [-]: GETGLOBAL R15 K34      ; R15 := 0x400E7765
467 [-]: GETUPVAL  R16 U8       ; R16 := U8
468 [-]: GETTABLE  R16 R16 K88  ; R16 := R16["mMovingControlPoint"]
469 [-]: CALL      R15 2 2      ; R15 := R15(R16)
470 [-]: TEST      R15 1        ; if R15 then PC := 495
471 [-]: JMP       495          ; PC := 495
472 [-]: GETUPVAL  R15 U8       ; R15 := U8
473 [-]: SETTABLE  R15 K89 K77  ; R15["mControlPointHeld"] := "0x1"
474 [-]: GETUPVAL  R15 U8       ; R15 := U8
475 [-]: GETUPVAL  R16 U9       ; R16 := U9
476 [-]: CALL      R16 1 2      ; R16 := R16()
477 [-]: SETTABLE  R15 K42 R16  ; R15["mInitialWorldCursor"] := R16
478 [-]: GETUPVAL  R15 U8       ; R15 := U8
479 [-]: GETGLOBAL R16 K50      ; R16 := 0x221C9700
480 [-]: GETUPVAL  R17 U8       ; R17 := U8
481 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["mMovingControlPoint"]
482 [-]: GETTABLE  R17 R17 K51  ; R17 := R17["position"]
483 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["x"]
484 [-]: GETUPVAL  R18 U8       ; R18 := U8
485 [-]: GETTABLE  R18 R18 K88  ; R18 := R18["mMovingControlPoint"]
486 [-]: GETTABLE  R18 R18 K51  ; R18 := R18["position"]
487 [-]: GETTABLE  R18 R18 K53  ; R18 := R18["y"]
488 [-]: GETUPVAL  R19 U8       ; R19 := U8
489 [-]: GETTABLE  R19 R19 K88  ; R19 := R19["mMovingControlPoint"]
490 [-]: GETTABLE  R19 R19 K51  ; R19 := R19["position"]
491 [-]: GETTABLE  R19 R19 K54  ; R19 := R19["z"]
492 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
493 [-]: SETTABLE  R15 K39 R16  ; R15["mInitialPosition"] := R16
494 [-]: JMP       643          ; PC := 643
495 [-]: GETUPVAL  R15 U15      ; R15 := U15
496 [-]: TEST      R15 0        ; if not R15 then PC := 607
497 [-]: JMP       607          ; PC := 607
498 [-]: GETUPVAL  R15 U16      ; R15 := U16
499 [-]: GETUPVAL  R16 U15      ; R16 := U15
500 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
501 [-]: TEST      R15 0        ; if not R15 then PC := 643
502 [-]: JMP       643          ; PC := 643
503 [-]: GETUPVAL  R15 U12      ; R15 := U12
504 [-]: GETTABLE  R15 R15 K62  ; R15 := R15["mShiftDown"]
505 [-]: TEST      R15 0        ; if not R15 then PC := 574
506 [-]: JMP       574          ; PC := 574
507 [-]: GETUPVAL  R15 U16      ; R15 := U16
508 [-]: GETUPVAL  R16 U17      ; R16 := U17
509 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
510 [-]: TEST      R15 0        ; if not R15 then PC := 643
511 [-]: JMP       643          ; PC := 643
512 [-]: GETUPVAL  R15 U9       ; R15 := U9
513 [-]: CALL      R15 1 2      ; R15 := R15()
514 [-]: GETUPVAL  R16 U16      ; R16 := U16
515 [-]: GETUPVAL  R17 U15      ; R17 := U15
516 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
517 [-]: SELF      R16 R16 K90  ; R17 := R16; R16 := R16["0x27D983EC"]
518 [-]: MOVE      R18 R15      ; R18 := R15
519 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
520 [-]: GETUPVAL  R17 U16      ; R17 := U16
521 [-]: GETUPVAL  R18 U15      ; R18 := U15
522 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
523 [-]: SELF      R17 R17 K91  ; R18 := R17; R17 := R17["0x178C31B9"]
524 [-]: CALL      R17 2 2      ; R17 := R17(R18)
525 [-]: GETUPVAL  R18 U18      ; R18 := U18
526 [-]: MOVE      R19 R17      ; R19 := R17
527 [-]: MOVE      R20 R16      ; R20 := R16
528 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
529 [-]: GETUPVAL  R19 U19      ; R19 := U19
530 [-]: EQ        0 R19 K12    ; if R19 ~= nil then PC := 534
531 [-]: JMP       534          ; PC := 534
532 [-]: MOVE      R18 R19      ; R18 := R19
533 [-]: JMP       643          ; PC := 643
534 [-]: GETUPVAL  R19 U19      ; R19 := U19
535 [-]: MOVE      R20 R18      ; R20 := R18
536 [-]: GETUPVAL  R21 U16      ; R21 := U16
537 [-]: GETUPVAL  R22 U17      ; R22 := U17
538 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
539 [-]: SELF      R21 R21 K91  ; R22 := R21; R21 := R21["0x178C31B9"]
540 [-]: CALL      R21 2 2      ; R21 := R21(R22)
541 [-]: LOADK     R22 K44      ; R22 := 1
542 [-]: LEN       R23 R21      ; R23 := # R21
543 [-]: LOADK     R24 K44      ; R24 := 1
544 [-]: FORPREP   R22 559      ; R22 -= R24; PC := 559
545 [-]: GETUPVAL  R26 U16      ; R26 := U16
546 [-]: GETUPVAL  R27 U17      ; R27 := U17
547 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
548 [-]: SELF      R26 R26 K92  ; R27 := R26; R26 := R26["0x96C67B0"]
549 [-]: GETTABLE  R28 R21 R25  ; R28 := R21[R25]
550 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
551 [-]: SETTABLE  R21 R25 R26  ; R21[R25] := R26
552 [-]: GETUPVAL  R26 U16      ; R26 := U16
553 [-]: GETUPVAL  R27 U15      ; R27 := U15
554 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
555 [-]: SELF      R26 R26 K90  ; R27 := R26; R26 := R26["0x27D983EC"]
556 [-]: GETTABLE  R28 R21 R25  ; R28 := R21[R25]
557 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
558 [-]: SETTABLE  R21 R25 R26  ; R21[R25] := R26
559 [-]: FORLOOP   R22 545      ; R22 += R24; if R22 <= R23 then begin PC := 545; R25 := R22 end
560 [-]: GETUPVAL  R26 U16      ; R26 := U16
561 [-]: GETUPVAL  R27 U15      ; R27 := U15
562 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
563 [-]: SELF      R26 R26 K93  ; R27 := R26; R26 := R26["0x75123FC4"]
564 [-]: MOVE      R28 R19      ; R28 := R19
565 [-]: MOVE      R29 R20      ; R29 := R20
566 [-]: MOVE      R30 R21      ; R30 := R21
567 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
568 [-]: GETUPVAL  R26 U16      ; R26 := U16
569 [-]: GETUPVAL  R27 U15      ; R27 := U15
570 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
571 [-]: SELF      R26 R26 K94  ; R27 := R26; R26 := R26["0x1E436B2A"]
572 [-]: CALL      R26 2 1      ; R26(R27)
573 [-]: JMP       643          ; PC := 643
574 [-]: GETUPVAL  R26 U12      ; R26 := U12
575 [-]: GETTABLE  R26 R26 K74  ; R26 := R26["mAltDown"]
576 [-]: TEST      R26 0        ; if not R26 then PC := 590
577 [-]: JMP       590          ; PC := 590
578 [-]: GETUPVAL  R26 U16      ; R26 := U16
579 [-]: GETUPVAL  R27 U15      ; R27 := U15
580 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
581 [-]: SELF      R26 R26 K95  ; R27 := R26; R26 := R26["0x5BD03F6B"]
582 [-]: NEWTABLE  R28 0 0      ; R28 := {}
583 [-]: CALL      R26 3 1      ; R26(R27,R28)
584 [-]: GETUPVAL  R26 U16      ; R26 := U16
585 [-]: GETUPVAL  R27 U15      ; R27 := U15
586 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
587 [-]: SELF      R26 R26 K94  ; R27 := R26; R26 := R26["0x1E436B2A"]
588 [-]: CALL      R26 2 1      ; R26(R27)
589 [-]: JMP       643          ; PC := 643
590 [-]: GETUPVAL  R26 U12      ; R26 := U12
591 [-]: GETTABLE  R26 R26 K61  ; R26 := R26["mControlDown"]
592 [-]: TEST      R26 1        ; if R26 then PC := 643
593 [-]: JMP       643          ; PC := 643
594 [-]: GETUPVAL  R26 U16      ; R26 := U16
595 [-]: GETUPVAL  R27 U15      ; R27 := U15
596 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
597 [-]: SELF      R26 R26 K96  ; R27 := R26; R26 := R26["0xD856231D"]
598 [-]: GETUPVAL  R28 U9       ; R28 := U9
599 [-]: CALL      R28 1 0      ; R28,... := R28()
600 [-]: CALL      R26 0 1      ; R26(R27,...)
601 [-]: GETUPVAL  R26 U16      ; R26 := U16
602 [-]: GETUPVAL  R27 U15      ; R27 := U15
603 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
604 [-]: SELF      R26 R26 K94  ; R27 := R26; R26 := R26["0x1E436B2A"]
605 [-]: CALL      R26 2 1      ; R26(R27)
606 [-]: JMP       643          ; PC := 643
607 [-]: GETUPVAL  R26 U3       ; R26 := U3
608 [-]: GETTABLE  R26 R26 K23  ; R26 := R26["Node"]
609 [-]: TEST      R26 0        ; if not R26 then PC := 622
610 [-]: JMP       622          ; PC := 622
611 [-]: CLOSURE   R26 0        ; R26 := closure(Function #147.1)
612 [-]: GETUPVAL  R0 U3        ; R0 := U3
613 [-]: GETUPVAL  R0 U21       ; R0 := U21
614 [-]: GETUPVAL  R0 U22       ; R0 := U22
615 [-]: GETUPVAL  R0 U4        ; R0 := U4
616 [-]: GETUPVAL  R0 U23       ; R0 := U23
617 [-]: GETUPVAL  R0 U5        ; R0 := U5
618 [-]: GETUPVAL  R0 U24       ; R0 := U24
619 [-]: GETUPVAL  R0 U25       ; R0 := U25
620 [-]: MOVE      R26 R20      ; R26 := R20
621 [-]: JMP       643          ; PC := 643
622 [-]: GETUPVAL  R26 U3       ; R26 := U3
623 [-]: GETTABLE  R26 R26 K21  ; R26 := R26["Region"]
624 [-]: TEST      R26 0        ; if not R26 then PC := 631
625 [-]: JMP       631          ; PC := 631
626 [-]: GETUPVAL  R26 U26      ; R26 := U26
627 [-]: GETUPVAL  R27 U3       ; R27 := U3
628 [-]: GETTABLE  R27 R27 K21  ; R27 := R27["Region"]
629 [-]: CALL      R26 2 1      ; R26(R27)
630 [-]: JMP       643          ; PC := 643
631 [-]: GETUPVAL  R26 U27      ; R26 := U27
632 [-]: GETTABLE  R26 R26 K97  ; R26 := R26["IsVisible"]
633 [-]: TEST      R26 1        ; if R26 then PC := 643
634 [-]: JMP       643          ; PC := 643
635 [-]: GETGLOBAL R26 K32      ; R26 := Engine
636 [-]: GETTABLE  R26 R26 K98  ; R26 := R26["0x918EF8CE"]
637 [-]: CALL      R26 1 2      ; R26 := R26()
638 [-]: TEST      R26 1        ; if R26 then PC := 643
639 [-]: JMP       643          ; PC := 643
640 [-]: GETUPVAL  R26 U14      ; R26 := U14
641 [-]: SELF      R26 R26 K86  ; R27 := R26; R26 := R26["0x3AEEE6C2"]
642 [-]: CALL      R26 2 1      ; R26(R27)
643 [-]: MOVE      R26 R0       ; R26 := R0
644 [-]: RETURN    R26 2        ; return R26
645 [-]: RETURN    R0 1         ; return 


; Function #147.1:
;
; Name:            
; Defined at line: 7095
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 62
  4 [-]: JMP       62           ; PC := 62
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["isShortcut"]
  8 [-]: TEST      R0 0         ; if not R0 then PC := 36
  9 [-]: JMP       36           ; PC := 36
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["locked"]
 13 [-]: TEST      R0 1         ; if R0 then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["radialSector"]
 19 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mission"]
 20 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["levelOverride"]
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 1         ; if R0 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETUPVAL  R0 U1        ; R0 := U1
 25 [-]: TEST      R0 0         ; if not R0 then PC := 36
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETUPVAL  R0 U2        ; R0 := U2
 28 [-]: GETUPVAL  R1 U3        ; R1 := U3
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 31 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["targetRegion"]
 32 [-]: ADD       R2 R2 K9     ; R2 := R2 + 1
 33 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 34 [-]: CALL      R0 2 1       ; R0(R1)
 35 [-]: JMP       62           ; PC := 62
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 38 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["locked"]
 39 [-]: TEST      R0 1         ; if R0 then PC := 62
 40 [-]: JMP       62           ; PC := 62
 41 [-]: GETUPVAL  R0 U5        ; R0 := U5
 42 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 43 [-]: GETGLOBAL R1 K11       ; R1 := clickAndHoldSound
 44 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 45 [-]: MOVE      R0 R4        ; R0 := R4
 46 [-]: GETUPVAL  R0 U6        ; R0 := U6
 47 [-]: CALL      R0 1 1       ; R0()
 48 [-]: GETUPVAL  R0 U5        ; R0 := U5
 49 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 50 [-]: GETGLOBAL R1 K12       ; R1 := _G
 51 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["UISound_Select"]
 52 [-]: CALL      R0 2 1       ; R0(R1)
 53 [-]: GETUPVAL  R0 U5        ; R0 := U5
 54 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 55 [-]: GETGLOBAL R1 K12       ; R1 := _G
 56 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["UISound_ButtonSelect"]
 57 [-]: CALL      R0 2 1       ; R0(R1)
 58 [-]: GETUPVAL  R0 U7        ; R0 := U7
 59 [-]: GETUPVAL  R1 U0        ; R1 := U0
 60 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 61 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
 62 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 7120
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["sorty"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["sorty"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: TEST      R2 1         ; if R2 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["sorty"]
 10 [-]: GETTABLE  R4 R1 K0     ; R4 := R1["sorty"]
 11 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["x"]
 14 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["x"]
 15 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: MOVE      R2 R1        ; R2 := R1
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 7130
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["sortx"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["sortx"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: TEST      R2 1         ; if R2 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["sortx"]
 10 [-]: GETTABLE  R4 R1 K0     ; R4 := R1["sortx"]
 11 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["y"]
 14 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["y"]
 15 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: MOVE      R2 R1        ; R2 := R1
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 7140
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: TEST      R0 0         ; if not R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xD963824A"]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 7150
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["DioOpen"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K1        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["MouseInWorldStateWindow"]
 11 [-]: TEST      R0 1         ; if R0 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R0 K1        ; R0 := _T
 14 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["MouseInChatArea"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETUPVAL  R0 U2        ; R0 := U2
 19 [-]: TEST      R0 0         ; if not R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R0 U3        ; R0 := U3
 22 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x3AEEE6C2"]
 23 [-]: CALL      R0 2 1       ; R0(R1)
 24 [-]: JMP       113          ; PC := 113
 25 [-]: GETUPVAL  R0 U4        ; R0 := U4
 26 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mTargetVal"]
 27 [-]: GETUPVAL  R1 U5        ; R1 := U5
 28 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["STARTING_ZOOM"]
 29 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 113
 30 [-]: JMP       113          ; PC := 113
 31 [-]: GETUPVAL  R0 U3        ; R0 := U3
 32 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xCE468565"]
 33 [-]: LOADK     R2 K8        ; R2 := "x"
 34 [-]: LOADK     R3 K9        ; R3 := 0.5
 35 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 36 [-]: GETUPVAL  R0 U3        ; R0 := U3
 37 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xCE468565"]
 38 [-]: LOADK     R2 K10       ; R2 := "y"
 39 [-]: LOADK     R3 K9        ; R3 := 0.5
 40 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 41 [-]: GETUPVAL  R0 U4        ; R0 := U4
 42 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0["0xDB349344"]
 43 [-]: GETUPVAL  R2 U5        ; R2 := U5
 44 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["STARTING_ZOOM"]
 45 [-]: CALL      R0 3 1       ; R0(R1,R2)
 46 [-]: GETUPVAL  R0 U7        ; R0 := U7
 47 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["0xF81722A2"]
 48 [-]: GETUPVAL  R1 U8        ; R1 := U8
 49 [-]: LOADK     R2 K13       ; R2 := 1
 50 [-]: LOADK     R3 K14       ; R3 := 2
 51 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 52 [-]: MOVE      R0 R6        ; R0 := R6
 53 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 54 [-]: GETUPVAL  R1 U9        ; R1 := U9
 55 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 56 [-]: TEST      R0 1         ; if R0 then PC := 83
 57 [-]: JMP       83           ; PC := 83
 58 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 59 [-]: GETUPVAL  R1 U9        ; R1 := U9
 60 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["instance"]
 61 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 62 [-]: TEST      R0 1         ; if R0 then PC := 83
 63 [-]: JMP       83           ; PC := 83
 64 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 65 [-]: GETUPVAL  R1 U9        ; R1 := U9
 66 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["zoomedInEffects"]
 67 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 68 [-]: TEST      R0 1         ; if R0 then PC := 83
 69 [-]: JMP       83           ; PC := 83
 70 [-]: GETUPVAL  R0 U9        ; R0 := U9
 71 [-]: GETTABLE  R0 R0 K16    ; R0 := R0["instance"]
 72 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0["0x9F1DC568"]
 73 [-]: GETUPVAL  R2 U9        ; R2 := U9
 74 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["zoomedInEffects"]
 75 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 76 [-]: GETGLOBAL R1 K15       ; R1 := 0x400E7765
 77 [-]: MOVE      R2 R0        ; R2 := R0
 78 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 79 [-]: TEST      R1 1         ; if R1 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: SELF      R1 R0 K19    ; R2 := R0; R1 := R0["0xD4C2743F"]
 82 [-]: CALL      R1 2 1       ; R1(R2)
 83 [-]: LOADNIL   R1 R1        ; R1 := nil
 84 [-]: MOVE      R1 R9        ; R1 := R9
 85 [-]: LOADNIL   R1 R1        ; R1 := nil
 86 [-]: MOVE      R1 R10       ; R1 := R10
 87 [-]: GETUPVAL  R1 U11       ; R1 := U11
 88 [-]: CALL      R1 1 1       ; R1()
 89 [-]: GETUPVAL  R1 U7        ; R1 := U7
 90 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["0x25992394"]
 91 [-]: GETGLOBAL R2 K21       ; R2 := zoomOutSound
 92 [-]: CALL      R1 2 1       ; R1(R2)
 93 [-]: GETUPVAL  R1 U12       ; R1 := U12
 94 [-]: GETTABLE  R1 R1 K13    ; R1 := R1[1]
 95 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDB349344"]
 96 [-]: GETUPVAL  R3 U13       ; R3 := U13
 97 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["red"]
 98 [-]: CALL      R1 3 1       ; R1(R2,R3)
 99 [-]: GETUPVAL  R1 U12       ; R1 := U12
100 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2]
101 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDB349344"]
102 [-]: GETUPVAL  R3 U13       ; R3 := U13
103 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["green"]
104 [-]: CALL      R1 3 1       ; R1(R2,R3)
105 [-]: GETUPVAL  R1 U12       ; R1 := U12
106 [-]: GETTABLE  R1 R1 K24    ; R1 := R1[3]
107 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDB349344"]
108 [-]: GETUPVAL  R3 U13       ; R3 := U13
109 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["blue"]
110 [-]: CALL      R1 3 1       ; R1(R2,R3)
111 [-]: GETUPVAL  R1 U14       ; R1 := U14
112 [-]: CALL      R1 1 1       ; R1()
113 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 7188
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyUp_MENU_RIGHT_CLICK"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 7192
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_RIGHT_CLICK"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 7196
; #Upvalues:       11
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 1         ; if R2 then PC := 127
  3 [-]: JMP       127          ; PC := 127
  4 [-]: GETGLOBAL R2 K0        ; R2 := _T
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["MouseInWorldStateWindow"]
  6 [-]: TEST      R2 1         ; if R2 then PC := 127
  7 [-]: JMP       127          ; PC := 127
  8 [-]: GETGLOBAL R2 K0        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MouseInChatArea"]
 10 [-]: TEST      R2 1         ; if R2 then PC := 127
 11 [-]: JMP       127          ; PC := 127
 12 [-]: GETGLOBAL R2 K0        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["JunctionTasksUIRadialSector"]
 14 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 127
 15 [-]: JMP       127          ; PC := 127
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["MIN_ZOOM"]
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["MAX_ZOOM"]
 20 [-]: GETUPVAL  R4 U1        ; R4 := U1
 21 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["MAX_ZOOM"]
 22 [-]: GETUPVAL  R5 U2        ; R5 := U2
 23 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mTargetVal"]
 24 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 25 [-]: DIV       R4 R4 K8     ; R4 := R4 / 2
 26 [-]: GETGLOBAL R5 K9        ; R5 := Engine
 27 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0x9490FE70"]
 28 [-]: CALL      R5 1 2       ; R5 := R5()
 29 [-]: TEST      R5 0         ; if not R5 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: DIV       R4 R4 K11    ; R4 := R4 / 10
 32 [-]: LT        0 R4 K12     ; if R4 >= 0.050000000745058 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: LOADK     R4 K12       ; R4 := 0.050000000745058
 35 [-]: GETUPVAL  R5 U3        ; R5 := U3
 36 [-]: GETUPVAL  R6 U4        ; R6 := U4
 37 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["EDIT_REGION_FRAMING"]
 38 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: LOADK     R4 K12       ; R4 := 0.050000000745058
 41 [-]: LOADK     R2 K14       ; R2 := -999
 42 [-]: LOADK     R3 K15       ; R3 := 999
 43 [-]: GETGLOBAL R5 K16       ; R5 := 0xF595ADDE
 44 [-]: MOVE      R6 R1        ; R6 := R1
 45 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 46 [-]: LT        0 R5 K17     ; if R5 >= 0 then PC := 98
 47 [-]: JMP       98           ; PC := 98
 48 [-]: GETGLOBAL R5 K18       ; R5 := 0x400E7765
 49 [-]: GETUPVAL  R6 U5        ; R6 := U5
 50 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 51 [-]: TEST      R5 1         ; if R5 then PC := 87
 52 [-]: JMP       87           ; PC := 87
 53 [-]: GETGLOBAL R5 K18       ; R5 := 0x400E7765
 54 [-]: GETUPVAL  R6 U5        ; R6 := U5
 55 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["Region"]
 56 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 57 [-]: TEST      R5 1         ; if R5 then PC := 87
 58 [-]: JMP       87           ; PC := 87
 59 [-]: GETUPVAL  R5 U5        ; R5 := U5
 60 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["Region"]
 61 [-]: GETUPVAL  R6 U6        ; R6 := U6
 62 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 87
 63 [-]: JMP       87           ; PC := 87
 64 [-]: GETUPVAL  R5 U7        ; R5 := U7
 65 [-]: GETUPVAL  R6 U8        ; R6 := U8
 66 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["0xB57E56DF"]
 67 [-]: GETGLOBAL R7 K21       ; R7 := mMovie
 68 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7["0xF595D5E1"]
 69 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 70 [-]: DIV       R7 R7 K8     ; R7 := R7 / 2
 71 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 72 [-]: GETUPVAL  R7 U8        ; R7 := U8
 73 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["0xB57E56DF"]
 74 [-]: GETGLOBAL R8 K21       ; R8 := mMovie
 75 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8["0xEE069D65"]
 76 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 77 [-]: DIV       R8 R8 K8     ; R8 := R8 / 2
 78 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 79 [-]: CALL      R5 0 1       ; R5(R6,...)
 80 [-]: GETUPVAL  R5 U9        ; R5 := U9
 81 [-]: GETUPVAL  R6 U5        ; R6 := U5
 82 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["Region"]
 83 [-]: LOADNIL   R7 R7        ; R7 := nil
 84 [-]: MOVE      R8 R1        ; R8 := R1
 85 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 86 [-]: RETURN    R0 1         ; return 
 87 [-]: GETUPVAL  R5 U2        ; R5 := U2
 88 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0xDB349344"]
 89 [-]: GETGLOBAL R7 K25       ; R7 := 0x6374FD98
 90 [-]: GETUPVAL  R8 U2        ; R8 := U2
 91 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["mTargetVal"]
 92 [-]: ADD       R8 R8 R4     ; R8 := R8 + R4
 93 [-]: MOVE      R9 R2        ; R9 := R2
 94 [-]: MOVE      R10 R3       ; R10 := R3
 95 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 96 [-]: CALL      R5 0 1       ; R5(R6,...)
 97 [-]: JMP       127          ; PC := 127
 98 [-]: GETGLOBAL R5 K16       ; R5 := 0xF595ADDE
 99 [-]: MOVE      R6 R1        ; R6 := R1
100 [-]: CALL      R5 2 2       ; R5 := R5(R6)
101 [-]: LT        0 K17 R5     ; if 0 >= R5 then PC := 127
102 [-]: JMP       127          ; PC := 127
103 [-]: GETUPVAL  R5 U2        ; R5 := U2
104 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0xDB349344"]
105 [-]: GETGLOBAL R7 K25       ; R7 := 0x6374FD98
106 [-]: GETUPVAL  R8 U2        ; R8 := U2
107 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["mTargetVal"]
108 [-]: SUB       R8 R8 R4     ; R8 := R8 - R4
109 [-]: MOVE      R9 R2        ; R9 := R2
110 [-]: MOVE      R10 R3       ; R10 := R3
111 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
112 [-]: CALL      R5 0 1       ; R5(R6,...)
113 [-]: GETGLOBAL R5 K18       ; R5 := 0x400E7765
114 [-]: GETUPVAL  R6 U6        ; R6 := U6
115 [-]: CALL      R5 2 2       ; R5 := R5(R6)
116 [-]: TEST      R5 1         ; if R5 then PC := 127
117 [-]: JMP       127          ; PC := 127
118 [-]: GETUPVAL  R5 U2        ; R5 := U2
119 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mTargetVal"]
120 [-]: GETUPVAL  R6 U1        ; R6 := U1
121 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["ZOOM_OUT_THRESHOLD"]
122 [-]: LE        0 R5 R6      ; if R5 > R6 then PC := 127
123 [-]: JMP       127          ; PC := 127
124 [-]: GETUPVAL  R5 U10       ; R5 := U10
125 [-]: MOVE      R6 R0        ; R6 := R0
126 [-]: CALL      R5 2 1       ; R5(R6)
127 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 7228
; #Upvalues:       19
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: TEST      R3 0         ; if not R3 then PC := 373
  3 [-]: JMP       373          ; PC := 373
  4 [-]: GETGLOBAL R3 K0        ; R3 := gFlashMgr
  5 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x616DD092"]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["0xBCEEAD81"]
  8 [-]: CALL      R5 1 0       ; R5,... := R5()
  9 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 10 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 20
 14 [-]: JMP       20           ; PC := 20
 15 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3["0x1AA40FBC"]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: EQ        0 R4 K5      ; if R4 ~= "MessageBox" then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: EQ        0 R1 K6      ; if R1 ~= "EN_LSHIFT" then PC := 37
 21 [-]: JMP       37           ; PC := 37
 22 [-]: GETUPVAL  R4 U2        ; R4 := U2
 23 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: SETTABLE  R4 K7 R5     ; R4["mShiftDown"] := R5
 28 [-]: GETUPVAL  R4 U3        ; R4 := U3
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 31 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R4 U5        ; R4 := U5
 34 [-]: CALL      R4 1 1       ; R4()
 35 [-]: GETUPVAL  R4 U6        ; R4 := U6
 36 [-]: CALL      R4 1 1       ; R4()
 37 [-]: EQ        0 R1 K10     ; if R1 ~= "EN_LCONTROL" then PC := 54
 38 [-]: JMP       54           ; PC := 54
 39 [-]: GETUPVAL  R4 U2        ; R4 := U2
 40 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R5 R0        ; R5 := R0
 43 [-]: MOVE      R5 R1        ; R5 := R1
 44 [-]: SETTABLE  R4 K11 R5    ; R4["mControlDown"] := R5
 45 [-]: GETUPVAL  R4 U3        ; R4 := U3
 46 [-]: GETUPVAL  R5 U4        ; R5 := U4
 47 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 48 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: GETUPVAL  R4 U5        ; R4 := U5
 51 [-]: CALL      R4 1 1       ; R4()
 52 [-]: GETUPVAL  R4 U6        ; R4 := U6
 53 [-]: CALL      R4 1 1       ; R4()
 54 [-]: EQ        0 R1 K12     ; if R1 ~= "EN_LALT" then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: GETUPVAL  R4 U2        ; R4 := U2
 57 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: MOVE      R5 R1        ; R5 := R1
 61 [-]: SETTABLE  R4 K13 R5    ; R4["mAltDown"] := R5
 62 [-]: GETUPVAL  R4 U3        ; R4 := U3
 63 [-]: GETUPVAL  R5 U4        ; R5 := U4
 64 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 65 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: GETUPVAL  R4 U5        ; R4 := U5
 68 [-]: CALL      R4 1 1       ; R4()
 69 [-]: GETUPVAL  R4 U6        ; R4 := U6
 70 [-]: CALL      R4 1 1       ; R4()
 71 [-]: EQ        0 R1 K14     ; if R1 ~= "EN_E" then PC := 88
 72 [-]: JMP       88           ; PC := 88
 73 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 88
 74 [-]: JMP       88           ; PC := 88
 75 [-]: GETUPVAL  R4 U7        ; R4 := U7
 76 [-]: GETUPVAL  R5 U1        ; R5 := U1
 77 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["0x7C43280B"]
 78 [-]: GETUPVAL  R6 U3        ; R6 := U3
 79 [-]: GETUPVAL  R7 U1        ; R7 := U1
 80 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["INCREMENT"]
 81 [-]: LOADK     R8 K17       ; R8 := 1
 82 [-]: GETUPVAL  R9 U4        ; R9 := U4
 83 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["MAX_VALUE"]
 84 [-]: SUB       R9 R9 K17    ; R9 := R9 - 1
 85 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 86 [-]: CALL      R4 0 1       ; R4(R5,...)
 87 [-]: JMP       103          ; PC := 103
 88 [-]: EQ        0 R1 K19     ; if R1 ~= "EN_S" then PC := 103
 89 [-]: JMP       103          ; PC := 103
 90 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 103
 91 [-]: JMP       103          ; PC := 103
 92 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 93 [-]: GETUPVAL  R5 U8        ; R5 := U8
 94 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 95 [-]: TEST      R4 1         ; if R4 then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: GETUPVAL  R4 U8        ; R4 := U8
 98 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0xEF081AD8"]
 99 [-]: CALL      R4 2 1       ; R4(R5)
100 [-]: GETGLOBAL R4 K21       ; R4 := 0xE40A882D
101 [-]: LOADK     R5 K22       ; R5 := "SolarMap Serialized"
102 [-]: CALL      R4 2 1       ; R4(R5)
103 [-]: EQ        0 R1 K23     ; if R1 ~= "EN_A" then PC := 171
104 [-]: JMP       171          ; PC := 171
105 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 171
106 [-]: JMP       171          ; PC := 171
107 [-]: GETUPVAL  R4 U3        ; R4 := U3
108 [-]: GETUPVAL  R5 U4        ; R5 := U4
109 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["EDIT_EDGES"]
110 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 171
111 [-]: JMP       171          ; PC := 171
112 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
113 [-]: GETUPVAL  R5 U9        ; R5 := U9
114 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["mEdgeNode1"]
115 [-]: CALL      R4 2 2       ; R4 := R4(R5)
116 [-]: TEST      R4 1         ; if R4 then PC := 286
117 [-]: JMP       286          ; PC := 286
118 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
119 [-]: GETUPVAL  R5 U9        ; R5 := U9
120 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mEdgeNode2"]
121 [-]: CALL      R4 2 2       ; R4 := R4(R5)
122 [-]: TEST      R4 1         ; if R4 then PC := 286
123 [-]: JMP       286          ; PC := 286
124 [-]: GETUPVAL  R4 U10       ; R4 := U10
125 [-]: GETUPVAL  R5 U10       ; R5 := U10
126 [-]: LEN       R5 R5        ; R5 := # R5
127 [-]: NEWTABLE  R6 0 3       ; R6 := {}
128 [-]: GETUPVAL  R7 U9        ; R7 := U9
129 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["mEdgeNode1"]
130 [-]: SETTABLE  R6 K27 R7    ; R6["NodeA"] := R7
131 [-]: GETUPVAL  R7 U9        ; R7 := U9
132 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
133 [-]: SETTABLE  R6 K28 R7    ; R6["NodeB"] := R7
134 [-]: GETUPVAL  R7 U9        ; R7 := U9
135 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["mEdgeNode1"]
136 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["isShortcut"]
137 [-]: TEST      R7 0         ; if not R7 then PC := 142
138 [-]: JMP       142          ; PC := 142
139 [-]: GETUPVAL  R7 U9        ; R7 := U9
140 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
141 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["isShortcut"]
142 [-]: SETTABLE  R6 K29 R7    ; R6["IsShortcut"] := R7
143 [-]: SETTABLE  R4 R5 R6     ; R4[R5] := R6
144 [-]: GETUPVAL  R4 U8        ; R4 := U8
145 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0x2337A98F"]
146 [-]: GETUPVAL  R6 U9        ; R6 := U9
147 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mEdgeNode1"]
148 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["radialSector"]
149 [-]: GETUPVAL  R7 U9        ; R7 := U9
150 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
151 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["radialSector"]
152 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
153 [-]: GETUPVAL  R4 U8        ; R4 := U8
154 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4["0x113DAAED"]
155 [-]: CALL      R4 2 2       ; R4 := R4(R5)
156 [-]: MOVE      R4 R11       ; R4 := R11
157 [-]: GETUPVAL  R4 U9        ; R4 := U9
158 [-]: SETTABLE  R4 K25 K34   ; R4["mEdgeNode1"] := nil
159 [-]: GETUPVAL  R4 U9        ; R4 := U9
160 [-]: SETTABLE  R4 K26 K34   ; R4["mEdgeNode2"] := nil
161 [-]: GETGLOBAL R4 K35       ; R4 := mMovie
162 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4["0x1C19D966"]
163 [-]: LOADK     R6 K37       ; R6 := "ScreenModeLabel"
164 [-]: LOADK     R7 K38       ; R7 := "text"
165 [-]: GETUPVAL  R8 U12       ; R8 := U12
166 [-]: CALL      R8 1 0       ; R8,... := R8()
167 [-]: CALL      R4 0 1       ; R4(R5,...)
168 [-]: GETUPVAL  R4 U13       ; R4 := U13
169 [-]: CALL      R4 1 1       ; R4()
170 [-]: JMP       286          ; PC := 286
171 [-]: EQ        0 R1 K39     ; if R1 ~= "EN_D" then PC := 269
172 [-]: JMP       269          ; PC := 269
173 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 269
174 [-]: JMP       269          ; PC := 269
175 [-]: GETUPVAL  R4 U3        ; R4 := U3
176 [-]: GETUPVAL  R5 U4        ; R5 := U4
177 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["EDIT_EDGES"]
178 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 269
179 [-]: JMP       269          ; PC := 269
180 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
181 [-]: GETUPVAL  R5 U9        ; R5 := U9
182 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["mEdgeNode1"]
183 [-]: CALL      R4 2 2       ; R4 := R4(R5)
184 [-]: TEST      R4 1         ; if R4 then PC := 286
185 [-]: JMP       286          ; PC := 286
186 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
187 [-]: GETUPVAL  R5 U9        ; R5 := U9
188 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mEdgeNode2"]
189 [-]: CALL      R4 2 2       ; R4 := R4(R5)
190 [-]: TEST      R4 1         ; if R4 then PC := 286
191 [-]: JMP       286          ; PC := 286
192 [-]: LOADK     R4 K17       ; R4 := 1
193 [-]: GETUPVAL  R5 U10       ; R5 := U10
194 [-]: LEN       R5 R5        ; R5 := # R5
195 [-]: LOADK     R6 K17       ; R6 := 1
196 [-]: FORPREP   R4 241       ; R4 -= R6; PC := 241
197 [-]: GETUPVAL  R8 U10       ; R8 := U10
198 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
199 [-]: GETTABLE  R9 R8 K27    ; R9 := R8["NodeA"]
200 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
201 [-]: GETUPVAL  R10 U9       ; R10 := U9
202 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
203 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
204 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
205 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 215
206 [-]: JMP       215          ; PC := 215
207 [-]: GETTABLE  R9 R8 K28    ; R9 := R8["NodeB"]
208 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
209 [-]: GETUPVAL  R10 U9       ; R10 := U9
210 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mEdgeNode2"]
211 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
212 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
213 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 231
214 [-]: JMP       231          ; PC := 231
215 [-]: GETTABLE  R9 R8 K28    ; R9 := R8["NodeB"]
216 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
217 [-]: GETUPVAL  R10 U9       ; R10 := U9
218 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
219 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
220 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
221 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 241
222 [-]: JMP       241          ; PC := 241
223 [-]: GETTABLE  R9 R8 K27    ; R9 := R8["NodeA"]
224 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
225 [-]: GETUPVAL  R10 U9       ; R10 := U9
226 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mEdgeNode2"]
227 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
228 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
229 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 241
230 [-]: JMP       241          ; PC := 241
231 [-]: GETGLOBAL R9 K41       ; R9 := gBackgroundRegion
232 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9["0x9B0A3887"]
233 [-]: GETTABLE  R11 R8 K43   ; R11 := R8["Instance"]
234 [-]: CALL      R9 3 1       ; R9(R10,R11)
235 [-]: GETGLOBAL R9 K44       ; R9 := table
236 [-]: GETTABLE  R9 R9 K45    ; R9 := R9["0xCDB1FD5E"]
237 [-]: GETUPVAL  R10 U10      ; R10 := U10
238 [-]: MOVE      R11 R7       ; R11 := R7
239 [-]: CALL      R9 3 1       ; R9(R10,R11)
240 [-]: JMP       242          ; PC := 242
241 [-]: FORLOOP   R4 197       ; R4 += R6; if R4 <= R5 then begin PC := 197; R7 := R4 end
242 [-]: GETUPVAL  R9 U8        ; R9 := U8
243 [-]: SELF      R9 R9 K46    ; R10 := R9; R9 := R9["0x1EE7613D"]
244 [-]: GETUPVAL  R11 U9       ; R11 := U9
245 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["mEdgeNode1"]
246 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["radialSector"]
247 [-]: GETUPVAL  R12 U9       ; R12 := U9
248 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["mEdgeNode2"]
249 [-]: GETTABLE  R12 R12 K32  ; R12 := R12["radialSector"]
250 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
251 [-]: GETUPVAL  R9 U8        ; R9 := U8
252 [-]: SELF      R9 R9 K33    ; R10 := R9; R9 := R9["0x113DAAED"]
253 [-]: CALL      R9 2 2       ; R9 := R9(R10)
254 [-]: MOVE      R9 R11       ; R9 := R11
255 [-]: GETUPVAL  R9 U9        ; R9 := U9
256 [-]: SETTABLE  R9 K25 K34   ; R9["mEdgeNode1"] := nil
257 [-]: GETUPVAL  R9 U9        ; R9 := U9
258 [-]: SETTABLE  R9 K26 K34   ; R9["mEdgeNode2"] := nil
259 [-]: GETGLOBAL R9 K35       ; R9 := mMovie
260 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x1C19D966"]
261 [-]: LOADK     R11 K37      ; R11 := "ScreenModeLabel"
262 [-]: LOADK     R12 K38      ; R12 := "text"
263 [-]: GETUPVAL  R13 U12      ; R13 := U12
264 [-]: CALL      R13 1 0      ; R13,... := R13()
265 [-]: CALL      R9 0 1       ; R9(R10,...)
266 [-]: GETUPVAL  R9 U13       ; R9 := U13
267 [-]: CALL      R9 1 1       ; R9()
268 [-]: JMP       286          ; PC := 286
269 [-]: EQ        0 R1 K47     ; if R1 ~= "EN_C" then PC := 286
270 [-]: JMP       286          ; PC := 286
271 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 286
272 [-]: JMP       286          ; PC := 286
273 [-]: GETUPVAL  R9 U3        ; R9 := U3
274 [-]: GETUPVAL  R10 U4       ; R10 := U4
275 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["EDIT_EDGES"]
276 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 286
277 [-]: JMP       286          ; PC := 286
278 [-]: GETGLOBAL R9 K3        ; R9 := 0x400E7765
279 [-]: GETUPVAL  R10 U9       ; R10 := U9
280 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
281 [-]: CALL      R9 2 2       ; R9 := R9(R10)
282 [-]: TEST      R9 1         ; if R9 then PC := 286
283 [-]: JMP       286          ; PC := 286
284 [-]: GETUPVAL  R9 U13       ; R9 := U13
285 [-]: CALL      R9 1 1       ; R9()
286 [-]: EQ        0 R1 K48     ; if R1 ~= "EN_R" then PC := 315
287 [-]: JMP       315          ; PC := 315
288 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 315
289 [-]: JMP       315          ; PC := 315
290 [-]: GETUPVAL  R9 U3        ; R9 := U3
291 [-]: GETUPVAL  R10 U4       ; R10 := U4
292 [-]: GETTABLE  R10 R10 K49  ; R10 := R10["EDIT_REGION_FRAMING"]
293 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 315
294 [-]: JMP       315          ; PC := 315
295 [-]: GETUPVAL  R9 U9        ; R9 := U9
296 [-]: GETUPVAL  R10 U1       ; R10 := U1
297 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["0x7C43280B"]
298 [-]: GETUPVAL  R11 U9       ; R11 := U9
299 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["mFramingRegion"]
300 [-]: GETUPVAL  R12 U1       ; R12 := U1
301 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["INCREMENT"]
302 [-]: LOADK     R13 K17      ; R13 := 1
303 [-]: GETUPVAL  R14 U14      ; R14 := U14
304 [-]: LEN       R14 R14      ; R14 := # R14
305 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
306 [-]: SETTABLE  R9 K50 R10   ; R9["mFramingRegion"] := R10
307 [-]: GETUPVAL  R9 U15       ; R9 := U15
308 [-]: GETUPVAL  R10 U14      ; R10 := U14
309 [-]: GETUPVAL  R11 U9       ; R11 := U9
310 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["mFramingRegion"]
311 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
312 [-]: CALL      R9 2 1       ; R9(R10)
313 [-]: GETUPVAL  R9 U16       ; R9 := U16
314 [-]: CALL      R9 1 1       ; R9()
315 [-]: EQ        0 R1 K51     ; if R1 ~= "EN_L" then PC := 329
316 [-]: JMP       329          ; PC := 329
317 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 329
318 [-]: JMP       329          ; PC := 329
319 [-]: GETUPVAL  R9 U17       ; R9 := U17
320 [-]: MOVE      R9 R9        ; R9 := R9
321 [-]: MOVE      R9 R17       ; R9 := R17
322 [-]: GETGLOBAL R9 K21       ; R9 := 0xE40A882D
323 [-]: LOADK     R10 K52      ; R10 := "Visible Tags:"
324 [-]: GETGLOBAL R11 K53      ; R11 := 0x9FAED6BC
325 [-]: GETUPVAL  R12 U17      ; R12 := U17
326 [-]: CALL      R11 2 2      ; R11 := R11(R12)
327 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
328 [-]: CALL      R9 2 1       ; R9(R10)
329 [-]: EQ        0 R1 K54     ; if R1 ~= "EN_U" then PC := 373
330 [-]: JMP       373          ; PC := 373
331 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 373
332 [-]: JMP       373          ; PC := 373
333 [-]: GETGLOBAL R9 K55       ; R9 := _T
334 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["MAP_HideExtraUI"]
335 [-]: EQ        0 R9 K34     ; if R9 ~= nil then PC := 339
336 [-]: JMP       339          ; PC := 339
337 [-]: GETGLOBAL R9 K55       ; R9 := _T
338 [-]: SETTABLE  R9 K56 K57   ; R9["MAP_HideExtraUI"] := "0x0"
339 [-]: GETGLOBAL R9 K55       ; R9 := _T
340 [-]: GETGLOBAL R10 K55      ; R10 := _T
341 [-]: GETTABLE  R10 R10 K56  ; R10 := R10["MAP_HideExtraUI"]
342 [-]: MOVE      R10 R10      ; R10 := R10
343 [-]: SETTABLE  R9 K56 R10   ; R9["MAP_HideExtraUI"] := R10
344 [-]: GETGLOBAL R9 K21       ; R9 := 0xE40A882D
345 [-]: LOADK     R10 K58      ; R10 := "Visible Extra UI:"
346 [-]: GETGLOBAL R11 K53      ; R11 := 0x9FAED6BC
347 [-]: GETGLOBAL R12 K55      ; R12 := _T
348 [-]: GETTABLE  R12 R12 K56  ; R12 := R12["MAP_HideExtraUI"]
349 [-]: CALL      R11 2 2      ; R11 := R11(R12)
350 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
351 [-]: CALL      R9 2 1       ; R9(R10)
352 [-]: GETGLOBAL R9 K55       ; R9 := _T
353 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["MAP_HideExtraUI"]
354 [-]: TEST      R9 0         ; if not R9 then PC := 360
355 [-]: JMP       360          ; PC := 360
356 [-]: GETGLOBAL R9 K55       ; R9 := _T
357 [-]: GETTABLE  R9 R9 K59    ; R9 := R9["0x45CBC39B"]
358 [-]: CALL      R9 1 1       ; R9()
359 [-]: JMP       364          ; PC := 364
360 [-]: GETGLOBAL R9 K55       ; R9 := _T
361 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["0x8ED0D55D"]
362 [-]: MOVE      R10 R1       ; R10 := R1
363 [-]: CALL      R9 2 1       ; R9(R10)
364 [-]: GETUPVAL  R9 U18       ; R9 := U18
365 [-]: GETTABLE  R9 R9 K61    ; R9 := R9["Movie"]
366 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x1C19D966"]
367 [-]: LOADK     R11 K62      ; R11 := "_root"
368 [-]: LOADK     R12 K63      ; R12 := "_visible"
369 [-]: GETGLOBAL R13 K55      ; R13 := _T
370 [-]: GETTABLE  R13 R13 K56  ; R13 := R13["MAP_HideExtraUI"]
371 [-]: MOVE      R13 R13      ; R13 := R13
372 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
373 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 7334
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 7338
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 7342
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 12 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 17
 16 [-]: JMP       17           ; PC := 17
 17 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 7353
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "_root"
  4 [-]: LOADK     R4 K3        ; R4 := "noMenuSelection"
  5 [-]: EQ        1 R0 K4      ; if R0 == "true" then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: EQ        1 R0 K4      ; if R0 == "true" then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: SETTABLE  R1 K5 R2     ; R1["Open"] := R2
 16 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 7358
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R0 K1      ; if R0 == "true" then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: MOVE      R2 R1        ; R2 := R1
  6 [-]: SETTABLE  R1 K0 R2     ; R1["DioOpen"] := R2
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 7364
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: CALL      R4 1 1       ; R4()
  3 [-]: GETUPVAL  R4 U1        ; R4 := U1
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R4 2 1       ; R4(R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 7370
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 7374
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gRegion
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 23
  5 [-]: JMP       23           ; PC := 23
  6 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x3E2F6BF"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Active"]
 11 [-]: TEST      R1 1         ; if R1 then PC := 23
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 1         ; if R1 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x28609C89"]
 19 [-]: GETGLOBAL R3 K5        ; R3 := 0xEC274B1A
 20 [-]: LOADK     R4 K6        ; R4 := "InstantKneel"
 21 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 22 [-]: CALL      R1 0 1       ; R1(R2,...)
 23 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 7383
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 R0     ; R1["mTrigger"] := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 7388
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 7392
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETGLOBAL R0 K0        ; R0 := 0xECFDD17
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  8 [-]: JMP       63           ; PC := 63
  9 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["isShortcut"]
 10 [-]: TEST      R5 1         ; if R5 then PC := 63
 11 [-]: JMP       63           ; PC := 63
 12 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["isJunction"]
 13 [-]: TEST      R5 1         ; if R5 then PC := 63
 14 [-]: JMP       63           ; PC := 63
 15 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["special"]
 16 [-]: TEST      R5 1         ; if R5 then PC := 58
 17 [-]: JMP       58           ; PC := 58
 18 [-]: GETGLOBAL R5 K4        ; R5 := _T
 19 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["CachedSortieMissions"]
 20 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 21 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 22 [-]: JMP       58           ; PC := 58
 23 [-]: GETGLOBAL R5 K4        ; R5 := _T
 24 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["CachedActiveMissions"]
 25 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 26 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 27 [-]: JMP       58           ; PC := 58
 28 [-]: GETGLOBAL R5 K4        ; R5 := _T
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["CachedAlerts"]
 30 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 31 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 32 [-]: JMP       58           ; PC := 58
 33 [-]: GETGLOBAL R5 K4        ; R5 := _T
 34 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedInvasionInfo"]
 35 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 36 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 37 [-]: JMP       58           ; PC := 58
 38 [-]: GETGLOBAL R5 K10       ; R5 := _G
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["CachedGoalInfo"]
 40 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 41 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 42 [-]: JMP       58           ; PC := 58
 43 [-]: GETGLOBAL R5 K10       ; R5 := _G
 44 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["MergedGoalNodes"]
 45 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 46 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETGLOBAL R5 K4        ; R5 := _T
 49 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedSyndicateMissions"]
 50 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 51 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETGLOBAL R5 K4        ; R5 := _T
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["CachedSkullNodes"]
 55 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 56 [-]: EQ        1 R5 K6      ; if R5 == nil then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETUPVAL  R5 U3        ; R5 := U3
 59 [-]: MOVE      R6 R4        ; R6 := R4
 60 [-]: CALL      R5 2 1       ; R5(R6)
 61 [-]: GETGLOBAL R5 K15       ; R5 := 0x1BF588C6
 62 [-]: CALL      R5 1 1       ; R5()
 63 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
 64 [-]: JMP       9            ; PC := 9
 65 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 7416
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
  9 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 107
 10 [-]: JMP       107          ; PC := 107
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["TransitioningOut"]
 13 [-]: TEST      R1 1         ; if R1 then PC := 107
 14 [-]: JMP       107          ; PC := 107
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Timer"]
 17 [-]: EQ        1 R1 K6      ; if R1 == -1 then PC := 107
 18 [-]: JMP       107          ; PC := 107
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: SETTABLE  R1 K4 K7     ; R1["TransitioningOut"] := "0x1"
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: MOVE      R1 R1        ; R1 := R1
 23 [-]: GETUPVAL  R1 U2        ; R1 := U2
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Node"]
 26 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 27 [-]: GETUPVAL  R4 U0        ; R4 := U0
 28 [-]: GETUPVAL  R5 U3        ; R5 := U3
 29 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mCurrentScroll"]
 30 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["x"]
 31 [-]: SETTABLE  R4 K8 R5     ; R4["InitialX"] := R5
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETUPVAL  R5 U3        ; R5 := U3
 34 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mCurrentScroll"]
 35 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["y"]
 36 [-]: SETTABLE  R4 K11 R5    ; R4["InitialY"] := R5
 37 [-]: GETUPVAL  R4 U0        ; R4 := U0
 38 [-]: GETUPVAL  R5 U4        ; R5 := U4
 39 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mCurVal"]
 40 [-]: SETTABLE  R4 K13 R5    ; R4["InitialZoom"] := R5
 41 [-]: GETUPVAL  R4 U0        ; R4 := U0
 42 [-]: SETTABLE  R4 K15 R1    ; R4["TargetX"] := R1
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: SETTABLE  R4 K16 R2    ; R4["TargetY"] := R2
 45 [-]: GETUPVAL  R4 U0        ; R4 := U0
 46 [-]: SETTABLE  R4 K17 R3    ; R4["TargetZoom"] := R3
 47 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 48 [-]: GETUPVAL  R5 U5        ; R5 := U5
 49 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["cameraSpot"]
 50 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 51 [-]: TEST      R4 1         ; if R4 then PC := 64
 52 [-]: JMP       64           ; PC := 64
 53 [-]: GETUPVAL  R4 U0        ; R4 := U0
 54 [-]: GETUPVAL  R5 U5        ; R5 := U5
 55 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["cameraSpot"]
 56 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5["0xF8AE9518"]
 57 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 58 [-]: SETTABLE  R4 K19 R5    ; R4["InitialFOV"] := R5
 59 [-]: GETUPVAL  R4 U0        ; R4 := U0
 60 [-]: GETUPVAL  R5 U0        ; R5 := U0
 61 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["InitialFOV"]
 62 [-]: DIV       R5 R5 K22    ; R5 := R5 / 4
 63 [-]: SETTABLE  R4 K21 R5    ; R4["TargetFOV"] := R5
 64 [-]: GETUPVAL  R4 U6        ; R4 := U6
 65 [-]: SETTABLE  R4 K23 K7    ; R4["Locked"] := "0x1"
 66 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 67 [-]: GETUPVAL  R5 U7        ; R5 := U7
 68 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 69 [-]: TEST      R4 1         ; if R4 then PC := 77
 70 [-]: JMP       77           ; PC := 77
 71 [-]: GETUPVAL  R4 U6        ; R4 := U6
 72 [-]: GETUPVAL  R5 U7        ; R5 := U7
 73 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5["0x6DA72501"]
 74 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 75 [-]: SETTABLE  R4 K24 R5    ; R4["Previous"] := R5
 76 [-]: JMP       81           ; PC := 81
 77 [-]: GETUPVAL  R4 U6        ; R4 := U6
 78 [-]: GETGLOBAL R5 K26       ; R5 := 0x221C9700
 79 [-]: CALL      R5 1 2       ; R5 := R5()
 80 [-]: SETTABLE  R4 K24 R5    ; R4["Previous"] := R5
 81 [-]: GETUPVAL  R4 U6        ; R4 := U6
 82 [-]: GETUPVAL  R5 U6        ; R5 := U6
 83 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Previous"]
 84 [-]: GETGLOBAL R6 K26       ; R6 := 0x221C9700
 85 [-]: LOADK     R7 K28       ; R7 := 0
 86 [-]: LOADK     R8 K28       ; R8 := 0
 87 [-]: GETUPVAL  R9 U0        ; R9 := U0
 88 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["TargetZoom"]
 89 [-]: GETUPVAL  R10 U0       ; R10 := U0
 90 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["InitialZoom"]
 91 [-]: SUB       R9 R9 R10    ; R9 := R9 - R10
 92 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 93 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 94 [-]: SETTABLE  R4 K27 R5    ; R4["Target"] := R5
 95 [-]: GETUPVAL  R4 U6        ; R4 := U6
 96 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["Prop"]
 97 [-]: SELF      R4 R4 K30    ; R5 := R4; R4 := R4["0x5A7A6B1"]
 98 [-]: LOADK     R6 K31       ; R6 := 1
 99 [-]: CALL      R4 3 1       ; R4(R5,R6)
100 [-]: GETUPVAL  R4 U6        ; R4 := U6
101 [-]: GETTABLE  R4 R4 K29    ; R4 := R4["Prop"]
102 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4["0xDB349344"]
103 [-]: LOADK     R6 K31       ; R6 := 1
104 [-]: CALL      R4 3 1       ; R4(R5,R6)
105 [-]: GETUPVAL  R4 U6        ; R4 := U6
106 [-]: SETTABLE  R4 K33 K6    ; R4["Region"] := -1
107 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
108 [-]: SELF      R4 R4 K34    ; R5 := R4; R4 := R4["0x1C19D966"]
109 [-]: LOADK     R6 K35       ; R6 := "_root"
110 [-]: LOADK     R7 K36       ; R7 := "_alpha"
111 [-]: MUL       R8 R0 K37    ; R8 := R0 * 100
112 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
113 [-]: SUB       R4 K31 R0    ; R4 := 1 - R0
114 [-]: GETUPVAL  R5 U0        ; R5 := U0
115 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["InitialZoom"]
116 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 122
117 [-]: JMP       122          ; PC := 122
118 [-]: GETUPVAL  R5 U0        ; R5 := U0
119 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["TargetZoom"]
120 [-]: EQ        0 R5 K3      ; if R5 ~= nil then PC := 130
121 [-]: JMP       130          ; PC := 130
122 [-]: GETUPVAL  R5 U0        ; R5 := U0
123 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["InitialFOV"]
124 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 180
125 [-]: JMP       180          ; PC := 180
126 [-]: GETUPVAL  R5 U0        ; R5 := U0
127 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["TargetFOV"]
128 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 180
129 [-]: JMP       180          ; PC := 180
130 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
131 [-]: GETUPVAL  R6 U5        ; R6 := U5
132 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["cameraSpot"]
133 [-]: CALL      R5 2 2       ; R5 := R5(R6)
134 [-]: TEST      R5 1         ; if R5 then PC := 148
135 [-]: JMP       148          ; PC := 148
136 [-]: GETUPVAL  R5 U5        ; R5 := U5
137 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["cameraSpot"]
138 [-]: SELF      R5 R5 K38    ; R6 := R5; R5 := R5["0x95E6F2AA"]
139 [-]: GETGLOBAL R7 K39       ; R7 := 0x93034B55
140 [-]: GETUPVAL  R8 U0        ; R8 := U0
141 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["InitialFOV"]
142 [-]: GETUPVAL  R9 U0        ; R9 := U0
143 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["TargetFOV"]
144 [-]: MOVE      R10 R4       ; R10 := R4
145 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
146 [-]: CALL      R5 0 1       ; R5(R6,...)
147 [-]: JMP       158          ; PC := 158
148 [-]: GETUPVAL  R5 U4        ; R5 := U4
149 [-]: SELF      R5 R5 K30    ; R6 := R5; R5 := R5["0x5A7A6B1"]
150 [-]: GETGLOBAL R7 K39       ; R7 := 0x93034B55
151 [-]: GETUPVAL  R8 U0        ; R8 := U0
152 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["InitialZoom"]
153 [-]: GETUPVAL  R9 U0        ; R9 := U0
154 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["TargetZoom"]
155 [-]: MOVE      R10 R4       ; R10 := R4
156 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
157 [-]: CALL      R5 0 1       ; R5(R6,...)
158 [-]: GETUPVAL  R5 U3        ; R5 := U3
159 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0xCE468565"]
160 [-]: LOADK     R7 K10       ; R7 := "x"
161 [-]: GETGLOBAL R8 K39       ; R8 := 0x93034B55
162 [-]: GETUPVAL  R9 U0        ; R9 := U0
163 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["InitialX"]
164 [-]: GETUPVAL  R10 U0       ; R10 := U0
165 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["TargetX"]
166 [-]: MOVE      R11 R4       ; R11 := R4
167 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
168 [-]: CALL      R5 0 1       ; R5(R6,...)
169 [-]: GETUPVAL  R5 U3        ; R5 := U3
170 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0xCE468565"]
171 [-]: LOADK     R7 K12       ; R7 := "y"
172 [-]: GETGLOBAL R8 K39       ; R8 := 0x93034B55
173 [-]: GETUPVAL  R9 U0        ; R9 := U0
174 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["InitialY"]
175 [-]: GETUPVAL  R10 U0       ; R10 := U0
176 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["TargetY"]
177 [-]: MOVE      R11 R4       ; R11 := R4
178 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
179 [-]: CALL      R5 0 1       ; R5(R6,...)
180 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
181 [-]: GETUPVAL  R6 U7        ; R6 := U7
182 [-]: CALL      R5 2 2       ; R5 := R5(R6)
183 [-]: TEST      R5 1         ; if R5 then PC := 203
184 [-]: JMP       203          ; PC := 203
185 [-]: GETUPVAL  R5 U6        ; R5 := U6
186 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Previous"]
187 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 203
188 [-]: JMP       203          ; PC := 203
189 [-]: GETUPVAL  R5 U6        ; R5 := U6
190 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["Target"]
191 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 203
192 [-]: JMP       203          ; PC := 203
193 [-]: GETUPVAL  R5 U7        ; R5 := U7
194 [-]: SELF      R5 R5 K41    ; R6 := R5; R5 := R5["0xEC183DDC"]
195 [-]: GETGLOBAL R7 K42       ; R7 := 0xE0C881B4
196 [-]: GETUPVAL  R8 U6        ; R8 := U6
197 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["Previous"]
198 [-]: GETUPVAL  R9 U6        ; R9 := U6
199 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["Target"]
200 [-]: MOVE      R10 R4       ; R10 := R4
201 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
202 [-]: CALL      R5 0 1       ; R5(R6,...)
203 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 7470
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 7477
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 7481
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 49
  5 [-]: JMP       49           ; PC := 49
  6 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x372CB914"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 15 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x80B14403"]
 16 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x80B14403"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8B598ED4"]
 24 [-]: GETGLOBAL R3 K5        ; R3 := 0x2C00D429
 25 [-]: LOADK     R4 K6        ; R4 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
 26 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 27 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 28 [-]: TEST      R1 1         ; if R1 then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xB7C97379"]
 32 [-]: GETGLOBAL R3 K8        ; R3 := 0xEC274B1A
 33 [-]: LOADK     R4 K9        ; R4 := "Player"
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0["0x80B14403"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 39 [-]: GETUPVAL  R1 U1        ; R1 := U1
 40 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x25992394"]
 41 [-]: GETGLOBAL R2 K11       ; R2 := _G
 42 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["UISound_ButtonSelect"]
 43 [-]: CALL      R1 2 1       ; R1(R2)
 44 [-]: GETUPVAL  R1 U1        ; R1 := U1
 45 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x25992394"]
 46 [-]: GETGLOBAL R2 K11       ; R2 := _G
 47 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["UISound_DialogOpen"]
 48 [-]: CALL      R1 2 1       ; R1(R2)
 49 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 7496
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R1 1 1       ; R1()
  5 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 7501
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 7505
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x42C0C1F"]
  3 [-]: CALL      R0 1 1       ; R0()
  4 [-]: RETURN    R0 1         ; return 


